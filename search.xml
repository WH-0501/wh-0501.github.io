<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/09/21/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>NAT转发</title>
    <url>/2024/09/07/Linux/NAT%E8%BD%AC%E5%8F%91/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">PC2 通过 enx8e01055d1492 与 PC1 相连</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">PC1 通过 wlp8s0 连接互联网</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> iptables -A FORWARD -o wlp8s0 -i enx8e01055d1492 -j ACCEPT</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> iptables -A FORWARD -o enx8e01055d1492 -i wlp8s0 -m state --state ESTABLISHED,RELATED -j ACCEPT</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> iptables -t nat -A POSTROUTING -o wlp8s0 -j MASQUERADE</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">确保 PC2 默认网关为 enx8e01055d1492 网卡网关</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看现有规则</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">iptables -L -v -n</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">iptables -t nat -L -v -n</span> </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Real-Time</title>
    <url>/2024/10/19/Linux/Real-Time/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="196869d9cbbfd6007d4925e32db40c48bc03f2cfe33fc337ac30ebdfce666b21"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Linux</category>
        <category>实时性</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>网络指令</title>
    <url>/2024/09/17/Linux/%E7%BD%91%E7%BB%9C%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Data 为 1Byte</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ping &lt;IP 地址&gt; -n1 -l1</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>-n count</code>：定义用来测试所发出测试包个数，缺省值为 4。例如：向测试发送 20 个数据包的平均返回时间是多少，最快时间是多少，最慢时间是多少，就可使用该选项</li>
<li><code>-l length</code>：发送缓冲区大小。定义发送数据包大小，默认情况下 windows ping 发送的数据包为 32Bytes，使用该参数可自定义大小，但最大只能 65500Bytes</li>
<li><code>-f</code>：不分段标志。一般数据包会分为几段发送，使用该选项后就不会分段发送了</li>
<li><code>-i ttl</code>：指定 TTL 只在对方系统中停留市场</li>
<li><code>-v tos</code>：将服务类型(type-of-server)设置为 tos 指定的值</li>
<li><code>-r count</code>：在记录路由字段中记录传出和返回的数据包的路由。通过该选项可设定想探测经过的路由个数。即：记录跃点数的路由</li>
<li><code>-s count</code>：计数跃点的时间戳 ms</li>
<li><code>-4/-6</code>：强制使用 IPv4&#x2F;6</li>
</ul>
<p>示例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加时间显示. -c: 表示发送 10 个包后结束。该方式，不能实时显示，而是执行完后统一展示</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ping &lt;IP 地址&gt; -c 10 | awk <span class="string">&#x27;&#123;print $0&quot;\t&quot; strftime(&quot;%Y-%m-%d %H:%M:%S&quot;,systime())&#125;&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ping.exe -t &lt;地址&gt;|Foreach&#123;<span class="string">&quot;&#123;0&#125; - &#123;1&#125;&quot;</span> -f (Get-Date),<span class="variable">$_</span>&#125; <span class="comment"># windows</span></span></span><br></pre></td></tr></table></figure>



<h1 id="ip-指令"><a href="#ip-指令" class="headerlink" title="ip 指令"></a>ip 指令</h1><p>ubuntu 17.04 开始用 <code>ip</code> 指令替代 <code>ifconfig</code></p>
<h2 id="查看网络信息"><a href="#查看网络信息" class="headerlink" title="查看网络信息"></a>查看网络信息</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 IP 地址</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr <span class="comment"># ip a</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -4 addr <span class="comment"># Only show TCP/IP IPv4</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -6 addr <span class="comment"># Only show TCP/IP IPv6</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只显示指定网卡</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr show &lt;interface&gt;</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr list &lt;interface&gt;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr show dev &lt;interface&gt;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只显示运行中的网卡</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> show up</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> /sys/class/net</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看网卡配置信息</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">networkctl status enp1s0</span></span><br></pre></td></tr></table></figure>



<h2 id="配置输出颜色"><a href="#配置输出颜色" class="headerlink" title="配置输出颜色"></a>配置输出颜色</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -c route</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -c <span class="built_in">link</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -c=always commad <span class="comment"># 默认</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -c=auto <span class="built_in">command</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -c=never <span class="built_in">command</span></span></span><br></pre></td></tr></table></figure>



<h2 id="使能-重启网卡"><a href="#使能-重启网卡" class="headerlink" title="使能&#x2F;重启网卡"></a>使能&#x2F;重启网卡</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">networkd 系统下重启网卡</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> dev &#123;interface&#125; &#123;up/down&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> eth0 up</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> eth0 down</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">NetworkManager 系统下重启网卡</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nmcli networking off</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nmcli networking on</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">旧版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 up</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 down</span></span><br></pre></td></tr></table></figure>



<h2 id="分配地址"><a href="#分配地址" class="headerlink" title="分配地址"></a>分配地址</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">分配 IP 地址</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr add &#123;ip_addr/mask&#125; dev &#123;interface&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr add 192.168.1.2/24 dev eth0 <span class="comment"># 24 = 255.255.255.0</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr add 192.168.0.77/24 broadcast 192.168.0.255 dev eth0</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">为网卡添加广播地址</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr add brd &#123;ADDDRESS-HERE&#125; dev &#123;interface&#125; <span class="comment"># or</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr add broadcast &#123;ADDDRESS-HERE&#125; dev &#123;interface&#125;</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可以通过设置/重置网卡前缀的主机位来使用特殊符号（例如 + 和 - ）代替广播地址。此示例中，将地址 192.168.1.50 与网络掩码 255.255.255.0 (/24) 以及标准广播和标签“eth0Home”添加到接口 eth0：</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr add 192.168.1.50/24 brd + dev eth0 label eth0Home</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr add 127.0.0.1/8 dev lo brd + scope host <span class="comment"># 为回环设备添加广播</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">旧版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 192.168.0.77</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 192.168.0.77 netmask 255.255.255.0 broadcast 192.168.0.255</span></span><br></pre></td></tr></table></figure>



<h2 id="删除地址"><a href="#删除地址" class="headerlink" title="删除地址"></a>删除地址</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除 IP 地址</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr del &#123;ip addr&#125; dev &#123;interface&#125;</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip a del 192.168.1.200/24 dev eth0</span></span><br></pre></td></tr></table></figure>

<p>使用 flush</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">例如：删除 192.168.2.0/24 网段的所有 IP 地址</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -s -s a f to 192.168.2.0/24</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">禁用 PPP 网卡上的 IP 地址</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -4 addr flush label <span class="string">&quot;ppp*&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">禁用所有 eth* 网卡 IP 地址</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -4 addr flush label <span class="string">&quot;eth*&quot;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="修改-MAC-地址"><a href="#修改-MAC-地址" class="headerlink" title="修改 MAC 地址"></a>修改 MAC 地址</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> show [NIC] <span class="comment"># NIC 即 Network Interface Card</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> dev [NIC] down <span class="comment"># 修改 MAC 地址需先禁用网卡</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> dev [NIC] address XX:YY:ZZ:AA:BB:CC</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> dev [NIC] up</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 hw ether 00:0c:29:33:4e:aa</span></span><br></pre></td></tr></table></figure>



<h2 id="ARP-表"><a href="#ARP-表" class="headerlink" title="ARP 表"></a>ARP 表</h2><p>查看 neighbour&#x2F;arp cache</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip n show</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip neigh show</span></span><br></pre></td></tr></table></figure>

<p>最后一个字段显示该条目的“邻居不可达检测”机器的状态：</p>
<ul>
<li><strong>STALE</strong> – The neighbour is valid, but is probably already unreachable, so the kernel will try to check it at the first transmission.</li>
<li><strong>DELAY</strong> – A packet has been sent to the stale neighbour and the kernel is waiting for confirmation.</li>
<li><strong>REACHABLE</strong> – The neighbour is valid and apparently reachable.</li>
</ul>
<p>添加 ARP </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip neigh add &#123;IP-HERE&#125; lladdr &#123;MAC/LLADDRESS&#125; dev &#123;interface&#125; nud &#123;STATE&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip neigh add 192.168.1.5 lladdr 00:1a:30:38:a8:00 dev eth0 nud perm</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">arp -i eth0 -s 192.168.0.1 00:11:22:33:44:55</span></span><br></pre></td></tr></table></figure>

<p>其中，neighbour state(nud)：</p>
<ul>
<li>permanent：永久有效，只能通过管理方式删除</li>
<li>noarp：邻居条目有效。不会尝试验证此条目，但可以在其生命周期到期时将其删除</li>
<li>stale：邻居条目有效但可疑。如果 ip neigh 的此选项有效且该命令未更改地址，则该选项不会更改邻居状态</li>
<li>reachable：邻居条目在可达性超时到期之前一直有效</li>
</ul>
<p>删除 ARP</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip neigh del &#123;IPAddress&#125; dev &#123;interface&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip neigh del 192.168.1.5 dev eth1</span></span><br></pre></td></tr></table></figure>



<p>修改状态及刷新 ARP</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将设备 eth1 上的邻居 192.168.1.100 的状态更改为可达</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip neigh chg 192.168.1.100 dev eth1 nud reachable</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">刷新 ARP</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip -s -s n f &#123;IPAddress&#125;</span></span><br></pre></td></tr></table></figure>



<p>Set ARP resolution off on one device</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">禁用 ARP</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> dev eth0 arp off</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig -arp eth0</span></span><br></pre></td></tr></table></figure>



<h2 id="子网卡"><a href="#子网卡" class="headerlink" title="子网卡"></a>子网卡</h2><p>即 alias</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr add 10.0.0.1/8 dev eth0 label eth0:1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0:1 10.0.0.1/8</span></span><br></pre></td></tr></table></figure>



<h2 id="路由操作"><a href="#路由操作" class="headerlink" title="路由操作"></a>路由操作</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看路由表</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip r/route</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip r/route list</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip r/route list [options]</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip r/route show</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">route</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加路由</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip route add &#123;NETWORK/MASK&#125; via &#123;GATEWAYIP&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip route add &#123;NETWORK/MASK&#125; dev &#123;DEVICE&#125;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Add default route using ip ##</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip route add default &#123;NETWORK/MASK&#125; dev &#123;DEVICE&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip route add default &#123;NETWORK/MASK&#125; via &#123;GATEWAYIP&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">route add -net &#123;NETWORK/MASK&#125; dev &#123;DEVICE&#125;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除路由</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip route del &#123;route&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip route del default <span class="comment"># 删除默认网关</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">route del --net &#123;NETWORK/MASK&#125; dev &#123;DEVICE&#125;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加 Gateway</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip route add 192.168.4.0/24 via 192.168.4.1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">route add -net 192.168.4.0/24 gw 192.168.4.1</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询到给定 IP 地址的数据包将路由到哪个接口</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip route get 192.168.88.77</span></span><br></pre></td></tr></table></figure>



<h2 id="修改-txqueuelen"><a href="#修改-txqueuelen" class="headerlink" title="修改 txqueuelen"></a>修改 txqueuelen</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> txqueuelen &#123;NUMBER&#125; dev &#123;interface&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 txqueuelen 1200</span></span><br></pre></td></tr></table></figure>



<h2 id="修改-MTU"><a href="#修改-MTU" class="headerlink" title="修改 MTU"></a>修改 MTU</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> mtu &#123;NUMBER&#125; dev &#123;interface&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig &#123;interface&#125; mtu &#123;NUMBER&#125;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">例如</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 mtu 2000</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> dev eth0 mtu 2000</span></span><br></pre></td></tr></table></figure>



<h2 id="设置-multicast-标志"><a href="#设置-multicast-标志" class="headerlink" title="设置 multicast 标志"></a>设置 multicast 标志</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 使能或禁用 multicast 标志</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> dev eth0 multicast on</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 multicast</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 设置 all multicast 模式</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> dev eth0 allmulti on</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 allmulti</span></span><br></pre></td></tr></table></figure>



<h2 id="设置-promiscuous-模式"><a href="#设置-promiscuous-模式" class="headerlink" title="设置 promiscuous 模式"></a>设置 promiscuous 模式</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 promisc  <span class="comment"># 开启</span></span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig eth0 -promisc <span class="comment"># 禁用</span></span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> dev eth0 promisc on</span> </span><br></pre></td></tr></table></figure>



<h1 id="指令对比"><a href="#指令对比" class="headerlink" title="指令对比"></a>指令对比</h1><table>
<thead>
<tr>
<th><strong>Old command (Deprecated)</strong></th>
<th><strong>New command</strong></th>
</tr>
</thead>
<tbody><tr>
<td><code>ifconfig enp6s0 down</code></td>
<td><code>ip link set enp6s0 down</code></td>
</tr>
<tr>
<td><code>ifconfig enp6s0 up</code></td>
<td><code>ip link set enp6s0 up</code></td>
</tr>
<tr>
<td><code>ifconfig enp6s0 192.168.2.24</code></td>
<td><code>ip addr add 192.168.2.24/24 dev enp6s0</code></td>
</tr>
<tr>
<td><code>ifconfig enp6s0 netmask 255.255.255.0</code></td>
<td><code>ip addr add 192.168.1.1/24 dev enp6s0</code></td>
</tr>
<tr>
<td><code>ifconfig enp6s0 mtu 9000</code></td>
<td><code>ip link set enp6s0 mtu 9000</code></td>
</tr>
<tr>
<td><code>ifconfig enp6s0:0 192.168.2.25</code></td>
<td><code>ip addr add 192.168.2.25/24 dev enp6s0</code></td>
</tr>
<tr>
<td><code>netstat</code></td>
<td><code>ss</code></td>
</tr>
<tr>
<td><code>netstat -tulpn</code></td>
<td><code>ss -tulpn</code></td>
</tr>
<tr>
<td><code>netstat -neopa</code></td>
<td><code>ss -neopa</code></td>
</tr>
<tr>
<td><code>netstat -g</code></td>
<td><code>ip maddr</code></td>
</tr>
<tr>
<td><code>route</code></td>
<td><code>ip r </code></td>
</tr>
<tr>
<td><code>route add -net 192.168.2.0 netmask 255.255.255.0 dev enp6s0</code></td>
<td><code>ip route add 192.168.2.0/24 dev enp6s0</code></td>
</tr>
<tr>
<td><code>route add default gw 192.168.2.254</code></td>
<td><code>ip route add default via 192.168.2.254</code></td>
</tr>
<tr>
<td><code>arp -a</code></td>
<td><code>ip neigh</code></td>
</tr>
<tr>
<td><code>arp -v</code></td>
<td><code>ip -s neigh</code></td>
</tr>
<tr>
<td><code>arp -s 192.168.2.33 1:2:3:4:5:6</code></td>
<td><code>ip neigh add 192.168.3.33 lladdr 1:2:3:4:5:6 dev enp6s0</code></td>
</tr>
<tr>
<td><code>arp -i enp6s0 -d 192.168.2.254</code></td>
<td><code>ip neigh del 192.168.2.254 dev wlp7s0</code></td>
</tr>
</tbody></table>
<h1 id="ipcalc"><a href="#ipcalc" class="headerlink" title="ipcalc"></a>ipcalc</h1><p>指令安装： <code>sudo apt install ipcalc</code></p>
<ul>
<li><code>-c/–check</code>: 检查 IP 地址是否为非法地址</li>
<li><code>-4/–ipv4</code>: 验证 IPv4 地址</li>
<li><code>-6/–ipv6</code>: 验证 IPv6</li>
<li><code>-b/–broadcast</code>: 由给定的IP地址和网络掩码计算出广播地址</li>
<li><code>-h/–hostname</code>: 显示给定IP地址所对应的主机名</li>
<li><code>-m/–netmask</code>: 由给定的IP地址计算器网络掩码</li>
<li><code>-p/–prefix</code>: 显示给定的掩码或IP地址的前缀</li>
<li><code>-n/–network</code>: 由给定的IP地址和网络掩码计算网络地址</li>
<li><code>-s/–silent</code>: 安静模式</li>
</ul>
<img src="/2024/09/17/Linux/%E7%BD%91%E7%BB%9C%E6%8C%87%E4%BB%A4/ipcalc.png" class="" title="..&#x2F;_images&#x2F;ipcalc.png">



<h1 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h1><p>curl 是常用的命令行工具，用来请求 Web 服务器。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl www.baidu.com -v <span class="comment"># 显示请求详细信息</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cur -X <span class="comment"># 指定请求方式</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cur -X GET http://localhost:8080/search?data=123  <span class="comment"># -X GET是可选的</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -X POST -d<span class="string">&quot;data=123&amp;key=456&quot;</span> http://localhost:8080/search -v</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过 -H 指定头部信息，使用 JSON 形式的 POST 数据</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -H <span class="string">&quot;Content-Type:application/json&quot;</span> -d <span class="string">&#x27;&#123;&quot;data&quot;:&quot;123&quot;,&quot;key&quot;:&quot;456&quot;&#125;&#x27;</span> \</span></span><br><span class="line"><span class="language-bash">    http://localhost:8080/search -v</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -xip:port www.baidu.com <span class="comment"># -x 指定 ip 及端</span></span></span><br></pre></td></tr></table></figure>



<h1 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h1><p>功能强大的网络工具，扫描端口。其作用包括：</p>
<ul>
<li>实现任意TCP&#x2F;UDP端口的侦听，nc可以作为server以TCP或UDP方式侦听指定端口</li>
<li>端口的扫描，nc可以作为client发起TCP或UDP连接</li>
<li>机器之间传输文件</li>
<li>机器之间网络测速</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查某 1 个域名/ip,某 1 个 TCP 端口的联通性</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nc -v -z eternalcenter.com 443</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查某 1 个域名某 1 个 UDP 端口的联通性</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nc -v -z -u eternalcenter.com 69</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">组播测试指令</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;测试数据&quot;</span>|nc -s 指定收发的IP地址 -4u 组播地址 组播端口号</span></span><br></pre></td></tr></table></figure>



<h1 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h1><p>nslookup - name server lookup。查询 DNS 的记录，查询域名解析是否正常。</p>
<p>指令格式： <code>nslookup domain [dns-server]</code></p>
<p>两种模式：</p>
<ul>
<li>交互：命令行直接输入 nslookup 回车</li>
<li>非交互：指令后跟要查询的域名&#x2F;IP地址</li>
</ul>
<h1 id="dig"><a href="#dig" class="headerlink" title="dig"></a>dig</h1><img src="/2024/09/17/Linux/%E7%BD%91%E7%BB%9C%E6%8C%87%E4%BB%A4/dig.png" class="" title="..&#x2F;_images&#x2F;dig.png">

<ul>
<li><code>-x</code>：反向查询。即：已知 DNS，查询该 DNS 域名</li>
<li><code>@&lt;DNS&gt;</code>：从指定的 DNS 服务器上查询</li>
<li><code>+trace</code>：跟踪整个查询过程</li>
</ul>
<h2 id="常见-DNS-记录的类型"><a href="#常见-DNS-记录的类型" class="headerlink" title="常见 DNS 记录的类型"></a>常见 DNS 记录的类型</h2><table>
<thead>
<tr>
<th>类型</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>A</td>
<td>地址记录，用来指定域名的 IPv4 地址，如果需要将域名指向一个 IP 地址，就需要添加 A 记录</td>
</tr>
<tr>
<td>AAAA</td>
<td>用来指定主机名(或域名)对应的 IPv6 地址记录</td>
</tr>
<tr>
<td>CNAME</td>
<td>如果需要将域名指向另一个域名，再由另一个域名提供 ip 地址，就需要添加 CNAME 记录</td>
</tr>
<tr>
<td>MX</td>
<td>如果需要设置邮箱，让邮箱能够收到邮件，需要添加 MX 记录</td>
</tr>
<tr>
<td>NS</td>
<td>域名服务器记录，如果需要把子域名交给其他 DNS 服务器解析，就需要添加 NS 记录</td>
</tr>
<tr>
<td>SOA</td>
<td>这种记录是所有区域性文件中的强制性记录。它必须是一个文件中的第一个记录</td>
</tr>
<tr>
<td>TXT</td>
<td>可以写任何东西，长度限制为 255。绝大多数的 TXT记录是用来做 SPF 记录(反垃圾邮件)</td>
</tr>
</tbody></table>
<h1 id="traceroute-tracepath"><a href="#traceroute-tracepath" class="headerlink" title="traceroute&amp;tracepath"></a>traceroute&amp;tracepath</h1><p><code>traceroute</code> 和 <code>tracepath</code> 均用于 <strong>确定数据包从源主机到目标主机所采取的路径</strong>。</p>
<p>两者的区别：</p>
<ul>
<li>工作原理：Traceroute 在数据包中加入一个 TTL（Time to Live）值，每次经过一个路由器时此值减一。当 TTL 的值减为零时，路由器应该丢弃数据包，然后向源主机发送一条 ICMP echo 消息。通过检测这些回显消息，Traceroute 工具就可以确定从源主机到目标主机所经过的所有路由器；Tracepath 使用 MTU 探测技术，自动检测通过每个路由器的最大传输单位（MTU），以便有效地确定路径</li>
<li>使用方式：Traceroute 使用命令 traceroute 或 tracert，默认使用 ICMP 数据包，并且 <strong>需要管理员权限</strong>；Tracepath 使用命令 tracepath，它默认使用 UDP 数据包，并且不需要管理员权限</li>
<li>结果显示：Traceroute 显示 <strong>每个路由器的 IP 地址、域名、RTT（Round Trip Time）和 TTL 值</strong>；Tracepath显示 <strong>每个路由器的 IP 地址、域名、RTT（Round Trip Time）和 MTU 值</strong></li>
<li>功能：Traceroute 可以使用 -n 选项来阻止 DNS 解析，以加快操作速度；Tracepath 可以使用 -p 选项来指定要使用的端口号</li>
</ul>
<blockquote>
<p>显示 <a href="#id9">*</a>，可能防火墙封掉了 ICMP 的返回信息；或者添加 -I 选项。其它解决方法：</p>
<ul>
<li>配置 ICMP 超时报文功能：<code>ip ttl-expires enable</code></li>
<li>关闭 tracert 报文共计防范功能：<code>undo firewall defend tracert enable</code> 谨慎使用</li>
</ul>
</blockquote>
<h2 id="traceroute"><a href="#traceroute" class="headerlink" title="traceroute"></a>traceroute</h2><p>参数：</p>
<ul>
<li>-d: 使用Socket层级的排错功能</li>
<li>-f: 设置第一个检测数据包的存活数值TTL的大小</li>
<li>-F: 设置勿离断位</li>
<li>-g: 设置来源路由网关，最多可设置8个</li>
<li>-i: 使用指定的网络界面送出数据包</li>
<li>-I: 使用ICMP回应取代UDP资料信息</li>
<li>-m: 设置检测数据包的最大存活数值TTL的大小</li>
<li>-n: 直接使用IP地址而非主机名称</li>
<li>-p: 设置UDP传输协议的通信端口</li>
<li>-r: 忽略普通的Routing Table，直接将数据包送到远端主机上</li>
<li>-s: 设置本地主机送出数据包的IP地址</li>
<li>-t: 设置检测数据包的TOS数值</li>
<li>-v: 详细显示指令的执行过程</li>
<li>-w: 设置等待远端主机回报的时间</li>
<li>-x: 开启或关闭数据包的正确性检验</li>
</ul>
<blockquote>
<p>注意，每次检测都同时发送 3 个数据包，因此打印出来三个时间。此外，如果某一个数据报超时没有返回，则时间显示为 *</p>
</blockquote>
<h1 id="mtr"><a href="#mtr" class="headerlink" title="mtr"></a>mtr</h1><p>mtr 来源于 Matt’s TraceRoute。是一个网络诊断工具，将 <code>ping</code> 和 <code>traceroute</code> 命令的功能合二为一。例如： <code>mtr -n www.baidu.com</code></p>
<p>结果中的 * 表示：可能是防火墙封掉了ICMP的返回信息，或者未在预期的超时时间内确认数据包。</p>
<h1 id="nmcli"><a href="#nmcli" class="headerlink" title="nmcli"></a>nmcli</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示设备列表</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli device status</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示主机名</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli general hostnam</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置主机名</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli general hostname new-hostname.example.com</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 也可使用 hostnamectl 设置主机名</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hostnamectl status --static <span class="comment"># 显示当前主机名</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hostnamectl set-hostname new-hostname.example.com <span class="comment"># 设置主机名</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置默认网关</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 例如：将 example 连接上的默认网关的 IPv4 地址设为 192.0.2.1</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection modify example ipv4.gateway <span class="string">&quot;192.0.2.1&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 例如：将 example 连接上的默认网关的 IPv6 地址设为 2001:db8:1::1</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection modify example ipv4.gateway <span class="string">&quot;2001:db8:1::1&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">临时设置为 unmanaged。永久设置需在 NetworkManager 配置文件中指定</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli device <span class="built_in">set</span> enp1s0 managed no</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出 NetworkManager 连接配置文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection show [connection名字]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建额外的连接配置文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection add con-name &lt;connection-name&gt; ifname &lt;device-name&gt; <span class="built_in">type</span> ethernet</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重命名连接配置文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection modify <span class="string">&quot;Wired connection 1&quot;</span> connection.id <span class="string">&quot;&lt;connection名字&gt;&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使能 DHCP, IPv4</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection modify &lt;connection名字&gt; ipv4.method auto</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置 IPv4 地址、掩码、默认网关、DNS 服务器和搜索域</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection modify &lt;connection名字&gt;N ipv4.method manual ipv4.addresses 192.0.2.1/24 ipv4.gateway 192.0.2.254 ipv4.dns 192.0.2.200 ipv4.dns-search example.com</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置 IPv6 使能 DHCP(SLAAC)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection modify &lt;connection名字&gt; ipv6.method auto</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置 IPv4 地址、掩码、默认网关、DNS 服务器和搜索域</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection modify &lt;connection名字&gt; ipv6.method manual ipv6.addresses 2001:db8:1::fffe/64 ipv6.gateway 2001:db8:1::fffe ipv6.dns 2001:db8:1::ffbb ipv6.dns-search example.com</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">激活配置</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection up &lt;connection名字&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>nmcli</code> 支持交互式配置。</p>
<h2 id="nmcli-连接-WIFI"><a href="#nmcli-连接-WIFI" class="headerlink" title="nmcli 连接 WIFI"></a>nmcli 连接 WIFI</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 启用 wifi radio</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nmcli radio wifi on</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 查看可用 WIFI 网络</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nmcli device wifi list</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. 连接 WIFI</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli device wifi connect &lt;SSID&gt; --ask</span></span><br><span class="line">password: &lt;输入密码&gt;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 或者不使用交互模式，直接输入密码</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli device wifi connect &lt;SSID&gt; &lt;password&gt;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4. 若需要静态 IP</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># IPv4</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection modify &lt;SSID&gt; ipv4.method manual ipv4.addresses 192.0.2.1/24 ipv4.gateway 192.0.2.254 ipv4.dns 192.0.2.200 ipv4.dns-search example.com</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># IPv6</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection modify &lt;SSID&gt; ipv6.method manual ipv6.addresses 2001:db8:1::1/64 ipv6.gateway 2001:db8:1::fffe ipv6.dns 2001:db8:1::ffbb ipv6.dns-search example.com</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5. 重新激活连接</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connection up &lt;SSID&gt;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">6. 显示活跃连接</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nmcli connect show --active</span></span><br></pre></td></tr></table></figure>



<h1 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">**************************</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">保存文件同时显示出来</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># -v 是显示详细情况，但在 -w 的参数影响下，只显示 got N</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-U 文件及时写入，而不是缓存一些后再写</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-w 写入文件，后跟文件名，此例中后跟 - 表示标准输入/输出</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用 <span class="built_in">tee</span> 把标准输出保存成文件</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用 tcpdump -r 把标准输入解析显示出来</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">**************************</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tcpdump -v -U -w - | <span class="built_in">tee</span> test.pcap | tcpdump -r -</span></span><br></pre></td></tr></table></figure>



<h1 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h1><p>netstat的输出结果可以分为两个部分:</p>
<blockquote>
<ul>
<li><strong>Active Internet connections</strong> 有源TCP连接，其中”Recv-Q”和”Send-Q”指接收队列和发送队列。这些数字一般都应该是0。如果不是则表示软件包正在队列中堆积。这种情况只能在非常少的情况见到。</li>
<li><strong>Active UNIX domain sockets</strong> 有源Unix域套接口(和网络套接字一样，但是只能用于本机通信，性能可以提高一倍)。</li>
</ul>
</blockquote>
<p>列名解释：</p>
<blockquote>
<ul>
<li>Proto：显示连接使用的协议。</li>
<li>RefCnt：表示连接到本套接口上的进程号。</li>
<li>Types：显示套接口的类型。</li>
<li>State：显示套接口当前的状态。</li>
<li>Path：表示连接到套接口的其它进程使用的路径名。</li>
</ul>
</blockquote>
<p>常用选项：</p>
<blockquote>
<ul>
<li>-t : 指明显示TCP端口，t 是 TCP 的首字母</li>
<li>-u : 指明显示UDP端口，u 是 UDP 的首字母</li>
<li>-l : 仅显示监听套接字，l 是 listening 的首字母</li>
<li>-p : 显示进程标识符和程序名称，每一个套接字&#x2F;端口都属于一个程序，p是program的首字母</li>
<li>-n : 不进行DNS轮询，显示IP(可以加速操作)，n是numeric的首字母，以数字形式显示地址和端口号。否则显示主机名等信息</li>
<li>-a : 显示所有连接和侦听端口，a是all的首字母</li>
<li>-o : 显示拥有的每个连接关联的进程id，o是own的首字母</li>
<li>-c : 持续输出</li>
<li>-x : Unix 套接字</li>
</ul>
</blockquote>
<p>示例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看套接字状态。state[key]: 同类状态个数统计。各状态说明：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   CLOSED：无连接是活动的或正在进行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   LISTEN：服务器在等待进入呼叫</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   SYN_RECV：一个连接请求已经到达，等待确认</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   SYN_SENT：应用已经开始，打开一个连接</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   ESTABLISHED：正常数据传输状态</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   FIN_WAIT1：应用说它已经完成</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   FIN_WAIT2：另一边已同意释放</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   ITMED_WAIT：等待所有分组死掉</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   CLOSING：两边同时尝试关闭</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   TIME_WAIT：另一边已初始化一个释放</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   LAST_ACK：等待所有分组死掉</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">netstat -n | awk <span class="string">&#x27;/^tcp/ &#123;++state[$NF]&#125; END &#123;for(key in state) print key,&quot;\t&quot; state[key]&#125;&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">netstat -n | awk <span class="string">&#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a,&quot;\t&quot; S[a]&#125;&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有 TCP 连接</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">netstat -n | awk <span class="string">&#x27;/^tcp/&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">分别只显示主机、端口和用户名 (host, port or user)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">netsat -a --numeric-ports</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">netsat -a --numeric-hosts</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">netsat -a --numeric-users</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 TCP 各状态列表</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">netstat -nat |awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span>  <span class="comment"># 注意，不能是双引号</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">netstat -nat |awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c <span class="comment"># 统计数量</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">netstat -nat |awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -rn <span class="comment"># 排序。从多到少</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">统计 TCP 连接数量</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">netstat -ant | <span class="built_in">wc</span> -l</span></span><br></pre></td></tr></table></figure>

<p>参考： <a href="https://blog.csdn.net/qq_44691484/article/details/123950403">netstat 查看实时网络情况</a></p>
<h1 id="vnstat"><a href="#vnstat" class="headerlink" title="vnstat"></a>vnstat</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前实时流量情况. == iftop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vnstat -l</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询指定网卡流量使用情况</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vnstat -i eth0</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当天流浪使用情况。 -m：按月；-h：按小时</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vnstat -d</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看前10天的流量</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vnstat --top10</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">按月显示，并生成图片。需安装 vnstati</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vnstati -m -i eth0 -o monthly.png</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成概要图</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vnstati -vs -i eth0 -o summary.png</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动 vnstat 后台进程监测网络情况</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vnstatd -d</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">保存 文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vnstat --xml -i wlo1 &gt;output.xml</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vnstat --json -i wlo1 &gt;output.xml</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vnstat --oneline -i wlo1 &gt;output.txt</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vnstat 结果保存到文件，同时显示在终端</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> vnstat -l 2&gt;&amp;1 | <span class="built_in">tee</span> vnstat-20230809-1400.log</span></span><br></pre></td></tr></table></figure>

<p>参考：</p>
<ul>
<li><a href="https://www.baeldung.com/linux/bandwidth-usage-monitoring">Monitor Internet Bandwidth Usage on Linux</a></li>
<li><a href="https://phoenixnap.com/kb/linux-network-bandwidth-monitor-traffic">Best Tools to Monitor Network Bandwidth on a Linux Server</a></li>
</ul>
<h1 id="iftop"><a href="#iftop" class="headerlink" title="iftop"></a>iftop</h1><p>监测网络流量。</p>
<img src="/2024/09/17/Linux/%E7%BD%91%E7%BB%9C%E6%8C%87%E4%BB%A4/iftop.png" class="" title="..&#x2F;_images&#x2F;iftop.png">



<h1 id="proc-net-tcp"><a href="#proc-net-tcp" class="headerlink" title="&#x2F;proc&#x2F;net&#x2F;tcp"></a>&#x2F;proc&#x2F;net&#x2F;tcp</h1><img src="/2024/09/17/Linux/%E7%BD%91%E7%BB%9C%E6%8C%87%E4%BB%A4/tcp%E8%BF%9E%E6%8E%A5%E6%96%87%E4%BB%B6.png" class="" title="..&#x2F;_images&#x2F;tcp连接文件.png">



<h1 id="ss-查看-socket-使用"><a href="#ss-查看-socket-使用" class="headerlink" title="ss 查看 socket 使用"></a>ss 查看 socket 使用</h1><p><code>ss</code> 指令：(或 <code>cat /proc/net/sockstat</code>)</p>
<ul>
<li>-a, –all: 显示监听和未监听(即:已创建的连接)的socket</li>
<li>-l, –listening只显示监听的套接字(这些套接字默认省略)</li>
<li>-m, –memory查看socket使用的内存</li>
<li>-n, –numeric不解析服务名称</li>
<li>-r, –resolve尝试解析数字地址&#x2F;端口</li>
<li>-p, –processes显示socket对应的进程</li>
<li>-i, –info显示内部 TCP 信息</li>
<li>-s, –summary打印统计摘要. This option does not parse socket lists obtaining summary from various sources. It is useful when amount of sockets is so huge that parsing &#x2F;proc&#x2F;net&#x2F;tcp is painful.</li>
<li>-o, –options显示 timer 信息</li>
<li>-e, –extended显示详细信息</li>
<li>-t, –tcp只显示 TCP 套接字</li>
<li>-u, –udp只显示 UDP 套接字</li>
<li>-d, –dccp显示 DCCP 套接字</li>
<li>-w, –raw显示 RAW 套接字</li>
<li>-x, –unix显示 Unix domain 套接字</li>
<li>-f FAMILY, –family&#x3D;FAMILY显示指定协议族(例如: AF_INET 等)套接字</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
        <category>网络指令</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker-compose</title>
    <url>/2024/09/22/Docker/Docker-compose/</url>
    <content><![CDATA[<p>compose、machine 和 swarm 是 docker 原生提供的三大编排工具。</p>
<h1 id="Compose"><a href="#Compose" class="headerlink" title="Compose"></a>Compose</h1><p>Compose 是一个使用 Docker 定义和运行复杂应用程序的工具。<strong>使用 Compose，可以在单个文件中定义一个多容器应用程序</strong>，然后在单个命令中启动应用程序，该命令会执行运行所需的所有操作。所以基本上，这将有助于缩短需要在 Docker CLI 中键入的内容。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">PIP 安装</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> pip install docker-compose</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">手动安装</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.4.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">rm</span> /usr/local/bin/docker-compose</span></span><br></pre></td></tr></table></figure>



<h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>Docker Compose 默认配置文件名为 <code>docker_compose.yaml</code>。也可以使用 <code>-f</code> 参数指定具体文件。</p>
<p>Docker Compose 的 YAML 包含 4 个一级 key：</p>
<ul>
<li><strong>version</strong>：必须指定，且总是位于文件第一行。指定 Compose 文件格式的版本（注意：不是 Compose 或 docker engine 的版本）。 Compose 文件格式有3个版本,分别为1, 2.x 和 3.x。目前主流的为 3.x 其支持 docker 1.13.0 及其以上的版本。参考：<a href="https://docs.docker.com/compose/compose-file/compose-versioning/">compose-version</a></li>
<li><strong>services</strong>：用于定义不同的应用服务。Docker Compose 会将每个服务部署在各自的容器中。services 下面的第一级别的 key 即为 service 的名称</li>
<li><strong>networks</strong>：定义网络信息。<strong>默认情况下，Docker Compose 会创建 bridge 网络。这是一种单主机网络，只能够实现同一主机上容器的连接</strong>。当然，也可以使用 driver 属性来指定不同的网络类型</li>
<li><strong>volumes</strong>：定义卷信息</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">volumes:</span><br><span class="line">  <span class="comment"># 绝对路径</span></span><br><span class="line">  - <span class="string">&quot;/mydata/docker_mysql/data:/var/lib/mysql&quot;</span></span><br><span class="line">  <span class="comment"># 相对路径，相对当前 docker-compose.yml 文件所在目录</span></span><br><span class="line">  - “./conf:/etc/mysql/conf.d“</span><br><span class="line">  <span class="comment"># 匿名挂载，匿名挂载只需要写容器目录即可，容器外对应的目录会在 /var/lib/docker/volume 中生成</span></span><br><span class="line">  - <span class="string">&quot;/var/lib/mysql&quot;</span></span><br><span class="line">  <span class="comment"># 具名挂载，就是给数据卷起了个名字，容器外对应的目录会在 /var/lib/docker/volume 中生成</span></span><br><span class="line">  - <span class="string">&quot;mysql-data-volume:/var/lib/mysql&quot;</span></span><br></pre></td></tr></table></figure>



<p>其它 key：</p>
<ul>
<li><p><strong>build</strong>：配置构建时，Compose 会利用它自动构建镜像，该值可以是一个路径，也可以是一个对象，用于指定 Dockerfile 参数</p>
</li>
<li><ul>
<li>context：指定 Dockerfile 文件路径</li>
<li>dockerfile：指定 context 目录下的 Dockerfile 名称</li>
<li>args：该 Dockerfile 在 build 过程中需要的参数。(等同于 docker container build –build-arg)</li>
<li>cache_from：v3.2 新增参数。指定缓存镜像列表。 (等同于 docker container build –cache_from)</li>
<li>labels：v3.3 新增参数。设置镜像元数据。(等同于 docker container build –labels)</li>
<li>shm_size：v3.5 新增。设置容器 &#x2F;dev&#x2F;shm 分区大小(等同于 docker container build –shm-size)</li>
</ul>
</li>
<li><pre><code class="docker">build: ./dir
---------------
build:
    context: ./dir
    dockerfile: Dockerfile
    args:
        buildno: 1
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- ​            </span><br><span class="line"></span><br><span class="line">- **command**：覆盖容器启动后默认执行的命令</span><br><span class="line"></span><br><span class="line">```docker</span><br><span class="line">command: bundle exec thin -p 3000</span><br><span class="line">----------------------------------</span><br><span class="line">command: [bundle,exec,thin,-p,3000]</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
</ul>
<p>​    </p>
<ul>
<li>entrypoint：覆盖容器的默认 entrypoint 指令(等同于 docker run –entrypoint)</li>
<li><strong>dns</strong>：配置 dns 服务器。可以是一个值或列表</li>
<li><strong>dns_search</strong>：配置 DNS 搜索域。可以是一个值或列表</li>
</ul>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">dns: <span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line">------------</span><br><span class="line">dns:</span><br><span class="line">    - <span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line">    - <span class="number">9.9</span>.<span class="number">9.9</span></span><br><span class="line">    </span><br><span class="line">dns_search: example.com</span><br><span class="line">------------------------</span><br><span class="line">dns_search:</span><br><span class="line">    - dc1.example.com</span><br><span class="line">    - dc2.example.com    </span><br></pre></td></tr></table></figure>

<p>​              </p>
<ul>
<li><strong>environment</strong>：环境变量配置。可以用数组或字典两种方式</li>
<li><strong>env_file</strong>：从文件中获取环境变量，可以指定一个文件路径或路径列表，其<strong>优先级低于 environment</strong> 指定的环境变量</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">environment:</span><br><span class="line">    RACK_ENV: development</span><br><span class="line">    SHOW: <span class="string">&#x27;ture&#x27;</span></span><br><span class="line">-------------------------</span><br><span class="line">environment:</span><br><span class="line">    - RACK_ENV=development</span><br><span class="line">    - SHOW=ture</span><br><span class="line">    </span><br><span class="line">env_file: .<span class="keyword">env</span></span><br><span class="line">---------------</span><br><span class="line">env_file:</span><br><span class="line">    - ./common.<span class="keyword">env</span>    </span><br></pre></td></tr></table></figure>



<ul>
<li><strong>expose</strong>：暴露端口，只将端口暴露给连接的服务，而不暴露给主机</li>
<li><strong>image</strong>：指定服务所使用的镜像</li>
<li><strong>network_mode</strong>：设置网络模式</li>
</ul>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">network_mode: <span class="string">&quot;bridge&quot;</span></span><br><span class="line">network_mode: <span class="string">&quot;host&quot;</span></span><br><span class="line">network_mode: <span class="string">&quot;none&quot;</span></span><br><span class="line">network_mode: <span class="string">&quot;service:[service name]&quot;</span></span><br><span class="line">network_mode: <span class="string">&quot;container:[container name/id]&quot;</span></span><br></pre></td></tr></table></figure>

<p>​         </p>
<ul>
<li><strong>ports</strong>：对外暴露的端口定义，和 expose 对应</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">ports:   <span class="comment"># 暴露端口信息  - &quot;宿主机端口:容器暴露端口&quot;</span></span><br><span class="line">  - <span class="string">&quot;8763:8763&quot;</span></span><br><span class="line">  - <span class="string">&quot;8763:8763&quot;</span></span><br></pre></td></tr></table></figure>



<ul>
<li><p><strong>links</strong>：将指定容器连接到当前连接，可以设置别名，避免ip方式导致的容器重启动态改变的无法连接情况</p>
</li>
<li><p><strong>logs</strong>：日志输出信息</p>
</li>
<li><p><strong>deploy</strong>：v3.x 版本，指定与部署和运行服务相关的配置。deploy 部分是 docker stack 使用的, docker stack 依赖 docker swarm</p>
</li>
<li><ul>
<li><p>endpoint_mode：v3.3 新增，指定服务暴露方式</p>
</li>
<li><ul>
<li><p>vip：Docker 为该服务分配一个虚拟 IP(VIP)，作为客户端的访问服务的地址</p>
</li>
<li><p>dnsrr：DNS 轮询，Docker 为该服务设置 DNS 条目，使得服务名称的 DNS 查询返回一个 IP 地址列表，客户端直接访问其中的一个地址</p>
</li>
<li><p>labels：指定服务的标签</p>
</li>
<li><p>mode：指定 delopy 的模式</p>
</li>
<li><ul>
<li>global：每个集群节点都只有一个容器</li>
<li>replicated：用户可指定集群中容器的数量</li>
</ul>
</li>
<li><p>placement：</p>
</li>
<li><p>replicate：mode 为 replicated 时，指定容器副本数量</p>
</li>
<li><p>resources：资源限制</p>
</li>
<li><ul>
<li><p>limits：设置容器资源限制</p>
</li>
<li><ul>
<li>cpus：”0.5” 表示最多只能使用 50% CPU</li>
<li>memory：50M 表示最多智能使用 50M 内存空间</li>
</ul>
</li>
<li><p>reservations：设置为容器预留的系统资源</p>
</li>
<li><ul>
<li>cpus：”0.2” 保留 20% 的 CPU</li>
<li>memory：20M 保留 20M 内存</li>
</ul>
</li>
</ul>
</li>
<li><p>restart_policy：定义容器重启策略, <strong>用于代替 restart 参数</strong></p>
</li>
<li><ul>
<li><p>condition：定义容器重启策略(接受三个参数)</p>
</li>
<li><ul>
<li>none：不尝试重启</li>
<li>on-failure：只有当容器内部应用程序出现问题才会重启</li>
<li>any：无论如何都会尝试重启(默认)</li>
</ul>
</li>
<li><p>delay：尝试重启的间隔时间(默认为 0s)</p>
</li>
<li><p>max_attempts：尝试重启次数(默认一直尝试重启)</p>
</li>
<li><p>window：检查重启是否成功之前的等待时间(即如果容器启动了, 隔多少秒之后去检测容器是否正常, 默认 0s)</p>
</li>
</ul>
</li>
<li><p>update_config：用于配置更新配置</p>
</li>
<li><ul>
<li><p>parallelism：一次性更新的容器数量</p>
</li>
<li><p>delay：更新一组容器之间的间隔时间</p>
</li>
<li><p>failure_action：定义更新失败的策略</p>
</li>
<li><ul>
<li>continue：继续更新</li>
<li>rollback：回滚更新</li>
<li>pause：暂停更新(默认)</li>
</ul>
</li>
<li><p>monitor：每次更新后的持续时间以监视更新是否失败(单位: ns|us|ms|s|m|h) (默认为0)</p>
</li>
<li><p>max_failure_ratio：回滚期间容忍的失败率(默认值为0)</p>
</li>
<li><p>order：v3.4 版本中新增的参数, 回滚期间的操作顺序</p>
</li>
<li><ul>
<li>stop-first：旧任务在启动新任务之前停止(默认)</li>
<li>start-first：首先启动新任务, 并且正在运行的任务暂时重叠</li>
</ul>
</li>
</ul>
</li>
<li><p>rollback_config：v3.7 版本中新增的参数, 用于定义在 update_config 更新失败的回滚策略</p>
</li>
<li><ul>
<li><p>parallelism：一次回滚的容器数, 如果设置为0, 则所有容器同时回滚</p>
</li>
<li><p>delay：每个组回滚之间的时间间隔(默认为0)</p>
</li>
<li><p>failure_action：定义回滚失败的策略</p>
</li>
<li><ul>
<li>continue：继续回滚</li>
<li>pause：暂停回滚</li>
</ul>
</li>
<li><p>monitor：每次回滚任务后的持续时间以监视失败(单位: ns|us|ms|s|m|h) (默认为0)</p>
</li>
<li><p>max_failure_ratio：回滚期间容忍的失败率(默认值0)</p>
</li>
<li><p>order：回滚期间的操作顺序</p>
</li>
<li><ul>
<li>stop-first：旧任务在启动新任务之前停止(默认)</li>
<li>start-first：首先启动新任务, 并且正在运行的任务暂时重叠</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>devices：指定设备映射列表(等同于 docker run –device)</p>
</li>
<li><p>depends_on：定义容器启动顺序</p>
</li>
</ul>
<h1 id="锚点操作符"><a href="#锚点操作符" class="headerlink" title="锚点操作符 &lt;&lt;"></a>锚点操作符 &lt;&lt;</h1><p>该描述符用于替代和引用 YAML 中已定义的块。即：将已定义好的模板(可以定义在文件顶部，也可以单独定义)插入到多个不同 service 中，减少荣誉和代码重复。</p>
<p>包含三个符号：</p>
<ul>
<li>&amp;：定义锚点，供以后使用</li>
<li>*：引用锚点</li>
<li>&lt;&lt;：用于将引用的块内容插入当前位置</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.4&#x27;</span> <span class="comment"># 定义一个公共配置块，在其他地方可以引用 </span></span><br><span class="line"></span><br><span class="line">common-config: &amp;common </span><br><span class="line">	environment: </span><br><span class="line">		APP_ENV: production </span><br><span class="line">		LOG_LEVEL: info </span><br><span class="line">	volumes: - /data/appdata:/app/data </span><br><span class="line">	</span><br><span class="line">    services: </span><br><span class="line">    	app-service: &lt;&lt;: *common <span class="comment"># 引用并插入 common-config 的内容</span></span><br><span class="line">        image: myapp:latest </span><br><span class="line">        ports: </span><br><span class="line">        	- <span class="string">&quot;8080:80&quot;</span> </span><br><span class="line">        	</span><br><span class="line">        another-service: &lt;&lt;: *common <span class="comment"># 再次引用并插入 common-config 的内容 </span></span><br><span class="line">        image: anotherapp:latest </span><br><span class="line">        ports: </span><br><span class="line">        	- <span class="string">&quot;9090:90&quot;</span></span><br></pre></td></tr></table></figure>





<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 描述 Compose 文件的版本信息</span></span><br><span class="line">version: <span class="string">&quot;3.8&quot;</span></span><br><span class="line"><span class="comment"># 定义服务，可以多个</span></span><br><span class="line">services:</span><br><span class="line">  nginx: <span class="comment"># 服务名称</span></span><br><span class="line">    image: nginx <span class="comment"># 创建容器时所需的镜像</span></span><br><span class="line">    container_name: mynginx <span class="comment"># 容器名称，默认为&quot;工程名称_服务条目名称_序号&quot;</span></span><br><span class="line">    ports: <span class="comment"># 宿主机与容器的端口映射关系</span></span><br><span class="line">      - <span class="string">&quot;80:80&quot;</span> <span class="comment"># 左边宿主机端口:右边容器端口</span></span><br><span class="line">    restart: always <span class="comment"># 自动重启  </span></span><br><span class="line">    environment: <span class="comment"># 创建容器时所需的环境变量</span></span><br><span class="line">      NINX_PASSWORD: <span class="number">1234</span>   </span><br><span class="line">    networks: <span class="comment"># 配置容器连接的网络，引用顶级 networks 下的条目</span></span><br><span class="line">      - nginx-net</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义网络，可以多个。如果不声明，默认会创建一个网络名称为&quot;工程名称_default&quot;的 bridge 网络</span></span><br><span class="line">networks:</span><br><span class="line">  nginx-net: <span class="comment"># 一个具体网络的条目名称</span></span><br><span class="line">    name: nginx-net <span class="comment"># 网络名称，默认为&quot;工程名称_网络条目名称&quot;</span></span><br><span class="line">    driver: bridge <span class="comment"># 网络模式，默认为 bridge</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker</title>
    <url>/2024/09/07/Docker/Docker/</url>
    <content><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>BUILD, SHIP, RUN</p>
<p>即：build – Docker 可以轻易构建用户的应用</p>
<p>SHIP – Docker 可以将应用快速分发</p>
<p>RUN – Docker 有能力秒级启动应用</p>
<p>基于GO开发，遵循Apache2.0。</p>
<p>Docker是一个基于LXC（即:linux container）技术之上构建的Container容器引擎。</p>
<p>Docker 使用客户端-服务器 (C&#x2F;S) 架构模式，使用远程API来管理和创建Docker容器。</p>
<h2 id="Docker特性"><a href="#Docker特性" class="headerlink" title="Docker特性"></a><strong>Docker特性</strong></h2><ul>
<li>速度飞快以及优雅的隔离框架</li>
<li>物美价廉</li>
<li>CPU&#x2F;内存的低消耗</li>
<li>快速开&#x2F;关机</li>
<li>跨云计算基础构架</li>
</ul>
<h2 id="Docker组件与元素"><a href="#Docker组件与元素" class="headerlink" title="Docker组件与元素"></a><strong>Docker组件与元素</strong></h2><p>Docker有三个组件和三个基本元素。</p>
<p>三个组件分别是：</p>
<ul>
<li><strong>Docker Client</strong> 是用户界面，它支持用户与Docker Daemon之间通信。</li>
<li><strong>Docker Daemon</strong> 运行于主机上，处理服务请求。</li>
<li><strong>Docker Index</strong> 是中央registry，支持拥有公有与私有访问权限的Docker容器镜像的备份。</li>
</ul>
<p>三个基本要素分别是：</p>
<ul>
<li><strong>Docker Containers</strong> 负责应用程序的运行，包括操作系统、用户添加的文件以及元数据。</li>
<li><strong>Docker Images</strong> 是一个只读模板，用来运行Docker容器。</li>
<li><strong>DockerFile</strong> 是文件指令集，用来说明如何自动创建Docker镜像。</li>
</ul>
<h2 id="Docker的优势"><a href="#Docker的优势" class="headerlink" title="Docker的优势"></a><strong>Docker的优势</strong></h2><ul>
<li>Docker层是基于容器技术的轻量级虚拟化，没有Hypervisor层，省去了Hypervisor的开销</li>
<li>对层级的创新应用，通过写入自己特有的内容后添加新的镜像层，新增的镜像层和下层的镜像一起又可以作为基础镜像被更上层的镜像使用。这种特性可以极大地提高磁盘利用率。同时，多个容器使用同一个基础镜像时，可极大地减少内存占用等方面，因为不同的容器访问同一个文件时，只会占用一份内存。</li>
</ul>
<h2 id="Docker-可视化工具"><a href="#Docker-可视化工具" class="headerlink" title="Docker 可视化工具"></a><strong>Docker 可视化工具</strong></h2><ul>
<li>Portainer</li>
<li>LazyDocker</li>
</ul>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a><strong>目标</strong></h1><p><strong>实现轻量级的操作系统虚拟化解决方案。</strong></p>
<p>Docker产生的目的主要是为了解决如下问题。</p>
<h2 id="环境管理复杂"><a href="#环境管理复杂" class="headerlink" title="环境管理复杂"></a><strong>环境管理复杂</strong></h2><p>从各种OS到各种中间件再到各种App，一款产品能够成功发布，作为开发者需要关心的东西太多，且难于管理，这个问题在软件行业中普遍存在并需要直接面对。<strong>Docker可以简化部署多种应用实例的工作</strong>，比如Web应用、后台应用、数据库应用、大数据应用比如Hadoop集群、消息队列等等都可以打包成一个Image部署。</p>
<h2 id="云计算时代的到来"><a href="#云计算时代的到来" class="headerlink" title="云计算时代的到来"></a><strong>云计算时代的到来</strong></h2><p>AWS的成功, 引导开发者将应用转移到云上, 解决了硬件管理的问题，然而软件配置和管理相关的问题依然存在 (AWS cloudformation是这个方向的业界标准)。Docker的出现正好能帮助软件开发者开阔思路，尝试新的软件管理方法来解决这个问题。</p>
<h2 id="虚拟化手段的变化"><a href="#虚拟化手段的变化" class="headerlink" title="虚拟化手段的变化"></a><strong>虚拟化手段的变化</strong></h2><p>云时代采用标配硬件来降低成本，采用虚拟化手段来满足用户按需分配的资源需求以及保证可用性和隔离性。然而无论是KVM还是Xen，在 Docker 看来都在浪费资源，因为用户需要的是高效运行环境而非OS, GuestOS既浪费资源又难于管理, 更加轻量级的LXC更加灵活和快速。</p>
<img src="/2024/09/07/Docker/Docker/image-20240916212807488.png" class="" title="image-20240916212807488">

<p><strong>与虚拟机的区别：</strong></p>
<ul>
<li>虚拟机是用来进行硬件资源划分的完美解决方案，它利用了硬件虚拟化技术。通过一个 Hypervisor 层来实现对资源的彻底隔离；而容器则是操作系统级别的虚拟化，利用的是内核的 Cgroup 和 Namespace 特性，完全是通过软件来实现，仅仅是进程本身就可以与其它进程隔离开，不需要任何辅助</li>
<li>Docker 容器与主机共享操作系统内核，不同的容器之间可以共享部分系统资源，因此容器更加轻量级，消耗的资源也更少。而虚拟机会独占分配给自己的资源，几乎不存在资源共享，各个虚拟机实例之间近乎完全隔离，因此虚拟机更加重量级，也会消耗更多的资源</li>
<li>容器被用来设计运行单进程。但 docker exec 命令已解决了该问题</li>
</ul>
<h2 id="LXC的便携性"><a href="#LXC的便携性" class="headerlink" title="LXC的便携性"></a><strong>LXC的便携性</strong></h2><p>LXC在 Linux 2.6 的 Kernel 里就已经存在了，但是其设计之初并非为云计算考虑的，缺少标准化的描述手段和容器的可便携性，决定其构建出的环境难于分发和标准化管理(相对于KVM之类image和snapshot的概念)。Docker就在这个问题上做出了实质性的创新方法。</p>
<h1 id="架构"><a href="#架构" class="headerlink" title="架构"></a><strong>架构</strong></h1><img src="/2024/09/07/Docker/Docker/docker%E6%9E%B6%E6%9E%84.png" class="" title="docker架构">

<p>(来自&lt;Docker进阶与实战&gt;)</p>
<p>基于内核的Cgroup和Namespace技术。</p>
<p>Docker并不会直接与内核交互，而是通过Libcontainer与内核交互。</p>
<p>Libccontainer通过clone接口直接创建容器，通过pivot_root接口进入容器，并通过直接操作cgroupfs文件实现对资源的管理。</p>
<img src="/2024/09/07/Docker/Docker/image-20240916213120282.png" class="" title="image-20240916213120282">



<table>
<thead>
<tr>
<th>Docker 镜像(Images)</th>
<th>Docker 镜像是用于创建 Docker 容器的模板。</th>
</tr>
</thead>
<tbody><tr>
<td>Docker 容器(Container)</td>
<td>容器是独立运行的一个或一组应用。</td>
</tr>
<tr>
<td>Docker 客户端(Client)</td>
<td>Docker 客户端通过命令行或者其他工具使用 Docker API (<a href="https://docs.docker.com/reference/api/docker_remote_api">https://docs.docker.com/reference/api/docker_remote_api</a>) 与 Docker 的守护进程通信。</td>
</tr>
<tr>
<td>Docker 主机(Host)</td>
<td>一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。</td>
</tr>
<tr>
<td>Docker 仓库(Registry)</td>
<td>Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。Docker Hub(<a href="https://hub.docker.com/">https://hub.docker.com</a>) 提供了庞大的镜像集<a href="https://hub.docker.com/">合供使用。</a></td>
</tr>
<tr>
<td>Docker Machine</td>
<td>Docker Machine是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install apt-transport-https ca-certificates curl software-properties-common gnupg lsb-release</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | <span class="built_in">sudo</span> gpg --</span></span><br><span class="line">dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signedby=/usr/share/keyrings/docker-archive-keyring.gpg]</span></span> </span><br><span class="line">https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot; | </span><br><span class="line">sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">sudo apt update</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">安装最新版本</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">sudo apt install docker-ce docker-ce-cli containerd.io docker-composeplugin</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">sudo systemctl start docker</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">sudo systemctl enable docker # 使能自启动</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">无需 sudo 运行</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">sudo usermod -aG docker <span class="variable">$USER</span></span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">newgrp docker # 无需重启，立即生效</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">安装 docker-compose. 需自行选择版本. 或使用 pip 安装：pip install dockercompose</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">sudo curl -L</span></span> </span><br><span class="line">&quot;https://github.com/docker/compose/releases/download/v2.29.2/dockercompose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="string">sudo chmod +x /usr/local/bin/docker-compose</span></span></span><br></pre></td></tr></table></figure>



<p>Docker daemon 绑定到 Unix socket，而不是 TCP 端口。默认情况下，Unix Socket 只能被 root 用户使用，其它用户需使用 sudo 来访问Unix socket。Docker daemon 总是以 root 用户运行。</p>
<p>因此，需使用 sudo 来执行 Docker 指令，或者将需要使用 Dockerclient 的用户加入 docker 用户组。<a href="https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface">Docker用户组等价于root用户</a>。</p>
<p>创建 docker 组：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> groupadd docker</span></span><br></pre></td></tr></table></figure>

<p>将用户加入docket组：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> usermod -aG docker <span class="variable">$USER</span></span></span><br></pre></td></tr></table></figure>

<p>注销并重新登录即可。</p>
<h1 id="容器"><a href="#容器" class="headerlink" title="容器"></a><strong>容器</strong></h1><p>Docker通过 Libcontainer 来实现对容器生命周期的管理、信息的设置和查询，以及监控和通信等功能。容器以镜像为基础，同时又为镜像提供了一个标准的和隔离的执行环境。</p>
<p>容器首先必须是一个相对独立的运行环境，且在一个容器环境内，应该最小化其对外界的影响。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">容器=cgroup+namespace+rootfs+容器引擎（用户态工具）</span><br></pre></td></tr></table></figure>

<p>Namespace（主要做访问隔离）</p>
<p>Cgroup（主要做资源控制）</p>
<p>Rootfs（文件系统隔离）</p>
<p>容器引擎（生命周期控制）</p>
<p>Docker 容器是 Docker 镜像的运行态体现。</p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>CUDA</title>
    <url>/2024/09/20/NVIDIA/CUDA/</url>
    <content><![CDATA[

<p>CUDA 与 CUDA Driver 并非一一对应，一台电脑上只有一个版本的 CUDA Driver，但可以有多个 CUDA 版本。</p>
<p>CUDA API 包括 CUDA Runtime API 和 CUDA Driver API。</p>
<img src="/2024/09/20/NVIDIA/CUDA/8718fcbd057ce429c15030472ca322c3.png" class="" title="CUDA layer">

<ul>
<li><p>Runtime API 与 Driver 最大区别是懒加载</p>
<ul>
<li><p>第一个 runtime API 调用时，进行 <code>cudaInit</code> 初始化</p>
</li>
<li><p>第一个需要 context 的 API 调用时，会调用 <code>cudaDevicePrimaryCtxRetain</code> 创建 context</p>
</li>
</ul>
</li>
<li><p><code>cuda</code> 开头的都是 Runtime API</p>
</li>
<li><p>Runtime API 对应 <code>cuda_runtime.h</code> 和 <code>libcudart.so</code></p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvidia-smi</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvcc -V</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>CUDA 支持多种语言，无论哪种语言或接口，指令最终都会被 driver 转换为 PTX(Parallel Thread Execution) 代码。</p>
<p>CUDA 架构组件包括：</p>
<ul>
<li>NVIDIA GPU 并行计算引擎</li>
<li>对硬件初始化、配置的OS内核级支持</li>
<li>硬件初始化、配置的OS内核级支持</li>
<li>用于并行计算kernel和函数的PTX 指令集架构(ISA，Instruction set architecture)</li>
</ul>
<img src="/2024/09/20/NVIDIA/CUDA/format,webp-1726897215619-30.webp" class="" title="img">



<h1 id="CUDA-Toolkit-与-conda-cudatoolkit"><a href="#CUDA-Toolkit-与-conda-cudatoolkit" class="headerlink" title="CUDA Toolkit 与 conda cudatoolkit"></a>CUDA Toolkit 与 conda cudatoolkit</h1><p>CUDA Toolkit 是 NVIDIA 官方提供的安装包，包含了 NVIDIA Driver、CUDA 编译器、开发工具等，参考：<a href="https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html#major-components">CUDA Toolkit major components</a>。</p>
<p>CUDA Toolkit 包含了 CUDA 开发调试相关的所有组件。但对 Pytorch 等深度学习框架，其大多只需要使用 CUDA 的动态链接库。</p>
<p>Anaconda 在安装 pytorch 等需要用到 CUDA 的框架时，会自动安装 cudatoolkit，其主要包含应用程序在使用 CUDA 时所依赖的动态库（不包括 runtime 层和以下的层，包括 nvcc 和 CUDA driver）。安装好之后，只需要 cudatoolkit 与 NVIDIA driver 兼容即可。Anaconda 安装的 cudatoolkit 位于 <code>~/anaconda3/pkgs/</code> 目录中。</p>
<blockquote>
<p>pytorch 检测 CUDA 版本的代码位于 <code>torch/utils/cpp_extension.py</code> 中的 <code>find_cuda_home</code> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 例如 v2.3.1 </span></span><br><span class="line">CUDA_HOME = _find_cuda_home() <span class="keyword">if</span> torch.cuda._is_compiled() <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 例如 v2.0.0</span></span><br><span class="line">CUDA_HOME = _find_cuda_home()</span><br></pre></td></tr></table></figure>

</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">从 nvidia 和 conda-forge channels 安装 cudatoolkit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">conda install cudatoolkit=11.1 -c nvidia/label/cuda-11.1.1 -c conda-forge</span></span><br></pre></td></tr></table></figure>





<p>实际调用哪个 CUDA 库，需根据 tf&#x2F;pytorch 生成时设置的链接库路径确定。如 pytorch setup.py 中指定了链接库的搜索路径，其中 <strong><code>CUDA_HOME</code></strong>  获取逻辑为：</p>
<ul>
<li>默认 cuda 安装路径 <code>/usr/local/cuda</code></li>
<li>若默认路径不存在，则搜索 <code>nvcc</code> 所在目录</li>
<li>若 <code>nvcc</code> 也不存在，则直接寻找 <code>cudart</code> 库文件目录（此时通常使用 conda 安装的 cudatoolkit），将其上级目录作为 <code>CUDA_HOME</code></li>
<li>若未找到 <code>CUDA_HOME</code> ，则生成 CPU 版 pytorch</li>
</ul>
<h1 id="CUDA-W2L"><a href="#CUDA-W2L" class="headerlink" title="CUDA W2L"></a>CUDA W2L</h1><img src="/2024/09/20/NVIDIA/CUDA/777a274604017c74ddeb254b54d8bed65fbca309_2_500x500.jpeg" class="" title="wsl-launch-upt-0625-rz_editted">



<h1 id="编程环境"><a href="#编程环境" class="headerlink" title="编程环境"></a>编程环境</h1><p>开发人员需关注两个版本信息：</p>
<ul>
<li>Compute capability</li>
<li>CUDA Runtime 和 CUDA Driver APIs</li>
</ul>
<h2 id="Compute-Capability"><a href="#Compute-Capability" class="headerlink" title="Compute Capability"></a>Compute Capability</h2><p><strong>描述了硬件的特性，反映了设备支持的指令集以及其他规范，也称 SM Version</strong>，例如每个 block 的最大线程数和每个多处理器的寄存器数。Compute Capability 向后兼容。</p>
<blockquote>
<p>GPU Compute Capability 不等于 计算性能</p>
</blockquote>
<p>CUDA 版本需与算力匹配：<a href="https://en.wikipedia.org/wiki/CUDA">https://en.wikipedia.org/wiki/CUDA</a></p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
<th align="center"></th>
</tr>
</thead>
<tbody><tr>
<td align="center">架构</td>
<td align="center">计算能力Compute Capability</td>
<td align="center">发布时间</td>
<td align="center">Tesla系列</td>
<td align="center">Quadro系列</td>
<td align="center">GeForce系列</td>
<td align="center">Jetson系列</td>
</tr>
<tr>
<td align="center">Tesla</td>
<td align="center">X &#x3D; 1</td>
<td align="center">2006</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Fermi</td>
<td align="center">X &#x3D; 2</td>
<td align="center">2010</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Kepler</td>
<td align="center">X &#x3D; 3</td>
<td align="center">2012</td>
<td align="center">Kepler K系列</td>
<td align="center">Quadro K系列</td>
<td align="center">GeForce 600&#x2F;700系列</td>
<td align="center">Tegra K1</td>
</tr>
<tr>
<td align="center">Maxwell</td>
<td align="center">X &#x3D; 5</td>
<td align="center">2014</td>
<td align="center">Maxwell M系列</td>
<td align="center">Quadro M系列</td>
<td align="center">GeForce 900系列</td>
<td align="center">Tegra X1</td>
</tr>
<tr>
<td align="center">Pascal</td>
<td align="center">X &#x3D; 6</td>
<td align="center">2016</td>
<td align="center">Pascal P系列</td>
<td align="center">Quadro P系列</td>
<td align="center">GeForce 10系列</td>
<td align="center">Tegra X2</td>
</tr>
<tr>
<td align="center">Volta</td>
<td align="center">X &#x3D; 7</td>
<td align="center">2017</td>
<td align="center">Tesla V系列</td>
<td align="center">-</td>
<td align="center">TITAN V</td>
<td align="center">AGX Xavier</td>
</tr>
<tr>
<td align="center">Turing</td>
<td align="center">X.Y &#x3D; 7.5</td>
<td align="center">2018</td>
<td align="center">Tesla T系列</td>
<td align="center">Quadro RTX系列</td>
<td align="center">GeForce 16系列，GeForce 20系列</td>
<td align="center">AGX Xavier</td>
</tr>
<tr>
<td align="center">Ampere</td>
<td align="center">X &#x3D; 8</td>
<td align="center">2020</td>
<td align="center">Tesla A系列</td>
<td align="center">RTX A系列</td>
<td align="center">GeForce 30系列</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Ada Lovelace</td>
<td align="center">X.Y &#x3D; 8.9</td>
<td align="center">2022</td>
<td align="center">L4、L40</td>
<td align="center">RTX Ada系列</td>
<td align="center">GeForce 40系列</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Hopper</td>
<td align="center">X &#x3D; 9</td>
<td align="center">2022</td>
<td align="center">H100</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p>（来源：<a href="https://qinganzhang.github.io/posts/cuda-learning-notes/gpu%E6%9E%B6%E6%9E%84%E5%8F%91%E5%B1%95%E5%85%BC%E5%AE%B9%E6%80%A7%E5%92%8C%E7%BC%96%E8%AF%91/">GPU架构发展、兼容性和编译</a>）</p>
<p>参考：<a href="https://docs.nvidia.com/datacenter/tesla/drivers/index.html#cuda-arch-matrix">https://docs.nvidia.com/datacenter/tesla/drivers/index.html#cuda-arch-matrix</a></p>
<p>不同 Compute Capability 支持的功能，参考 <a href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#features-and-technical-specifications">Features and Technical Specifications</a></p>
<p>设备中 GPU 的计算能力可以通过编程方式查询，如 <code>deviceQuery</code> CUDA Sample 所示。该程序的输出如下。此信息是通过调用 <em><code>cudaGetDeviceProperties()</code></em>  获得。</p>
<img src="/2024/09/20/NVIDIA/CUDA/sample-cuda-configuration-data.png" class="" title="deviceQuery">

<p>如图中，CUDA Capability 版本为 7.0</p>
<p>附录K – <a href="https://developer.nvidia.com/zh-cn/blog/cuda-computing-power-cn/">CUDA 计算能力</a></p>
<h2 id="额外的硬件信息"><a href="#额外的硬件信息" class="headerlink" title="额外的硬件信息"></a>额外的硬件信息</h2><p>计算能力没有描述某些硬件特性。例如，无论计算能力如何，大多数 GPU(但不是所有 gpu) 都可以将内核执行与主机和设备之间的异步数据传输重叠。在这种情况下，调用 <code>cudaGetDeviceProperties()</code> 来确定设备是否具有特定功能。例如，<code>asyncEngineCount</code> 字段指示是否可能重叠内核执行和数据传输(如果是，可能有多少并发传输)，<code>canMapHostMemory</code> 字段表示是否可以执行零拷贝数据传输。</p>
<h2 id="Compute-Capability-Target"><a href="#Compute-Capability-Target" class="headerlink" title="Compute Capability Target"></a>Compute Capability Target</h2><p>要针对特定版本的 NVIDIA 硬件和 CUDA 软件，请使用 nvcc 的 <code>-arch</code>， <code>-code</code> 和 <code>-gencode</code>选项。例如，使用 warp shuffle 操作的代码必须使用 <code>-arch=sm_30</code>(或更高的计算能力)进行编译。</p>
<p>参考： <a href="https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#building-for-maximum-compatibility">Building for maximum compatibility</a></p>
<h2 id="CUDA-Runtime"><a href="#CUDA-Runtime" class="headerlink" title="CUDA Runtime"></a>CUDA Runtime</h2><p>提供以下功能</p>
<ul>
<li>Device management</li>
<li>Context management</li>
<li>Memory management</li>
<li>Code module management</li>
<li>Execution control</li>
<li>Texture reference management</li>
<li>Interoperability with OpenGL and Direct3D</li>
</ul>
<p>与底层 CUDA Driver API 相比，CUDA Runtime 通过提供隐式初始化、上下文管理和设备代码模块管理，极大地简化了设备管理。nvcc 生成的 c++ 主机代码利用 CUDA Runtime，因此链接到此代码的应用程序将依赖于 CUDA Runtime；类似地，任何使用 cuBLAS, cuFFT 和其他 CUDA toolkit 库的代码也将依赖于 CUDA Runtime。</p>
<p>CUDA Runtime 在内核启动之前处理内核加载和设置内核参数和启动配置。隐式驱动版本检查、代码初始化、CUDA 上下文管理、CUDA 模块管理(从库到函数映射)、内核配置和参数传递都是由CUDA Runtime 执行的。</p>
<p>它包括两个主要部分:</p>
<ul>
<li>C 风格的函数接口(<code>cuda_runtime_api.h</code>)</li>
<li>C++ 风格的封装(<code>cuda_runtime.h</code>)</li>
</ul>
<h1 id="CUDA-Compatibility"><a href="#CUDA-Compatibility" class="headerlink" title="CUDA Compatibility"></a>CUDA Compatibility</h1><p>CUDA 软件环境由三部分组成:</p>
<ul>
<li>CUDA Toolkit（库、CUDA Runtime 及开发工具）：用于开发者构建 CUDA 程序</li>
<li>CUDA Driver：用户态驱动，如 linux 下的<code>libcuda.so</code></li>
<li>NVIDIA GPU device driver：内核态驱动组件</li>
</ul>
<img src="/2024/09/20/NVIDIA/CUDA/CUDA-components.png" class="" title="Components of CUDA">

<p>（来源：<a href="https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#cuda-compatibility-developer-s-guide%EF%BC%89">https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#cuda-compatibility-developer-s-guide）</a></p>
<p>在 Linux 系统上，CUDA Driver 和内核态组件在 NVIDIA display driver 中一起提供。</p>
<p>为了方便起见，每个 CUDA Toolkit 附带了一个 NVIDIA display driver。该驱动程序支持该版本 CUDA Toolkit 中引入的所有功能。</p>
<p>通常，升级 CUDA Toolkit 包括升级 Toolkit 和 Driver，以获得最先进的工具包和驱动程序功能。</p>
<img src="/2024/09/20/NVIDIA/CUDA/forward-compatibility.png" class="" title="CUDA Upgrade Path">

<p>但这并不总是必需的。CUDA 兼容性允许只升级某些组件，并不总是需要一个完整的系统升级。</p>
<h2 id="CUDA-Toolkit-版本"><a href="#CUDA-Toolkit-版本" class="headerlink" title="CUDA Toolkit 版本"></a>CUDA Toolkit 版本</h2><p>从CUDA 11开始，Toolkit 版本基于行业标准的版本控制方案: <code>.x.y.z</code>:</p>
<ul>
<li><code>x</code> 代表主版本 - API 已经改变，二进制兼容性被打破</li>
<li><code>y</code> 代表次要版本 - 引入新 API，弃用旧 API，源代码兼容性可能会被破坏，但保持二进制兼容性</li>
<li><code>z</code> 代表发布&#x2F;补丁版本</li>
</ul>
<p>Toolkit 中各组件版本信息，可查看 <a href="https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html#cuda-major-component-versions">CUDA Toolkit Major Component Versions</a></p>
<p>CUDA 支持几种兼容性选择：</p>
<ul>
<li>CUDA 向前兼容升级最初是在 CUDA 10 中引入的，旨在让用户能够访问新的 CUDA 功能，并在安装了较旧的 NVIDIA datacenter driver 的系统上运行使用新 CUDA 版本构建的应用程序</li>
<li>CUDA 增强兼容性在 CUDA 11.1 中首次引入，提供了两个好处：<ul>
<li>通过利用 CUDA Toolkit 中组件语义版本控制，可以为一个 CUDA 小版本(例如11.1)构建应用程序，并在主要家族(即11.x)中的所有未来小版本中工作</li>
<li>CUDA Runtime 放宽了最低 driver 版本检查，因此在移动到新的次要版本时不再需要升级 driver</li>
</ul>
</li>
<li>CUDA Driver 确保编译后的 CUDA 应用程序保持向后二进制兼容性。使用 CUDA Toolkit 3.2 编译的应用程序可以运行在较新的 Driver 上</li>
</ul>
<h2 id="源码兼容性"><a href="#源码兼容性" class="headerlink" title="源码兼容性"></a>源码兼容性</h2><p>源代码兼容性定义为库提供的一组保证，其中针对特定版本的库(使用SDK)构建的格式良好的应用程序将在安装新版本的SDK时继续构建和运行而不会出现错误。</p>
<h2 id="二进制兼容性"><a href="#二进制兼容性" class="headerlink" title="二进制兼容性"></a>二进制兼容性</h2><p>二进制兼容性定义为库提供的一组保证，其中针对所述库的应用程序在与库的不同版本动态链接时将继续工作。</p>
<p>CUDA Driver API 有一个 C-style ABI，它保证在旧驱动程序(例如CUDA 3.2)上运行的应用程序仍然可以在现代驱动程序(例如CUDA 11.0附带的驱动程序)上正常运行。</p>
<p>因此，CUDA Driver API 是二进制兼容的，但不兼容源代码(根据较新的 SDK 重新构建应用程序可能需要更改源代码)。</p>
<img src="/2024/09/20/NVIDIA/CUDA/CTK-and-min-driver-versions.png" class="" title="CUDA Toolkit and Minimum Driver Versions">





<h2 id="Minor-Version-Compatibility"><a href="#Minor-Version-Compatibility" class="headerlink" title="Minor Version Compatibility"></a>Minor Version Compatibility</h2><h3 id="CUDA-11-开始支持-Minor-Version-Compatibility"><a href="#CUDA-11-开始支持-Minor-Version-Compatibility" class="headerlink" title="CUDA 11 开始支持 Minor Version Compatibility"></a>CUDA 11 开始支持 Minor Version Compatibility</h3><p>CUDA 11及后续版本默认为 Minor Version 兼容性。</p>
<p>从CUDA 11开始，使用 CUDA major 发行系列中的 CUDA Toolkit 编译的应用程序可以在具有至少最低要求的 driver 版本的系统上运行，功能集有限。这个最低要求的 driver 可以不同于 CUDA  Toolkit 中打包的驱动程序，但应该<strong>属于同一个 major 版本</strong>。</p>
<p>由于二进制向后兼容，基于任何旧的 CUDA Toolkit 构建的应用程序总是能在新 driver 上运行，在 CUDA 11 之前，基于新 CUDA  Toolkit 构建的应用程序在没有向前兼容包的旧 driver 上不受支持。</p>
<p>如果使用的是新的 CUDA 10。则所需的最小驱动程序版本与打包为该工具包版本一部分的驱动程序版本相同。因此，在CUDA 11.1之前，每个新的 CUDA Toolkit 小版本都更改了所需的最低 driver 版本。因此，系统管理员总是必须升级 driver ，以支持基于CUDA Toolkit 构建的应用程序。</p>
<h3 id="Minor-Compatibility-部署注意"><a href="#Minor-Compatibility-部署注意" class="headerlink" title="Minor Compatibility 部署注意"></a>Minor Compatibility 部署注意</h3><p>如上，直接依赖于 CUDA Runtime 的应用程序可以部署在以下两种场景中:</p>
<ul>
<li>系统上安装的 CUDA driver 比 Runtime 更新</li>
<li>CUDA  Runtime 比系统上的 CUDA  driver 更新，但它们来自相同的 CUDA Toolkit 的 major 版本</li>
</ul>
<p>在场景 2 中，系统管理员应该意识到上述限制，并且应该能够在遇到任何问题时指出应用程序失败的原因。</p>
<p>Minor 版本兼容性为库的使用和部署提供了灵活性。使用支持次要版本兼容性的库的应用程序可以部署在具有不同版本的 Toolkit 和库的系统上，而无需针对库版本的差异重新编译应用程序。这对库的旧版本和新版本都适用，前提是它们都来自同一个 major 发行系列。请注意，应该考虑库本身具有相互依赖性。例如，每个 cuDNN 版本都需要一个特定版本的 cuBLAS。</p>
<h2 id="Forward-Compatibility"><a href="#Forward-Compatibility" class="headerlink" title="Forward Compatibility"></a>Forward Compatibility</h2><h3 id="支持跨-Toolkit-Major-版本"><a href="#支持跨-Toolkit-Major-版本" class="headerlink" title="支持跨 Toolkit Major 版本"></a>支持跨 Toolkit Major 版本</h3><img src="/2024/09/20/NVIDIA/CUDA/forward-compatibility-upgrade-path.png" class="" title="Forward Compatibility Upgrade Path">



<p>Forward Compatibility 升级方式参考：<a href="https://docs.nvidia.com/deploy/cuda-compatibility/index.html#installing-the-forward-compatibility-package">Installing the Forward Compatibility Package</a></p>
<h3 id="Deployment-Considerations-for-Forward-Compatibility"><a href="#Deployment-Considerations-for-Forward-Compatibility" class="headerlink" title="Deployment Considerations for Forward Compatibility"></a>Deployment Considerations for Forward Compatibility</h3><p>参考：<a href="https://docs.nvidia.com/deploy/cuda-compatibility/index.html#installing-the-forward-compatibility-package">https://docs.nvidia.com/deploy/cuda-compatibility/index.html#installing-the-forward-compatibility-package</a></p>
<h1 id="CUDA-编程模型"><a href="#CUDA-编程模型" class="headerlink" title="CUDA 编程模型"></a>CUDA 编程模型</h1><img src="/2024/09/20/NVIDIA/CUDA/memory-hierarchy-in-gpus-1-625x381.png" class="" title="img">

<p>（来源：<a href="https://developer.nvidia.com/blog/cuda-refresher-cuda-programming-model/%EF%BC%89">https://developer.nvidia.com/blog/cuda-refresher-cuda-programming-model/）</a></p>
]]></content>
      <categories>
        <category>NVIDIA</category>
        <category>CUDA</category>
      </categories>
      <tags>
        <tag>NVIDIA</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用</title>
    <url>/2024/09/22/Docker/Docker%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="运行参数"><a href="#运行参数" class="headerlink" title="运行参数"></a>运行参数</h1><table>
<thead>
<tr>
<th>option</th>
<th>默认参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>–add-host</td>
<td></td>
<td>将自定义主机添加到IP映射（host：ip）</td>
</tr>
<tr>
<td>–attach , -a</td>
<td></td>
<td>附加到STDIN，STDOUT或STDERR</td>
</tr>
<tr>
<td>–blkio-weight</td>
<td></td>
<td>IO（相对权重），介于10到1000之间，或者为0禁用（默认为0）</td>
</tr>
<tr>
<td>–blkio-weight-device</td>
<td></td>
<td>块IO重量（相对设备重量）</td>
</tr>
<tr>
<td>–cap-add</td>
<td></td>
<td>添加Linux功能</td>
</tr>
<tr>
<td>–cap-drop</td>
<td></td>
<td>放弃Linux功能</td>
</tr>
<tr>
<td>–cgroup-parent</td>
<td></td>
<td>容器的可选父cgroup</td>
</tr>
<tr>
<td>–cidfile</td>
<td></td>
<td>将容器ID写入文件</td>
</tr>
<tr>
<td>–cpu-count</td>
<td></td>
<td>CPU数量（仅Windows）</td>
</tr>
<tr>
<td>–cpu-percent</td>
<td></td>
<td>CPU百分比（仅Windows）</td>
</tr>
<tr>
<td>–cpu-period</td>
<td></td>
<td>限制CPU CFS（完全公平的调度程序）期限</td>
</tr>
<tr>
<td>–cpu-quota</td>
<td></td>
<td>限制CPU CFS（完全公平的调度程序）配额</td>
</tr>
<tr>
<td>–cpu-rt-period</td>
<td></td>
<td>限制CPU实时时间（以微秒为单位）</td>
</tr>
<tr>
<td>–cpu-rt-runtime</td>
<td></td>
<td>限制CPU实时运行时间（以微秒为单位）</td>
</tr>
<tr>
<td>-c, –cpu-shares</td>
<td></td>
<td>CPU份额（相对重量）</td>
</tr>
<tr>
<td>–cpus</td>
<td></td>
<td>CPU数量</td>
</tr>
<tr>
<td>–cpuset-cpus</td>
<td></td>
<td>允许执行的CPU（0-3，0,1）</td>
</tr>
<tr>
<td>–cpuset-mems</td>
<td></td>
<td>允许执行的MEM（0-3，0,1）</td>
</tr>
<tr>
<td>-d, –detach</td>
<td></td>
<td>在后台运行容器并打印容器ID</td>
</tr>
<tr>
<td>–detach-keys</td>
<td></td>
<td>覆盖分离容器的键序列</td>
</tr>
<tr>
<td>–device</td>
<td></td>
<td>将主机设备添加到容器</td>
</tr>
<tr>
<td>–device-cgroup-rule</td>
<td></td>
<td>在容器的 cgroup 中设置设备访问规则</td>
</tr>
<tr>
<td>–device-read-bps</td>
<td></td>
<td>限制从设备读取的速率（每秒字节数）</td>
</tr>
<tr>
<td>–device-read-iops</td>
<td></td>
<td>限制从设备读取的速率（每秒IO）</td>
</tr>
<tr>
<td>–device-write-bps</td>
<td></td>
<td>限制对设备的写入速率（每秒字节数）</td>
</tr>
<tr>
<td>–device-write-iops</td>
<td></td>
<td>限制对设备的写入速率（每秒IO）</td>
</tr>
<tr>
<td>–disable-content-trust</td>
<td>true</td>
<td>跳过图像验证</td>
</tr>
<tr>
<td>–dns</td>
<td></td>
<td>设置自定义DNS服务器(例如: 8.8.8.8)</td>
</tr>
<tr>
<td>–dns-opt</td>
<td></td>
<td>设定DNS选项</td>
</tr>
<tr>
<td>–dns-option</td>
<td></td>
<td>设定DNS选项</td>
</tr>
<tr>
<td>–dns-search</td>
<td></td>
<td>设置自定义DNS搜索域</td>
</tr>
<tr>
<td>–domainname</td>
<td></td>
<td>容器NIS域名</td>
</tr>
<tr>
<td>–entrypoint</td>
<td></td>
<td>覆盖图像的默认ENTRYPOINT</td>
</tr>
<tr>
<td>-e, –env</td>
<td></td>
<td>设置环境变量</td>
</tr>
<tr>
<td>–env-file</td>
<td></td>
<td>读入环境变量文件</td>
</tr>
<tr>
<td>–expose</td>
<td></td>
<td>公开一个或多个端口(8080,8081)</td>
</tr>
<tr>
<td>–gpus</td>
<td></td>
<td>API 1.40+GPU设备添加到容器中（“全部”传递所有GPU）</td>
</tr>
<tr>
<td>–group-add</td>
<td></td>
<td>添加其他群组即可加入</td>
</tr>
<tr>
<td>–health-cmd</td>
<td></td>
<td>运行命令以检查运行状况</td>
</tr>
<tr>
<td>–health-interval</td>
<td></td>
<td>运行检查之间的时间（ms</td>
</tr>
<tr>
<td>–health-retries</td>
<td></td>
<td>需要连续报告不健康状况</td>
</tr>
<tr>
<td>–health-start-period</td>
<td></td>
<td>API 1.29+ 容器在开始运行状况重试倒计时（ms</td>
</tr>
<tr>
<td>–health-timeout</td>
<td></td>
<td>允许执行一次检查的最长时间（ms</td>
</tr>
<tr>
<td>–help</td>
<td></td>
<td>打印用量</td>
</tr>
<tr>
<td>-h, –hostname</td>
<td></td>
<td>容器主机名(例如:例如:localhost)</td>
</tr>
<tr>
<td>–init</td>
<td></td>
<td>API 1.25+ 在容器内运行一个初始化程序，以转发信号并获取进程</td>
</tr>
<tr>
<td>-i, –interactive</td>
<td></td>
<td>即使未连接STDIN也保持打开状态</td>
</tr>
<tr>
<td>–io-maxbandwidth</td>
<td></td>
<td>系统驱动器的最大IO带宽限制（仅Windows）</td>
</tr>
<tr>
<td>–io-maxiops</td>
<td></td>
<td>系统驱动器的最大IOps限制（仅Windows）</td>
</tr>
<tr>
<td>–ip</td>
<td></td>
<td>IPv4地址（例如172.30.100.104）</td>
</tr>
<tr>
<td>–ip6</td>
<td></td>
<td>IPv6地址（例如2001：db8 :: 33）</td>
</tr>
<tr>
<td>–ipc</td>
<td></td>
<td>使用的IPC模式</td>
</tr>
<tr>
<td>–isolation</td>
<td></td>
<td>集装箱隔离技术</td>
</tr>
<tr>
<td>–kernel-memory</td>
<td></td>
<td>内核内存限制</td>
</tr>
<tr>
<td>-l, –label</td>
<td></td>
<td>在容器上设置元数据</td>
</tr>
<tr>
<td>–label-file</td>
<td></td>
<td>读入行分隔的标签文件</td>
</tr>
<tr>
<td>–link</td>
<td></td>
<td>将链接添加到另一个容器</td>
</tr>
<tr>
<td>–link-local-ip</td>
<td></td>
<td>容器IPv4 &#x2F; IPv6链接本地地址</td>
</tr>
<tr>
<td>–log-driver</td>
<td></td>
<td>容器的日志记录驱动程序</td>
</tr>
<tr>
<td>–log-opt</td>
<td></td>
<td>日志驱动程序选项</td>
</tr>
<tr>
<td>–mac-address</td>
<td></td>
<td>容器MAC地址（例如92：d0：c6：0a：29：33）</td>
</tr>
<tr>
<td>-m,–memory</td>
<td></td>
<td>内存限制</td>
</tr>
<tr>
<td>–memory-reservation</td>
<td></td>
<td>内存软限制</td>
</tr>
<tr>
<td>–memory-swap</td>
<td></td>
<td>交换限制等于内存加交换：“-1”以启用无限交换</td>
</tr>
<tr>
<td>–memory-swappiness</td>
<td>-1</td>
<td>调整容器内存交换（0到100）</td>
</tr>
<tr>
<td>–mount</td>
<td></td>
<td>将文件系统挂载附加到容器</td>
</tr>
<tr>
<td>–name</td>
<td></td>
<td>为容器分配一个名称</td>
</tr>
<tr>
<td>–net</td>
<td></td>
<td>网络模式(host, bridge)</td>
</tr>
<tr>
<td>–net-alias</td>
<td></td>
<td>为容器添加网络范围的别名</td>
</tr>
<tr>
<td>–network</td>
<td></td>
<td>网络名(可以多个容器公用一个网络名,这样多容器会在同一个网络环境下)</td>
</tr>
<tr>
<td>–network-alias</td>
<td></td>
<td>网络别名(未知)</td>
</tr>
<tr>
<td>–no-healthcheck</td>
<td></td>
<td>禁用任何容器指定的健康检查</td>
</tr>
<tr>
<td>–oom-kill-disable</td>
<td></td>
<td>禁用OOM杀手</td>
</tr>
<tr>
<td>–oom-score-adj</td>
<td></td>
<td>调台主持人的OOM首选项（-1000至1000）</td>
</tr>
<tr>
<td>–pid</td>
<td></td>
<td>使用的PID名称空间</td>
</tr>
<tr>
<td>–pids-limit</td>
<td></td>
<td>调整容器pids限制（将-1设置为无限制）</td>
</tr>
<tr>
<td>–platform</td>
<td></td>
<td>实验（守护程序）API 1.32+ 如果服务器具有多平台功能，请设置平台</td>
</tr>
<tr>
<td>–privileged</td>
<td></td>
<td>赋予此容器扩展的特权</td>
</tr>
<tr>
<td>-p, –publish</td>
<td></td>
<td>将容器的端口发布到主机</td>
</tr>
<tr>
<td>-P, –publish-all</td>
<td></td>
<td>将所有公开的端口发布到随机端口</td>
</tr>
<tr>
<td>–read-only</td>
<td></td>
<td>将容器的根文件系统挂载为只读</td>
</tr>
<tr>
<td>–restart</td>
<td>no</td>
<td>容器退出时重新启动策略以应用(no</td>
</tr>
<tr>
<td>–rm</td>
<td></td>
<td>退出时自动删除容器</td>
</tr>
<tr>
<td>–runtime</td>
<td></td>
<td>用于此容器的运行时</td>
</tr>
<tr>
<td>–security-opt</td>
<td></td>
<td>安全选项</td>
</tr>
<tr>
<td>–shm-size</td>
<td></td>
<td>&#x2F; dev &#x2F; shm的大小</td>
</tr>
<tr>
<td>–sig-proxy</td>
<td>true</td>
<td>代理接收到该过程的信号</td>
</tr>
<tr>
<td>–stop-signal</td>
<td>SIGTERM</td>
<td>停止容器的信号</td>
</tr>
<tr>
<td>–stop-timeout</td>
<td></td>
<td>API 1.25+ 超时（以秒为单位）以停止容器</td>
</tr>
<tr>
<td>–storage-opt</td>
<td></td>
<td>容器的存储驱动程序选项</td>
</tr>
<tr>
<td>–sysctl</td>
<td></td>
<td>Sysctl选项</td>
</tr>
<tr>
<td>–tmpfs</td>
<td></td>
<td>挂载tmpfs目录</td>
</tr>
<tr>
<td>-t, –tty</td>
<td></td>
<td>分配伪TTY</td>
</tr>
<tr>
<td>–ulimit</td>
<td></td>
<td>Ulimit选项</td>
</tr>
<tr>
<td>-u, –user</td>
<td></td>
<td>用户名或UID（格式：&lt;名称</td>
</tr>
<tr>
<td>–userns</td>
<td></td>
<td>要使用的用户名称空间</td>
</tr>
<tr>
<td>–uts</td>
<td></td>
<td>使用的UTS名称空间</td>
</tr>
<tr>
<td>-v,–volume</td>
<td></td>
<td>绑定挂载卷</td>
</tr>
<tr>
<td>–volume-driver</td>
<td></td>
<td>容器的可选音量驱动器</td>
</tr>
<tr>
<td>–volumes-from</td>
<td></td>
<td>从指定的容器挂载卷</td>
</tr>
<tr>
<td>-w,–workdir</td>
<td></td>
<td>容器内的工作目录</td>
</tr>
</tbody></table>
<h2 id="privileged"><a href="#privileged" class="headerlink" title="--privileged"></a><code>--privileged</code></h2><p>该选项允许容器以 root 权限运行，获得几乎与主机相同的权限。意味着容器可以访问和控制主机的所有硬件设备、操作系统内核和其他系统资源。</p>
<blockquote>
<hr>
<p>使用 <code>--privileged=true</code> 后，容器内的 root 才真正拥有 root 权限，否则容器内 root 只是一个普通用户</p>
<hr>
</blockquote>
<p>使能该选项存在巨大安全风险。允许容器以超级用户权限运行，意味着容器内的任何恶意代码都可以获得主机上的完全访问权限。攻击者可以利用这种权限执行任意操作，包括但不限于数据窃取、系统破坏和网络]攻击。</p>
<h2 id="device-cgroup-rule"><a href="#device-cgroup-rule" class="headerlink" title="--device-cgroup-rule"></a><code>--device-cgroup-rule</code></h2><p><code>--device-cgroup-rule</code> 可指定一系列 cgroup 规则，以允许或禁止容器对特定设备的访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--device-cgroup-rule=&quot;type major:minor mode&quot;</span><br><span class="line">  Add a rule to the cgroup allowed devices list. The rule is expected to be in the format specified in the Linux kernel documentation (Documentation/cgroup-v1/devices.txt):</span><br><span class="line">    - type: a (all), c (char), or b (block);</span><br><span class="line">    - major and minor: either a number, or * for all;</span><br><span class="line">    - mode: a composition of r (read), w (write), and m (mknod(2)).</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Docker CE17.04 引入</p>
</blockquote>
<blockquote>
<p>major</p>
<ul>
<li>81: USB</li>
<li>189: UVC</li>
</ul>
</blockquote>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker version</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">搜索可用镜像</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker search &lt;image name&gt;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除镜像</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker rmi &lt;image name&gt;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除容器</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker <span class="built_in">rm</span> &lt;container&gt;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">$ docker <span class="built_in">rm</span> $(docker ps -aq) <span class="comment"># 删除所有容器</span></span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止容器</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker stop &lt;container name&gt;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker stop $(docker ps -aq) <span class="comment"># 停止所有容器</span></span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">构建镜像</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker build -t &lt;镜像名 name:tag&gt; [-f &lt;dockerfile 路径&gt;]</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker build -t &#123;镜像名&#125; &#123;路径&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker build -t &#123;镜像名&#125; - &lt; Dockerfile路径</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">从容器构建镜像</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker commit [-a/c/m/p] &lt;container&gt; &lt;image&gt;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker <span class="built_in">cp</span> host_path containerID:container_path</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker <span class="built_in">cp</span> containerID:container_path host_path</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看容器端口映射</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker port CONTAINER [PRIVATE_PORT[/PROTO]]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker <span class="built_in">history</span> &lt;image&gt;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加 tag. 第一个参数为原始镜像标签</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker tag IMAGE[:TAG] IMAGE[:TAG]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看某个容器详细信息</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker inspect</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker diff</span></span><br></pre></td></tr></table></figure>



<h1 id="访问主机设备"><a href="#访问主机设备" class="headerlink" title="访问主机设备"></a>访问主机设备</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 --privileged（允许访问主机所有设备）</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --privileged --<span class="built_in">tty</span> --interactive debian /bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 -volume</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --<span class="built_in">tty</span> --interactive --volume=/dev/bus/usb:/dev/bus/usb --volume=/dev/sdb:/dev/sdb debian /bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 -device</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --<span class="built_in">tty</span> --interactive --device=/dev/bus/usb --device=/dev/sdb debian /bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 cgroup rule</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --device-cgroup-rule=<span class="string">&#x27;c 81:* rwm&#x27;</span> --<span class="built_in">tty</span> --interactive debian /bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用该方式，为了确保 plug 事件触发重分配，还需要添加 udev 规则，参考 realsense docker</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="热插拔"><a href="#热插拔" class="headerlink" title="热插拔"></a>热插拔</h2><blockquote>
<p><code>-v/volume</code> 及 <code>-device</code> 无法解决热插拔问题。在容器已经运行时插入或重新插入设备，在这种场景中，设备可能获得不同的总线 ID，从而使原始共享失效。（<strong>需要注意的是，当共享整个 &#x2F;dev 目录时，这不是问题</strong>）</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 映射此类设备整个总线，例如 针对 USB 设备，可映射整个 USB 总线</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --device=/dev/bus/usb -it --name ros_container &lt;image&gt; /bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 使用 --device-cgroup-rule 映射此类别所有设备</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --device-cgroup-rule=<span class="string">&#x27;c 81:* rwm&#x27;</span> --<span class="built_in">tty</span> --interactive debian /bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. 使用 --privileged 模式</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --privileged -it --name ros_container &lt;image&gt; /bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4. 重新映射。例如，USB 设备</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker <span class="built_in">exec</span> -ti &lt;container&gt; bash -c <span class="string">&quot;mount --bind /dev/bus/usb /dev/bus/usb&quot;</span></span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5. 动态添加到容器</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker update --device-add /dev/bus/usb/001/026 &lt;container_name&gt;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">6. 使用 udev 固定设备路径，容器启动时映射这些路径</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<blockquote>
<p>容器内 <code>systemd-udevd</code> 不启动。因为容器中 &#x2F;sys 默认时 ro 只读模式，避免容器环境与主机对于 &#x2F;sys 同时写入导致的资源冲突问题。</p>
<p><code>systemd-udevd.service</code> 服务文件会检查该权限</p>
</blockquote>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>NVIDIA</title>
    <url>/2024/09/17/NVIDIA/NVIDIA/</url>
    <content><![CDATA[<h1 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h1><p>查看显卡型号：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看显卡信号</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ubuntu-drivers devices</span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">lshw -numeric -C display</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">lspci | grep -i vga</span></span><br></pre></td></tr></table></figure>



<h2 id="nouveau"><a href="#nouveau" class="headerlink" title="nouveau"></a><strong>nouveau</strong></h2><p>Xorg 项目下的支持 Nvidia 显卡的开源驱动。该项目的目标是利用逆向工程Nvidia的专有Linux 驱动创造一个开源驱动程序。nouveau 性能较低。</p>
<p>NVK 是为 NVIDIA 图形硬件开发的新的开源 Vulkan 驱动程序，旨在成为新的图形驱动程序。</p>
<p>Ubuntu 默认使用 X.Org X server - Nouveau 驱动。</p>
<p>安装 NVIDIA GPU 驱动前，需禁用 nouveau。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看是否禁用</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"> lsmod | grep nouveau <span class="comment"># 若出现 nouveau 表示未禁用</span></span></span><br><span class="line">nouveau              2842624  0</span><br><span class="line">mxm_wmi                12288  1 nouveau</span><br><span class="line">drm_ttm_helper         12288  1 nouveau</span><br><span class="line">ttm                   110592  3 drm_ttm_helper,i915,nouveau</span><br><span class="line">drm_display_helper    241664  2 i915,nouveau</span><br><span class="line">drm_kms_helper        270336  4 drm_display_helper,nvidia_drm,i915,nouveau</span><br><span class="line">i2c_algo_bit           16384  3 nvidiafb,i915,nouveau</span><br><span class="line">drm                   761856  30 drm_kms_helper,drm_display_helper,nvidia,drm_buddy,drm_ttm_helper,nvidia_drm,i915,ttm,nouveau</span><br><span class="line">video                  73728  5 nvidia_wmi_ec_backlight,ideapad_laptop,i915,nouveau,nvidia_modeset</span><br><span class="line">wmi                    40960  6 video,nvidia_wmi_ec_backlight,wmi_bmof,ideapad_laptop,mxm_wmi,nouveau</span><br></pre></td></tr></table></figure>

<p>注意：在 Intel Core i7-1465HX + RTX4060Ti 平台，ubuntu2204 测试，未屏蔽 nouveau，也能正常安装和使用 NVIDIA driver</p>
<h2 id="NVIDIA-driver"><a href="#NVIDIA-driver" class="headerlink" title="NVIDIA driver"></a><strong>NVIDIA driver</strong></h2><p>方式一：通过系统自带软件中心，选择 NVIDIA 驱动(如 <em>NVIDIA  driver metapackage from nvidia-driver-xxx</em> 下图是已手动安装 NVIDIA 驱动后的截图)安装，会自动禁用 nouveau。</p>
<img src="/2024/09/17/NVIDIA/NVIDIA/image-20240917112604604.png" class="" title="image-20240917112604604">



<p>方式二：</p>
<p>下载官方驱动 <a href="https://www.nvidia.cn/drivers/lookup/">https://www.nvidia.cn/drivers/lookup/</a> OR <a href="https://www.nvidia.com/en-us/geforce/drivers/">https://www.nvidia.com/en-us/geforce/drivers/</a></p>
<img src="/2024/09/17/NVIDIA/NVIDIA/image-20240917112655871.png" class="" title="image-20240917112655871">

<p>卸载原有驱动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt remove --purge nvidia*</span></span><br></pre></td></tr></table></figure>

<p>更新依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt update</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install g++</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install gcc</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install make</span></span><br></pre></td></tr></table></figure>

<p>禁用 nouveau</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 修改 /etc/modprobe.d/blacklist.conf 或 blacklist-nouveau.conf</span><br><span class="line"># 或 /etc/modprobe.d/blacklist-nvidia-nouveau.conf</span><br><span class="line"># 在末尾添加以下语句</span><br><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=0</span><br><span class="line"></span><br><span class="line"># 然后在终端输入更新指令</span><br><span class="line">$ sudo update-initramfs -u</span><br></pre></td></tr></table></figure>

<p>关闭当前显示服务，进入 tty</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ctrl + Alt + F1~F6 进入 TTY</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> systemctl gdm3 stop  <span class="comment"># 关闭显示服务</span></span></span><br></pre></td></tr></table></figure>

<p>安装驱动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> ./NVIDIA-Linux-x86_64-xxxx.run</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装完，重启显示服务</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> systemctl restart gdm3</span></span><br></pre></td></tr></table></figure>

<p>注意：NVIDI CUDA 库中自带有 driver，因此，可直接安装 CUDA 即可。</p>
<h1 id="CUDA"><a href="#CUDA" class="headerlink" title="CUDA"></a>CUDA</h1><p>cuda 安装参考：</p>
<p>安装完成，需配置环境变量，例如：在  中添加</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export CUDA_HOME=/usr/local/cuda-12.5</span><br><span class="line">export PATH=$CUDA_HOME/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$&#123;LD_LIBRARY_PATH&#125;</span><br></pre></td></tr></table></figure>



<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="GCC-版本不匹配"><a href="#GCC-版本不匹配" class="headerlink" title="GCC 版本不匹配"></a>GCC 版本不匹配</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The kernel was built by： x86_64-linux-gnu-gcc-12(xxxx) 12.3.0</span><br><span class="line">You are using: CC(XXX) 11.3</span><br></pre></td></tr></table></figure>

<p>解决方法：更新 gcc 版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install gcc-12 g++-12</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 20</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gcc --version <span class="comment"># 验证版本信息</span></span></span><br></pre></td></tr></table></figure>



<h3 id="无法加载-nvidia-drm"><a href="#无法加载-nvidia-drm" class="headerlink" title="无法加载 nvidia-drm"></a><strong>无法加载 nvidia-drm</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unable to load the &quot;nvidia-drm&quot; kernel module</span><br></pre></td></tr></table></figure>

<p>尝试切换到终端命名模式，无效：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换到终端命令模式，不启动图形界面</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> systemctl set-default multi-user.target</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> reboot 0</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt purge nvidia*</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt autoremmove</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> reboot 0</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">再次安装 CUDA</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> ./cuda-xxx.run</span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换会图形界面模式</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> systemctl set-default graphical.target</span></span><br></pre></td></tr></table></figure>

<p><strong>最终解决方法</strong> : NVIDIA 驱动被列入黑名单(blacklisted)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 注意：prime-select 会生成 /lib/modprobe.d/nvidia-kms.conf 文件</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> prime-select nvidia <span class="comment"># 需安装 nvidia-prime</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看是否加入黑名单</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">grep nvidia /etc/modprobe.d/* /lib/modprobe.d/*</span></span><br><span class="line">/etc/modprobe.d/blacklist-framebuffer.conf:blacklist nvidiafb</span><br><span class="line">/lib/modprobe.d/nvidia-kms.conf:#This file was generated by nvidia-prime</span><br><span class="line">/lib/modprobe.d/nvidia-kms.conf:options nvidia-drm modeset=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">此处找到 /etc/modprobe.d/blacklist-framembuffer.conf 中有 nvidia，删除该文件中的 nvidia 相关行，然后执行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span>  update-initramfs -u</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> reboot 0</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">然后重装即可</span></span><br></pre></td></tr></table></figure>

<p>若 nvidia 驱动已安装，但在 settings 中看不到显卡信息，或者 nvidia-smi 无法查看信息，也可先检查是否有黑名单</p>
<h3 id="prime-select-切换-nvidia-后无法进入图形界面"><a href="#prime-select-切换-nvidia-后无法进入图形界面" class="headerlink" title="prime-select 切换 nvidia 后无法进入图形界面"></a><strong>prime-select 切换 nvidia 后无法进入图形界面</strong></h3><p><code>prime-select</code> 会生成 <code>/lib/modprobe.d/nvidia-kms.conf</code> 文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">This file was generated by nvidia-prime</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Set value to 0 to <span class="built_in">disable</span> modesetting</span></span><br><span class="line">options nvidia-drm modeset=1</span><br></pre></td></tr></table></figure>

<p>解决方法：删除该文件</p>
<h1 id="cuDNN"><a href="#cuDNN" class="headerlink" title="cuDNN"></a>cuDNN</h1><p>下载 <a href="https://developer.nvidia.com/rdp/cudnn-archive">cuDNN</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install zlib1g</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> dpkg -i cudnn-local-repo-ubuntu2204-8.9.7.29_1.0-1_amd64.deb</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">cp</span> /var/cudnn-local-repo-ubuntu2204-8.9.7.29/cudnn-local-08A7D361-keyring.gpg /usr/share/keyrings/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt update</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装其他库</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install libcudnn8 libcudnn8-dev libcudnn8-samples</span></span><br></pre></td></tr></table></figure>

<p>测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install libfreeimage3 libfreeimage-dev</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> -r /usr/src/cudnn_samples_v8/ ~/workspaces/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span>  ~/workspaces/cudnn_samples_v8/mnistCUDNN</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make clean &amp;&amp; make</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./mnistCUDNN</span></span><br></pre></td></tr></table></figure>



<h1 id="切换显卡"><a href="#切换显卡" class="headerlink" title="切换显卡"></a>切换显卡</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get install nvidia-prime</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> prime-select nvidia <span class="comment"># 支持 intel/nvidia/on-demand/query</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> reboot</span></span><br></pre></td></tr></table></figure>



<h2 id="动态显示切换"><a href="#动态显示切换" class="headerlink" title="动态显示切换"></a>动态显示切换</h2><p>NVIDIA Advanced Optimus 动态显示切换，能自动选择由 GeForce GPU 还是集成显卡来驱动内部显示器，并根据正在运行的应用、根据需要进行切换，从而降低整体功耗，延长笔记本续航。</p>
<p>NVIDIA Advanced Optimus 引入了基于硬件的动态显示开关，使 GPU 能够直接控制显示器，而不通过 IGP 进行路由。</p>
<p><code>prime-select on-demand</code> 即动态选择显卡。</p>
<p>指定使用独显启动程序：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">env</span> __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia rviz2</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">~/.bashrc 中添加以下语句，然后使用 nvrun &lt;<span class="built_in">command</span>&gt; 方式运行</span></span><br><span class="line">alias nvrun=&#x27;env __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/nvidia_icd.x86_64.json &#x27;</span><br></pre></td></tr></table></figure>

<p>或创建 <code>/bin/optirun</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">export __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia</span><br><span class="line">for i in &quot;$@&quot;</span><br><span class="line">do      </span><br><span class="line">        cmd=$cmd&#x27; &#x27;&#x27;&quot;&#x27;$i&#x27;&quot;&#x27;</span><br><span class="line">done    </span><br><span class="line">echo $cmd | exec sh</span><br></pre></td></tr></table></figure>

<p>然后使用 <code>optirun &lt;command&gt;</code>  运行指令。</p>
<p>参考：<a href="https://askubuntu.com/questions/1188458/how-to-use-prime-select-on-demand-in-latest-kubuntu-19-10/1226557#1226557">https://askubuntu.com/questions/1188458/how-to-use-prime-select-on-demand-in-latest-kubuntu-19-10/1226557#1226557</a> 可知，ubuntu20.04 对 Xorg 进行了更新才支持该特性。</p>
<p>或右键要启动的程序，选择 “Launch using Discrete Graphics Card”</p>
<h1 id="其它操作"><a href="#其它操作" class="headerlink" title="其它操作"></a>其它操作</h1><h2 id="查看显卡使用情况"><a href="#查看显卡使用情况" class="headerlink" title="查看显卡使用情况"></a>查看显卡使用情况</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvidia-smi</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> fuser -v /dev/nvidia*</span></span><br></pre></td></tr></table></figure>



<h2 id="查看当前显卡"><a href="#查看当前显卡" class="headerlink" title="查看当前显卡"></a>查看当前显卡</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有 <span class="keyword">in</span> use 状态的 VGA 设备</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">lspci -nnk | grep -i vga -A3 | grep <span class="string">&#x27;in use&#x27;</span></span></span><br><span class="line">Kernel driver in use: i915</span><br><span class="line">Kernel driver in use: nvidia</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">lspci -vnn | grep -A12 <span class="string">&#x27;\&#x27;</span><span class="string">&#x27;[030[02]\]&#x27;</span> | grep -Ei <span class="string">&quot;vga|3d|display|kernel&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> lshw -c display</span></span><br><span class="line">  *-display                 </span><br><span class="line">       description: VGA compatible controller</span><br><span class="line">       product: NVIDIA Corporation</span><br><span class="line">       vendor: NVIDIA Corporation</span><br><span class="line">       physical id: 0</span><br><span class="line">       bus info: pci@0000:01:00.0</span><br><span class="line">       logical name: /dev/fb0</span><br><span class="line">       version: a1</span><br><span class="line">       width: 64 bits</span><br><span class="line">       clock: 33MHz</span><br><span class="line">       capabilities: pm msi pciexpress vga_controller bus_master cap_list rom fb</span><br><span class="line">       configuration: depth=32 driver=nvidia latency=0 mode=2560x1600 visual=truecolor xres=2560 yres=1600</span><br><span class="line">       resources: iomemory:600-5ff iomemory:620-61f irq:152 memory:81000000-81ffffff memory:6000000000-61ffffffff memory:6200000000-6201ffffff ioport:5000(size=128) memory:82000000-8207ffff</span><br><span class="line">  *-display</span><br><span class="line">       description: VGA compatible controller</span><br><span class="line">       product: Intel Corporation</span><br><span class="line">       vendor: Intel Corporation</span><br><span class="line">       physical id: 2</span><br><span class="line">       bus info: pci@0000:00:02.0</span><br><span class="line">       logical name: /dev/fb0</span><br><span class="line">       version: 04</span><br><span class="line">       width: 64 bits</span><br><span class="line">       clock: 33MHz</span><br><span class="line">       capabilities: pciexpress msi pm vga_controller bus_master cap_list rom fb</span><br><span class="line">       configuration: depth=32 driver=i915 latency=0 resolution=2560,1600</span><br><span class="line">       resources: iomemory:620-61f iomemory:400-3ff irq:150 memory:6202000000-6202ffffff memory:4000000000-400fffffff ioport:6000(size=64) memory:c0000-dffff memory:4010000000-4016ffffff memory:4020000000-40ffffffff</span><br></pre></td></tr></table></figure>

<p>此例中，系统有两个显卡设备，Intel 集成显卡(i915) 和 NVIDIA 独立显卡，且都在使用中。</p>
<h2 id="查看显卡信息"><a href="#查看显卡信息" class="headerlink" title="查看显卡信息"></a>查看显卡信息</h2><h3 id="deviceQuery"><a href="#deviceQuery" class="headerlink" title="deviceQuery"></a>deviceQuery</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需安装好 CUDA</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /usr/local/cuda-10.2/samples/1_Utilities/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> make -j4</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行 ./deviceQuery</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">若为桌面显卡，可直接运行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">. /usr/local/cuda-11.7/extras/demo_suite/deviceQuery</span></span><br></pre></td></tr></table></figure>

<p>输出信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./deviceQuery Starting...</span><br><span class="line"></span><br><span class="line"> CUDA Device Query (Runtime API) version (CUDART static linking)</span><br><span class="line"></span><br><span class="line">Detected 1 CUDA Capable device(s)</span><br><span class="line"></span><br><span class="line">Device 0: &quot;NVIDIA Tegra X2&quot;</span><br><span class="line">  CUDA Driver Version / Runtime Version          10.2 / 10.2</span><br><span class="line">  CUDA Capability Major/Minor version number:    6.2</span><br><span class="line">  Total amount of global memory:                 3825 MBytes (4011302912 bytes)</span><br><span class="line">  ( 2) Multiprocessors, (128) CUDA Cores/MP:     256 CUDA Cores</span><br><span class="line">  GPU Max Clock rate:                            1300 MHz (1.30 GHz)</span><br><span class="line">  Memory Clock rate:                             1300 Mhz</span><br><span class="line">  Memory Bus Width:                              128-bit</span><br><span class="line">  L2 Cache Size:                                 524288 bytes</span><br><span class="line">  Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)</span><br><span class="line">  Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers</span><br><span class="line">  Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers</span><br><span class="line">  Total amount of constant memory:               65536 bytes</span><br><span class="line">  Total amount of shared memory per block:       49152 bytes</span><br><span class="line">  Total number of registers available per block: 32768</span><br><span class="line">  Warp size:                                     32</span><br><span class="line">  Maximum number of threads per multiprocessor:  2048</span><br><span class="line">  Maximum number of threads per block:           1024</span><br><span class="line">  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)</span><br><span class="line">  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)</span><br><span class="line">  Maximum memory pitch:                          2147483647 bytes</span><br><span class="line">  Texture alignment:                             512 bytes</span><br><span class="line">  Concurrent copy and kernel execution:          Yes with 1 copy engine(s)</span><br><span class="line">  Run time limit on kernels:                     No</span><br><span class="line">  Integrated GPU sharing Host Memory:            Yes</span><br><span class="line">  Support host page-locked memory mapping:       Yes</span><br><span class="line">  Alignment requirement for Surfaces:            Yes</span><br><span class="line">  Device has ECC support:                        Disabled</span><br><span class="line">  Device supports Unified Addressing (UVA):      Yes</span><br><span class="line">  Device supports Compute Preemption:            Yes</span><br><span class="line">  Supports Cooperative Kernel Launch:            Yes</span><br><span class="line">  Supports MultiDevice Co-op Kernel Launch:      Yes</span><br><span class="line">  Device PCI Domain ID / Bus ID / location ID:   0 / 0 / 0</span><br><span class="line">  Compute Mode:</span><br><span class="line">     &lt; Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) &gt;</span><br><span class="line"></span><br><span class="line">deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 10.2, CUDA Runtime Version = 10.2, NumDevs = 1</span><br><span class="line">Result = PASS</span><br></pre></td></tr></table></figure>



<h2 id="查看版本信息"><a href="#查看版本信息" class="headerlink" title="查看版本信息"></a>查看版本信息</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 CUDA 版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvcc -V</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> /usr/local/cuda/version.txt</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="prime-select"><a href="#prime-select" class="headerlink" title="prime-select"></a>prime-select</h2><p>需安装 <code>nvidia-prime</code> 包。</p>
<p>用法：<code>prime-select nvidia/intel/on-demand/query</code></p>
<ul>
<li><p>on-demand：表示需要手动选择</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> prime-select query <span class="comment"># 查看当前显卡驱动</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> prime-select intel <span class="comment"># 切换 intel 显卡</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> prime-select nvidia <span class="comment"># 切换 NVIDIA 显卡</span></span></span><br></pre></td></tr></table></figure></li>
</ul>
<p><code>prime-select</code> 切换 Intel 显卡禁用 NVIDIA 显卡时：</p>
<ul>
<li><p>在 grub 的 <code>GRUB_LINUX_DEFAULT</code>  参数添加了 ，禁用 nouveau 进行电源管理</p>
</li>
<li><p><code>/lib/modprobe.d</code> 中创建 <code>blacklist-nvidia.conf</code> 文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Do not modify</span><br><span class="line"># This file was generated by nvidia-prime</span><br><span class="line">blacklist nvidia</span><br><span class="line">blacklist nvidia-drm</span><br><span class="line">blacklist nvidia-modeset</span><br><span class="line">alias nvidia off</span><br><span class="line">alias nvidia-drm off</span><br><span class="line">alias nvidia-modeset off</span><br></pre></td></tr></table></figure>
</li>
<li><p>调用 <code>update-initramfs -u</code> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> prime-select intel</span></span><br><span class="line">Info: selecting the intel profile</span><br><span class="line">Updating the initramfs. Please wait for the operation to complete:</span><br><span class="line">Done</span><br></pre></td></tr></table></figure></li>
</ul>
<p><code>prime-select</code> 切换 NVIDIA 显卡时：</p>
<ul>
<li><p>删除 grub 的 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 参数里面的 <code>noveau.runpm=0</code> </p>
</li>
<li><p>删除在 <code>/lib/modprobe.d</code> 目录下的 <code>blacklist-nvidia.conf</code></p>
</li>
<li><p>使用 <code>update-initramfs -u</code>  更新</p>
</li>
<li><p><code>systemctl disable nvidia-prime-boot.service</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> prime-select nvidia</span></span><br><span class="line">Info: selecting the nvidia profile</span><br><span class="line">Deleting /lib/modprobe.d/nvidia-runtimepm.conf</span><br><span class="line">Updating the initramfs. Please wait for the operation to complete:</span><br><span class="line">Done</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="bumblebee"><a href="#bumblebee" class="headerlink" title="bumblebee"></a>bumblebee</h1><p>主要应用场景是 Intel + Nvidia 双显卡笔记本，默认关闭 N 卡，降低功耗，当需要更强图形渲染功能时开启 Nvidia 显卡。</p>
<p>安装 bumblebee 后，默认使用集显。当使用 optirun 或 primusrun 时，会使用独显。</p>
<p>bumblebee 安装的是 NVIDIA 闭源驱动。</p>
<p>bumblebee 安装时会默认安装 bbswitch，没有bbswitch（也没启用nouveau）的话，独显处于常开状态，不仅费电，而且起不到任何作用。bbswitch 的作用是控制 optimus 独显的电源。（注：optimus 是 NVIDIA 针对笔记本电脑的显示切换技术，可以实现独显与集显之间无缝、自动、实时的切换（使用者无需重启或手动调整），从而实现降低功耗）</p>
<p>同时，bumblebee 可以在用户层直接手动调用独显来运行程序，程序关闭后独显也自动关闭。</p>
<p>bumblebee vs Prime</p>
<p>prime 同时只能用一种显卡，要么独显要么集显；而 bumblebee 实现了两种显卡同时交互使用，互不影响。</p>
]]></content>
      <categories>
        <category>NVIDIA</category>
      </categories>
      <tags>
        <tag>NVIDIA</tag>
      </tags>
  </entry>
  <entry>
    <title>nvidia-docker</title>
    <url>/2024/09/21/NVIDIA/nvidia-docker/</url>
    <content><![CDATA[<h1 id="Docker-NVIDIA"><a href="#Docker-NVIDIA" class="headerlink" title="Docker NVIDIA"></a>Docker NVIDIA</h1><p>使⽤ NVIDIA 显卡，有 nvidia-docker、nvidia-docker2、nvidia-container-toolkits 选项</p>
<ul>
<li><strong>nvidia-docker</strong> 是 NVIDIA 第⼀代⽀持 docker 容器内使⽤ GPU 的项⽬，需配套使⽤ nvidia-docker 命令</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This project has been superseded by the NVIDIA Container Toolkit.</span><br><span class="line">The tooling provided by this repository has been deprecated and the </span><br><span class="line">repository archived.</span><br><span class="line">The nvidia-docker wrapper is no longer supported, and the NVIDIA </span><br><span class="line">Container Toolkit has been extended to allow users to configure Docker </span><br><span class="line">to use the NVIDIA Container Runtime.</span><br><span class="line">For further instructions, see the NVIDIA Container Toolkit </span><br><span class="line">documentation and specifically the install guide.</span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>nvidia-docker2</strong> 是 NVIDIA 第⼆代⽀持 docker 容器使⽤ GPU 资源的项⽬，仍需配套使⽤ nvidia-docker 命令，并需要指定参数 <code>--runtime=nvidia</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">既可以使用 nvidia docker 指令，会自动引入 --runtime=nvidia 参数;</span><br><span class="line">也可使用 docker 指令，并手动指定 --runtime=nvidia 参数</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>nvidia-container-toolkits</strong>：最新的⽅案。nvidia-docker2 已被 nvidia-container-toolkits 取代，使⽤ <code>--gpus</code> 参数，⽆需再指定 <code>--runtime</code></p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">使⽤ nvidia docker 指令，或在指令中引⼊了 --runtime=nvidia 的⽅式均已弃⽤，当前使⽤ nvidia-container-toolkits ⼯具，使⽤ --gpus 参数即可。</span><br></pre></td></tr></table></figure>



<img src="/2024/09/21/NVIDIA/nvidia-docker/nvidia-container-docker.png" class="" title="nvidia-container-stack">

<p>nvidia-container-toolkits 包含一个 container runtime library（<a href="https://github.com/NVIDIA/libnvidia-container">libnvidia-container</a>） 和用于自动配置容器以利用NVIDIA gpu 的工具。</p>
<p>参考：<a href="https://developer.nvidia.com/zh-cn/blog/gpu-containers-runtime/">https://developer.nvidia.com/zh-cn/blog/gpu-containers-runtime/</a></p>
<h2 id="安装-nvidia-container-toolkits"><a href="#安装-nvidia-container-toolkits" class="headerlink" title="安装 nvidia-container-toolkits"></a>安装 <strong>nvidia-container-toolkits</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | <span class="built_in">sudo</span> gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkitkeyring.gpg \</span></span><br><span class="line"><span class="language-bash"> &amp;&amp; curl -s -L https://nvidia.github.io/libnvidiacontainer/stable/deb/nvidia-container-toolkit.list | \</span></span><br><span class="line"><span class="language-bash"> sed <span class="string">&#x27;s#deb https://#deb [signed-by=/usr/share/keyrings/nvidiacontainer-toolkit-keyring.gpg] https://#g&#x27;</span> | \</span></span><br><span class="line"><span class="language-bash"> <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/nvidia-container-toolkit.list</span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get update</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get install -y nvidia-container-toolkit</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置. nvidia-ctk 修改 /etc/docker/daemon.json 文件</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 1. 该方式需要 root 用户运行 docker</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nvidia-ctk runtime configure --runtime=docker</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> systemctl restart docker</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 2. 该方式可使用非root运行docker</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvidia-ctk runtime configure --runtime=docker --config=<span class="variable">$HOME</span>/.config/docker/daemon.json</span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">非root用户可运行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl restart docker</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> nvidia-ctk config --<span class="built_in">set</span> nvidia-container-cli.no-cgroups --inplace</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run -it --<span class="built_in">rm</span> --gpus all --<span class="built_in">env</span>=<span class="string">&quot;DISPLAY&quot;</span> --volume=<span class="string">&quot;/etc/group:/etc/group:ro&quot;</span> --volume=<span class="string">&quot;/etc/passwd:/etc/passwd:ro&quot;</span> --volume=<span class="string">&quot;/etc/shadow:/etc/shadow:ro&quot;</span> --volume=<span class="string">&quot;/etc/sudoers.d:/etc/sudoers.d:ro&quot;</span> --net host -v ~/workspaces/mycobot_ws:/home/user/mycobot_ws mynoetic</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">必须指定 -e NVIDIA_DRIVER_CAPABILITIES=all</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需先执行 xhost +<span class="built_in">local</span>:docker</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run -ti --privileged --<span class="built_in">env</span>=<span class="string">&quot;DISPLAY&quot;</span> --<span class="built_in">env</span>=<span class="string">&quot;QT_X11_NO_MITSHM=1&quot;</span> --volume=<span class="string">&quot;/tmp/.X11-unix:/tmp/.X11-unix:rw&quot;</span> --gpus all -e NVIDIA_DRIVER_CAPABILITIES=all --net host -v ~/workspaces/mycobot_ws:/home/user/mycobot_ws mynoetic</span></span><br></pre></td></tr></table></figure>

<p>指定 <code>--gpus all</code> 参数，容器中程序如 RViz 等⽆法正常使⽤ NVIDIA GPU。解决⽅法，容器内部执⾏指令时，指定环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker 启动时使用 --<span class="built_in">env</span> 指定这两个参数时无效</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">env</span> __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia rviz2</span></span><br></pre></td></tr></table></figure>

<p>尝试以下⽅法，均⽆效。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">xhost +<span class="built_in">local</span>:docker</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> xhost + <span class="comment"># 允许所有主机访问当前 X 服务器</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run -it --<span class="built_in">rm</span> --gpus all --<span class="built_in">env</span>=<span class="string">&quot;DISPLAY&quot;</span> -e</span> </span><br><span class="line">__NV_PRIME_RENDER_OFFLOAD=1 -e __GLX_VENDOR_LIBRARY_NAME=nvidia -v </span><br><span class="line">/dev/dri:/dev/dri --env=&quot;QT_X11_NO_MITSHM=1&quot; --volume=&quot;/tmp/.X11-</span><br><span class="line">unix:/tmp/.X11-unix:rw&quot; --volume=&quot;/etc/group:/etc/group:ro&quot; --</span><br><span class="line">volume=&quot;/etc/passwd:/etc/passwd:ro&quot; --</span><br><span class="line">volume=&quot;/etc/shadow:/etc/shadow:ro&quot; --</span><br><span class="line">volume=&quot;/etc/sudoers.d:/etc/sudoers.d:ro&quot; --net host -v </span><br><span class="line">~/workspaces/mycobot_ws:/home/user/mycobot_ws mynoetic</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> xhost -</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run -it \</span></span><br><span class="line"><span class="language-bash"> -e <span class="string">&quot;DISPLAY=<span class="variable">$DISPLAY</span>&quot;</span> \</span></span><br><span class="line"><span class="language-bash"> -<span class="built_in">env</span>=<span class="string">&quot;QT_X11_NO_MITSHM=1&quot;</span> \</span></span><br><span class="line"><span class="language-bash"> -v /tmp/.X11-unix:/tmp/.X11-unix \</span></span><br><span class="line"><span class="language-bash"> --device=/dev/dri:/dev/dri \</span></span><br><span class="line"><span class="language-bash"> --net host -v ~/workspaces/mycobot_ws:/home/user/mycobot_ws mynoetic</span></span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run -it --gpus all \</span></span><br><span class="line"><span class="language-bash"> -e NVIDIA_DRIVER_CAPABILITIES=all \</span></span><br><span class="line"><span class="language-bash"> -v /tmp/.X11-unix:/tmp/.X11-unix \</span></span><br><span class="line"><span class="language-bash"> -v /dev/dri:/dev/dri \</span></span><br><span class="line"><span class="language-bash"> --device=/dev/snd \</span></span><br><span class="line"><span class="language-bash"> --device=/dev/dri/renderD128\</span></span><br><span class="line"><span class="language-bash"> -e DISPLAY=unix<span class="variable">$DISPLAY</span> \</span></span><br><span class="line"><span class="language-bash"> &lt;image name&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run -ti --privileged --<span class="built_in">env</span>=<span class="string">&quot;DISPLAY&quot;</span> --<span class="built_in">env</span>=<span class="string">&quot;QT_X11_NO_MITSHM=1&quot;</span> --volume=<span class="string">&quot;/tmp/.X11-unix:/tmp/.X11-unix:rw&quot;</span> --runtime=nvidia --gpus all -e NVIDIA_DRIVER_CAPABILITIES=all --net host -v ~/workspaces/mycobot_ws:/home/user/mycobot_ws mynoetic</span></span><br></pre></td></tr></table></figure>



<h1 id="Jetson-docker"><a href="#Jetson-docker" class="headerlink" title="Jetson docker"></a>Jetson docker</h1><p><a href="https://www.patzer0.com/archives/nvidia-jetson-xaiver-nx-install-latest-version-of-ros2-by-docker">https://www.patzer0.com/archives/nvidia-jetson-xaiver-nx-install-latest-version-of-ros2-by-docker</a></p>
<h2 id="NGC-l4t"><a href="#NGC-l4t" class="headerlink" title="NGC l4t"></a>NGC l4t</h2><p>参考：</p>
<ul>
<li><p><a href="https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-base">https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-base</a></p>
</li>
<li><p><a href="https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-pytorch">https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-pytorch</a></p>
</li>
<li><p><a href="https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-tensorrt">https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-tensorrt</a></p>
</li>
<li><p><a href="https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-ml">https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-ml</a></p>
</li>
<li><p><a href="https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-jetpack">https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-jetpack</a></p>
</li>
<li><p><a href="https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-cuda">https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-cuda</a></p>
</li>
<li><p><a href="https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-tensorflow">https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-tensorflow</a></p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> docker pull nvcr.io/nvidia/l4t-pytorch:r35.2.1-pth2.0-py3</span></span><br></pre></td></tr></table></figure>



<blockquote>
<p>注: l4t -  Linux for tegra</p>
</blockquote>
<h2 id="jetson-containers"><a href="#jetson-containers" class="headerlink" title="jetson-containers"></a>jetson-containers</h2><p>在Jetson上不推荐直接使用公共 Docker Image，NVIDIA为一些常用的镜像编译了适合Jetson的版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/dusty-nv/jetson-containers.git</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bash jetson-containers/install.sh</span></span><br></pre></td></tr></table></figure>

<p>更改 runtime 为 nvidia，这样 NVCC 编译器和 GPU 才可用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改 /etc/docker/daemon.json，添加以下内容</span></span><br><span class="line">&#123;</span><br><span class="line">    &quot;runtimes&quot;: &#123;</span><br><span class="line">        &quot;nvidia&quot;: &#123;</span><br><span class="line">            &quot;path&quot;: &quot;nvidia-container-runtime&quot;,</span><br><span class="line">            &quot;runtimeArgs&quot;: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &quot;default-runtime&quot;: &quot;nvidia&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启 docker</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span>  systemctl  daemon-reload</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span>  systemctl  restart  docker.service</span></span><br></pre></td></tr></table></figure>

<p>拉取镜像，参考：<a href="https://hub.docker.com/r/dustynv/ros/tags%E3%80%82%E6%B3%A8%E6%84%8F%EF%BC%8CL4T">https://hub.docker.com/r/dustynv/ros/tags。注意，L4T</a> 版本需高于镜像中版本(可通过 jtop 查看)</p>
<blockquote>
<p><code>注：L4T - Linux for Tegra</code></p>
</blockquote>
<p>jetson-container 默认带 <code>--rm</code> 参数，因此 exit 退出时会自动删除容器。</p>
<p>若出现 <code>/tmp/.docker.xauth</code> 不存在问题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> <span class="built_in">rm</span> -rf /tmp/.docker.xauth</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">touch</span> /tmp/.docker.xauth</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> xhost +si:localuser:root</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">XAUTH=/tmp/.docker.xauth</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">xauth nlist <span class="variable">$DISPLAY</span> | sed -e <span class="string">&#x27;s/^..../ffff/&#x27;</span> | xauth -f <span class="variable">$XAUTH</span> nmerge -</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> 777 <span class="variable">$XAUTH</span></span></span><br></pre></td></tr></table></figure>



<p>例如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参考 https://github.com/dusty-nv/jetson-containers</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jetson-containers run dustynv/pytorch:2.1-r35.4.1</span></span><br></pre></td></tr></table></figure>



<blockquote>
<p><strong>Jetson 中，需确保 docker 镜像中的 OS 版本与 Jetson 环境一致。</strong></p>
<p>例如：JetPack6.0 需使用 <code>dustynv/ros:xxx-l4t-r36.2.0</code> 镜像</p>
</blockquote>
<blockquote>
<p>在JetPack 5上，CUDA&#x2F;cuDNN&#x2F;TensorRT 等被安装在容器内(不像 JetPack 4，它们通过NVIDIA runtime 从主机设备安装到容器中)。</p>
</blockquote>
<blockquote>
<p>Jetson AGX Orin 32GB，容器镜像 <code>ros:noetic-pytorch-l4t-r34.1.1</code> ，容器内 CUDA 版本为 11.4。需将容器内 CUDA 升级到 11.8。</p>
<p>方法：手动提取容器内的cuda-compat deb，然后安装cuda-toolkit或cuda-libraries包(只有cuda和cuda-runtime依赖于cuda-compat&#x2F;nvidia-l4t-core)。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># sudo docker build --network=host --tag cuda:12.2 .</span></span><br><span class="line"><span class="comment"># sudo docker run --runtime nvidia -it --rm --network host cuda:12.2 cuda-samples/bin/aarch64/linux/release/deviceQuery</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y --no-install-recommends \</span></span><br><span class="line"><span class="language-bash">            wget \</span></span><br><span class="line"><span class="language-bash">            git \</span></span><br><span class="line"><span class="language-bash">            binutils \</span></span><br><span class="line"><span class="language-bash">            xz-utils \</span></span><br><span class="line"><span class="language-bash">            ca-certificates \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; <span class="built_in">rm</span> -rf /var/lib/apt/lists/* \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; apt-get clean</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># download the CUDA Toolkit local installer</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/arm64/cuda-ubuntu2004.pin -O /etc/apt/preferences.d/cuda-repository-pin-600 &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    wget https://developer.download.nvidia.com/compute/cuda/12.2.2/local_installers/cuda-tegra-repo-ubuntu2004-12-2-local_12.2.2-1_arm64.deb &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    dpkg -i cuda-tegra-repo-*.deb &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">rm</span> cuda-tegra-repo-*.deb </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># add the signed keys</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cp</span> /var/cuda-tegra-repo-*/cuda-tegra-*-keyring.gpg /usr/share/keyrings/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># manually extract cuda-compat</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mkdir</span> /var/cuda-compat &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cd</span> /var/cuda-compat &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    ar x ../cuda-tegra-repo-*/cuda-compat-*.deb &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    tar xvf data.tar.xz -C / &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">rm</span> -rf /var/cuda-compat</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># install cuda-toolkit (doesn&#x27;t depend on cuda-compat/nvidia-l4t-core)</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y --no-install-recommends \</span></span><br><span class="line"><span class="language-bash">            cuda-toolkit-* \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; <span class="built_in">rm</span> -rf /var/lib/apt/lists/* \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; apt-get clean</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># environment variables </span></span><br><span class="line"><span class="keyword">ENV</span> NVIDIA_VISIBLE_DEVICES=all</span><br><span class="line"><span class="keyword">ENV</span> NVIDIA_DRIVER_CAPABILITIES=all</span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> CUDA_HOME=<span class="string">&quot;/usr/local/cuda&quot;</span></span><br><span class="line"><span class="keyword">ENV</span> PATH=<span class="string">&quot;/usr/local/cuda/bin:$&#123;PATH&#125;&quot;</span></span><br><span class="line"><span class="keyword">ENV</span> LD_LIBRARY_PATH=<span class="string">&quot;/usr/local/cuda/compat:/usr/local/cuda/lib64:$&#123;LD_LIBRARY_PATH&#125;&quot;</span></span><br><span class="line">   </span><br><span class="line"><span class="comment"># build cuda samples</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> git <span class="built_in">clone</span> --branch=v12.2 https://github.com/NVIDIA/cuda-samples &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cd</span> cuda-samples/Samples/1_Utilities/deviceQuery &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    make</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /</span></span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://github.com/dusty-nv/jetson-containers/issues/258">https://github.com/dusty-nv/jetson-containers/issues/258</a></p>
</blockquote>
]]></content>
      <categories>
        <category>NVIDIA</category>
      </categories>
      <tags>
        <tag>NVIDIA</tag>
      </tags>
  </entry>
  <entry>
    <title>具身智能</title>
    <url>/2024/10/20/%E5%85%B7%E8%BA%AB%E6%99%BA%E8%83%BD/%E5%85%B7%E8%BA%AB%E6%99%BA%E8%83%BD/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="5b1fe255fda7d8e4274a1d01e011273d25e61327d8f70f0191d928452a23fc5d"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>具身智能</category>
      </categories>
      <tags>
        <tag>具身智能</tag>
      </tags>
  </entry>
  <entry>
    <title>python调用C++</title>
    <url>/2024/09/07/%E4%BB%A3%E7%A0%81%E7%BC%96%E7%A8%8B/python%E8%B0%83%E7%94%A8CPP/</url>
    <content><![CDATA[<h1 id="python-调用-C"><a href="#python-调用-C" class="headerlink" title="python 调用 C++"></a><strong>python 调用 C++</strong></h1><p>Boost.Python 用于在 C++ 和 Python 之间进行无缝集成，使得可以在 Python 中使用 C++ 编写的代码。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;boost/python.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> bp = boost::python;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="built_in">MyClass</span>(<span class="type">int</span> value) : <span class="built_in">value_</span>(value) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">setValue</span><span class="params">(<span class="type">int</span> value)</span> </span>&#123; value_ = value; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">int</span> <span class="title">getValue</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> value_; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123; std::cout &lt;&lt; <span class="string">&quot;No arguments&quot;</span> &lt;&lt; std::endl; &#125;</span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(<span class="type">int</span> value)</span> </span>&#123; std::cout &lt;&lt; <span class="string">&quot;Value: &quot;</span> &lt;&lt; value &lt;&lt; std::endl; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> value_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// BOOST_PYTHON_MODULE 宏定义 python 模块 my_module </span></span><br><span class="line"><span class="built_in">BOOST_PYTHON_MODULE</span>(my_module) &#123;</span><br><span class="line">  <span class="comment">// 使用 bp::class_ 将上面定义的 MyClass 类暴露给 python</span></span><br><span class="line">  <span class="function">bp::class_&lt;MyClass&gt; <span class="title">my_class_interface</span><span class="params">(<span class="string">&quot;MyClass&quot;</span>, </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">// bp::init 用于暴露构造函数</span></span></span></span><br><span class="line"><span class="params"><span class="function">    bp::init&lt;<span class="type">int</span>&gt;())</span></span>;</span><br><span class="line">    <span class="comment">// .def 将 C++ 类的成员函数暴露给 Python</span></span><br><span class="line">    my_class_interface.<span class="built_in">def</span>(<span class="string">&quot;setValue&quot;</span>, &amp;MyClass::setValue)</span><br><span class="line">    my_class_interface.<span class="built_in">def</span>(<span class="string">&quot;getValue&quot;</span>, &amp;MyClass::getValue)</span><br><span class="line">    <span class="comment">// 重载函数</span></span><br><span class="line">    my_class_interface.<span class="built_in">def</span>(<span class="string">&quot;show&quot;</span>, <span class="built_in">static_cast</span>&lt;<span class="built_in">void</span> (MyClass::*)()&gt;(&amp;MyClass::show))</span><br><span class="line">    my_class_interface.<span class="built_in">def</span>(<span class="string">&quot;show&quot;</span>, <span class="built_in">static_cast</span>&lt;<span class="built_in">void</span> (MyClass::*)(<span class="type">int</span>)&gt;(&amp;MyClass::show))</span><br><span class="line">    <span class="comment">// .def_readwrite 和 .def_readonly 用于将类成员变量暴露给 Python</span></span><br><span class="line">    my_class_interface.<span class="built_in">def_readonly</span>(<span class="string">&quot;value&quot;</span>, &amp;MyClass::value_);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>cmake 文件</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 最低版本要求</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.12</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 项目名称</span></span><br><span class="line"><span class="keyword">project</span>(MyPythonModule)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 C++ 标准</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD_REQUIRED <span class="keyword">ON</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找 Python 和 Boost Python</span></span><br><span class="line"><span class="keyword">find_package</span>(PythonInterp REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(PythonLibs REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(Boost REQUIRED COMPONENTS python)</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;PYTHON_INCLUDE_DIRS&#125;</span> <span class="variable">$&#123;Boost_INCLUDE_DIRS&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 源文件</span></span><br><span class="line"><span class="keyword">set</span>(SOURCES my_class.cpp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成共享库</span></span><br><span class="line"><span class="keyword">add_library</span>(my_module SHARED <span class="variable">$&#123;SOURCES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接库</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(my_module <span class="variable">$&#123;PYTHON_LIBRARIES&#125;</span> <span class="variable">$&#123;Boost_LIBRARIES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 PREFIX 为空，生成 my_class.so 库，否则默认生成 libmy_class.so 库</span></span><br><span class="line"><span class="keyword">set_target_properties</span>(my_module PROPERTIES PREFIX <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>





<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用别名</span></span><br><span class="line">moveit::core::<span class="built_in">MoveItErrorCode</span> (MoveGroupInterfaceWrapper::*pick_1)(<span class="type">const</span> std::string&amp;, <span class="type">bool</span>) =</span><br><span class="line">      &amp;MoveGroupInterfaceWrapper::pick;</span><br><span class="line">move_group_interface_class.<span class="built_in">def</span>(<span class="string">&quot;pick&quot;</span>, pick_1);</span><br></pre></td></tr></table></figure>



<p>bp::tuple 用于将 C++ 数据转换为 Python 元组的工具。例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;boost/python.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> bp = boost::python;</span><br><span class="line"></span><br><span class="line"><span class="function">bp::tuple <span class="title">createComplexTuple</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 创建一个复杂的元组，包含整数、字符串和向量</span></span><br><span class="line">    std::vector&lt;<span class="type">int</span>&gt; vec = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    bp::list pyList;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> v : vec) &#123;</span><br><span class="line">        pyList.<span class="built_in">append</span>(v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bp::<span class="built_in">make_tuple</span>(<span class="number">42</span>, <span class="string">&quot;Hello, World&quot;</span>, pyList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BOOST_PYTHON_MODULE</span>(my_module) &#123;</span><br><span class="line">    bp::<span class="built_in">def</span>(<span class="string">&quot;createComplexTuple&quot;</span>, createComplexTuple);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="C-调用-python"><a href="#C-调用-python" class="headerlink" title="C++ 调用 python"></a><strong>C++ 调用 python</strong></h1><p>假设有 python 方法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta"># example.py</span></span><br><span class="line"></span><br><span class="line"><span class="function">def <span class="title">greet</span><span class="params">(name)</span>:</span></span><br><span class="line"><span class="function">  return f<span class="string">&quot;Hello, &#123;name&#125;!&quot;</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">def add(a, b):</span></span><br><span class="line"><span class="function">  return a + b</span></span><br></pre></td></tr></table></figure>

<p>C++ 中通过 boost.python 调用以上 python 方法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;boost/python.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> bp = boost::python;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">callPythonFunctions</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 初始化Python解释器</span></span><br><span class="line">  <span class="built_in">Py_Initialize</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 导入 Python 模块</span></span><br><span class="line">    bp::object example_module = bp::<span class="built_in">import</span>(<span class="string">&quot;example&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取函数对象</span></span><br><span class="line">    bp::object greet_function = example_module.<span class="built_in">attr</span>(<span class="string">&quot;greet&quot;</span>);</span><br><span class="line">    bp::object add_function = example_module.<span class="built_in">attr</span>(<span class="string">&quot;add&quot;</span>);</span><br><span class="line">    <span class="comment">// 调用 greet 函数</span></span><br><span class="line">    bp::object result = <span class="built_in">greet_function</span>(<span class="string">&quot;World&quot;</span>);</span><br><span class="line">    std::string greet_result = bp::<span class="built_in">extract</span>&lt;std::string&gt;(result);</span><br><span class="line">    std::cout &lt;&lt; greet_result &lt;&lt; std::endl;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调用 add 函数</span></span><br><span class="line">    bp::object sum_result = <span class="built_in">add_function</span>(<span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="type">int</span> sum = bp::<span class="built_in">extract</span>&lt;<span class="type">int</span>&gt;(sum_result);</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Sum: &quot;</span> &lt;&lt; sum &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">  &#125; <span class="built_in">catch</span> (bp::error_already_set <span class="type">const</span> &amp;) &#123;</span><br><span class="line">    <span class="built_in">PyErr_Print</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 关闭Python解释器</span></span><br><span class="line">  <span class="built_in">Py_Finalize</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">callPythonFunctions</span>();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>对应的 CMakeLists.txt</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.12</span>)</span><br><span class="line"><span class="keyword">project</span>(CppCallPython)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD_REQUIRED <span class="keyword">ON</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">find_package</span>(PythonInterp REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(PythonLibs REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(Boost REQUIRED COMPONENTS python)</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;PYTHON_INCLUDE_DIRS&#125;</span> <span class="variable">$&#123;Boost_INCLUDE_DIRS&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(SOURCES main.cpp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(CppCallPython <span class="variable">$&#123;SOURCES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_libraries</span>(CppCallPython <span class="variable">$&#123;PYTHON_LIBRARIES&#125;</span> <span class="variable">$&#123;Boost_LIBRARIES&#125;</span>)</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>代码编程</category>
      </categories>
      <tags>
        <tag>代码编程</tag>
      </tags>
  </entry>
  <entry>
    <title>三维旋转</title>
    <url>/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/</url>
    <content><![CDATA[<p>工具及网站：</p>
<ul>
<li><a href="https://danceswithcode.net/engineeringnotes/rotations_in_3d/demo3D/rotations_in_3d_tool.html">Euler Angler Visualization Tool</a></li>
<li><a href="https://www.andre-gaschler.com/rotationconverter/">3D Rotation Converter</a></li>
<li><a href="http://www.sygreer.com/projects/matrix/">2x2 Matrix Visualization</a></li>
<li><a href="https://www.khanacademy.org/math/linear-algebra/matrix-transformations/linear-transformations/a/visualizing-linear-transformations">matrix-transformations</a></li>
<li><a href="https://www.meccanismocomplesso.org/en/3d-rotations-and-euler-angles-in-python/">3d-rotations-and-euler-angles-in-python</a></li>
</ul>
<p>三维旋转的表示方法：</p>
<ul>
<li>欧拉角 Euler Angle：本文参考旋转顺序为 ZXY</li>
<li>四元数 Quaternion</li>
<li>旋转矩阵 Rotation Matrix</li>
<li>轴角 Axis-Angle</li>
</ul>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC.png" class="" title="三维旋转">



<p>**内旋(Intrinsic rotation)**：其每个 elemental 绕的是 object space basis 的轴</p>
<p>**外旋(Extrinsic rotation)**：其每个 elemental rotation 绕的是world space basis 的轴</p>
<p>欧拉角旋转序列(Euler Angle Rotational Sequence)共有 12 种顺序：</p>
<ul>
<li><p>6 种绕三个轴的旋转，即 Tait-Bryan Angle：</p>
</li>
<li><ul>
<li>XYZ、XZY、YXZ、YZX、ZXY、ZYX</li>
</ul>
</li>
<li><p>6 种只绕两个轴的旋转，即 Proper Euler Angle：</p>
</li>
<li><ul>
<li>XYX、YXY、XZX、ZXZ、YZY、ZYZ</li>
</ul>
</li>
</ul>
<p>如果相邻两次旋转是绕同一轴，如 XXY，则可以坍缩为 XY。也就是说，一共有 12 种基础旋转的组合顺序，它们可以旋转出三维的所有旋转状态。</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E6%AC%A7%E6%8B%89%E8%A7%92%E6%97%8B%E8%BD%AC%E5%BA%8F%E5%88%97.png" class="" title="欧拉角旋转序列">



<h1 id="欧拉角与四元数"><a href="#欧拉角与四元数" class="headerlink" title="欧拉角与四元数"></a>欧拉角与四元数</h1><p>使用四元数是因为没有万向节死锁问题。</p>
<p>万向节锁是指物体的两个旋转轴指向同一个方向。实际上,当两个旋转轴平行时，即万向节锁现象发生了，换句话说，绕一个轴旋转可能会覆盖住另一个轴的旋转，从而失去一维自由度。</p>
<p>通常说来，万向节锁发生在使用 <strong>Eular Angles</strong>（欧拉角）的旋转操作中,原因是 Eular Angles 按照一定的顺序依次独立地绕轴旋转。想象一个具体的旋转场景，首先物体先绕转 X 轴旋转，然后再绕 Y 轴，最后绕 Z 轴旋转，从而完成一个旋转操作（实际是想绕某一个轴旋转,然而 Eular Angle 将这个旋转分成三个独立的步骤进行）,当你绕 Y 轴旋转 90 度之后万向节锁的问题就出现了，因为 X 轴已经被求值了，它不再随同其他两个轴旋转，这样 X 轴与 Z 轴就指向同一个方向（它们相当于同一个轴了）。</p>
<p>定义：</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E6%AC%A7%E6%8B%89%E8%A7%92.png" class="" title="欧拉角">

<p><strong>分别为绕 Z 轴、Y 轴、X 轴的旋转角度(即:Yaw、Pitch、Roll)</strong></p>
<h2 id="欧拉角转四元数"><a href="#欧拉角转四元数" class="headerlink" title="欧拉角转四元数"></a>欧拉角转四元数</h2><p>欧拉角构造四元数，跟欧拉角构造旋转矩阵一样，就是把三个基础旋转Elemental Rotation 组合在一起。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">q = ((x，y，z)，w)</span><br></pre></td></tr></table></figure>

<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E5%9B%9B%E5%85%83%E6%95%B0.png" class="" title="四元数">

<p>即：</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922141359897.png" class="" title="image-20240922141359897">



<h2 id="四元数转欧拉角"><a href="#四元数转欧拉角" class="headerlink" title="四元数转欧拉角"></a>四元数转欧拉角</h2><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E5%9B%9B%E5%85%83%E6%95%B0%E8%BD%AC%E6%AC%A7%E6%8B%89%E8%A7%92.png" class="" title="四元数转欧拉角">

<p>四元数转 Eular Angle 最直接的方法是用四元数的元素运算和反三角函数凑出公式来。但这样计算展开后的每一项都是六次多项式，计算复杂。因此可借助 <strong>四元数 -&gt; 旋转矩阵 -&gt; 欧拉角</strong> 方式进行转换。</p>
<h1 id="欧拉角与旋转矩阵"><a href="#欧拉角与旋转矩阵" class="headerlink" title="欧拉角与旋转矩阵"></a>欧拉角与旋转矩阵</h1><h2 id="旋转矩阵"><a href="#旋转矩阵" class="headerlink" title="旋转矩阵"></a><strong>旋转矩阵</strong></h2><h3 id="绕x轴旋转"><a href="#绕x轴旋转" class="headerlink" title="绕x轴旋转"></a>绕x轴旋转</h3><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5-%E7%BB%95X%E6%97%8B%E8%BD%AC.png" class="" title="旋转矩阵-绕X旋转.png">

<h3 id="绕Y轴旋转"><a href="#绕Y轴旋转" class="headerlink" title="绕Y轴旋转"></a>绕Y轴旋转</h3><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5-%E7%BB%95Y%E6%97%8B%E8%BD%AC.png" class="" title="旋转矩阵-绕Y旋转">



<h3 id="绕Z轴旋转"><a href="#绕Z轴旋转" class="headerlink" title="绕Z轴旋转"></a>绕Z轴旋转</h3><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5-%E7%BB%95Z%E6%97%8B%E8%BD%AC.png" class="" title="旋转矩阵-绕Z旋转">

<h2 id="欧拉角"><a href="#欧拉角" class="headerlink" title="欧拉角"></a>欧拉角</h2><p>静态：即绕世界坐标系三个轴的旋转，由于物体旋转过程中坐标轴保持静止，所以称为静态。 </p>
<p>动态：即绕物体坐标系三个轴的旋转，由于物体旋转过程中坐标轴随着物体做相同的转动，所以称为动态。</p>
<p> （<strong>动态欧拉角会出现万向锁现象；静态欧拉角不存在万向锁的问题</strong>）</p>
<h2 id="欧拉角转旋转矩阵"><a href="#欧拉角转旋转矩阵" class="headerlink" title="欧拉角转旋转矩阵"></a><strong>欧拉角转旋转矩阵</strong></h2><p>欧拉角构造旋转矩阵就直接把三个 Elemental Rotation Matrix 相乘即可：</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E6%AC%A7%E6%8B%89%E8%A7%92%E8%BD%AC%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5.png" class="" title="欧拉角转旋转矩阵">

<p>其中：</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E6%AC%A7%E6%8B%89%E8%A7%92%E8%BD%AC%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5-1.png" class="" title="欧拉角转旋转矩阵-1">



<h2 id="旋转矩阵转欧拉角"><a href="#旋转矩阵转欧拉角" class="headerlink" title="旋转矩阵转欧拉角"></a>旋转矩阵转欧拉角</h2><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5%E8%BD%AC%E6%AC%A7%E6%8B%89%E8%A7%92.png" class="" title="旋转矩阵转欧拉角">

<p>即：</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5%E8%BD%AC%E6%AC%A7%E6%8B%89%E8%A7%92-1.png" class="" title="旋转矩阵转欧拉角-1">

<h1 id="四元数与旋转矩阵"><a href="#四元数与旋转矩阵" class="headerlink" title="四元数与旋转矩阵"></a>四元数与旋转矩阵</h1><h2 id="四元数转旋转矩阵"><a href="#四元数转旋转矩阵" class="headerlink" title="四元数转旋转矩阵"></a><strong>四元数转旋转矩阵</strong></h2><p>方法一：</p>
<p>假设四元数为</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922142132369.png" class="" title="image-20240922142132369">

<p>其中 </p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922142139494.png" class="" title="image-20240922142139494">

<p>根据 <a href="http://mathworld.wolfram.com/RodriguesRotationFormula.html">RodriguesRotation</a> 公式，可知旋转矩阵(Column major)为：</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922142147439.png" class="" title="image-20240922142147439">



<p>方法二：</p>
<p>先将四元数转换为轴角 θ 与向量 (x,y,z)，再计算旋转矩阵：</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922142159106.png" class="" title="image-20240922142159106">

<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922142201522.png" class="" title="image-20240922142201522">



<h2 id="旋转矩阵转四元数"><a href="#旋转矩阵转四元数" class="headerlink" title="旋转矩阵转四元数"></a><strong>旋转矩阵转四元数</strong></h2><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922142222288.png" class="" title="image-20240922142222288">

<p>如果 q0 趋近于 0，tr(R) 趋近于 -1,则求解四元数的过程为：</p>
<p>(**tr(M)**：表示矩阵 M 的迹 - trace，也就是矩阵对角元素的和)</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922142232591.png" class="" title="image-20240922142232591">

<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922142236057.png" class="" title="image-20240922142236057">



<h1 id="轴角"><a href="#轴角" class="headerlink" title="轴角"></a>轴角</h1><p>轴-角(Axis-Angle)：绕某条单位轴旋转一定角度。也称：旋转向量。由一个旋转轴和旋转角组成。</p>
<h2 id="轴角到四元数"><a href="#轴角到四元数" class="headerlink" title="轴角到四元数"></a><strong>轴角到四元数</strong></h2><p>给定一个单位长度的旋转轴 (x, y, z) 和一个角度 θ。对应的四元数为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">q(x,y,z,w) = ( (x,y,z)\*(sinθ/2), cos(θ/2) )</span><br></pre></td></tr></table></figure>

<p><a href="https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles">https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles</a></p>
<h2 id="轴角转旋转矩阵"><a href="#轴角转旋转矩阵" class="headerlink" title="轴角转旋转矩阵"></a><strong>轴角转旋转矩阵</strong></h2><p>Axis Angle 转 Rotation Matrix 可以从罗德里格斯旋转公式 <a href="https://link.zhihu.com/?target=https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula">Rodrigues Rotation Formula</a> 开始推导。</p>
<img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922142323002.png" class="" title="image-20240922142323002">

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment"># Scientific computing library </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 轴角转旋转矩阵  </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">axis_angle_rot_matrix</span>(<span class="params">k,q</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Creates a 3x3 rotation matrix in 3D space from an axis and an angle.</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    Input</span></span><br><span class="line"><span class="string">    :param k: A 3 element array containing the unit axis to rotate around (kx,ky,kz) </span></span><br><span class="line"><span class="string">    :param q: The angle (in radians) to rotate by</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    Output</span></span><br><span class="line"><span class="string">    :return: A 3x3 element matix containing the rotation matrix</span></span><br><span class="line"><span class="string">     </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">     </span><br><span class="line">    <span class="comment">#15 pts </span></span><br><span class="line">    c_theta = np.cos(q)</span><br><span class="line">    s_theta = np.sin(q)</span><br><span class="line">    v_theta = <span class="number">1</span> - np.cos(q)</span><br><span class="line">    kx = k[<span class="number">0</span>]</span><br><span class="line">    ky = k[<span class="number">1</span>]</span><br><span class="line">    kz = k[<span class="number">2</span>]   </span><br><span class="line">     </span><br><span class="line">    <span class="comment"># First row of the rotation matrix</span></span><br><span class="line">    r00 = kx * kx * v_theta + c_theta</span><br><span class="line">    r01 = kx * ky * v_theta - kz * s_theta</span><br><span class="line">    r02 = kx * kz * v_theta + ky * s_theta</span><br><span class="line">     </span><br><span class="line">    <span class="comment"># Second row of the rotation matrix</span></span><br><span class="line">    r10 = kx * ky * v_theta + kz * s_theta</span><br><span class="line">    r11 = ky * ky * v_theta + c_theta</span><br><span class="line">    r12 = ky * kz * v_theta - kx * s_theta</span><br><span class="line">     </span><br><span class="line">    <span class="comment"># Third row of the rotation matrix</span></span><br><span class="line">    r20 = kx * kz * v_theta - ky * s_theta</span><br><span class="line">    r21 = ky * kz * v_theta + kx * s_theta</span><br><span class="line">    r22 = kz * kz * v_theta + c_theta</span><br><span class="line">     </span><br><span class="line">    <span class="comment"># 3x3 rotation matrix</span></span><br><span class="line">    rot_matrix = np.array([[r00, r01, r02],</span><br><span class="line">                           [r10, r11, r12],</span><br><span class="line">                           [r20, r21, r22]])</span><br><span class="line">                            </span><br><span class="line">    <span class="keyword">return</span> rot_matrix</span><br></pre></td></tr></table></figure>



<h2 id="旋转矩阵转轴角"><a href="#旋转矩阵转轴角" class="headerlink" title="旋转矩阵转轴角"></a>旋转矩阵转轴角</h2><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922142344829.png" class="" title="image-20240922142344829">



<h1 id="Eigen-示例"><a href="#Eigen-示例" class="headerlink" title="Eigen 示例"></a><strong>Eigen 示例</strong></h1><p>此例依赖 eigen 库（<code>sudo apt-get install libeigen3-dev</code>）</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> yaw = PI/<span class="number">3</span>;</span><br><span class="line"><span class="type">double</span> pitch = PI/<span class="number">4</span>;</span><br><span class="line"><span class="type">double</span> roll = PI/<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 欧拉角转旋转矩阵</span></span><br><span class="line">::<span class="function">Eigen::Vector3d <span class="title">ea0</span><span class="params">(yaw, pitch, roll)</span></span>;</span><br><span class="line">::Eigen::Matrix3d R;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Eigen::AngleAxisd - 旋转向量(3x1)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">R = ::Eigen::<span class="built_in">AngleAxisd</span>(ea0[<span class="number">0</span>], ::Eigen::Vector3d::<span class="built_in">UintZ</span>())</span><br><span class="line">   * ::Eigen::<span class="built_in">AngleAxisd</span>(ea0[<span class="number">1</span>], ::Eigen::Vector3d::<span class="built_in">UintY</span>())</span><br><span class="line">   * ::Eigen::<span class="built_in">AngleAxisd</span>(ea0[<span class="number">2</span>], ::Eigen::Vector3d::<span class="built_in">UintX</span>());</span><br><span class="line">cout &lt;&lt; R &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 旋转矩阵转四元数</span></span><br><span class="line">::Eigen::Quaterniond q;</span><br><span class="line">q = R;</span><br><span class="line">cout &lt;&lt; q.<span class="built_in">x</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; q.<span class="built_in">y</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; q.<span class="built_in">z</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; q.<span class="built_in">w</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 四元数转旋转矩阵</span></span><br><span class="line">::Eigen::Matrix3d Rx = q.<span class="built_in">toRotationMatrix</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 旋转矩阵转欧拉角</span></span><br><span class="line">::Eigen::Vector3d ea1 = Rx.<span class="built_in">eulerAngles</span>(<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">cout &lt;&lt; ea1 / PI * <span class="number">180</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure>



<h1 id="欧拉角与四元数转换示例"><a href="#欧拉角与四元数转换示例" class="headerlink" title="欧拉角与四元数转换示例"></a>欧拉角与四元数转换示例</h1><h2 id="欧拉角转四元数-1"><a href="#欧拉角转四元数-1" class="headerlink" title="欧拉角转四元数"></a>欧拉角转四元数</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">geometry_msgs::Quaternion </span><br><span class="line">tf::createQuaternionMsgFromRollPitchYaw</span><br></pre></td></tr></table></figure>



<h3 id="例-1：使用-tf"><a href="#例-1：使用-tf" class="headerlink" title="例 1：使用 tf"></a>例 1：使用 tf</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tf/tf.h&gt;</span></span></span><br><span class="line">tf::Quaternion q;</span><br><span class="line">q.<span class="built_in">setRPY</span>(roll, pitch, yaw);</span><br><span class="line"><span class="meta">#create ros msg</span></span><br><span class="line"><span class="function">tf::Quaternion <span class="title">createQuaternionFromRPY</span><span class="params">(<span class="type">double</span> roll,<span class="type">double</span> pitch,<span class="type">double</span> yaw)</span></span></span><br></pre></td></tr></table></figure>



<h3 id="例-2：python"><a href="#例-2：python" class="headerlink" title="例 2：python"></a>例 2：python</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">rpy2quaternion</span>(<span class="params">roll, pitch, yaw</span>):</span><br><span class="line">    x=sin(pitch/<span class="number">2</span>)sin(yaw/<span class="number">2</span>)cos(roll/<span class="number">2</span>)+cos(pitch/<span class="number">2</span>)cos(yaw/<span class="number">2</span>)sin(roll/<span class="number">2</span>)</span><br><span class="line">    y=sin(pitch/<span class="number">2</span>)cos(yaw/<span class="number">2</span>)cos(roll/<span class="number">2</span>)+cos(pitch/<span class="number">2</span>)sin(yaw/<span class="number">2</span>)sin(roll/<span class="number">2</span>)</span><br><span class="line">    z=cos(pitch/<span class="number">2</span>)sin(yaw/<span class="number">2</span>)cos(roll/<span class="number">2</span>)-sin(pitch/<span class="number">2</span>)cos(yaw/<span class="number">2</span>)sin(roll/<span class="number">2</span>)</span><br><span class="line">    w=cos(pitch/<span class="number">2</span>)cos(yaw/<span class="number">2</span>)cos(roll/<span class="number">2</span>)-sin(pitch/<span class="number">2</span>)sin(yaw/<span class="number">2</span>)sin(roll/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> x, y, z, w</span><br></pre></td></tr></table></figure>



<h2 id="四元数转欧拉角-1"><a href="#四元数转欧拉角-1" class="headerlink" title="四元数转欧拉角"></a>四元数转欧拉角</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">double th = tf::getYaw(transform.getRotation())</span><br></pre></td></tr></table></figure>



<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">tf::<span class="built_in">Matrix3x3</span>(transform.<span class="built_in">getRotation</span>()).<span class="built_in">getRPY</span>(roll, pitch, yaw);</span><br></pre></td></tr></table></figure>



<h3 id="例-1：使用-tf-1"><a href="#例-1：使用-tf-1" class="headerlink" title="例 1：使用 tf"></a>例 1：使用 tf</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> roll, pitch, yaw;</span><br><span class="line">tf::Quaternion orientation;</span><br><span class="line"></span><br><span class="line"><span class="comment">// geometry_msgs/Quaternion 转 tf::Quaternion</span></span><br><span class="line">tf::<span class="built_in">quaternionMsgToTF</span>(imuIn-&gt;orientation, orientation);</span><br><span class="line"><span class="comment">// tf::Quaternion 转欧拉角</span></span><br><span class="line">tf::<span class="built_in">Matrix3x3</span>(orientation).<span class="built_in">getRPY</span>(roll, pitch, yaw);</span><br></pre></td></tr></table></figure>



<h3 id="例-2：使用-tf2"><a href="#例-2：使用-tf2" class="headerlink" title="例 2：使用 tf2"></a>例 2：使用 tf2</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tf2_geometry_msgs/tf2_geometry_msgs.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">tf2::Quaternion quat_tf;</span><br><span class="line">geometry_msgs::Quaternion quat_msg = ...;</span><br><span class="line"></span><br><span class="line">tf2::<span class="built_in">convert</span>(quat_msg , quat_tf);</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line">tf2::<span class="built_in">fromMsg</span>(quat_msg, quat_tf);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> roll, pitch, yaw;</span><br><span class="line">tf2::<span class="built_in">Matrix3x3</span>(quat).<span class="built_in">getRPY</span>(roll, pitch, yaw); <span class="comment">// 四元数转欧拉角</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// or for the other conversion direction</span></span><br><span class="line">quat_msg = tf2::<span class="built_in">toMsg</span>(quat_tf); <span class="comment">// ros 消息格式转换</span></span><br></pre></td></tr></table></figure>



<h3 id="例-3：python-tf"><a href="#例-3：python-tf" class="headerlink" title="例 3：python tf"></a>例 3：python tf</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 四元数转欧拉角</span></span><br><span class="line"><span class="keyword">from</span> tf.transformations <span class="keyword">import</span> quaternion_multiply, quaternion_from_euler，</span><br><span class="line">                                euler_from_quaternion</span><br><span class="line"></span><br><span class="line">pos = Pose()</span><br><span class="line">q = quaternion_from_euler(<span class="number">0</span>, <span class="number">0</span>, point.z) <span class="comment"># 欧拉角转四元数</span></span><br><span class="line">pos.orientation.x = q[<span class="number">0</span>]</span><br><span class="line">pos.orientation.y = q[<span class="number">1</span>]</span><br><span class="line">pos.orientation.z = q[<span class="number">2</span>]</span><br><span class="line">pos.orientation.w = q[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 四元数转欧拉角</span></span><br><span class="line">(r, p, y) = tf.transformations.euler_from_quaternion([</span><br><span class="line">        msg.orientation.x, msg.orientation.y, </span><br><span class="line">        msg.orientation.z, msg.orientation.w])</span><br><span class="line"><span class="variable language_">self</span>.fill_euler_msg(msg, r, p, y)</span><br></pre></td></tr></table></figure>



<h3 id="例-4：python-math"><a href="#例-4：python-math" class="headerlink" title="例 4：python math"></a>例 4：python math</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="comment"># 四元数转欧拉角  </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">euler_from_quaternion</span>(<span class="params">x, y, z, w</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Convert a quaternion into euler angles (roll, pitch, yaw)</span></span><br><span class="line"><span class="string">    roll is rotation around x in radians (counterclockwise)</span></span><br><span class="line"><span class="string">    pitch is rotation around y in radians (counterclockwise)</span></span><br><span class="line"><span class="string">    yaw is rotation around z in radians (counterclockwise)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    t0 = +<span class="number">2.0</span> * (w * x + y * z)</span><br><span class="line">    t1 = +<span class="number">1.0</span> - <span class="number">2.0</span> * (x * x + y * y)</span><br><span class="line">    roll_x = math.atan2(t0, t1)</span><br><span class="line"> </span><br><span class="line">    t2 = +<span class="number">2.0</span> * (w * y - z * x)</span><br><span class="line">    t2 = +<span class="number">1.0</span> <span class="keyword">if</span> t2 &gt; +<span class="number">1.0</span> <span class="keyword">else</span> t2</span><br><span class="line">    t2 = -<span class="number">1.0</span> <span class="keyword">if</span> t2 &lt; -<span class="number">1.0</span> <span class="keyword">else</span> t2</span><br><span class="line">    pitch_y = math.asin(t2)</span><br><span class="line"> </span><br><span class="line">    t3 = +<span class="number">2.0</span> * (w * z + x * y)</span><br><span class="line">    t4 = +<span class="number">1.0</span> - <span class="number">2.0</span> * (y * y + z * z)</span><br><span class="line">    yaw_z = math.atan2(t3, t4)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> roll_x, pitch_y, yaw_z <span class="comment"># in radians</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 简化版本</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">quart_to_rpy</span>(<span class="params">x, y, z, w</span>):</span><br><span class="line">    roll = math.atan2(<span class="number">2</span> * (w * x + y * z), <span class="number">1</span> - <span class="number">2</span> * (x * x + y * y))</span><br><span class="line">    pitch = math.asin(<span class="number">2</span> * (w * y - x * z))</span><br><span class="line">    yaw = math.atan2(<span class="number">2</span> * (w * z + x * y), <span class="number">1</span> - <span class="number">2</span> * (z * z + y * y))</span><br><span class="line">    <span class="keyword">return</span> roll, pitch, yaw</span><br><span class="line">            </span><br><span class="line"><span class="built_in">print</span>(euler_from_quaternion(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.7072</span>, <span class="number">0.7072</span>))   </span><br></pre></td></tr></table></figure>

<p>输出结果为：0.0, 0.0, 1.5710599</p>
<p>以 Axis-Angle 方式表示为：</p>
<blockquote>
<p><strong>{[x, y, z], angle} &#x3D; { [ 0, 0, 1 ], 1.571 }</strong></p>
</blockquote>
<h1 id="欧拉角与旋转矩阵转换示例"><a href="#欧拉角与旋转矩阵转换示例" class="headerlink" title="欧拉角与旋转矩阵转换示例"></a>欧拉角与旋转矩阵转换示例</h1><h2 id="欧拉角转旋转矩阵-1"><a href="#欧拉角转旋转矩阵-1" class="headerlink" title="欧拉角转旋转矩阵"></a><strong>欧拉角转旋转矩阵</strong></h2><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922143418150.png" class="" title="image-20240922143418150">



<h3 id="例-1：C-Eigen"><a href="#例-1：C-Eigen" class="headerlink" title="例 1：C++ Eigen"></a><strong>例 1：C++ Eigen</strong></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 输入角度顺序：ZYX - yaw、pitch、roll</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">static</span> Eigen::Matrix&lt;<span class="keyword">typename</span> Derived::Scalar, 3, 3&gt; <span class="title">ypr2R</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">                    <span class="type">const</span> Eigen::MatrixBase&lt;Derived&gt; &amp;ypr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">typedef</span> <span class="keyword">typename</span> Derived::Scalar Scalar_t;</span><br><span class="line"></span><br><span class="line">    Scalar_t y = <span class="built_in">ypr</span>(<span class="number">0</span>) / <span class="number">180.0</span> * M_PI;</span><br><span class="line">    Scalar_t p = <span class="built_in">ypr</span>(<span class="number">1</span>) / <span class="number">180.0</span> * M_PI;</span><br><span class="line">    Scalar_t r = <span class="built_in">ypr</span>(<span class="number">2</span>) / <span class="number">180.0</span> * M_PI;</span><br><span class="line"></span><br><span class="line">    Eigen::Matrix&lt;Scalar_t, <span class="number">3</span>, <span class="number">3</span>&gt; Rz;</span><br><span class="line">    Rz &lt;&lt; <span class="built_in">cos</span>(y), -<span class="built_in">sin</span>(y), <span class="number">0</span>,</span><br><span class="line">        <span class="built_in">sin</span>(y), <span class="built_in">cos</span>(y), <span class="number">0</span>,</span><br><span class="line">        <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    Eigen::Matrix&lt;Scalar_t, <span class="number">3</span>, <span class="number">3</span>&gt; Ry;</span><br><span class="line">    Ry &lt;&lt; <span class="built_in">cos</span>(p), <span class="number">0.</span>, <span class="built_in">sin</span>(p),</span><br><span class="line">        <span class="number">0.</span>, <span class="number">1.</span>, <span class="number">0.</span>,</span><br><span class="line">        -<span class="built_in">sin</span>(p), <span class="number">0.</span>, <span class="built_in">cos</span>(p);</span><br><span class="line"></span><br><span class="line">    Eigen::Matrix&lt;Scalar_t, <span class="number">3</span>, <span class="number">3</span>&gt; Rx;</span><br><span class="line">    Rx &lt;&lt; <span class="number">1.</span>, <span class="number">0.</span>, <span class="number">0.</span>,</span><br><span class="line">        <span class="number">0.</span>, <span class="built_in">cos</span>(r), -<span class="built_in">sin</span>(r),</span><br><span class="line">        <span class="number">0.</span>, <span class="built_in">sin</span>(r), <span class="built_in">cos</span>(r);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Rz * Ry * Rx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="例-2：python-1"><a href="#例-2：python-1" class="headerlink" title="例 2：python"></a><strong>例 2：python</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">eulerAnglesToRotationMatrix</span>(<span class="params">theta</span>) :</span><br><span class="line">    </span><br><span class="line">    R_x = np.array([[<span class="number">1</span>,         <span class="number">0</span>,                  <span class="number">0</span>                   ],</span><br><span class="line">                    [<span class="number">0</span>,         math.cos(theta[<span class="number">0</span>]), -math.sin(theta[<span class="number">0</span>]) ],</span><br><span class="line">                    [<span class="number">0</span>,         math.sin(theta[<span class="number">0</span>]), math.cos(theta[<span class="number">0</span>])  ]</span><br><span class="line">                    ])</span><br><span class="line">                  </span><br><span class="line">    R_y = np.array([[math.cos(theta[<span class="number">1</span>]),    <span class="number">0</span>,      math.sin(theta[<span class="number">1</span>])  ],</span><br><span class="line">                    [<span class="number">0</span>,                     <span class="number">1</span>,      <span class="number">0</span>                   ],</span><br><span class="line">                    [-math.sin(theta[<span class="number">1</span>]),   <span class="number">0</span>,      math.cos(theta[<span class="number">1</span>])  ]</span><br><span class="line">                    ])</span><br><span class="line">                </span><br><span class="line">    R_z = np.array([[math.cos(theta[<span class="number">2</span>]),    -math.sin(theta[<span class="number">2</span>]),    <span class="number">0</span>],</span><br><span class="line">                    [math.sin(theta[<span class="number">2</span>]),    math.cos(theta[<span class="number">2</span>]),     <span class="number">0</span>],</span><br><span class="line">                    [<span class="number">0</span>,                     <span class="number">0</span>,                      <span class="number">1</span>]</span><br><span class="line">                    ])</span><br><span class="line">                    </span><br><span class="line">    <span class="comment"># np.dot()：向量点积和矩阵乘法  </span></span><br><span class="line">    <span class="comment"># 向量点积：(x1, y1) 与 (x2, y2) 点积为 x1*x2 + y1*y2</span></span><br><span class="line">    <span class="comment"># 矩阵乘法： M1(mxn) 与 M2(nxm) 乘法结果为 mxm 矩阵             </span></span><br><span class="line">    R = np.dot(R_z, np.dot( R_y, R_x ))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R</span><br></pre></td></tr></table></figure>



<h2 id="旋转矩阵转欧拉角-1"><a href="#旋转矩阵转欧拉角-1" class="headerlink" title="旋转矩阵转欧拉角"></a><strong>旋转矩阵转欧拉角</strong></h2><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922143513081.png" class="" title="image-20240922143513081">




<h3 id="例-1：C-eigen"><a href="#例-1：C-eigen" class="headerlink" title="例 1：C++ eigen"></a><strong>例 1：C++ eigen</strong></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> Eigen::Vector3d <span class="title">R2ypr</span><span class="params">(<span class="type">const</span> Eigen::Matrix3d &amp;R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Eigen::Vector3d n = R.<span class="built_in">col</span>(<span class="number">0</span>);</span><br><span class="line">    Eigen::Vector3d o = R.<span class="built_in">col</span>(<span class="number">1</span>);</span><br><span class="line">    Eigen::Vector3d a = R.<span class="built_in">col</span>(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function">Eigen::Vector3d <span class="title">ypr</span><span class="params">(<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="type">double</span> y = <span class="built_in">atan2</span>(<span class="built_in">n</span>(<span class="number">1</span>), <span class="built_in">n</span>(<span class="number">0</span>));</span><br><span class="line">    <span class="type">double</span> p = <span class="built_in">atan2</span>(-<span class="built_in">n</span>(<span class="number">2</span>), <span class="built_in">n</span>(<span class="number">0</span>) * <span class="built_in">cos</span>(y) + <span class="built_in">n</span>(<span class="number">1</span>) * <span class="built_in">sin</span>(y));</span><br><span class="line">    <span class="type">double</span> r = <span class="built_in">atan2</span>(<span class="built_in">a</span>(<span class="number">0</span>) * <span class="built_in">sin</span>(y) - <span class="built_in">a</span>(<span class="number">1</span>) * <span class="built_in">cos</span>(y), -<span class="built_in">o</span>(<span class="number">0</span>) * <span class="built_in">sin</span>(y) + <span class="built_in">o</span>(<span class="number">1</span>) * <span class="built_in">cos</span>(y));</span><br><span class="line">    <span class="built_in">ypr</span>(<span class="number">0</span>) = y;</span><br><span class="line">    <span class="built_in">ypr</span>(<span class="number">1</span>) = p;</span><br><span class="line">    <span class="built_in">ypr</span>(<span class="number">2</span>) = r;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ypr / M_PI * <span class="number">180.0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="例-2：python-2"><a href="#例-2：python-2" class="headerlink" title="例 2：python"></a><strong>例 2：python</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isRotationMatrix</span>(<span class="params">R</span>):</span><br><span class="line">    <span class="comment"># square matrix test</span></span><br><span class="line">    <span class="keyword">if</span> R.ndim != <span class="number">2</span> <span class="keyword">or</span> R.shape[<span class="number">0</span>] != R.shape[<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    should_be_identity = np.allclose(R.dot(R.T), np.identity(R.shape[<span class="number">0</span>], np.<span class="built_in">float</span>))</span><br><span class="line">    should_be_one = np.allclose(np.linalg.det(R), <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> should_be_identity <span class="keyword">and</span> should_be_one</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rotationMatrixToEulerAngles</span>(<span class="params">R</span>) :</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span>(isRotationMatrix(R))</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#sy = math.sqrt(R[0,0] * R[0,0] +  R[1,0] * R[1,0]) # 错误</span></span><br><span class="line">    sy = math.sqrt(R[<span class="number">2</span>,<span class="number">1</span>] * R[<span class="number">2</span>,<span class="number">1</span>] + R[<span class="number">2</span>,<span class="number">2</span>] * R[<span class="number">2</span>,<span class="number">2</span>])</span><br><span class="line">    </span><br><span class="line">    singular = sy &lt; <span class="number">1e-6</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>  <span class="keyword">not</span> singular :</span><br><span class="line">        x = math.atan2(R[<span class="number">2</span>,<span class="number">1</span>] , R[<span class="number">2</span>,<span class="number">2</span>])</span><br><span class="line">        y = math.atan2(-R[<span class="number">2</span>,<span class="number">0</span>], sy)</span><br><span class="line">        z = math.atan2(R[<span class="number">1</span>,<span class="number">0</span>], R[<span class="number">0</span>,<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        x = math.atan2(-R[<span class="number">1</span>,<span class="number">2</span>], R[<span class="number">1</span>,<span class="number">1</span>])</span><br><span class="line">        y = math.atan2(-R[<span class="number">2</span>,<span class="number">0</span>], sy)</span><br><span class="line">        z = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> np.array([x, y, z])</span><br></pre></td></tr></table></figure>



<h1 id="旋转矩阵与四元数示例"><a href="#旋转矩阵与四元数示例" class="headerlink" title="旋转矩阵与四元数示例"></a><strong>旋转矩阵与四元数示例</strong></h1><h2 id="旋转矩阵转四元数-1"><a href="#旋转矩阵转四元数-1" class="headerlink" title="旋转矩阵转四元数"></a><strong>旋转矩阵转四元数</strong></h2><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922143603479.png" class="" title="image-20240922143603479">

<h3 id="例-1：C-Eigen-1"><a href="#例-1：C-Eigen-1" class="headerlink" title="例 1：C++ Eigen"></a><strong>例 1：C++ Eigen</strong></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Eigen::Quaterniond <span class="title">rotationMatrix2Quaterniond</span><span class="params">(Eigen::Matrix3d R)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    Eigen::Quaterniond q = Eigen::<span class="built_in">Quaterniond</span>(R);  </span><br><span class="line">    q.<span class="built_in">normalize</span>();  </span><br><span class="line">    cout &lt;&lt; “RotationMatrix2Quaterniond result is:” &lt;&lt;endl;  </span><br><span class="line">    cout &lt;&lt; ”x = ” &lt;&lt; q.<span class="built_in">x</span>() &lt;&lt;endl;  </span><br><span class="line">    cout &lt;&lt; ”y = ” &lt;&lt; q.<span class="built_in">y</span>() &lt;&lt;endl;  </span><br><span class="line">    cout &lt;&lt; ”z = ” &lt;&lt; q.<span class="built_in">z</span>() &lt;&lt;endl;  </span><br><span class="line">    cout &lt;&lt; ”w = ” &lt;&lt; q.<span class="built_in">w</span>() &lt;&lt;endl&lt;&lt;endl;  </span><br><span class="line">    <span class="keyword">return</span> q;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>



<h3 id="例-2：python-3"><a href="#例-2：python-3" class="headerlink" title="例 2：python"></a>例 2：python</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">function q = vgg_quat_from_rotation_matrix( R )</span><br><span class="line">% vgg_quat_from_rotation_matrix Generates quaternion <span class="keyword">from</span> rotation matrix </span><br><span class="line">%            q = vgg_quat_from_rotation_matrix(R)</span><br><span class="line"></span><br><span class="line">q = [   (<span class="number">1</span> + R(<span class="number">1</span>,<span class="number">1</span>) + R(<span class="number">2</span>,<span class="number">2</span>) + R(<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line">    (<span class="number">1</span> + R(<span class="number">1</span>,<span class="number">1</span>) - R(<span class="number">2</span>,<span class="number">2</span>) - R(<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line">    (<span class="number">1</span> - R(<span class="number">1</span>,<span class="number">1</span>) + R(<span class="number">2</span>,<span class="number">2</span>) - R(<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line">    (<span class="number">1</span> - R(<span class="number">1</span>,<span class="number">1</span>) - R(<span class="number">2</span>,<span class="number">2</span>) + R(<span class="number">3</span>,<span class="number">3</span>)) ];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ~issym(q)</span><br><span class="line">  % Pivot to avoid division by small numbers</span><br><span class="line">  [b I] = <span class="built_in">max</span>(<span class="built_in">abs</span>(q));</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  % For symbolic quats, just make sure we<span class="string">&#x27;re nonzero</span></span><br><span class="line"><span class="string">  for k=1:4</span></span><br><span class="line"><span class="string">    if q(k) ~= 0</span></span><br><span class="line"><span class="string">      I = k;</span></span><br><span class="line"><span class="string">      break</span></span><br><span class="line"><span class="string">    end</span></span><br><span class="line"><span class="string">  end</span></span><br><span class="line"><span class="string">end</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">q(I) = sqrt(q(I)) / 2 ;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if I == 1 </span></span><br><span class="line"><span class="string">    q(2) = (R(3,2) - R(2,3)) / (4*q(I));</span></span><br><span class="line"><span class="string">    q(3) = (R(1,3) - R(3,1)) / (4*q(I));</span></span><br><span class="line"><span class="string">    q(4) = (R(2,1) - R(1,2)) / (4*q(I));</span></span><br><span class="line"><span class="string">elseif I==2</span></span><br><span class="line"><span class="string">    q(1) = (R(3,2) - R(2,3)) / (4*q(I));</span></span><br><span class="line"><span class="string">    q(3) = (R(2,1) + R(1,2)) / (4*q(I));</span></span><br><span class="line"><span class="string">    q(4) = (R(1,3) + R(3,1)) / (4*q(I));</span></span><br><span class="line"><span class="string">elseif I==3</span></span><br><span class="line"><span class="string">    q(1) = (R(1,3) - R(3,1)) / (4*q(I));</span></span><br><span class="line"><span class="string">    q(2) = (R(2,1) + R(1,2)) / (4*q(I));</span></span><br><span class="line"><span class="string">    q(4) = (R(3,2) + R(2,3)) / (4*q(I));</span></span><br><span class="line"><span class="string">elseif I==4</span></span><br><span class="line"><span class="string">    q(1) = (R(2,1) - R(1,2)) / (4*q(I));</span></span><br><span class="line"><span class="string">    q(2) = (R(1,3) + R(3,1)) / (4*q(I));</span></span><br><span class="line"><span class="string">    q(3) = (R(3,2) + R(2,3)) / (4*q(I));</span></span><br><span class="line"><span class="string">end</span></span><br></pre></td></tr></table></figure>



<h2 id="四元数转旋转矩阵-1"><a href="#四元数转旋转矩阵-1" class="headerlink" title="四元数转旋转矩阵"></a><strong>四元数转旋转矩阵</strong></h2><img src="/2024/09/22/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%B8%89%E7%BB%B4%E6%97%8B%E8%BD%AC/image-20240922143652557.png" class="" title="image-20240922143652557">

<h3 id="例-1：C-Eigen-2"><a href="#例-1：C-Eigen-2" class="headerlink" title="例 1：C++ Eigen"></a><strong>例 1：C++ Eigen</strong></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Eigen::Matrix3d <span class="title">Quaternion2RotationMatrix</span><span class="params">(<span class="type">const</span> <span class="type">double</span> x,<span class="type">const</span> <span class="type">double</span> y,<span class="type">const</span> <span class="type">double</span> z,<span class="type">const</span> <span class="type">double</span> w)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    Eigen::Quaterniond q;  </span><br><span class="line">    q.<span class="built_in">x</span>() = x;  </span><br><span class="line">    q.<span class="built_in">y</span>() = y;  </span><br><span class="line">    q.<span class="built_in">z</span>() = z;  </span><br><span class="line">    q.<span class="built_in">w</span>() = w;  </span><br><span class="line">  </span><br><span class="line">    Eigen::Matrix3d R = q.<span class="built_in">normalized</span>().<span class="built_in">toRotationMatrix</span>();  </span><br><span class="line">    cout &lt;&lt; “Quaternion2RotationMatrix result is:” &lt;&lt;endl;  </span><br><span class="line">    cout &lt;&lt; ”R = ” &lt;&lt; endl &lt;&lt; R &lt;&lt; endl&lt;&lt; endl;  </span><br><span class="line">    <span class="keyword">return</span> R;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>



<h3 id="例-2：python-4"><a href="#例-2：python-4" class="headerlink" title="例 2：python"></a><strong>例 2：python</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">quaternion_to_rotation_matrix</span>(<span class="params">q</span>):  <span class="comment"># x, y ,z ,w</span></span><br><span class="line">    rot_matrix = np.array(</span><br><span class="line">        [[<span class="number">1.0</span> - <span class="number">2</span> * (q[<span class="number">1</span>] * q[<span class="number">1</span>] + q[<span class="number">2</span>] * q[<span class="number">2</span>]), <span class="number">2</span> * (q[<span class="number">0</span>] * q[<span class="number">1</span>] - q[<span class="number">3</span>] * q[<span class="number">2</span>]), <span class="number">2</span> * (q[<span class="number">3</span>] * q[<span class="number">1</span>] + q[<span class="number">0</span>] * q[<span class="number">2</span>])],</span><br><span class="line">         [<span class="number">2</span> * (q[<span class="number">0</span>] * q[<span class="number">1</span>] + q[<span class="number">3</span>] * q[<span class="number">2</span>]), <span class="number">1.0</span> - <span class="number">2</span> * (q[<span class="number">0</span>] * q[<span class="number">0</span>] + q[<span class="number">2</span>] * q[<span class="number">2</span>]), <span class="number">2</span> * (q[<span class="number">1</span>] * q[<span class="number">2</span>] - q[<span class="number">3</span>] * q[<span class="number">0</span>])],</span><br><span class="line">         [<span class="number">2</span> * (q[<span class="number">0</span>] * q[<span class="number">2</span>] - q[<span class="number">3</span>] * q[<span class="number">1</span>]), <span class="number">2</span> * (q[<span class="number">1</span>] * q[<span class="number">2</span>] + q[<span class="number">3</span>] * q[<span class="number">0</span>]), <span class="number">1.0</span> - <span class="number">2</span> * (q[<span class="number">0</span>] * q[<span class="number">0</span>] + q[<span class="number">1</span>] * q[<span class="number">1</span>])]],</span><br><span class="line">        dtype=q.dtype)</span><br><span class="line">    <span class="keyword">return</span> rot_matrix</span><br></pre></td></tr></table></figure>



<h3 id="例-3：tf"><a href="#例-3：tf" class="headerlink" title="例 3：tf"></a>例 3：tf</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tf</span></span><br><span class="line"><span class="keyword">from</span> tf.listener <span class="keyword">import</span> xyzw_to_mat44</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">oritation</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.x = <span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.y = <span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.z = <span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.w = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">ori = oritation()</span><br><span class="line">ori.x = rot[<span class="number">0</span>]</span><br><span class="line">ori.y = rot[<span class="number">1</span>]</span><br><span class="line">ori.z = rot[<span class="number">2</span>]</span><br><span class="line">ori.w = rot[<span class="number">3</span>]</span><br><span class="line">mat44 = xyzw_to_mat44(ori) <span class="comment"># 转换的结果为4 × 4 矩阵</span></span><br></pre></td></tr></table></figure>



<h3 id="例-4：scipy"><a href="#例-4：scipy" class="headerlink" title="例 4：scipy"></a>例 4：scipy</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.spatial.transform <span class="keyword">import</span> Rotation <span class="keyword">as</span> R</span><br><span class="line"></span><br><span class="line"><span class="comment"># (x, y, z, w) format</span></span><br><span class="line">r = R.from_quat([-<span class="number">0.716556549511624</span>,-<span class="number">0.6971278819736084</span>, -<span class="number">0.010016582945017661</span>,  <span class="number">0.02142651612120239</span>])</span><br><span class="line">r.as_matrix()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;rotation:\n&#x27;</span>,r.as_matrix())</span><br><span class="line">rotation_matrix = r.as_matrix()</span><br><span class="line"><span class="built_in">print</span>(rotation_matrix)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数学基础</category>
      </categories>
      <tags>
        <tag>数学基础</tag>
      </tags>
  </entry>
  <entry>
    <title>行为树与状态机</title>
    <url>/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/</url>
    <content><![CDATA[<p>参考：</p>
<ul>
<li><a href="https://robohub.org/introduction-to-behavior-trees/">introduction-to-behavior-trees</a></li>
<li>The Behavior Trees in Robotics and AI</li>
<li><a href="https://gitee.com/ncnynl/turtlebot3_behavior_demos.git">turtlebot3_behavior_demos</a></li>
<li><a href="https://dev.epicgames.com/documentation/en-us/unreal-engine/behavior-tree-in-unreal-engine---quick-start-guide?application_version=5.4">Behavior Tree in Unreal Engine - Quick Start Guide | Unreal Engine 5.4 Documentation | Epic Developer Community (epicgames.com)</a></li>
<li><a href="https://roboticseabass.com/2020/12/30/2020-review-service-robotics-mit-csail/">https://roboticseabass.com/2020/12/30/2020-review-service-robotics-mit-csail/</a></li>
</ul>
<p>BT vs FSM</p>
<ul>
<li>理论上，可以将任何东西表述为行为树、有限状态机、其它抽象之一。但不同模型在进行大规模设计时有气优劣</li>
<li>行为树与状态机，在模块化(modularity)和反应性(reactivity)之间存在一种权衡。通常，行为树更容易组合和修改，而有限状态机在设计反应性行为方面更有优势</li>
</ul>
<p>假设有一个移动抓取任务，机器人需要移动到物体旁，抓取物体，然后返回起始位置，其行为树和有限状态机设计分别如下</p>
<img src="/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/image-20240907203758231.png" class="" title="image-20240907203758231">

<p>若要修改这种行为。例如，先检查抓取前的位置是否有效，必要时先纠正位姿。针对行为树，可以插入一个子树，而 FSM 则需要重新连接多个转换</p>
<img src="/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/image-20240907203830026.png" class="" title="image-20240907203830026">

<p>此外，针对响应性问题。若机器人电池电量低，必须先返回充电再继续任务。此时使用 FSM 更容易，虽然会导致状态转换看似混乱。而为了使行为树在这类场景更具响应性，增加了 Reactive Sequence 概念，即使返回 SUCCEEDED，仍可对序列中的前面的子节点进行处理</p>
<img src="/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/image-20240907203852775.png" class="" title="image-20240907203852775">



<p>（注意：此例中，只会在开始时检查电量，并非 reactive 的。可参考 reactive sequence 进行调整）</p>
<img src="/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/image-20240907203915759.png" class="" title="image-20240907203915759">

<p>FSM 可通过允许在任意两个状态之间定义转换来实现这种 reactive。</p>
<img src="/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/image-20240907203936469.png" class="" title="image-20240907203936469">

<p>分层有限状态机(HFSM)可以让结构更加清晰。上例中定义了一个 Nominal 超级状态，从而定义了正常操作与充电之间的工作模式。</p>
<p>由于这种模块化和反应性的权衡，FSM 在管理更高层级的操作模式(如正常操作与充电)方面表现优秀；而行为树则擅长构建复杂的行为序列，非常擅长处理故障恢复。因此，可考虑混合模式：</p>
<img src="/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/image-20240907203957318.png" class="" title="image-20240907203957318">
]]></content>
      <categories>
        <category>行为树</category>
      </categories>
      <tags>
        <tag>行为树</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
  <entry>
    <title>Jetpack</title>
    <url>/2024/09/20/NVIDIA/Jetson/Jetpack/</url>
    <content><![CDATA[<p>NVIDIA JetPack SDK 是构建 AI 应用程序的最全面解决方案。JetPack SDK 提供了一个完整的开发环境。JetPack SDK 包括 Jetson Linux 驱动程序包（包含 Bootloader）、Linux内核、Ubuntu桌面环境，以及一套完整的加速GPU计算、多媒体、图形和计算机视觉的库。还包括用于主机和开发工具包的示例，文档和开发人员工具，并支持更高级别的sdk，如用于流媒体视频分析的 DeepStream，用于机器人的 Isaac 和用于会话 AI 的 Riva。</p>
<img src="/2024/09/20/NVIDIA/Jetson/Jetpack/jetpack-metapackage.png" class="" title="jetpack-metapackage.png">

<p>（来源：<a href="https://docs.nvidia.com/jetson/jetpack/install-setup/index.html#list-of-debian-packages%EF%BC%89">https://docs.nvidia.com/jetson/jetpack/install-setup/index.html#list-of-debian-packages）</a></p>
<p>安装 JetPack SDK 时，默认情况下会安装 Jetson Linux BSP 和 CUDA Toolkit</p>
<img src="/2024/09/20/NVIDIA/Jetson/Jetpack/cuda-packaging-jetson.png" class="" title="Block diagram shows the compatibility of software modules between the Jetson Linux BSP and the CUDA Toolkit.">

<p>CUDA Driver ：CUDA 驱动</p>
<p>CUDA Toolkit 独立于 BSP，不包含 CUDA 驱动程序</p>
<p>桌面级 CUDA 包</p>
<img src="/2024/09/20/NVIDIA/Jetson/Jetpack/cuda-packaging-desktop.png" class="" title="Block diagram shows the interdependency of software modules between a standard Linux OS distribution, the NVIDIA UDA package, and the CUDA Toolkit as managed with the CUDA Installer.">



<h1 id="Jetson-的可升级包"><a href="#Jetson-的可升级包" class="headerlink" title="Jetson 的可升级包"></a>Jetson 的可升级包</h1><p>参考：<a href="https://developer.nvidia.com/blog/simplifying-cuda-upgrades-for-nvidia-jetson-users/">https://developer.nvidia.com/blog/simplifying-cuda-upgrades-for-nvidia-jetson-users/</a></p>
<p>Jetson 两种系统：</p>
<ul>
<li>NVIDIA 打包好的 Jetpack</li>
<li>基于 NVIDIA 提供的 BSP，第三方厂商自行构建的系统</li>
</ul>
<p>这两类系统中，都自带固定版本的 CUDA 开发包、运行时库、驱动程序。</p>
<p>NVIDIA 从 CUDA 11.8 版本开始，才为 Jetson 提供 CUDA 升级包功能。</p>
<p>以前不提供，是因为基本系统里已经包含经过检验的稳定的 CUDA 驱动和系统，若用户随意调整，将对整个 Jetpack 系统及 BSP 二次开发的稳定性造成影响，厂商需要重新测试，重新校验稳定性。</p>
<p>但同时又存在需与频繁更新的 CUDA 开发包新功能同步的需求。因此，NVIDIA 从 Jetpack 5.0 和 CUDA 11.8 开始，对基本系统进行调整：从 CUDA 11.8 开始，引入升级路径，为 Jetson 提供了升级 CUDA 驱动和 CUDA Toolkit 的选项。</p>
<img src="/2024/09/20/NVIDIA/Jetson/Jetpack/cuda-upgrade-path-jetson.png" class="" title="Flow diagram of the steps needed to upgrade CUDA software from previous releases.">

<p>蓝色方框描述了 NVIDIA JetPack 5.0 SDK 中默认存在的组件。虚线将 Jetson Linux BSP 与 NVIDIA JetPack SDK 的其他组件分开。绿色框表示可以通过此功能升级到的 CUDA 组件。</p>
<p>通过引入 CUDA 驱动程序（包括 <code>libcuda.so</code> 及其依赖项）升级，无需在像以前一样只能使用 Jetson Linux BSP 中打包的默认 CUDA 驱动提供的功能。</p>
<img src="/2024/09/20/NVIDIA/Jetson/Jetpack/new-cuda-upgrade-path.png" class="" title="Figure shows which Jetson software modules are affected and how the new flexible upgrade path works to install the latest CUDA software release.">

<p>升级操作参考：<a href="https://developer.nvidia.com/zh-cn/blog/simplifying-cuda-upgrades-for-nvidia-jetson-users/">https://developer.nvidia.com/zh-cn/blog/simplifying-cuda-upgrades-for-nvidia-jetson-users/</a></p>
<p>引入了中间兼容层 （cuCompart)。以前追求稳定的内置驱动，是直接和 NVMAP&#x2F;NVHOST&#x2F;EGL&#x2F;NVGPU 等更底层的组件直接交互的，所以不能轻易动，现在从 JP 5.0 起，驱动变成和 cuCompat 交互了，而 cuCompat 再和底层的 NVMAP&#x2F;NVHOST&#x2F;EGL&#x2F;NVGPU 交互，这样就多了一个中间层次了。可以简单理解成，多了一个抽象层，从原本的驱动中抽离，这个抽象层本身可以得到测试，可以稳定。而新版本的驱动变成了它上面的一个更高一层的软件了。</p>
<h1 id="JetPack-SDK-安装配置"><a href="#JetPack-SDK-安装配置" class="headerlink" title="JetPack SDK 安装配置"></a>JetPack SDK 安装配置</h1><p>支持多种方式安装 JetPack。参考：<a href="https://docs.nvidia.com/jetson/jetpack/install-setup/index.html">install-setup</a></p>
<h2 id="SD卡镜像"><a href="#SD卡镜像" class="headerlink" title="SD卡镜像"></a>SD卡镜像</h2><h2 id="NVIDIA-SDK-Manager"><a href="#NVIDIA-SDK-Manager" class="headerlink" title="NVIDIA SDK Manager"></a>NVIDIA SDK Manager</h2><p>支持以下平台：</p>
<ul>
<li>NVIDIA Jetson AGX Orin Developer Kit</li>
<li>NVIDIA Jetson Orin Nano Developer Kit</li>
<li>NVIDIA Jetson AGX Orin 32GB module on a Jetson AGX Orin Developer Kit carrier board</li>
<li>NVIDIA Jetson AGX Xavier series modules on a Jetson AGX Xavier Developer Kit carrier board</li>
<li>NVIDIA Jetson Xavier NX modules on a Jetson Xavier NX Developer Kit carrier board</li>
</ul>
<p>参考：<a href="https://docs.nvidia.com/sdk-manager/index.html">https://docs.nvidia.com/sdk-manager/index.html</a></p>
<h2 id="Package-Management-Tool"><a href="#Package-Management-Tool" class="headerlink" title="Package Management Tool"></a>Package Management Tool</h2>]]></content>
      <categories>
        <category>NVIDIA</category>
        <category>Jetson</category>
      </categories>
      <tags>
        <tag>NVIDIA</tag>
      </tags>
  </entry>
  <entry>
    <title>Jetson-pytorch</title>
    <url>/2024/09/21/NVIDIA/Jetson/Jetson-pytorch/</url>
    <content><![CDATA[<p>Jetson orin nano 8GB</p>
<img src="/2024/09/21/NVIDIA/Jetson/Jetson-pytorch/image-20240921153500642.png" class="" title="image-20240921153500642">



<p>L4T-r34.1.1</p>
<ul>
<li>JetPack5.0.1</li>
</ul>
<p>L4T-r35.2.1</p>
<ul>
<li>JetPack5.1<ul>
<li>ubuntu20.04</li>
<li>kernel 5.10 LTS</li>
<li><a href="https://docs.nvidia.com/cuda/archive/11.4.4/cuda-toolkit-release-notes/index.html">CUDA 11.4.19</a>（driver 470.82.01）</li>
<li>cuDNN 8.6.0</li>
<li>TensorRT 8.5.2</li>
</ul>
</li>
</ul>
<p>L4T-r35.3.1</p>
<ul>
<li>JetPack5.1.1</li>
</ul>
<p>L4T-r35.4.1</p>
<ul>
<li>JetPack5.1.2</li>
</ul>
<p>L4T-r36.3.0</p>
<ul>
<li>JetPack6.0<ul>
<li>ubuntu2204</li>
<li>kernel 5.15LTS</li>
<li>python3.8</li>
<li><a href="https://docs.nvidia.com/cuda/archive/12.2.1/cuda-toolkit-release-notes/index.html#">CUDA 12.2</a>（driver 535.86.10）</li>
<li>cuDNN 8.9.4</li>
<li>TensorRT 8.6.2</li>
</ul>
</li>
</ul>
<p>内部 docker 容器 （基于 dustynv&#x2F;ros：noetic-desktop-l4t-r35.4.1）</p>
<h1 id="安装-pytorch"><a href="#安装-pytorch" class="headerlink" title="安装 pytorch"></a>安装 pytorch</h1><p>参考：<a href="https://docs.nvidia.com/deeplearning/frameworks/install-pytorch-jetson-platform/index.html">https://docs.nvidia.com/deeplearning/frameworks/install-pytorch-jetson-platform/index.html</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget https://developer.download.nvidia.cn/compute/redist/jp/v512/pytorch/torch-2.1.0a0+41361538.nv23.06-cp38-cp38-linux_aarch64.whl -O torch-2.1.0a0+41361538.nv23.06-cp38-cp38-linux_aarch64.whl</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip3 install <span class="string">&#x27;Cython&lt;3&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">此处其他库依赖 numpy 1.23.5 版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip3 install numpy==1.23.5 torch-2.1.0a0+41361538.nv23.06-cp38-cp38-linux_aarch64.whl</span></span><br></pre></td></tr></table></figure>



<p>注：JetPack6 提供了 2.3.0 版本 pytorch 即相应版本的 torchvision</p>
<img src="/2024/09/21/NVIDIA/Jetson/Jetson-pytorch/image-20240921162713885.png" class="" title="image-20240921162713885">



<h1 id="安装-torchvision"><a href="#安装-torchvision" class="headerlink" title="安装 torchvision"></a>安装 torchvision</h1><p>参考<a href="https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048">https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get install libjpeg-dev zlib1g-dev libpython3-dev libopenblas-dev libavcodec-dev libavformat-dev libswscale-dev</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> --branch &lt;version&gt; https://github.com/pytorch/vision torchvision   <span class="comment"># see below for version of torchvision to download</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> torchvision</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> BUILD_VERSION=0.x.0  <span class="comment"># where 0.x.0 is the torchvision version</span></span>  </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python3 setup.py install --user</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ../  <span class="comment"># attempting to load torchvision from build dir will result in import error</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip install <span class="string">&#x27;pillow&lt;7&#x27;</span> <span class="comment"># always needed for Python 2.7, not needed torchvision v0.5.0+ with Python 3.6</span></span></span><br></pre></td></tr></table></figure>

<p>版本对应关系</p>
<p>● PyTorch v1.0 - torchvision v0.2.2</p>
<p>● PyTorch v1.1 - torchvision v0.3.0</p>
<p>● PyTorch v1.2 - torchvision v0.4.0</p>
<p>● PyTorch v1.3 - torchvision v0.4.2</p>
<p>● PyTorch v1.4 - torchvision v0.5.0</p>
<p>● PyTorch v1.5 - torchvision v0.6.0</p>
<p>● PyTorch v1.6 - torchvision v0.7.0</p>
<p>● PyTorch v1.7 - torchvision v0.8.1</p>
<p>● PyTorch v1.8 - torchvision v0.9.0</p>
<p>● PyTorch v1.9 - torchvision v0.10.0</p>
<p>● PyTorch v1.10 - torchvision v0.11.1</p>
<p>● PyTorch v1.11 - torchvision v0.12.0</p>
<p>● PyTorch v1.12 - torchvision v0.13.0</p>
<p>● PyTorch v1.13 - torchvision v0.13.0</p>
<p>● PyTorch v1.14 - torchvision v0.14.1</p>
<p>● PyTorch v2.0 - torchvision v0.15.1</p>
<p>● PyTorch v2.1 - torchvision v0.16.1</p>
<p>● PyTorch v2.2 - torchvision v0.17.1</p>
<p>● PyTorch v2.3 - torchvision v0.18.0</p>
<h1 id="验证-pytorch"><a href="#验证-pytorch" class="headerlink" title="验证 pytorch"></a>验证 pytorch</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python3</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; import torch</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(torch.__version__)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Pytorch 接口输出的 cuda 的版本并不一定是 Pytorch 在实际系统上运行时使用的 cuda 版本，而是编译该 Pytorch release 版本时使用的 cuda 版本</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(torch.version.cuda)</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(torch.cuda.is_available())</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(torch.cuda.device_count()) <span class="comment"># GPU 数量</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(torch.cuda.get_device_name(0))</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="built_in">print</span>(torch.cuda.current_device())</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或 python3 -c <span class="string">&quot;import torch; print(torch.cuda.is_available())&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip list | grep torch</span></span><br><span class="line">knn_pytorch               0.1</span><br><span class="line">torch                     2.1.0a0+41361538.nv23.6</span><br><span class="line">torchvision               0.16.1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvcc -V</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pip show torch</span></span><br><span class="line">Name: torch</span><br><span class="line">Version: 2.1.0a0+41361538.nv23.6</span><br><span class="line">Summary: Tensors and Dynamic neural networks in Python with strong GPU acceleration</span><br><span class="line">Home-page: https://pytorch.org/</span><br><span class="line">Author: PyTorch Team</span><br><span class="line">Author-email: packages@pytorch.org</span><br><span class="line">License: BSD-3</span><br><span class="line">Location: /usr/local/miniconda/envs/test/lib/python3.8/site-packages</span><br><span class="line">Requires: filelock, fsspec, jinja2, networkx, sympy, typing-extensions</span><br><span class="line">Required-by: torchvision</span><br></pre></td></tr></table></figure>





<h1 id="安装问题"><a href="#安装问题" class="headerlink" title="安装问题"></a>安装问题</h1><h2 id="未编译"><a href="#未编译" class="headerlink" title="未编译"></a><strong>未编译</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python3 setup.py install --user</span></span><br><span class="line">setup.py:10: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, get_distribution, parse_version</span><br><span class="line">No CUDA runtime is found, using CUDA_HOME=&#x27;/usr/local/cuda&#x27;</span><br><span class="line">Building wheel torchvision-0.16.1</span><br><span class="line">Compiling extensions with following flags:</span><br></pre></td></tr></table></figure>

<p>降低 setuptools 版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前 setuptools 版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip list | grep setuptools</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">若版本 &gt; 60, 则降低版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip install setuptools==58</span></span><br></pre></td></tr></table></figure>



<h2 id="ffmpeg-版本"><a href="#ffmpeg-版本" class="headerlink" title="ffmpeg 版本"></a>ffmpeg 版本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error: ‘AV_CODEC_CAP_INTRA_ONLY’ was not declared in this scope; did you mean ‘AV_CODEC_PROP_INTRA_ONLY’?</span><br></pre></td></tr></table></figure>

<p>解决方法：降低 ffmpeg 版本。例如：<code>conda install ffmpeg==4.2</code></p>
<h2 id="未找到-CUDA-Runtime"><a href="#未找到-CUDA-Runtime" class="headerlink" title="未找到 CUDA Runtime"></a>未找到 CUDA Runtime</h2><p><code>libcudart.so</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 setup.py install --user</span><br><span class="line">setup.py:10: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, get_distribution, parse_version</span><br><span class="line">No CUDA runtime is found, using CUDA_HOME=&#x27;/usr/local/cuda&#x27;</span><br><span class="line">Building wheel torchvision-0.16.1</span><br><span class="line">Compiling extensions with following flags:</span><br><span class="line">  FORCE_CUDA: False</span><br><span class="line">  FORCE_MPS: False</span><br><span class="line">  DEBUG: False</span><br><span class="line">  TORCHVISION_USE_PNG: True</span><br><span class="line">  TORCHVISION_USE_JPEG: True</span><br><span class="line">  TORCHVISION_USE_NVJPEG: True</span><br><span class="line">  TORCHVISION_USE_FFMPEG: True</span><br><span class="line">  TORCHVISION_USE_VIDEO_CODEC: True</span><br><span class="line">  NVCC_FLAGS: </span><br><span class="line">Compiling with debug mode OFF</span><br><span class="line">Building torchvision without PNG image support</span><br><span class="line">Running build on conda-build: False</span><br><span class="line">Running build on conda: True</span><br><span class="line">Building torchvision with JPEG image support</span><br><span class="line">  libjpeg include path: /usr/local/miniconda/envs/test/include</span><br><span class="line">  libjpeg lib path: /usr/local/miniconda/envs/test/lib</span><br><span class="line">Building torchvision without NVJPEG image support</span><br><span class="line">Building torchvision without ffmpeg support</span><br><span class="line">Building torchvision without video codec support</span><br><span class="line">running install</span><br><span class="line">/usr/local/miniconda/envs/test/lib/python3.8/site-packages/setuptools/_distutils/cmd.py:66: SetuptoolsDeprecationWarning: setup.py install is deprecated.</span><br><span class="line">!!</span><br></pre></td></tr></table></figure>



<p><code>export FORCE_CUDA=&quot;1&quot;</code></p>
<h2 id="IndexError-list-index-out-of-range"><a href="#IndexError-list-index-out-of-range" class="headerlink" title="IndexError: list index out of range"></a>IndexError: list index out of range</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cuda_flags = common_cflags + COMMON_NVCC_FLAGS + _get_cuda_arch_flags()</span><br><span class="line">  File &quot;/user/x/libs/anaconda3/envs/test1/lib/python3.7/site-packages/torch/utils/cpp_extension.py&quot;, line 1561, in _get_cuda_arch_flags</span><br><span class="line">    arch_list[-1] += &#x27;+PTX&#x27;</span><br><span class="line"></span><br><span class="line">IndexError: list index out of range</span><br></pre></td></tr></table></figure>

<p>解决方法</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">CUDA_VERSION=$(/usr/local/cuda/bin/nvcc --version | sed -n &#x27;s/^.*release \([0-9]\+\.[0-9]\+\).*$/\1/p&#x27;)</span><br><span class="line">if [[ $&#123;CUDA_VERSION&#125; == 9.0* ]]; then</span><br><span class="line">    export TORCH_CUDA_ARCH_LIST=&quot;3.5;5.0;6.0;7.0+PTX&quot;</span><br><span class="line">elif [[ $&#123;CUDA_VERSION&#125; == 9.2* ]]; then</span><br><span class="line">    export TORCH_CUDA_ARCH_LIST=&quot;3.5;5.0;6.0;6.1;7.0+PTX&quot;</span><br><span class="line">elif [[ $&#123;CUDA_VERSION&#125; == 10.* ]]; then</span><br><span class="line">    export TORCH_CUDA_ARCH_LIST=&quot;3.5;5.0;6.0;6.1;7.0;7.5+PTX&quot;</span><br><span class="line">elif [[ $&#123;CUDA_VERSION&#125; == 11.0* ]]; then</span><br><span class="line">    export TORCH_CUDA_ARCH_LIST=&quot;3.5;5.0;6.0;6.1;7.0;7.5;8.0+PTX&quot;</span><br><span class="line">elif [[ $&#123;CUDA_VERSION&#125; == 11.* ]]; then</span><br><span class="line">    export TORCH_CUDA_ARCH_LIST=&quot;3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6+PTX&quot;</span><br><span class="line">elif [[ $&#123;CUDA_VERSION&#125; == 12.* ]]; then</span><br><span class="line">    export TORCH_CUDA_ARCH_LIST=&quot;5.0;5.2;5.3;6.0;6.1;6.2;7.0;7.2;7.5;8.0;8.6;8.7;8.9;9.0+PTX&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;unsupported cuda version.&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<p>即：设置 <code>TORCH_CUDA_ARCH_LIST=&quot;YOUR_GPUs_CC + PTX&quot;</code> 或在 Dockerfile 中设置 <code>ARG TORCH_CUDA_ARCH_LIST=&quot;YOUR_GPUs_CC + PTX&quot;</code></p>
<blockquote>
<p>以下方式可获取 <code>TORCH_CUDA_ARCH_LIST</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">torch.cuda.get_device_capability(<span class="number">0</span>)</span><br><span class="line">torch.cuda.get_arch_list()</span><br></pre></td></tr></table></figure>


</blockquote>
<p>docker 需访 cuda 库，因此需注意  <code>/etc/docker/daemon.json</code> 中设置 <code>default-runtime</code>，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 修改完成后需重启 docker：sudo systemctl restart docker</span><br><span class="line">&#123;</span><br><span class="line">    &quot;runtimes&quot;: &#123;</span><br><span class="line">        &quot;nvidia&quot;: &#123;</span><br><span class="line">            &quot;path&quot;: &quot;nvidia-container-runtime&quot;,</span><br><span class="line">            &quot;runtimeArgs&quot;: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;default-runtime&quot;: &quot;nvidia&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>NVIDIA</category>
        <category>Jetson</category>
      </categories>
      <tags>
        <tag>NVIDIA</tag>
      </tags>
  </entry>
  <entry>
    <title>Jetson</title>
    <url>/2024/09/20/NVIDIA/Jetson/Jetson/</url>
    <content><![CDATA[<img src="/2024/09/20/NVIDIA/Jetson/Jetson/metropolis-jetson-platform-service-diagrams-3280429-jetson-software-r2.png" class="" title="Jetson software stack">

<p>（来源：<a href="https://developer.nvidia.com/embedded/develop/software%EF%BC%89">https://developer.nvidia.com/embedded/develop/software）</a></p>
<h1 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 jetpack 版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">apt show nvidia-jetpack</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">apt list --installed | grep nvidia-jetpack</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 CUDA 版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">apt list --installed | grep cuda-toolkit</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 cuDNN 版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">apt list --installed | grep cudnn</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jetson_release <span class="comment"># 需安装 jetson-stats</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 tensorRT 版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">dpkg -l | grep TensorRT</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> /proc/driver/nvidia/verion</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 L4T 版本及 CUDA 版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> /etc/nv_tegra_release</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> /usr/local/cuda/version.txt</span></span><br></pre></td></tr></table></figure>





<h1 id="Jetson-软件架构"><a href="#Jetson-软件架构" class="headerlink" title="Jetson 软件架构"></a>Jetson 软件架构</h1><img src="/2024/09/20/NVIDIA/Jetson/Jetson/Architecture1.svg" class="" title="Jetson Linux system components">

<p>（来源：<a href="https://docs.nvidia.com/jetson/archives/r35.1/DeveloperGuide/text/AR/JetsonSoftwareArchitecture.html%EF%BC%89">https://docs.nvidia.com/jetson/archives/r35.1/DeveloperGuide/text/AR/JetsonSoftwareArchitecture.html）</a></p>
<p>NVIDIA CUDA 是一个并行计算平台，可以轻松使用 GPU 进行通用计算。它对于实现图形化应用程序特别有用。它可以与任何几种编程语言一起使用。</p>
<p>CUDA‑X 是一个软件包，其中包含几种常见的面向图形的任务的 CUDA 和基于 CUDA 的实现。</p>
<h1 id="Boot-Flow"><a href="#Boot-Flow" class="headerlink" title="Boot Flow"></a>Boot Flow</h1><p>Boot Flow 是引导加载程序执行初始化 SoC 和启动 NVIDIA®Jetson™Linux的操作序列。</p>
<p>BR-BCT：BootROM Boot Configuration Table </p>
<p>MB1：Microboot1</p>
<p>PSC：Platform Security Controller</p>
<p>参考：<a href="https://docs.nvidia.com/jetson/archives/r35.1/DeveloperGuide/text/AR/BootArchitecture.html">https://docs.nvidia.com/jetson/archives/r35.1/DeveloperGuide/text/AR/BootArchitecture.html</a></p>
<h1 id="Cantroller-Area-Network-CAN"><a href="#Cantroller-Area-Network-CAN" class="headerlink" title="Cantroller Area Network(CAN)"></a>Cantroller Area Network(CAN)</h1><p>适用于:Jetson AGX Orin, Jetson Xavier NX系列和Jetson AGX Xavier系列</p>
<p>参考：<a href="https://docs.nvidia.com/jetson/archives/r35.1/DeveloperGuide/text/HR/ControllerAreaNetworkCan.html">https://docs.nvidia.com/jetson/archives/r35.1/DeveloperGuide/text/HR/ControllerAreaNetworkCan.html</a></p>
<p>Time Triggered CAN controller</p>
<ul>
<li>支持标准帧和扩展帧</li>
<li>CAN 总线速率 10kbps ~ 1Mbps</li>
<li>支持 CAN FD 模式，最大速率为 15Mbps。所有类型的收发器都可以达到 5Mbps</li>
<li>如果通过它的用户空间sysfs节点配置TDCR(传输延迟补偿寄存器)，它可以提供更高的数据比特率</li>
</ul>
]]></content>
      <categories>
        <category>NVIDIA</category>
        <category>Jetson</category>
      </categories>
      <tags>
        <tag>NVIDIA</tag>
      </tags>
  </entry>
  <entry>
    <title>jetson内核编译</title>
    <url>/2024/09/17/NVIDIA/Jetson/jetson%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<p>注：不同版本编译不一样，参考：<a href="https://docs.nvidia.com/jetson/archives/">https://docs.nvidia.com/jetson/archives/</a></p>
<h1 id="确认-L4T-版本"><a href="#确认-L4T-版本" class="headerlink" title="确认 L4T 版本"></a>确认 L4T 版本</h1><p>以 r36.3 为例</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看版本信息</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">head</span> -n 1 /etc/nv_tegra_release</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">R36 (release), REVISION: 3.0, GCID: 36191598, BOARD: generic, EABI: aarch64, DATE: Mon May  6 17:34:21 UTC 2024</span></span><br></pre></td></tr></table></figure>



<img src="/2024/09/17/NVIDIA/Jetson/jetson%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/image-20240917115757754.png" class="" title="image-20240917115757754">



<h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装依赖</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install bison flex libssl-dev zip libncurses-dev make</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install build-essential bc</span></span><br></pre></td></tr></table></figure>



<h1 id="源码及交叉编译环境"><a href="#源码及交叉编译环境" class="headerlink" title="源码及交叉编译环境"></a>源码及交叉编译环境</h1><p>参考：</p>
<ul>
<li><a href="https://docs.nvidia.com/jetson/archives/r35.4.1/DeveloperGuide/text/AT/JetsonLinuxToolchain.html#at-jetsonlinuxtoolchain">Jetson Linux Toolchain</a></li>
<li><a href="https://docs.nvidia.com/jetson/archives/r35.4.1/DeveloperGuide/text/SD/Kernel/KernelCustomization.html#building-the-kernel">Building the Kernel</a></li>
</ul>
<img src="/2024/09/17/NVIDIA/Jetson/jetson%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/image-20240917120004288.png" class="" title="image-20240917120004288">



<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压内核源码</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar xf public_sources.tbz2 -C &lt;install-path&gt;/Linux_for_Tegra/..</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> &lt;install-path&gt;/Linux_for_Tegra/source</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar xf kernel_src.tbz2  <span class="comment"># 会将内核源码解压到 source/kernel 目录</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar xf kernel_oot_modules_src.tbz2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar xf nvidia_kernel_display_driver_source.tbz2</span></span><br></pre></td></tr></table></figure>



<h2 id="配置交叉编译链"><a href="#配置交叉编译链" class="headerlink" title="配置交叉编译链"></a><strong>配置交叉编译链</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">假设交叉编译工具解压路径为：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="variable">$HOME</span>/aarch64--glibc--stable-2022.08-1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> CROSS_COMPILE=<span class="variable">$HOME</span>/aarch64--glibc--stable-2022.08-1/bin/aarch64-buildroot-linux-gnu-</span></span><br></pre></td></tr></table></figure>



<h1 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">若编译 real-time 内核，则需使能相关配置</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./generic_rt_build.sh <span class="string">&quot;enable&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译内核</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make -C kernel</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">install kernel 和 modules</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 注意：需手动创建该目录 和 rootfs/boot 目录</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> INSTALL_MOD_PATH=&lt;install-path&gt;/Linux_for_Tegra/rootfs/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> -E make install -C kernel</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rootfs/boot/ 目录下已有 Image，是否必要？</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> kernel/kernel-jammy-src/arch/arm64/boot/Image \</span></span><br><span class="line"><span class="language-bash">  &lt;install-path&gt;/Linux_for_Tegra/kernel/Image</span> </span><br></pre></td></tr></table></figure>



<h1 id="编译-Out-of-Tree-Modules"><a href="#编译-Out-of-Tree-Modules" class="headerlink" title="编译 Out-of-Tree Modules"></a><strong>编译 Out-of-Tree Modules</strong></h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> xx/Linux_for_Tegra/source</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">若针对实时内核</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> IGNORE_PREEMPT_RT_PRESENCE=1</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> KERNEL_HEADERS=<span class="variable">$PWD</span>/kernel/kernel-jammy-src</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make modules</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">install</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> INSTALL_MOD_PATH=&lt;install-path&gt;/Linux_for_Tegra/rootfs/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> -E make modules_install</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新 initranfs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> &lt;install-path&gt;/Linux_for_Tegra</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> ./tools/l4t_update_initrd.sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 若在目标板直接编译，则执行 sudo nv-update-initrd</span></span></span><br></pre></td></tr></table></figure>



<h1 id="编译-DTBs"><a href="#编译-DTBs" class="headerlink" title="编译 DTBs"></a><strong>编译 DTBs</strong></h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> &lt;install-path&gt;/Linux_for_Tegra/source</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> KERNEL_HEADERS=<span class="variable">$PWD</span>/kernel/kernel-jammy-src</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make dtbs</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">install</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> nvidia-oot/device-tree/platform/generic-dts/dtbs/* \</span></span><br><span class="line"><span class="language-bash">     &lt;install-path&gt;/Linux_for_Tegra/kernel/dtb/</span></span><br></pre></td></tr></table></figure>

<p>如果 <code>KERNEL_HEADERS</code> 指向源目录而不是导出的标头目录，则需要运行 <code>make ARCH=arm64 defconfig</code> 脚本或等效脚本才能构建 dtc</p>
<h1 id="签名及加密"><a href="#签名及加密" class="headerlink" title="签名及加密"></a>签名及加密</h1><p>参考：<a href="https://docs.nvidia.com/jetson/archives/r36.3/DeveloperGuide/SD/Security/SecureBoot.html#sd-security-secureboot">https://docs.nvidia.com/jetson/archives/r36.3/DeveloperGuide/SD/Security/SecureBoot.html#sd-security-secureboot</a></p>
<h2 id="Kernel-Module-Signing"><a href="#Kernel-Module-Signing" class="headerlink" title="Kernel Module Signing"></a><strong>Kernel Module Signing</strong></h2><p><a href="https://docs.nvidia.com/jetson/archives/r36.3/DeveloperGuide/SD/Security/SecureBoot.html#kernel-module-signing">https://docs.nvidia.com/jetson/archives/r36.3/DeveloperGuide/SD/Security/SecureBoot.html#kernel-module-signing</a></p>
<p>内核模块签名工具在 install 期间对模块进行签名，然后在加载模块时检查签名。这可以通过禁止加载未签名的模块或使用无效密钥签名的模块来提高内核安全性。</p>
<p>以下是内核模块签名的内核配置选项：</p>
<ul>
<li><p>要启用内核模块签名验证，需启用 <code>CONFIG_MODULE_SIG</code></p>
</li>
<li><p>要选择内核模块签名验证模式，请将 <code>CONFIG_MODULE_SIG_FORCE</code> 设置为以下选项之一：</p>
<ul>
<li><code>off</code>：宽容模式<ul>
<li>如果模块已签名，则必须具有受信任的签名</li>
<li>如果模块未签名，则可以加载，并且内核被标记为受污染</li>
</ul>
</li>
<li><code>on</code>：限制模式<ul>
<li>模块只有在使用受信任的签名签名后才能加载</li>
<li>其他模块将生成错误</li>
</ul>
</li>
</ul>
</li>
<li><p>要在构建时启用自动内核模块签名，要设置 <code>CONFIG_MODULE_SIG_ALL</code></p>
</li>
</ul>
<p>默认情况下，即使启用了内核模块签名验证，内核模块在构建时也不会签名。</p>
<ul>
<li>要指定签名密钥，需使用自己的 PEM 格式私钥设置 <code>CONFIG_MODULE_SIG_KEY</code><ul>
<li>默认情况下，如果 <code>CONFIG_MODULE_SIG_KEY=&quot;certs/signing_key.pem&quot;</code> 未更改，则内核会自动生成用于内核模块签名的 PEM 格式签名密钥</li>
<li>将 <code>CONFIG_MODULE_SIG_KEY</code> 设置为除 <code>certs/signing_key.pem</code> 默认值以外的值会禁用签名密钥的自动生成，并允许使用选择的密钥对内核模块进行签名。</li>
</ul>
</li>
</ul>
<p><code>CONFIG_SYSTEM_TRUSTED_KEYS</code> 内核选项也可以设置为包含其他证书的 PEM 编码文件的文件名。它是编译到内核中的 X.509 证书，用于对内核构建时未签名的模块进行内核模块验证。</p>
<h1 id="内核使用"><a href="#内核使用" class="headerlink" title="内核使用"></a>内核使用</h1><h1 id="内核配置"><a href="#内核配置" class="headerlink" title="内核配置"></a>内核配置</h1><p>在 Linux_for_Tegra&#x2F;source&#x2F; 目录下执行 make 时，会调用 Linux_for_Tegra&#x2F;source&#x2F;kernel&#x2F;Makefile。</p>
<img src="/2024/09/17/NVIDIA/Jetson/jetson%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/image-20240917120647966.png" class="" title="image-20240917120647966">

<p>通过在 <code>KERNEL_DEF_CONFIG</code> 中指定 <code>defconfig</code> 名称来自定义。</p>
<p>按如下方式编译内核时，每次都会重新生成 <code>.config</code> 配置，因此在 kernel-jammy-src 目录下执行 <code>make menuconfig &amp; make savedefconfig</code> 后，再按如下方式编译是不生效的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> xxx/public_sources/Linux_for_Tegra/source</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make -C kernel</span></span><br></pre></td></tr></table></figure>

<p>因此，可修改 <code>xxx/public_sources/Linux_for_Tegra/source/kernel/kernel-jammy-src/arch/arm64/configs/defconfig</code> 来配置内核。</p>
<p>例如，使能编译 rndis_host 及 rndis_wlan 驱动（需留意依赖关系）</p>
<img src="/2024/09/17/NVIDIA/Jetson/jetson%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/image-20240917120751784.png" class="" title="image-20240917120751784">

]]></content>
      <categories>
        <category>NVIDIA</category>
        <category>Jetson</category>
      </categories>
      <tags>
        <tag>NVIDIA</tag>
      </tags>
  </entry>
  <entry>
    <title>基础</title>
    <url>/2024/09/21/Robot/Map/%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>地图类型：基于特征的地图和基于位置的地图。  </p>
<p>基于位置的地图：<br>1）、占用栅格地图  </p>
<p>二维度量图、图形化的拓扑地图、占用栅格地图、图像镶嵌图等</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/09/21/Robot/Graph-based%20SLAM/Graph-based%20SLAM/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>AMCL</title>
    <url>/2024/09/21/Robot/Localization/AMCL/</url>
    <content><![CDATA[<h2 id="AMCL（Adaptive-Monte-Carlo-Localization）"><a href="#AMCL（Adaptive-Monte-Carlo-Localization）" class="headerlink" title="AMCL（Adaptive Monte Carlo Localization）"></a>AMCL（Adaptive Monte Carlo Localization）</h2><p>（AMCL中A指代 adaptive or Augmented？）<br>MCL不能从机器人绑架中或全局定位失效中恢复。在某个时候，只有单一位姿的粒子能够“幸存”，如果这个位姿碰巧是错误的，算法不能恢复。这个问题是有意义的。实际上，任何随机算法，如蒙特卡罗定位算法，在重采样步骤中可能意外地丢弃所有正确位姿附近的粒子。当粒子数很小（如M&#x3D;50) 。并且，当粒子扩散到整个比较大的体积（如全局定位过程）时，这个问题就显得特别重要。  </p>
<p>AMCL算法在机器人遭到绑架的时候，会随机的注入粒子（injection of random particles）。  </p>
<p>AMCL是MCL的升级版，结合Augmented_MCL 和 KDL_Sampling_MCL，使用自适应的 KLD 方法来更新粒子。<br><img src="/images/augmented_mcl.png" alt="amcl"></p>
<p>许多算法机器参数在 <Probabilistic Robotics> 有详细描述，尤其是此处用到的算法： <strong>sample_motion_model_odometry、beam_range_finder_model、likehood_field_range_finder_model、Augmented_MCL及KDL_Sampling_MCL</strong>。</p>
<h2 id="Navigation-AMCL-transforms"><a href="#Navigation-AMCL-transforms" class="headerlink" title="Navigation AMCL transforms"></a>Navigation AMCL transforms</h2><p>amcl将输入的激光扫描器数据转换到odometry坐标系(<del>odom_frame_id)。所以，tf树中必须存在从激光扫描器所在的坐标系发布消息到odometry坐标系的路径。<br>实现细节：在收到第一个激光扫描时。amcl在激光器坐标系和基础坐标系(</del>base_frame_id)中查找，并永久锁存。因此amcl不能处理激光器相对于基础坐标系(base)的移动。<br>下图展示使用odometry及amcl定位的不同处。在操作过程中，AMCL预测base frame(<del>base_frame_id)相对于global frame(</del>global_frame_id)的transform(转换)，但它只在global frame和odometry frame(~odom_frame_id)之间发布该转换。Essentially, this transform accounts for the drift that occurs using Dead Reckoning(从本质上讲，这种变换在使用Dead Reckoning(航位推算)时会发生偏移(drift)。)<br><img src="/images/amcl_transforms.png" alt="amcl transforms"></p>
<p>Odometry Location – 只是通过里程计的数据来处理&#x2F;base_frame和&#x2F;odom_frame之间的TF转换；<br>AMCL  Map Location – 查找&#x2F;base_frame和激光的TF。&#x2F;base_frame通过&#x2F;odom在&#x2F;map中行走，机器人根据已知激光数据，估计&#x2F;base_frame相对于相对于&#x2F;global的TF，那么我们可以知道&#x2F;map和&#x2F;base之间的TF，从而估计位置。  </p>
<h2 id="map、odom与base-link之间的关系"><a href="#map、odom与base-link之间的关系" class="headerlink" title="map、odom与base_link之间的关系"></a>map、odom与base_link之间的关系</h2><p>Odom-&gt;base_link 由底盘驱动发布，数据内容即为里程计数据，其意义是：以odom坐标系作为参考坐标系，base_link（即机器人）相对于odom坐标系的位置，反应了机器人相对于odom坐标系的移动状态。<br><strong>AMCL中会根据odom-&gt;base_link数据（即:里程计数据）结合粒子滤波算法，确定base_link(即机器人)在map坐标系上的位姿，即map -&gt; base_link数据。然后根据map-&gt;base_link及odom-&gt;base_link得出map-&gt;odom。（odom-&gt;base_link可理解为实际测量得到的量，map-&gt;base_link可理解为算法算出的计算值。因AMCL定位的偏差，会体现出odom坐标系也在相对map坐标系变动）</strong>。   </p>
<p>amcl发布odom到map 坐标系tf的流程如下：(已知amcl_pose(base_link坐标系原点在map坐标系位姿)，odom到base_link tf关系)<br>①. 调用tf接口将amcl_pose取反，即将base_link坐标系原点在map坐标系的位姿转化为map坐标系原点在base_link坐标系的位姿。<br>②. 已知base_link与odom tf 关系，调用transformPose接口，将步骤1的结果map坐标系原点在base_link坐标系的位姿转化为map坐标系原点在odom坐标系的位姿。<br>③. 调用tf接口取反，即将步骤2的结果map坐标系原点在odom坐标系的位姿转化为odom坐标系原点在map坐标系的位姿，调用sendTransform发送odom到map tf关系。  </p>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>AMCL 订阅scan、tf、initialpose(定位数据)及map等数据，发布amcl_pose、particle cloud及tf(odom –&gt; map)。<strong>amcl与move_base通过tf关联。move_base不会订阅amcl发布的amcl_pose及particlecloud主题，只会监听amcl发布的odom –&gt; map的转换</strong>。  </p>
<p>AMCL需要 initialpose 主题上的消息来初始化filter。  </p>
<p>在移动过程中AMCL需要通过订阅TF(base_frame–&gt;odom)来更新filter。在每个filter过程，AMCL执行两步操作：<br>①、Prediction(预测 – 在AMCL源码中为UpdateAction)<br>②、Measure incorporation(在AMCL中称为UpdateSensor，Likelihood Field模式或Beam模式)<br>Prediciton过程使用TF来完成，因此需提供运动估计，然后通过通过读取的sensor数据来纠正&#x2F;提高预先估计的精度。  </p>
<p>仅当粒子聚集(converged)时才会更新机器人的位姿。<br>AMCL发布的PoseWithCovarianceStamped消息中的convariance，表明了估算的位姿的可信度，但并未直接表明估算的位姿有多精确。若想知道精确度，需在该位姿上使用sensor model。也可修改amcl_laser.cpp文件，在位姿上调用pf_get_cluster_stats来查看权重。该权重值基于map指明位姿与当前激光扫描到的环境的接近程度。</p>
]]></content>
  </entry>
  <entry>
    <title>AMCL参数</title>
    <url>/2024/09/21/Robot/Localization/AMCL%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h2 id="AMCL参数说明"><a href="#AMCL参数说明" class="headerlink" title="AMCL参数说明"></a>AMCL参数说明</h2><p>ROS AMCL节点有三类参数：<strong>overall filter、laser model、odometry model</strong>。  </p>
<h3 id="1、overall-filter-参数"><a href="#1、overall-filter-参数" class="headerlink" title="1、overall filter 参数"></a>1、overall filter 参数</h3><p>min_particles(default: 100)、max_particles(default: 5000)<br>• 允许的最小粒子数、最大粒子数.    </p>
<p>kld_err (double, default: 0.01)<br>• 实际分布与估算的分布之间的误差的最大值.<br>kld_z (double, default: 0.99)<br>• Upper standard normal quantile for (1 - p), where p is the probability that the error on the estimated distrubition will be less than kld_err.<br>这两个参数是针对 KDL_Sampling_MCL(AMCL的一部分)。</p>
<p>update_min_d (default: 0.2 meters)、update_min_a (default: π&#x2F;6.0 radians)<br>• 执行过滤器更新前的移动距离、转动角度。即移动距离或转动角度超过该值就会触发过滤器刷新    </p>
<p>resample_interval (int, default: 2)<br>• 重采样间隔  </p>
<p>transform_tolerance (double, default: 0.1 seconds)<br>• 发布的 map-&gt;odom 的 tf 的容错公差.   </p>
<p>recovery_alpha_slow (double, default: 0.0 (disabled))<br>• 慢速平均加权滤波器(slow average weight filter)的指数衰减速率，通过增加随机的位姿来决定何时recover。a good value might be 0.001  </p>
<p>recovery_alpha_fast (double, default: 0.0 (disabled))<br>• 快速平均加权滤波器(fast average weight filter)的指数衰减速率，通过增加随机的位姿来决定何时recover。a good value might be 0.1  </p>
<p>initial_pose_x、initial_pose_y、initial_pose_a (default:0,0,0)<br>• 初始位姿(x,y,yaw), 用于初始化带高斯分布的滤波器(即：初始粒子云分布, initial_pose_x 及 initial_pose_y 确定粒子云的中心位置，initial_pose_a 确定粒子云中粒子的朝向)  </p>
<p>initial_cov_xx、initial_cov_yy、initial_cov_aa (default: 0.5<em>0.5,0.5</em>0.5,0.5<em>0.5 meters)<br>• 初始位姿协方差(x</em>x, y<em>y, yaw</em>yaw), 用于初始化带高斯分布的滤波器(即：初始粒子云分布，initial_cov_xx 及 initial_cov_yy 参数决定初始粒子集的范围, initial_cov_aa 确定粒子朝向的偏差)    </p>
<p>gui_publish_rate (default: -1.0 Hz)<br>• scans及paths的最大发布速率(用于可视化)。-1则禁用(即:不发布)  </p>
<p>save_pose_rate (double, default: 0.5 Hz)<br>• 存储最后估算的位姿和协方差(对应于initial_pose_* 及 initial_cov_<em>变量)到参数服务器的速率(即:更新参数服务器中initial_pose_</em> 及 initial_cov_*的值)。该存储的位姿可用于初始化后续运行的滤波器。-1.0则禁用  </p>
<p>use_map_topic (bool, default: false)<br>• 设置为true时，AMCL将订阅map主题而不是执行服务调用(static_map 服务)来接收地图。  </p>
<p>first_map_only (bool, default: false)<br>• 设置为true时，AMCL将只使用其订阅到的第一张地图，而不会每收到新的地图就进行更新。</p>
<h3 id="2、laser-model-参数"><a href="#2、laser-model-参数" class="headerlink" title="2、laser model 参数"></a>2、laser model 参数</h3><p>注意：使用的混合权重总和始终为1。 beam model 使用所有4个参数： z_hit, z_short, z_max, 及 z_rand。  likelihood_field model 只使用 z_hit 和 z_rand。 通过 laser_model_type 来选择使用的 model。  </p>
<p>laser_min_range、laser_max_range (default: -1.0, -1.0)<br>• 激光有效扫描范围。 激光最小扫描范围。-1.0表示：使用测量到的最小&#x2F;最大距离，否则，超出该范围的不考虑  </p>
<p>laser_max_beams (int, default: 30)<br>• 更新滤波器时，使用的最大激光束数目.  </p>
<p>laser_z_hit(0.95)、laser_z_short(0.1)、laser_z_max(0.05)、laser_z_rand(0.05)<br>• 分别为模型的 z_hit、z_short、z_max、z_rand 部分的混合权重.  </p>
<p>laser_sigma_hit (double, default: 0.2 meters)<br>• 在模型的z_hit部分中使用的高斯模型的标准偏差.  </p>
<p>laser_lambda_short (double, default: 0.1)<br>• 模型的z_short部分的指数衰减参数.  </p>
<p>laser_likelihood_max_dist (double, default: 2.0 meters)<br>• 在地图上进行障碍物膨胀的最大距离，用于 likelihood_field 模型.  </p>
<p>laser_model_type (string, default: “likelihood_field”)<br>• 选择使用的模型，可以是：beam, likelihood_field, 或者 likelihood_field_prob (与likelihood_field 类似，但合并了 beamskip feature).  </p>
<h3 id="3、odometry-model-参数"><a href="#3、odometry-model-参数" class="headerlink" title="3、odometry model 参数"></a>3、odometry model 参数</h3><p>若<strong>odom_model_type</strong>设置为”<strong>diff</strong>“，则使用probabilisitic Robotics中p136页中的<strong>sample_motion_model_odometry</strong>算法，该模式使用噪声参数odom_alpha_1到odom_alpha_4。<br><img src="/images/sample_motion_model_odometry.png" alt="sample_motion_model_odometry"></p>
<p>若<strong>odom_mode_type</strong>设置为”<strong>omni</strong>“，则会为全向底盘使用custom model，该model使用odom_alpha_1到odom_alpha_5参数。前四个参数与”diff” model相似。第五个参数odom_alpha_5采集机器人垂直于观察到的平移方向移动的趋势。<br>注意：为了修复<a href="https://github.com/ros-planning/navigation/issues/20">bug</a>,增加了”diff-corrected”及”omni-corrected”模型。odom_alpha 参数的默认值不再适用于新的 model，<a href="http://answers.ros.org/question/227811/tuning-amcls-diff-corrected-and-omni-corrected-odom-models/">新的 model 这些值更低</a>。</p>
<p>odom_model_type(default:”diff”)<br>• 指定使用的odom模型。可以为：”diff”, “omni”, “diff-corrected” or “omni-corrected”。  </p>
<p>odom_alpha1 (0.2)<br>• 指定在根据机器人的运动的<strong>旋转分量</strong>估算odometry的旋转时期望的噪声<br>odom_alpha2 (0.2)<br>• 指定在根据机器人的运动的<strong>平移分量</strong>估算odometry的旋转时期望的噪声<br>odom_alpha3 (0.2)<br>• 指定在根据机器人的运动的<strong>平移分量</strong>估算odometry的平移时期望的噪声<br>odom_alpha4 (0.2)<br>• 指定在根据机器人的运动的<strong>旋转分量</strong>估算odometry的平移时期望的噪声<br>odom_alpha5 (0.2)<br>• 与平移相关的噪声参数。只对 omni 模型有效  </p>
<p>odom_frame_id (default:”odom”)<br>base_frame_id (default:”base_link”)<br>global_frame_id (default:”map”)  </p>
<p>tf_broadcast(default:true)<br>• 将此设置为false可禁止发布 全局坐标系 -&gt; odometry坐标系(即: map-&gt;odom) 之间的转换。。</p>
]]></content>
  </entry>
  <entry>
    <title>AMCL调试记录</title>
    <url>/2024/09/21/Robot/Localization/AMCL%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="AMCL-问题调试记录"><a href="#AMCL-问题调试记录" class="headerlink" title="AMCL 问题调试记录"></a>AMCL 问题调试记录</h2><p>1、转圈时 AMCL 定位漂移<br>因为转圈时机器人的X,Y偏差比kobuki大，因此需修改amcl_odom.cpp中的：<img src="/images/amcl_drift_while_rotate.png" alt="amcl_drift"><br>将0.01修改为0.05</p>
]]></content>
  </entry>
  <entry>
    <title>Augmented_MCL</title>
    <url>/2024/09/21/Robot/Localization/Augmented_MCL/</url>
    <content><![CDATA[<h2 id="Augmented-MCL"><a href="#Augmented-MCL" class="headerlink" title="Augmented_MCL"></a>Augmented_MCL</h2><p>Augmented_MCL解决的是从机器人绑架或全局定位失效中恢复的问题。recovery_alpha_slow 及 recovery_alpha_fast 配置参数就是用于失效恢复的。随机采样以max{0.0,1.0-w(fast)&#x2F;w(slow)}概率增加。如果短期似然劣于长期似然则增加随机采样，这种方法，测量似然的一个突然衰减将引起随机采样的数目增加。w&#x3D;w+α(Wavg-w)–Wavg当前测量模型的权重，w为短期（w(fast)）或长期(w(slow))平滑估计，α为与w对应的recovery_alpha_参数。</p>
]]></content>
  </entry>
  <entry>
    <title>KDL_Sampling_MCL</title>
    <url>/2024/09/21/Robot/Localization/KDL_Sampling_MCL/</url>
    <content><![CDATA[<h2 id="KLD-Sampling-MCL"><a href="#KLD-Sampling-MCL" class="headerlink" title="KLD_Sampling_MCL"></a>KLD_Sampling_MCL</h2><p>KLD_Sampling_MCL随时间改变粒子数，改良了度过初期后的蒙特卡洛大样本集合的资源浪费。kld_err 及 kld_z 参数就是KLD的参数。对于每次粒子滤波迭代，KLD采样以概率 1-δ 确定样本数（1-δ就是kld_z配置参数），使得真实的后验与基于采样的近似之间的误差小于ε（ε就是kld_err配置参数）.kld_z&#x3D;0.99,kld_err&#x3D;0.05,直方图位大小为15cm<em>15cm</em>15°就能取得良好的结果。</p>
]]></content>
  </entry>
  <entry>
    <title>NodeHandle</title>
    <url>/2024/09/21/Robot/ROS/NodeHandle/</url>
    <content><![CDATA[<h2 id="访问节点信息"><a href="#访问节点信息" class="headerlink" title="访问节点信息"></a>访问节点信息</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Get the fully-qualified name of this node.</span></span><br><span class="line">ros::this_node::<span class="built_in">getName</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Get the fully-qualified namespace of this node.</span></span><br><span class="line">ros::this_node::<span class="built_in">getNamespace</span>()</span><br></pre></td></tr></table></figure>

<h2 id="操作-Names"><a href="#操作-Names" class="headerlink" title="操作 Names"></a>操作 Names</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用NodeHandle的命名空间解析名称</span></span><br><span class="line">std::string ros::NodeHandle::<span class="built_in">resolveName</span>(<span class="type">const</span> std::string&amp; name, <span class="type">bool</span> remap = <span class="literal">true</span>);  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 node 的命名空间解析名称 </span></span><br><span class="line">std::string ros::names::<span class="built_in">resolve</span>(<span class="type">const</span> std::string&amp; name, <span class="type">bool</span> remap = <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// append right to left</span></span><br><span class="line">std::string ros::names::<span class="built_in">append</span>(<span class="type">const</span> std::string&amp; left, <span class="type">const</span> std::string&amp; right);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除重复的 / 字符</span></span><br><span class="line">std::string ros::names::<span class="built_in">clean</span>(<span class="type">const</span> std::string&amp; name);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检测名字是否合规</span></span><br><span class="line"><span class="type">bool</span> ros::names::<span class="built_in">validate</span>(<span class="type">const</span> std::string&amp; name, std::string&amp; error);</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<pre><code class="C++">ros::init(argc, argv, &quot;my_node_name&quot;);
ros::NodeHandle nh1(&quot;~&quot;);
ros::NodeHandle nh2(&quot;~foo&quot;);
</code></pre>
<p>其中，<code>nh1</code> 的命名空间是 <code>/my_node_name</code>，<code>nh2</code> 的命名空间是 <code>/my_node_name/foo</code>。  </p>
<p><img src="/./images/NodeHandle.png" alt="NodeHandle"></p>
]]></content>
  </entry>
  <entry>
    <title>MCL</title>
    <url>/2024/09/21/Robot/Localization/MCL/</url>
    <content><![CDATA[<h2 id="MCL（Monte-Carlo-Localization）算法"><a href="#MCL（Monte-Carlo-Localization）算法" class="headerlink" title="MCL（Monte Carlo Localization）算法"></a>MCL（Monte Carlo Localization）算法</h2><p>MC(Monte Carlo)方法：<br>蒙特卡罗方法，也称随机抽样或统计模拟方法。 若所求解的问题是某事件出现的概率或者是某个随机变量的期望值时 。通过某种“实验”的方法，得出事件出现的频率，以此估计出A事件出现的概率，或者得到这个随机变量的期望值。 </p>
<p>MCL算法基于粒子滤波器（particle filters）。<br>Particle filters的基本步骤为：<br>1、随机生成一堆粒子<br>粒子可以具有位置，方向或需要估计的任何其他状态变量。 每个都有一个权重（概率），表示它与系统的实际状态匹配的可能性。 用相同的权重初始化每个粒子。<br>若初始位姿已知，则只需设定粒子群大小 M，然后用repmat方法复制 M 个初始位置作为初始粒子群；若初始位置未知，则可以使用高斯分布随机采样的方法初始化粒子群。<br>2、预测粒子的下一个状态<br>根据预测真实系统的行为方式移动粒子。例如根据里程计来数值（速度、加速度）来预测粒子的下一个状态。<br>3、更新粒子权重<br>根据测量值更新粒子权重。 每个粒子的加权基于它与测量值的匹配程度。<br>4、重采样<br>丢弃极不可能的粒子（权重低的粒子），并用可能性更高的粒子（权重高的粒子）的副本替换它们。<br>重采样之后，粒子权值归一(权重一致)，但是在机器人可能出现的位置处，粒子数目开始变多。  </p>
<p>经过数次迭代后，只有少数粒子权重较大，其余粒子的权值可以忽略不计，粒子权值的方差随着时间增大，空间中的有效粒子数目减少，即：<strong>权值退化问题</strong>。<br>5、计算 estimate（<strong>可选</strong>）<br>计算该组粒子的均值和协方差以获得最可能的当前状态。  </p>
<p><img src="/images/mcl.png" alt="mcl"></p>
]]></content>
  </entry>
  <entry>
    <title>Publisher及Subscribe</title>
    <url>/2024/09/21/Robot/ROS/Publisher%E5%8F%8ASubscribe/</url>
    <content><![CDATA[<p>ros::Publisher<br>可自定义有订阅者连接&#x2F;断开时的通知函数  </p>
<pre><code class="C++">template&lt;class M &gt; Publisher advertise (const std::string &amp;topic, uint32_t queue_size, const SubscriberStatusCallback &amp;connect_cb, const SubscriberStatusCallback &amp;disconnect_cb=SubscriberStatusCallback(), const VoidConstPtr &amp;tracked_object=VoidConstPtr(), bool latch=false)
</code></pre>
<p>例如：（python为例）<br><code>rospy_tutorials/004_listener_subscribe_notify/listener_subscribe_notify.py</code></p>
<p> <br>ros::Subscribe<br>可通过不同参数对同一个主题进行不同的处理<br>例如：<br><code>rospy_tutorials/003_listener_with_user_data/listener_with_user_data.py</code></p>
]]></content>
  </entry>
  <entry>
    <title>参数服务器</title>
    <url>/2024/09/21/Robot/ROS/%E5%8F%82%E6%95%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="Parameter-Server"><a href="#Parameter-Server" class="headerlink" title="Parameter Server"></a>Parameter Server</h2><p><strong>参数服务器是一个可通过网络 APIs 进行访问的共享的、多元的目录</strong>。节点运行时使用该服务器来存储和取回参数。因为没有将该服务器设置为高性能，因此最好用于静态、非二进制文件，例如配置参数。这意味着参数是全局可见的，因此使用工具可以轻易的检查系统的配置状态和修改配置。  </p>
<p>参数服务器使用 XML RPC 实现，运行在 ROS master 中。因此，其 APIs 可通过普通的 XML RPC 库进行访问。  </p>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>参数命名遵循通用的 <a href="./%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4.md">ROS 命名规则</a>。意味着 ROS 参数有一个与之匹配的名称空间的。例如:  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/camera/left/name: leftcamera</span><br><span class="line">/camera/left/exposure: 1</span><br><span class="line">/camera/right/name: rightcamera</span><br><span class="line">/camera/right/exposure: 1.1</span><br><span class="line">```  </span><br><span class="line">`/camera/left/name` 参数值为 leftcamera。也可以获取 /camera/left 参数的值，其值为该dictionary：  </span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">  name: leftcamera</span>  </span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">  exposure: 1</span>   </span><br><span class="line"></span><br><span class="line">&lt;p&gt;</span><br><span class="line"></span><br><span class="line">获取 /camera 的值，其值为一个表示参数树的 dictionary：  </span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">left: &#123; name: leftcamera, exposure: 1 &#125;</span>  </span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">right: &#123; name: rightcamera, exposure: 1.1 &#125;</span>  </span><br><span class="line">&lt;p&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 参数类型</span></span>  </span><br><span class="line">参数服务器使用XML RPC数据类型最为参数值，包括:  </span><br><span class="line">- 32-bit integers</span><br><span class="line">- booleans</span><br><span class="line">- strings</span><br><span class="line">- doubles</span><br><span class="line">- iso8601 dates</span><br><span class="line">- lists</span><br><span class="line">- base64-encoded binary data  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 私有参数</span></span>  </span><br><span class="line">ROS 命名规则中满足 `~name` 命名方式的名字即为私有名字。这些私有名字主要用于指定给某个单一节点的参数。`~` 前缀假设节点名为一个半私有的命名空间---仍然可以从其他部分进行访问，但通常被保护起来以避免意外的名字冲突。</span><br><span class="line">可以在命令行使用重映射参数，并改变 `~` 为一个下划线 `_` 来指定节点参数。例如:  </span><br></pre></td></tr></table></figure>
<p>$ rosrun rospy_tutorials talker _param:&#x3D;1.0</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## roscpp API</span><br><span class="line">roscpp 中提供了两套 param API：  </span><br><span class="line">- `ros::param` namespace 中的 API</span><br><span class="line">- `ros::NodeHandle` 中的 API  </span><br><span class="line"></span><br><span class="line">### ros::param API  </span><br><span class="line">示例：  </span><br><span class="line">```c++</span><br><span class="line">...</span><br><span class="line">ros::init(argc, argv, &quot;demo&quot;);</span><br><span class="line">ros::NodeHandle nh;</span><br><span class="line"></span><br><span class="line">// 获取及设置参数</span><br><span class="line">bool status = ros::param::get(&quot;param1&quot;, param1);</span><br><span class="line">ros::param::set(&quot;param2&quot;, 4);</span><br><span class="line">// ros::param::getCached(); // 缓存的参数</span><br><span class="line"></span><br><span class="line">// 检查参数</span><br><span class="line">if (ros::param::has(&quot;param3&quot;)) &#123;</span><br><span class="line">  // param3 exists</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 删除参数</span><br><span class="line">bool status = ros::param::del(&quot;param4&quot;);</span><br><span class="line"></span><br><span class="line">// 获取所有参数名</span><br><span class="line">std::vector&lt;std::string&gt; param_names;</span><br><span class="line">ros::param::search(param_names);</span><br><span class="line"></span><br><span class="line">// 访问私有参数</span><br><span class="line">ros::param::get(&quot;~private_param_name&quot;, param5);</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h3 id="ros-NodeHandle"><a href="#ros-NodeHandle" class="headerlink" title="ros::NodeHandle"></a>ros::NodeHandle</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;demo&quot;</span>);</span><br><span class="line">ros::NodeHandle nh;</span><br><span class="line"><span class="function">ros::NodeHandle <span class="title">priv_nh</span><span class="params">(<span class="string">&quot;~&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取参数</span></span><br><span class="line"><span class="type">bool</span> status = nh.<span class="built_in">getParam</span>(<span class="string">&quot;param1&quot;</span>, param1);</span><br><span class="line">nh.<span class="built_in">param</span>&lt;std:string&gt;(<span class="string">&quot;param2&quot;</span>, param2, <span class="string">&quot;test&quot;</span>); <span class="comment">// 允许指定默认值</span></span><br><span class="line"><span class="comment">// nh.getParamCached(); // 缓存的参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置参数</span></span><br><span class="line">nh.<span class="built_in">setParam</span>(<span class="string">&quot;param3&quot;</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查参数  </span></span><br><span class="line"><span class="keyword">if</span> (nh.<span class="built_in">hasParam</span>(<span class="string">&quot;param4&quot;</span>)) &#123;</span><br><span class="line">  <span class="comment">// param exist</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * 搜索参数. 假设参数服务器有 /a/b 参数，</span></span><br><span class="line"><span class="comment"> * 若 NodeHandle 在 /a/c 空间，则搜索 b 将会得到 /a/b；</span></span><br><span class="line"><span class="comment"> * 若增加 /a/c/b 参数，再搜索 b 将会得到 /a/c/b</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">if</span> (nh.<span class="built_in">searchParam</span>(<span class="string">&quot;b&quot;</span>, param_name)) &#123;</span><br><span class="line">  <span class="comment">// found param</span></span><br><span class="line">  nh.<span class="built_in">getParam</span>(param_name, param6);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除参数</span></span><br><span class="line"><span class="keyword">if</span> (nh.<span class="built_in">deleteParam</span>(<span class="string">&quot;param3&quot;</span>)) &#123;</span><br><span class="line">  <span class="comment">// param deleted</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取所有参数名</span></span><br><span class="line">std::vector&lt;std::string&gt; param_names;</span><br><span class="line">nh.<span class="built_in">getParamNames</span>(param_names);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问私有参数</span></span><br><span class="line">priv_nh.<span class="built_in">getParam</span>(<span class="string">&quot;private_param_name&quot;</span>, param7); <span class="comment">// 注意：函数中不能使用 ~</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h3 id="launch-中加载参数"><a href="#launch-中加载参数" class="headerlink" title="launch 中加载参数"></a>launch 中加载参数</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rosparam</span>&gt;</span></span><br><span class="line">    param2: 2</span><br><span class="line">    param3: 3</span><br><span class="line">  <span class="tag">&lt;/<span class="name">rosparam</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;demo&quot;</span>);</span><br><span class="line">  <span class="type">int</span> g_serial_number = <span class="number">-1</span>;</span><br><span class="line">  <span class="type">int</span> l_serial_number = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">  ros::NodeHandle nh_global;</span><br><span class="line">  <span class="function">ros::NodeHandle <span class="title">nh_local</span><span class="params">(<span class="string">&quot;~&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Global nh ns: %s&quot;</span>, nh_global.<span class="built_in">getNamespace</span>().<span class="built_in">c_str</span>());</span><br><span class="line">  <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Local nh ns: %s&quot;</span>, nh_local.<span class="built_in">getNamespace</span>().<span class="built_in">c_str</span>());</span><br><span class="line"></span><br><span class="line">  <span class="comment">// global namespace</span></span><br><span class="line">  nh_global.<span class="built_in">getParam</span>(<span class="string">&quot;serial&quot;</span>, g_serial_number);    </span><br><span class="line">  nh_global.<span class="built_in">getParam</span>(<span class="string">&quot;demo/serial&quot;</span>, l_serial_number);</span><br><span class="line">  <span class="comment">// 注意：NodeHandle 类方法不支持 ~</span></span><br><span class="line">  <span class="comment">// nh_global.getParam(&quot;~serial&quot;, g_serial_number); // 报错</span></span><br><span class="line">  <span class="built_in">ROS_INFO</span>(<span class="string">&quot;#1 Global param: %d, Local param: %d&quot;</span>, g_serial_number, l_serial_number);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// local namespace</span></span><br><span class="line">  nh_local.<span class="built_in">getParam</span>(<span class="string">&quot;serial&quot;</span>, l_serial_number); </span><br><span class="line">  nh_local.<span class="built_in">getParam</span>(<span class="string">&quot;/serial&quot;</span>, g_serial_number); </span><br><span class="line">  <span class="built_in">ROS_INFO</span>(<span class="string">&quot;#2 Global param: %d, Local param: %d&quot;</span>, g_serial_number, l_serial_number);</span><br><span class="line"></span><br><span class="line">  ros::<span class="built_in">spin</span>();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">```  </span><br><span class="line">Launch 文件内容为：</span><br><span class="line">```xml</span><br><span class="line">&lt;launch&gt;</span><br><span class="line">  &lt;!-- global serial --&gt;</span><br><span class="line">  &lt;param name=<span class="string">&quot;serial&quot;</span> value=<span class="string">&quot;5&quot;</span> /&gt;</span><br><span class="line">  &lt;!--&lt;node name=<span class="string">&quot;demo&quot;</span> pkg=<span class="string">&quot;param_test&quot;</span> type=<span class="string">&quot;param_test_node&quot;</span> output=<span class="string">&quot;screen&quot;</span>&gt;--&gt;</span><br><span class="line">  &lt;node name=<span class="string">&quot;demo&quot;</span> pkg=<span class="string">&quot;param_test&quot;</span> type=<span class="string">&quot;param_test_node&quot;</span> output=<span class="string">&quot;screen&quot;</span> ns=<span class="string">&quot;ns1&quot;</span>&gt;</span><br><span class="line">    &lt;!-- local serial --&gt;</span><br><span class="line">    &lt;param name=<span class="string">&quot;serial&quot;</span> value=<span class="string">&quot;10&quot;</span> /&gt;</span><br><span class="line">  &lt;/node&gt;</span><br><span class="line">&lt;/launch&gt;</span><br><span class="line">```  </span><br><span class="line">- 若不设置 `ns=<span class="string">&quot;ns1&quot;</span>` 属性，`nh_global` 及 `nh_local` 均能正常读取局部和全局参数</span><br><span class="line">- 若设置 `ns=<span class="string">&quot;ns1&quot;</span>` 属性，则 `nh_global` 无法读取全局参数（需将其修改为 `&lt;arg name=<span class="string">&quot;ns1/serial&quot;</span> value=<span class="string">&quot;5&quot;</span>&gt;`），但能读取局部参数，`nh_local` 能正常读取局部和全局参数</span><br><span class="line">- 若将 `name` 属性修改为其它值，则 `nh_global` 将无法读取局部参数  </span><br><span class="line">- 添加命名空间除了使用 `ns` 属性，还可使用 `&lt;group&gt;`, 例如：  </span><br><span class="line">```xml</span><br><span class="line">&lt;launch&gt;</span><br><span class="line">  &lt;group ns=<span class="string">&quot;ns1&quot;</span>&gt;</span><br><span class="line">    &lt;!-- global serial --&gt;</span><br><span class="line">    &lt;param name=<span class="string">&quot;serial&quot;</span> value=<span class="string">&quot;5&quot;</span> /&gt;</span><br><span class="line">    &lt;node name=<span class="string">&quot;demo&quot;</span> pkg=<span class="string">&quot;parameter_demo&quot;</span> type=<span class="string">&quot;test_node&quot;</span> output=<span class="string">&quot;screen&quot;</span>&gt;</span><br><span class="line">      &lt;!-- local serial --&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;serial&quot;</span> value=<span class="string">&quot;10&quot;</span> /&gt;</span><br><span class="line">    &lt;/node&gt;</span><br><span class="line">  &lt;/group&gt;</span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure>
<p>此时均能正常读取参数。对应参数为：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/ns1/demo/serial</span><br><span class="line">/ns1/serial</span><br></pre></td></tr></table></figure>

<p> 

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">&quot;ns1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- global serial --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;serial&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;param_test&quot;</span> <span class="attr">type</span>=<span class="string">&quot;param_test_node&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> <span class="attr">ns</span>=<span class="string">&quot;ns2&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- local serial --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;serial&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br><span class="line">```  </span><br><span class="line">对应参数为：  </span><br></pre></td></tr></table></figure>
<p>&#x2F;ns1&#x2F;ns2&#x2F;demo&#x2F;serial<br>&#x2F;ns1&#x2F;serial</p>
<pre><code>&gt; ---
&gt; - 注意：此时，`nh_global` 命名空间为 `/ns1/ns2` 其读取参数分别为 `/ns1/ns2/serial` 及 `/ns1/ns2/demo/serial`，因此能读取到局部参数（注意 `name` 属性值需保持一致），但无法读取全局参数；而 `nh_local` 命名命名空间为 `/ns1/ns2/demo`，同样只能读取局部参数，无法读取全局参数。需将全局参数修改为 `&lt;arg name=&quot;ns2/serial&quot; value=&quot;5&quot;&gt;`
&gt; ---  



</code></pre>
]]></content>
  </entry>
  <entry>
    <title>命名空间</title>
    <url>/2024/09/15/Robot/ROS/%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><!--需保留首行 # --></h1><h1 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h1><p>参考：<a href="http://wiki.ros.org/Names">ros Names</a>  </p>
<h2 id="Graph-Resource-Names"><a href="#Graph-Resource-Names" class="headerlink" title="Graph Resource Names"></a>Graph Resource Names</h2><p>Graph Resource Names 提供了一个<strong>分层的命名结构</strong>，该结构用于 ROS 计算图中的所有资源，如 nodes、参数、topics 和 services。  </p>
<p>例如：  </p>
<ul>
<li><code>/</code> : 全局命名空间</li>
<li><code>/foo</code></li>
<li><code>/stanford/robot/name</code></li>
<li><code>/wg/node</code></li>
</ul>
<p>Graph Resource Names 是 ROS 中一个提供封装(encapsulation)的重要机制。每个资源定义在一个命名空间(namespace)中，而该命名空间有可能为多个资源所共享。通常，资源可在其 namespace 中创建资源，并且可以访问其 namespace 内或其 namespace 上一层的资源。可以建立属于不同 namespace 的资源之间的连接，这通常是通过在上层整合这两个 namespace 的代码来实现。  </p>
<p>names 是相对解析的，因此资源不需要关注其所属的 namespace。</p>
<h3 id="可用的-names"><a href="#可用的-names" class="headerlink" title="可用的 names"></a>可用的 names</h3><p>一个可用的名字有以下特征：  </p>
<ul>
<li>以字母、’~’、’&#x2F;‘ 开始</li>
<li>后跟字母、数字、下划线或 ‘&#x2F;‘</li>
</ul>
<blockquote>
<hr>
<p><strong><em>注意：</em></strong>  </p>
<ul>
<li>base names 不能使用 ‘&#x2F;‘ 或 ‘~’</li>
</ul>
<hr>
</blockquote>
<h3 id="resolving"><a href="#resolving" class="headerlink" title="resolving"></a>resolving</h3><p>ROS 中有四种类型的 Graph Resource Names: <code>base</code>、<code>relative</code>、<code>global</code>、<code>private</code>  </p>
<ul>
<li>base</li>
<li>relative&#x2F;name</li>
<li>&#x2F;global&#x2F;name</li>
<li>~private&#x2F;name</li>
</ul>
<p>默认情况下，<code>resolution is done relative to the node&#39;s namespace(resolution 是相对于节点的命名空间)</code>。  </p>
<p>没有指定任何 namespace 限定符的 names 属于 <code>base names</code>。**<code>base names</code> 实际上是 <code>relative names</code> 的一个子类，并且有着相同的 resolution 规则**。Base names 经常用于初始化节点名。    </p>
<p><strong>以 <code>/</code> 开头的 names 是全局的</strong>。应当尽量避免 <code>Global names</code>，因为其限制了代码的可移植性。   </p>
<p>**以 <code>~</code> 开头的 names 是 <code>private</code> **。将节点的名字转换为 namespace。例如，<code>/wg</code> 命名空间中的节点 node1 的私有命名空间为 <code>/wg/node1</code>。Private names 用于通过参数服务器传递参数到一个指定节点。    </p>
<p>示例: <!-- 注意：表格与文字间需换行，否则无效 -->  </p>
<table>
<thead>
<tr>
<th>Node</th>
<th>Relative(default)</th>
<th>Global</th>
<th>Private</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;node1</td>
<td>bar -&gt; &#x2F;bar</td>
<td>&#x2F;bar -&gt; &#x2F;bar</td>
<td>~bar -&gt; &#x2F;node1&#x2F;bar</td>
</tr>
<tr>
<td>&#x2F;wg&#x2F;node2</td>
<td>bar -&gt; &#x2F;wg&#x2F;bar</td>
<td>&#x2F;bar -&gt; &#x2F;bar</td>
<td>~bar -&gt; &#x2F;wg&#x2F;node2&#x2F;bar</td>
</tr>
<tr>
<td>&#x2F;wg&#x2F;node3</td>
<td>foo&#x2F;bar -&gt; &#x2F;wg&#x2F;foo&#x2F;bar</td>
<td>&#x2F;foo&#x2F;bar -&gt; &#x2F;foo&#x2F;bar</td>
<td>~foo&#x2F;bar -&gt; &#x2F;wg&#x2F;node3&#x2F;foo&#x2F;bar</td>
</tr>
</tbody></table>
<h3 id="remapping"><a href="#remapping" class="headerlink" title="remapping"></a>remapping</h3><p>命令行启动节点时，可对 ROS 节点的名字进行重映射。  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun rospy_tutorials talker chatter:=/wg/chatter</span></span><br></pre></td></tr></table></figure>
<p>将 <code>chatter</code> 重映射为 <code>/wg/chatter</code>。  </p>
<p>重映射匹配规则示例：  </p>
<table>
<thead>
<tr>
<th>Node Namespace</th>
<th>Remapping Argument</th>
<th>Matching Names</th>
<th>Final Resolved Name</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;</td>
<td>foo:&#x3D;bar</td>
<td>foo,&#x2F;foo</td>
<td>&#x2F;bar</td>
</tr>
<tr>
<td>&#x2F;baz</td>
<td>foo:&#x3D;bar</td>
<td>foo,&#x2F;baz&#x2F;foo</td>
<td>&#x2F;baz&#x2F;bar</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>&#x2F;foo:&#x3D;bar</td>
<td>foo,&#x2F;foo</td>
<td>&#x2F;bar</td>
</tr>
<tr>
<td>&#x2F;baz</td>
<td>&#x2F;foo:&#x3D;bar</td>
<td>&#x2F;foo</td>
<td>&#x2F;baz&#x2F;bar</td>
</tr>
<tr>
<td>&#x2F;baz</td>
<td>&#x2F;foo:&#x3D;&#x2F;a&#x2F;b&#x2F;c&#x2F;bar</td>
<td>&#x2F;foo</td>
<td>&#x2F;a&#x2F;b&#x2F;c&#x2F;bar</td>
</tr>
</tbody></table>
<p>参数重映射：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将 ~param 设置为 1.0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun rospy_tutorials talker _param:=1.0</span> </span><br></pre></td></tr></table></figure>
<p>其它常用 keys：  </p>
<ul>
<li><code>__name</code>:</li>
<li><code>__log</code>:</li>
<li><code>__ip</code>:</li>
<li><code>__host</code>:</li>
<li><code>__master</code>:</li>
<li><code>__ns</code>:</li>
</ul>
<p>

<h2 id="Package-Resource-Names"><a href="#Package-Resource-Names" class="headerlink" title="Package Resource Names"></a>Package Resource Names</h2><p>该名字用于 ROS 文件系统级别的概念，用于简化指向磁盘文件和数据类型的过程。包资源名字非常简单: 在包名后增加资源名。例如，<code>std_msgs/String</code> 指 <code>std_msgs</code> 包中的 <code>String</code> 消息类型。  </p>
<p>可以使用包资源名引用的一些ros相关文件包括:  </p>
<ul>
<li>Message types（msg）</li>
<li>Service types（srv）</li>
<li>Node types</li>
</ul>
<p>可用 names：    </p>
<ul>
<li>以字母（<code>[a-z|A-Z]</code>）开始</li>
<li>后跟字母或数字、下划线、斜杠(&#x2F;)</li>
<li>最多有一个斜杠</li>
</ul>
<h2 id="roscpp-API"><a href="#roscpp-API" class="headerlink" title="roscpp API"></a>roscpp API</h2><p>参考：<a href="http://docs.ros.org/en/noetic/api/roscpp/html/namespaceros_1_1names.html">ros::names Namespace Reference</a></p>
<h1 id="全局名称"><a href="#全局名称" class="headerlink" title="全局名称"></a>全局名称</h1><p><code>/</code> 表示全局名称。由斜杠分开的一系列命名空间，每个斜杠代表一级命名空间。基本名（base name）称描述资源本身。<br>例如：&#x2F;teleop_turtle，该名称为全局名称，teleop_turtle 为基本名称。  </p>
<h1 id="相对名称"><a href="#相对名称" class="headerlink" title="相对名称"></a>相对名称</h1><p>缺少全局名称的斜杠 <code>/</code>。  </p>
<p><strong>相对名称解析</strong>：将当前默认的命名空间的名称加在相对名称的前面，从而将相对名解析为全局名称。  </p>
<p><strong>设置默认命名空间</strong>：默认的命名空间是单独为每个节点设置的，而不是在系统范围进行。为节点选择一个不同的默认命名空间的最好的也是最常用的方法是在 launch 文件中使用命名空间属性(ns)。ROS 提供如下方式设置默认命名空间：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过命令行参数 __ns 设置默认命名空间</span></span><br><span class="line">__ns:=default-namespace  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 shell 环境变量设置默认命名空间</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> ROS_NAMESPACE=default-namespace</span> </span><br></pre></td></tr></table></figure>

<blockquote>
<hr>
<ul>
<li>只有当没有其他由 <code>__ns</code> 参数指定的默认命名空间时，<code>ROS_NAMESPACE</code> 环境变量才有效</li>
</ul>
<hr>
</blockquote>
<h1 id="私有名称"><a href="#私有名称" class="headerlink" title="私有名称"></a>私有名称</h1><p>以 <code>~</code> 开始。和相对名称一样，私有名称并不能完全确定他们自身所在的命名空间，而是需要 ROS 客户端库将这个名称解析为一个全局名称。  </p>
<p>与相对名称的主要差别在于：<strong>私有名称不是用当前默认命名空间，而是使用其节点名称作为命名空间</strong>。</p>
<h1 id="匿名名称"><a href="#匿名名称" class="headerlink" title="匿名名称"></a>匿名名称</h1><p>一般用于节点名（匿名并不是指没有名字，而是指非用户指定而又没有语义信息的名字）。<strong>匿名名称的目的是使节点的命名更容易准守唯一性的规则</strong>。其思路是，当节点调用 <code>ros::init</code> 方法时可以请求一个自动分配的唯一名称。  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">ros::<span class="built_in">init</span>(argc, argv, base_name, ros::init_options::AnonymousName);</span><br></pre></td></tr></table></figure>
<p>注意：需要将 <em><code>ros::init_options::AnonymousName</code></em> 作为第四个参数传递给 ros::init 方法   </p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ros::<span class="built_in">init</span>(argc, argv, <span class="string">&quot;demo&quot;</span>);</span><br><span class="line"></span><br><span class="line">    ros::NodeHandle nh_global; <span class="comment">// global</span></span><br><span class="line">    <span class="function">ros::NodeHandle <span class="title">nh_local</span><span class="params">(<span class="string">&quot;~&quot;</span>)</span></span>; <span class="comment">// private</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 结果为 /</span></span><br><span class="line">    <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Global nh ns: %s&quot;</span>, nh_global.<span class="built_in">getNamespace</span>().<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="comment">// 结果为 /demo</span></span><br><span class="line">    <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Local nh ns: %s&quot;</span>, nh_local.<span class="built_in">getNamespace</span>().<span class="built_in">c_str</span>());</span><br><span class="line">    </span><br><span class="line">    std::string test_param1;</span><br><span class="line">    std::string test_param2;</span><br><span class="line">    nh_local.<span class="built_in">param</span>(<span class="string">&quot;param1&quot;</span>, test_param1, std::<span class="built_in">string</span>(<span class="string">&quot;param1&quot;</span>));</span><br><span class="line">    nh_global.<span class="built_in">param</span>(<span class="string">&quot;param2&quot;</span>, test_param2, std::<span class="built_in">string</span>(<span class="string">&quot;param2&quot;</span>));</span><br><span class="line">    </span><br><span class="line">    ros::Subscriber sub0 = private_nh.<span class="built_in">subscribe</span>(<span class="string">&quot;test_sub1&quot;</span>, <span class="number">1000</span>, chatterCallback);</span><br><span class="line">    ros::Subscriber sub1 = nh.<span class="built_in">subscribe</span>(<span class="string">&quot;test_sub2&quot;</span>, <span class="number">1000</span>, chatterCallback);</span><br><span class="line"></span><br><span class="line">    ros::<span class="built_in">spin</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用 <code>rosrun</code> 指令直接运行节点时，若不使用 <code>_name</code> 则默认节点名为 <code>ros::init</code> 中指定的名字；若使用 <code>launch</code> 文件启动节点，则节点名为 <code>&lt;node&gt;</code> 元素中 <code>name</code> 属性指定的值；若 <code>name</code> 属性值为空，则为匿名名称。  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">节点名为 /test</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun &lt;package&gt; demo __name:=<span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">节点名为 /ns0/demo</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun &lt;package&gt; demp __ns:=ns0</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">节点名为 /ns0/test</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun &lt;package&gt; demp __ns:=ns0 __name:=<span class="built_in">test</span></span></span><br></pre></td></tr></table></figure>
<p>

<p>若使用 launch 文件：  </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">&quot;ns&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- global serial --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/dev/ttyS0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;test&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;parameter_demo&quot;</span> <span class="attr">type</span>=<span class="string">&quot;test_node&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> <span class="attr">ns</span>=<span class="string">&quot;ns1&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- local serial --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/dev/ttyS1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>此时，节点名为 <code>/ns/ns1/test</code>  </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;global_param1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;global_param2&quot;</span> /&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;test_pkg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;test_node&quot;</span> <span class="attr">name</span>=<span class="string">&quot;test_node&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;local_param1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;local_param2&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 结果为</span></span><br><span class="line"><span class="comment">/param1 - global_param1</span></span><br><span class="line"><span class="comment">/param2 - global_param2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">/test_node/param1 - local_param1</span></span><br><span class="line"><span class="comment">/test_node/param2 - local_param2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">nh_local 读取的实际为 /test_node/param1</span></span><br><span class="line"><span class="comment">nh_global 读取的实际为 /test_node/param2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">并订阅主题：/test_node/test_sub1 和 /test_sub2</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;global_param1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;global_param2&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;test/global_param2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;test_pkg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;test_node&quot;</span> <span class="attr">name</span>=<span class="string">&quot;test_node&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;local_param1&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;param2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;local_param2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 结果为</span></span><br><span class="line"><span class="comment">/param1 - global_param1</span></span><br><span class="line"><span class="comment">/param2 - global_param2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">/test/param2 - test/global_param2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">/test/test_node/param1 - local_param1 # 包含指定的 namespace: test</span></span><br><span class="line"><span class="comment">/test/test_node/param2 - local_param2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">nh_local 读取的实际为 /test/test_node/param1</span></span><br><span class="line"><span class="comment">nh_global 读取的实际为 /test/param2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">并订阅主题：/test/test_node/test_sub1 和 /test/test_sub2</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Robot</category>
        <category>ROS</category>
      </categories>
      <tags>
        <tag>Robot</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title>tf</title>
    <url>/2024/09/21/Robot/TF/tf/</url>
    <content><![CDATA[<h2 id="tf-vs-tf2"><a href="#tf-vs-tf2" class="headerlink" title="tf vs tf2"></a>tf vs tf2</h2><p>tf2是tf的新实现，具有更好的抽象和依赖隔离。 有关概述，请参阅Wiki页面：tf2新版本的设计记录在tf2 &#x2F; Design页面上。  </p>
<p>tf2仍然是实验性的，在geometry_experimental堆栈中，仍然建议使用tf包，直到 tf2 正式发布。</p>
]]></content>
  </entry>
  <entry>
    <title>内参-外参</title>
    <url>/2024/09/21/Robot/%E4%BC%A0%E6%84%9F%E5%99%A8/%E5%86%85%E5%8F%82-%E5%A4%96%E5%8F%82/</url>
    <content><![CDATA[<p>机器人系统中，每个传感器都有各自的坐标系，各传感器得到的测量数据都是基于其自身坐标系。<br><strong>传感器标定</strong>：确定各传感器之间的坐标关系，即相对位姿。  </p>
<p>传感器标定可分为：<strong>外参标定</strong>和<strong>内参标定</strong>。 <strong>内参</strong>决定传感器内部映射关系，例如摄像头焦距、畸变系数等，是传感器自身特性，通常由厂家提供，但有部分需要自行标定，例如：相机焦距的定期矫正、lidar中各激光管的垂直朝向角。 <strong>外参</strong>决定传感器之间的相对位姿，通常由6个自由度表示（旋转+平移）。   </p>
<p>不同传感器之间标定的问题在于，每个传感器获取的数据类型不一样：</p>
<ul>
<li>摄像头得到的是 RGB 图像，但缺乏深度信息</li>
<li>激光雷达得到的是点云，但信号稀疏，噪音大</li>
<li>GPS&#x2F;IMU得到的是机器人的位姿<br>因此，不同传感器之间的标定方法不同。</li>
</ul>
<p>传感器之间的相对位姿关系可通过转换矩阵 M(4X4) 表示。传感器的位移、旋转、尺寸变化都可以用转换矩阵 M 来表示：<br><img src="/./images/matrix-M.png" alt="转换矩阵"><br>包含 3x3 的旋转矩阵 R 和 3x1 的平移矩阵 T。(只需 4x3?)<br>旋转矩阵 R 具有正交性，且行列值为 1，即： det(R) &#x3D; 1。 因此，旋转局局长可以转换为轻易装换为 四元素向量。</p>
<p>标定步骤：  </p>
<ul>
<li>粗略测量传感器之间的相对位姿</li>
<li>采集有用的传感器标定数据</li>
<li>算法优化使得标定误差最小化，得到标定值</li>
</ul>
<p>标定方法分为：targetless 和 target 两种。 前者在自然环境中进行，约束条件少，不需要用专门的target；后者则需要专门的控制场，有ground truth的target，比如典型的棋盘格平面板。</p>
<p>hand-eye calibrate标定算法: <a href="https://github.com/ethz-asl/hand_eye_calibration">hand_eye_calibration</a><br>lidar-imu 外参标定：<a href="https://github.com/ethz-asl/lidar_align">lidar_align</a><br>lidar-camera 外参标定：<a href="https://github.com/ankitdhall/lidar_camera_calibration">lidar_camera_calibration</a><br>lidar-to-lidar 外参标定：<br>相机内参的标定工具，例如：<a href="http://wiki.ros.org/camera_calibration">ROS Camera Calibration Tools</a> 和 Camera Calibration Toolbox for Matlab。<br>IMU外参标定：<a href="https://github.com/Kyle-ak/imu_tk">imu_tk</a>  </p>
<p>参考：<br>  -<a href="https://zhuanlan.zhihu.com/p/57028341">https://zhuanlan.zhihu.com/p/57028341</a><br>  -<a href="https://gitbook.cn/books/5cd8e067d7a0dd4c0f47391a/index.html">https://gitbook.cn/books/5cd8e067d7a0dd4c0f47391a/index.html</a>  </p>
]]></content>
  </entry>
  <entry>
    <title>术语</title>
    <url>/2024/09/21/Robot/%E6%A6%82%E7%8E%87%E6%9C%BA%E5%99%A8%E4%BA%BA/%E6%9C%AF%E8%AF%AD/</url>
    <content><![CDATA[<p><strong>置信度(belief)<strong>：反映了机器人有关环境状态的内部信息。机器人的状态不能直接测量，必须从数据中推测其位姿，因此要从位姿的内部置信度识别出真正的状态。概率机器人通过条件概率分布表示置信度。置信度分布可以获得数据为条件的关于状态变量的后验概率。用 <img src="http://chart.googleapis.com/chart?cht=tx&chl={bel}(x_t)" style="border:none;"> 表示状态变量 <img src="http://chart.googleapis.com/chart?cht=tx&chl=x_t" style="border:none;"> 的置信度：<img src="http://chart.googleapis.com/chart?cht=tx&chl={bel}(x_t) = p(x_t | z_{1:t}, u_{1:t})" style="border:none;"><br>1:t 表示从其实到 t 时刻的而所有值。<br>  用  <img src="http://chart.googleapis.com/chart?cht=tx&chl=\bar{bel}(x_t)" style="border:none;"> 表示预测(prediction)，即刚刚执行完控制  <img src="http://chart.googleapis.com/chart?cht=tx&chl=u_t" style="border:none;"> 之后，综合  <img src="http://chart.googleapis.com/chart?cht=tx&chl=z_t" style="border:none;"> 之前计算得到的后验值，是是基于以前状态的后验：<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=\bar{bel}(x_t) = p(x_t | z_{1:t-1}, u_{1:t})" style="border:none;"><br>由 <img src="http://chart.googleapis.com/chart?cht=tx&chl=\bar{bel}(x_t)" style="border:none;"> 计算 <img src="http://chart.googleapis.com/chart?cht=tx&chl={bel}(x_t)" style="border:none;"> 称为</strong>修正(correction) 或 测量更新(measurement update)</strong></p>
<p><strong>置信区间</strong>：<br>**海岸导航(coastal navigation)**：  </p>
<p><strong>马尔可夫假设</strong>：如果知道当前状态，马尔可夫假设设定过去和未来的数据都是独立的。  </p>
<p>隐马尔可夫模型(Hidden Markov Model - HMM)：<br>动态贝叶斯网络(Dynamic Bayes Network - DBN)：  </p>
<p>普通密度函数都是具有均值 μ 和方差 <img src="http://chart.googleapis.com/chart?cht=tx&chl=\sigma^2" style="border:none;"> 的一维正态分布。<br>正态分布的概率密度函数：<br>1)、假设x为标量 <img src="http://chart.googleapis.com/chart?cht=tx&chl=p(x)=(2\pi\sigma^2)^{-\frac{1}{2}} exp\{-\frac{1}{2}\frac{(x-\mu)^2}{\sigma^2}\}" style="border:none;"><br>2)、假设x为多维矢量 <img src="http://chart.googleapis.com/chart?cht=tx&chl=p(x)=det(2\pi\Sigma)^{-\frac{1}{2}} exp\{-\frac{1}{2}(x-\mu)^T\Sigma^{-1}(x-\mu)\}" style="border:none;"><br>其正态分布缩写方式：<img src="http://chart.googleapis.com/chart?cht=tx&chl=N(x;\mu, \delta^2)" style="border:none;"><br>**概率密度函数(Probability Density Function 即 PDF)**的积分总是等于 1，即：<img src="http://chart.googleapis.com/chart?cht=tx&chl=\displaystyle \int {p(x)dx} = 1" style="border:none;">  </p>
<p><strong>贝叶斯定理</strong>：基于新数据和与事件相关条件的先验知识，对事件概率进行更新的规则。贝叶斯公式：<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=p(x|y)=\frac{p(y|x)p(x)}{p(y)} = \frac{p(y|x)p(x)}{\Sigma_{x'}p(y|x')p(x')}}" style="border:none;"> – 离散<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=p(x|y)=\frac{p(y|x)p(x)}{p(y)}} = \frac{p(y|x)p(x)}{\displaystyle \int {p(y|x')p(x')dx'}}" style="border:none;"> – 连续<br>若 x 是一个希望由 y 推测出来的数值，则概率 p(x) 称为<strong>先验概率分布</strong>。其中，y 称为数据（例如：传感器测量值）。 p(x|y) 称为在 X 上的后验概率。 贝叶斯准则为利用 p(y|x) 和先验概率 p(x) 一起去计算后验概率 p(x|y) 提供了一种方便的方法。<br>贝叶斯准则的分母 p(y) 不依赖 x。因此贝叶斯公式中因子 <img src="http://chart.googleapis.com/chart?cht=tx&chl=p(y)^{-1}" style="border:none;"> 对任何 x 的后验概率 p(x|y) 都是相同的。因此，<img src="http://chart.googleapis.com/chart?cht=tx&chl=p(y)^{-1}" style="border:none;"> 经常写成贝叶斯准则中的归一化变量，通常用 <img src="http://chart.googleapis.com/chart?cht=tx&chl=\eta" style="border:none;"> 表示: <img src="http://chart.googleapis.com/chart?cht=tx&chl=p(x|y)=\eta{p(y|x)p(x)}" style="border:none;">   </p>
<p><strong>期望值（expectation）</strong>：即均值。是试验中每次可能结果的概率乘以其结果的总和。<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=E(X)=\Sigma\limits_{x}xp(x) " style="border:none;"> – 离散<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=E(X)=\displaystyle \int {xp(x)dx} " style="border:none;"> – 连续  </p>
<p><strong>协方差 Cov</strong> 衡量的是偏离均值的二次方期望：<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=Cov[x]=E[X - E[X]]^2 = E[X^2] - E[X]^2" style="border:none;"> </p>
<p><strong>熵（entropy）</strong>：<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=H_p(x)=E[-log_2p(x)]" style="border:none;"><br>是<strong>信息杂乱程度的描述，是 x 所携带的期望信息</strong>。离散情况下，假定 p(x) 是观测 x 的概率，则 $-log_2p(x)$ 就是使用最佳编码对 x 进行编码所需的比特数。熵用在机器人信息收集，用以表达机器人在执行具体行动时可能接收到的信息。  </p>
<p><strong>运动学状态（kinematic state）</strong>：例如机器人转动关节的关节角度等<br><strong>动态学状态（dynamic state）</strong>：例如机器人速度、角速度<br>环境中，移动的人或物体也有其自身的运动和动态状态。  </p>
<p><strong>状态</strong>：<img src="http://chart.googleapis.com/chart?cht=tx&chl=x_t" style="border:none;"><br><strong>测量（或观察、认知percept）</strong>：基于传感器测量数据。用<img src="http://chart.googleapis.com/chart?cht=tx&chl=z_t" style="border:none;"> 表示<br><strong>控制数据</strong>：控制数据携带环境中关于状态改变的信息，例如：机器人的速度、odometry等。 控制数据用 <img src="http://chart.googleapis.com/chart?cht=tx&chl=u_t" style="border:none;">表示。  </p>
]]></content>
  </entry>
  <entry>
    <title>疑问</title>
    <url>/2024/09/21/Robot/%E6%A6%82%E7%8E%87%E6%9C%BA%E5%99%A8%E4%BA%BA/%E7%96%91%E9%97%AE/</url>
    <content><![CDATA[<p>1、噪声互相依赖的可能原因？<br>1）人经常会劣化几个相邻传感器的测量<br>2）模型 m 的误差<br>3）后验的近似等  </p>
]]></content>
  </entry>
  <entry>
    <title>阅读笔记</title>
    <url>/2024/09/21/Robot/%E6%A6%82%E7%8E%87%E6%9C%BA%E5%99%A8%E4%BA%BA/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="1-机器人学不确定性"><a href="#1-机器人学不确定性" class="headerlink" title="1. 机器人学不确定性"></a>1. 机器人学不确定性</h3><p>1)、机器人所处环境不可预测. 在非结构化环境(例如:高速公路、家庭等)中, 环境高度动态, 且在许多方便是无法预测的.<br>2)、传感器误差及限制. 例如:相机无法看到墙后的物体, 激光雷达穿透玻璃等. 此外, 传感器还受噪声的限制.<br>3)、执行机构(例如:电机)是不可预测的. 其不确定性来自:控制噪声、机械磨损、机械故障等.<br>4)、软件导致的不确定性. 如：模型误差<br>5)、近似算法引入的不确定性. 机器人是实时系统, 这就限制了可执行的计算次数. 许多流行算法都是近似算法, 通过牺牲精度而得到实时响应.  </p>
<p>机器人感知问题用概率来描述，就是一个状态估计问题。概率算法能计算机器人的瞬间不确定性，也能预知未来的不确定性，并在决定正确的控制选择时， 对未来的不确定性进行考虑。</p>
<p>与传统模型的机器人技术相比，概率算法有如下优势：<br>1)、概率算法对机器人模型的精度要求较低<br>2)、概率算法对传感器精度要求比许多反应技术要低  </p>
<p>概率算法的两个局限：计算的复杂性(computational complexity)和近似的必要性(need to approximate)。</p>
<h3 id="2-递归状态估计"><a href="#2-递归状态估计" class="headerlink" title="2. 递归状态估计"></a>2. 递归状态估计</h3><p>概率机器人技术的核心是由传感器数据来估计状态。 <strong>状态估计</strong>解决的是从不能直接观测但可以推断的传感器数据中估计数量的问题。</p>
<p><strong>贝叶斯准则</strong>在概率机器人中起着主导作用。贝叶斯公式：<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=p(x|y)=\frac{p(y|x)p(x)}{p(y)} = \frac{p(y|x)p(x)}{\Sigma_{x'}p(y|x')p(x')}}" style="border:none;"> – 离散<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=p(x|y)=\frac{p(y|x)p(x)}{p(y)}} = \frac{p(y|x)p(x)}{\displaystyle \int {p(y|x')p(x')dx'}}" style="border:none;"> – 连续<br>若 x 是一个希望由 y 推测出来的数值，则概率 p(x) 称为<strong>先验概率分布</strong>。其中，y 称为数据（例如：传感器测量值）。 p(x|y) 称为在 X 上的后验概率分布(posterior probability distribution)。 贝叶斯准则为利用’逆’条件概率 p(y|x) 和先验概率 p(x) 一起去计算后验概率 p(x|y) 提供了一种方便的方法。<br>p(y|x) 在机器人学中，通常被称为: 生成模型 - <strong>generative model</strong>，因为在一定的抽象层面上，它表示状态变量 X 如何引起了检测数据 Y。</p>
<p><strong>机器人的置信度</strong>是对给定的所有过去的传感器测量值和所有过去控制的环境状态（包括机器人状态）的一个后验分布。大多数计算置信度的通用算法都是由贝叶斯算法给出的。该算法根据测量和控制数据计算置信度分布 bel()。  </p>
<p>贝叶斯滤波算法的两个步骤：<br>  1）、<strong>控制更新（或预测 prediction）</strong>，基于 t-1 时刻的置信度和控制  <img src="http://chart.googleapis.com/chart?cht=tx&chl=u_t" style="border:none;">   来计算状态  <img src="http://chart.googleapis.com/chart?cht=tx&chl=x_t" style="border:none;"> 的置信度。<br>  2）、<strong>测量更新（measurement update）</strong>，用观测到的测量 <img src="http://chart.googleapis.com/chart?cht=tx&chl=z_t" style="border:none;"> 的概率乘以置信度 <img src="http://chart.googleapis.com/chart?cht=tx&chl=\bar{bel}(x_t)" style="border:none;">。  </p>
<p>总之，贝叶斯滤波算法以 到时间 t 的测量和控制数据为条件来计算状态 <img src="http://chart.googleapis.com/chart?cht=tx&chl=x_t" style="border:none;"> 的后验。该算法在任何具体实现中都需要三个概率分布：初始置信度 <img src="http://chart.googleapis.com/chart?cht=tx&chl=p(x_0)" style="border:none;"> 、测量概率<img src="http://chart.googleapis.com/chart?cht=tx&chl=p(z_t | x_t)" style="border:none;">  、状态转移概率 <img src="http://chart.googleapis.com/chart?cht=tx&chl=p(x_t | u_t, x_{t_1})" style="border:none;">   </p>
<h3 id="6、机器人感知"><a href="#6、机器人感知" class="headerlink" title="6、机器人感知"></a>6、机器人感知</h3><p>环境测量模型(environment measurement models)包括概率机器人学中仅次于运动模型的第二个特定领域模型。测量模型描述在客观世界生成传感器测量的过程。模型的特性取决于传感器：成像传感器最好通过投影几何学建立模型，而声呐传感器最好通过描述声波和声波在环境表面上的反射来建立模型。  </p>
<p>概率机器人为传感器测量噪声建立模型。形式上，测量模型定义为条件概率分布<img src="http://chart.googleapis.com/chart?cht=tx&chl=p(z_t|x_t, m)" style="border:none;">   </p>
<ul>
<li><img src="http://chart.googleapis.com/chart?cht=tx&chl=x_t" style="border:none;">:机器人位姿  </li>
<li><img src="http://chart.googleapis.com/chart?cht=tx&chl=z_t" style="border:none;">:t时刻的测量值  </li>
<li>m: 环境地图</li>
</ul>
<p>传感器模型越精确，得到的结果越好。  </p>
<h3 id="7-定位"><a href="#7-定位" class="headerlink" title="7. 定位"></a>7. 定位</h3><h4 id="1、定位问题分类"><a href="#1、定位问题分类" class="headerlink" title="1、定位问题分类"></a>1、定位问题分类</h4><p>1.1、定位问题是以最初及运行期间可供使用信息的类型为特征的。随着难度的增加，可分为三类定位问题：<br>1）、位置跟踪（position tracking）<br>假定机器人初始位姿已知，通过适应机器人运动噪声来完成定位机器人。该方法的前提是传感器误差小。位姿不确定性用单峰分布(例如：高斯分布)来近似。 位置跟踪问题是一个局部问题，因为不确定性是局部的，并且局限于机器人真是位姿附近的区域。<br>即：在局部范围内，可认为传感器数据（例如里程计等）是准确的或者误差小的。<br>2）、全局定位<br>机器人初始位姿未知。机器人放置在环境中的某个地方，但缺少它的位置信息。全局定位方法不能假定位姿误差的有界性。 全局定位包括了位置跟踪。<br>3）、绑架问题（kidnapped）<br>绑架问题是全局定位问题的变种，但更加困难。运动过程中，机器人被绑架，瞬间移动到其它位置。 绑架问题比全局定位更困难的地方在于：机器人可能相信知道自己在哪，因为机器人不知道被绑架到其它位置了，仍然相信之前的定位是准确的。</p>
<p>1.2、影响定位的第二个方面是环境，环境又分为静态环境和动态环境<br>1）、静态环境<br>静态环境是指<strong>仅有的变量是机器人位姿</strong>的环境。即：只有机器人是移动的。<br>2）、动态环境<br>动态拥有出机器人外，位置和配置随时间变化的物体。及还有其它运动或动态物体。  </p>
<p>1.3、定位算法是否控制机器人运动<br>1）、被动定位（passive）<br>定位模块仅观察机器人运行。<br>2）、主动定位（active）<br>该类算法控制机器人，以便最小化定位误差。<br>例一：海岸导航。<br>例二：假设机器人位于对称的长廊环境，机器人在长廊过道中时，由于环境的局部对称性使得定位机器人是不可能的，只有当它运动进入其中一个房间才能消除模糊性并定位自身位姿。在这种情况下，主动定位可以主动控制机器人进入其中一个房间，来确定自身的位姿。  </p>
<p>1.4、单机器人与多机器人定位<br>多机器人环境中，每个机器人都能独立定位自身，因此多机器人定位问题可以通过单一机器人定位解决。然而，如果机器人能相互探测，定位可能更好。</p>
<h4 id="2、定位方法"><a href="#2、定位方法" class="headerlink" title="2、定位方法"></a>2、定位方法</h4><p>本章主要介绍单峰高斯定位技术。  </p>
<h3 id="8、蒙特卡洛定位与栅格定位"><a href="#8、蒙特卡洛定位与栅格定位" class="headerlink" title="8、蒙特卡洛定位与栅格定位"></a>8、蒙特卡洛定位与栅格定位</h3><p>本章介绍两个能解决全局定位问题的定位算法：栅格定位和蒙特卡洛定位（MCL）。<br><strong>栅格定位</strong>：使用直方图滤波表示后验置信度。 栅格定位存在的问题是：对于高分辨率的栅格，定位的计算量大；低分辨率的栅格又会导致附加信息的损失，会负面影响滤波。<br><strong>蒙特卡洛定位</strong>：使用粒子滤波估计机器人位姿的后验置信度。  </p>
<h4 id="1、栅格定位"><a href="#1、栅格定位" class="headerlink" title="1、栅格定位"></a>1、栅格定位</h4><h4 id="2、蒙特卡洛定位"><a href="#2、蒙特卡洛定位" class="headerlink" title="2、蒙特卡洛定位"></a>2、蒙特卡洛定位</h4>]]></content>
  </entry>
  <entry>
    <title>CANopen</title>
    <url>/2024/10/19/%E4%BB%A3%E7%A0%81%E7%BC%96%E7%A8%8B/CANopen/CANopen/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="6a1854ba7ef85194440fccb18b23265b9fbc7a27558c14a3495c14ef15068d2c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>代码编程</category>
        <category>CANopen</category>
      </categories>
      <tags>
        <tag>代码编程</tag>
        <tag>CANopen</tag>
      </tags>
  </entry>
  <entry>
    <title>CAN总线</title>
    <url>/2024/10/19/%E4%BB%A3%E7%A0%81%E7%BC%96%E7%A8%8B/CANopen/CAN%E6%80%BB%E7%BA%BF/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="9d9e36f0611db0d8497b787690d3e22aa025a0b3402cdd89755dfb9ca213665b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>代码编程</category>
        <category>CANopen</category>
      </categories>
      <tags>
        <tag>代码编程</tag>
        <tag>CANopen</tag>
      </tags>
  </entry>
  <entry>
    <title>libmodbus</title>
    <url>/2024/10/19/%E4%BB%A3%E7%A0%81%E7%BC%96%E7%A8%8B/modbus/libmodbus/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="4c5fa7dec9fed7dc428867862535d7c27214e366382ada64f4df2d115ab0537e"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>代码编程</category>
        <category>modbus</category>
      </categories>
      <tags>
        <tag>代码编程</tag>
        <tag>modbus</tag>
      </tags>
  </entry>
  <entry>
    <title>modbus</title>
    <url>/2024/10/19/%E4%BB%A3%E7%A0%81%E7%BC%96%E7%A8%8B/modbus/modbus/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="ae916ede22c4bc0a236c19c83771ff8d7d987a41bfc93d10bbd9cc1c56c76b8b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>代码编程</category>
        <category>modbus</category>
      </categories>
      <tags>
        <tag>代码编程</tag>
        <tag>modbus</tag>
      </tags>
  </entry>
  <entry>
    <title>modbus工具</title>
    <url>/2024/10/19/%E4%BB%A3%E7%A0%81%E7%BC%96%E7%A8%8B/modbus/modbus%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="a1b7b4757e953e55c8a8071ddffcd6109deed22a6a0564f28695d0408af162a6"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>代码编程</category>
        <category>modbus</category>
      </categories>
      <tags>
        <tag>代码编程</tag>
        <tag>modbus</tag>
      </tags>
  </entry>
  <entry>
    <title>ZeroMQ使用</title>
    <url>/2024/09/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/ZeroMQ/README/</url>
    <content><![CDATA[<p>参考：  </p>
<ul>
<li><a href="http://hintjens.com/blog:49">Using ZeroMQ Security</a>  </li>
<li><a href="https://www.hivemq.com/article/mqtt-vs-zeromq-for-iot/">MQTT vs ZeroMQ</a>  </li>
<li><a href="https://www.cnblogs.com/zengzy/p/5122634.html">zeromq源码分析</a></li>
</ul>
<h1 id="ZeroMQ-部署"><a href="#ZeroMQ-部署" class="headerlink" title="ZeroMQ 部署"></a>ZeroMQ 部署</h1><p>参考：<a href="https://zeromq.org/download/">https://zeromq.org/download/</a>  </p>
<p>Ubuntu 安装：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">sudo</span> apt install libzmq3-dev</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install libzmq5 libczmq-dev</span></span><br></pre></td></tr></table></figure>

<p>源码编译：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载源码，切换到相应版本的 tag</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/zeromq/libzmq.git</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> libzmq</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./version.sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置及编译 zeromq</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./autogen.sh</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure --prefix=/usr/local/zeromq</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make &amp;&amp; make install</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或使用 cmake 编译</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake ..</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make install</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置环境变量</span></span><br><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或在 /etc/ld.so.conf.d 中添加 zeromq.conf</span></span><br></pre></td></tr></table></figure>

<p>使用示例程序：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> --depth=1 https://github.com/imatix/zguide.git</span></span><br></pre></td></tr></table></figure>


<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/jedisct1/libsodium.git</span><br><span class="line">cd libsodium</span><br><span class="line">./autogen.sh -s</span><br><span class="line">./configure -prefix=/usr/local/libsodium &amp;&amp; make check</span><br><span class="line">sudo make install</span><br><span class="line">sudo ldconfig</span><br><span class="line">cd ..</span><br><span class="line"></span><br><span class="line">git clone https://github.com/zeromq/libzmq.git</span><br><span class="line">cd libzmq</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">./autogen.sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">./configure &amp;&amp; make check</span></span><br><span class="line">mkdir build &amp;&amp; cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/libzmq</span><br><span class="line">sudo make install</span><br><span class="line">sudo ldconfig</span><br><span class="line">cd ../../</span><br><span class="line"></span><br><span class="line">git clone https://github.com/zeromq/czmq.git</span><br><span class="line">cd czmq</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">./autogen.sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">./configure &amp;&amp; make check</span></span><br><span class="line">mkdir build &amp;&amp; cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/czmq</span><br><span class="line">sudo make install</span><br><span class="line">sudo ldconfig</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure>

<h1 id="ZeroMQ-使用"><a href="#ZeroMQ-使用" class="headerlink" title="ZeroMQ 使用"></a>ZeroMQ 使用</h1><h2 id="ZeroMQ-Socket-types"><a href="#ZeroMQ-Socket-types" class="headerlink" title="ZeroMQ Socket types"></a>ZeroMQ Socket types</h2><p>ZeroMQ 提供 12 中 Socket 类型：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*  Socket types.  */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_PAIR 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_PUB 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_SUB 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_REQ 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_REP 4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_DEALER 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_ROUTER 6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_PULL 7</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_PUSH 8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_XPUB 9</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_XSUB 10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZMQ_STREAM 11</span></span><br></pre></td></tr></table></figure>

<h2 id="zsock-t-结构体"><a href="#zsock-t-结构体" class="headerlink" title="zsock_t 结构体"></a>zsock_t 结构体</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">zsock_t</span> &#123;</span></span><br><span class="line">    <span class="type">uint32_t</span> tag; <span class="comment">// object 标记，用于运行时检测</span></span><br><span class="line">    <span class="type">void</span> *handle; <span class="comment">// libzmq 套接字句柄</span></span><br><span class="line">    <span class="type">char</span> *endpoint; <span class="comment">// 最后一个绑定端点(如果有的话)</span></span><br><span class="line">    <span class="type">char</span> *cache; <span class="comment">// 保存最后接收到的 zsock_brecv 字符串</span></span><br><span class="line">    <span class="type">int</span> type; <span class="comment">// 套接字类型</span></span><br><span class="line">    <span class="type">size_t</span> cache_size; <span class="comment">// 缓存大小</span></span><br><span class="line">    <span class="type">uint32_t</span> routing_id; <span class="comment">// server 套接字的 routing ID</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>其中，<code>tag</code> 在 <code>zsock_new</code> 时赋值为 <code>ZSOCK_TAG(0xcafe0004)</code>。zsock_t 实例总是将此标记作为其数据的前 4 个字节，这使得可以执行运行时对象类型和验证。  </p>
<h2 id="zsock-new"><a href="#zsock-new" class="headerlink" title="zsock_new"></a>zsock_new</h2><p>该接口会自动完成 zsock 泄漏检测 – 不是 zsock 官方接口的一部分。这使 CZMQ 能够智能地报告套接字泄漏 </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#   <span class="keyword">define</span> zsock_new(t) zsock_new_checked((t), __FILE__, __LINE__)</span></span><br></pre></td></tr></table></figure>
<p><code>zsock_new_checked(...)</code> 中创建 socket。这个宏传递调用方文件名和行号，以便 CZMQ 可以智能地报告套接字泄漏。要关闭这种检查，请在编译代码之前定义 <code>ZSOCK_NOCHECK</code>。  </p>
<p>最终，调用 <code>zsys_socket(...)</code> 创建套接字，并且，若为初次调用该接口，还会自动创建 ZMQ context。调用者负责在进程退出前销毁 ZMQ 套接字，避免 ZMQ 死锁(deadlock)。注意：不要在 CZMQ 应用中直接调用该接口，而应该使用 <code>zsock_new()</code> 方法。  </p>
<h2 id="zmalloc"><a href="#zmalloc" class="headerlink" title="zmalloc"></a>zmalloc</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> defined (_ZMALLOC_DEBUG) || defined (_ZMALLOC_PEDANTIC)</span></span><br><span class="line"><span class="meta">#   <span class="keyword">define</span> zmalloc(size) calloc(1,(size))</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#   <span class="keyword">define</span> zmalloc(size) safe_malloc((size), __FILE__, __LINE__)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>若需要追踪内存泄漏(如使用 mtrace)，则定义 <code>_ZMALLOC_DEBUG</code> 宏。<code>_ZMALLOC_PEDANTIC</code> 做同样的事情，但它的目的是将内存溢出的情况传播到调用堆栈。  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span> *</span><br><span class="line"><span class="title function_">safe_malloc</span> <span class="params">(<span class="type">size_t</span> size, <span class="type">const</span> <span class="type">char</span> *file, <span class="type">unsigned</span> line)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//     printf (&quot;%s:%u %08d\n&quot;, file, line, (int) size);</span></span><br><span class="line">    <span class="type">void</span> *mem = <span class="built_in">calloc</span> (<span class="number">1</span>, size);</span><br><span class="line">    <span class="keyword">if</span> (mem == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span> (<span class="built_in">stderr</span>, <span class="string">&quot;FATAL ERROR at %s:%u\n&quot;</span>, file, line);</span><br><span class="line">        <span class="built_in">fprintf</span> (<span class="built_in">stderr</span>, <span class="string">&quot;OUT OF MEMORY (malloc returned NULL)\n&quot;</span>);</span><br><span class="line">        fflush (<span class="built_in">stderr</span>);</span><br><span class="line">        <span class="built_in">abort</span> ();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="zsys-socket"><a href="#zsys-socket" class="headerlink" title="zsys_socket"></a>zsys_socket</h2><p>创建新的 ZMQ 套接字，且若为初次调用，会自动创建 ZMQ context。调用者负责在进程退出时销毁 ZMQ socket，避免 ZMQ 死锁(deadlock)。注意：不要在应用程序中直接调用该接口，而应该使用 <code>zsock_new()</code>  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> *<span class="title function_">zsys_socket</span> <span class="params">(<span class="type">int</span> type, <span class="type">const</span> <span class="type">char</span> *filename, <span class="type">size_t</span> line_nbr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 第一次初始化;如果应用程序将自己的线程调用与zsock混合在一起，如果两个线程试图同时创建套接字，则可能会失败。在这样的应用程序中，它们必须在启动任何线程之前在主程序中创建一个套接字。如果应用程序的线程使用zactor，那么可以保证它始终是安全的</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    zsys_init ();</span><br><span class="line">    ZMUTEX_LOCK (s_mutex);</span><br><span class="line">    <span class="type">void</span> *handle = zmq_socket (s_process_ctx, type);</span><br><span class="line">    <span class="keyword">if</span> (handle) &#123;</span><br><span class="line">        <span class="comment">//  Configure socket with process defaults</span></span><br><span class="line">        zsock_set_linger (handle, (<span class="type">int</span>) s_linger);</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> (ZMQ_VERSION_MAJOR == 2)</span></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> v2/v3 socket api in zsock_option.inc are not public (not</span></span><br><span class="line">        <span class="comment">// added to include/zsock.h) so we have to use zmq_setsockopt directly</span></span><br><span class="line">        <span class="comment">// This should be fixed and zsock_set_hwm should be used instead</span></span><br><span class="line"><span class="meta">#       <span class="keyword">if</span> defined (ZMQ_HWM)</span></span><br><span class="line">        <span class="type">uint64_t</span> value = s_sndhwm;</span><br><span class="line">        <span class="type">int</span> rc = zmq_setsockopt (handle, ZMQ_HWM, &amp;value, <span class="keyword">sizeof</span> (<span class="type">uint64_t</span>));</span><br><span class="line">        assert (rc == <span class="number">0</span> || zmq_errno () == ETERM);</span><br><span class="line"><span class="meta">#       <span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        <span class="comment">//  For later versions we use separate SNDHWM and RCVHWM</span></span><br><span class="line">        zsock_set_sndhwm (handle, (<span class="type">int</span>) s_sndhwm);</span><br><span class="line">        zsock_set_rcvhwm (handle, (<span class="type">int</span>) s_rcvhwm);</span><br><span class="line"><span class="meta">#   <span class="keyword">if</span> defined (ZMQ_IPV6)</span></span><br><span class="line">        zsock_set_ipv6 (handle, s_ipv6);</span><br><span class="line"><span class="meta">#   <span class="keyword">else</span></span></span><br><span class="line">        zsock_set_ipv4only (handle, s_ipv6? <span class="number">0</span>: <span class="number">1</span>);</span><br><span class="line"><span class="meta">#   <span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">        <span class="comment">//  Add socket to reference tracker so we can report leaks; this is</span></span><br><span class="line">        <span class="comment">//  done only when the caller passes a filename/line_nbr</span></span><br><span class="line">        <span class="keyword">if</span> (filename) &#123;</span><br><span class="line">            <span class="type">s_sockref_t</span> *sockref = (<span class="type">s_sockref_t</span> *) zmalloc (<span class="keyword">sizeof</span> (<span class="type">s_sockref_t</span>));</span><br><span class="line">            <span class="keyword">if</span> (sockref) &#123;</span><br><span class="line">                sockref-&gt;handle = handle;</span><br><span class="line">                sockref-&gt;type = type;</span><br><span class="line">                sockref-&gt;filename = filename;</span><br><span class="line">                sockref-&gt;line_nbr = line_nbr;</span><br><span class="line">                zlist_append (s_sockref_list, sockref);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                zmq_close (handle);</span><br><span class="line">                ZMUTEX_UNLOCK (s_mutex);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        s_open_sockets++;</span><br><span class="line">    &#125;</span><br><span class="line">    ZMUTEX_UNLOCK (s_mutex);</span><br><span class="line">    <span class="keyword">return</span> handle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="zsys-init"><a href="#zsys-init" class="headerlink" title="zsys_init"></a>zsys_init</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">void</span> *</span><br><span class="line"><span class="title function_">zsys_init</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined (__UNIX__)</span></span><br><span class="line">    <span class="comment">//To avoid two inits at same time</span></span><br><span class="line">    pthread_once(&amp;init_all_mutex_var, zsys_initialize_mutex);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (s_initialized) &#123;</span><br><span class="line">        assert (s_process_ctx);</span><br><span class="line">        <span class="keyword">return</span> s_process_ctx;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ZMUTEX_LOCK (s_init_mutex);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Doing this again here... to ensure that after mutex wait if the thread 2 gets execution, it will</span></span><br><span class="line">    <span class="comment">// will get the context right away</span></span><br><span class="line">    <span class="keyword">if</span> (s_initialized) &#123;</span><br><span class="line">        assert (s_process_ctx);</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined (__UNIX__)</span></span><br><span class="line">        <span class="comment">// unlock the mutex before returning the context</span></span><br><span class="line">        ZMUTEX_UNLOCK(s_init_mutex);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">        <span class="keyword">return</span> s_process_ctx;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Pull process defaults from environment</span></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_IO_THREADS&quot;</span>))</span><br><span class="line">        s_io_threads = atoi (getenv (<span class="string">&quot;ZSYS_IO_THREADS&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_MAX_SOCKETS&quot;</span>))</span><br><span class="line">        s_max_sockets = atoi (getenv (<span class="string">&quot;ZSYS_MAX_SOCKETS&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_MAX_MSGSZ&quot;</span>))</span><br><span class="line">        s_max_msgsz = atoi (getenv (<span class="string">&quot;ZSYS_MAX_MSGSZ&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_ZERO_COPY_RECV&quot;</span>))</span><br><span class="line">        s_zero_copy_recv = atoi (getenv (<span class="string">&quot;ZSYS_ZERO_COPY_RECV&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_FILE_STABLE_AGE_MSEC&quot;</span>))</span><br><span class="line">        s_file_stable_age_msec = atoi (getenv (<span class="string">&quot;ZSYS_FILE_STABLE_AGE_MSEC&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_LINGER&quot;</span>))</span><br><span class="line">        s_linger = atoi (getenv (<span class="string">&quot;ZSYS_LINGER&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_SNDHWM&quot;</span>))</span><br><span class="line">        s_sndhwm = atoi (getenv (<span class="string">&quot;ZSYS_SNDHWM&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_RCVHWM&quot;</span>))</span><br><span class="line">        s_rcvhwm = atoi (getenv (<span class="string">&quot;ZSYS_RCVHWM&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_PIPEHWM&quot;</span>))</span><br><span class="line">        s_pipehwm = atoi (getenv (<span class="string">&quot;ZSYS_PIPEHWM&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_IPV6&quot;</span>))</span><br><span class="line">        s_ipv6 = atoi (getenv (<span class="string">&quot;ZSYS_IPV6&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_LOGSTREAM&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (streq (getenv (<span class="string">&quot;ZSYS_LOGSTREAM&quot;</span>), <span class="string">&quot;stdout&quot;</span>))</span><br><span class="line">            s_logstream = <span class="built_in">stdout</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> (streq (getenv (<span class="string">&quot;ZSYS_LOGSTREAM&quot;</span>), <span class="string">&quot;stderr&quot;</span>))</span><br><span class="line">            s_logstream = <span class="built_in">stderr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        s_logstream = <span class="built_in">stdout</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_LOGSYSTEM&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (streq (getenv (<span class="string">&quot;ZSYS_LOGSYSTEM&quot;</span>), <span class="string">&quot;true&quot;</span>))</span><br><span class="line">            s_logsystem = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> (streq (getenv (<span class="string">&quot;ZSYS_LOGSYSTEM&quot;</span>), <span class="string">&quot;false&quot;</span>))</span><br><span class="line">            s_logsystem = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_AUTO_USE_FD&quot;</span>))</span><br><span class="line">        s_auto_use_fd = atoi (getenv (<span class="string">&quot;ZSYS_AUTO_USE_FD&quot;</span>));</span><br><span class="line"></span><br><span class="line">    zsys_catch_interrupts ();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined (__WINDOWS__)</span></span><br><span class="line">    ZMUTEX_INIT (s_mutex);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    s_sockref_list = zlist_new ();</span><br><span class="line">    <span class="keyword">if</span> (!s_sockref_list) &#123;</span><br><span class="line">        zsys_shutdown ();</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined (__UNIX__)</span></span><br><span class="line">        ZMUTEX_UNLOCK(s_init_mutex);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    srandom ((<span class="type">unsigned</span>) time (<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line">    assert (!s_process_ctx);</span><br><span class="line">    <span class="comment">//  We use zmq_init/zmq_term to keep compatibility back to ZMQ v2</span></span><br><span class="line">    s_process_ctx = zmq_init ((<span class="type">int</span>) s_io_threads);</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined (ZMQ_MAX_SOCKETS)</span></span><br><span class="line">    zmq_ctx_set (s_process_ctx, ZMQ_MAX_SOCKETS, (<span class="type">int</span>) s_max_sockets);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    s_initialized = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined (__UNIX__)</span></span><br><span class="line">    atexit (zsys_shutdown);</span><br><span class="line">    pthread_atfork(<span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;zsys_pthread_at_fork_handler);</span><br><span class="line">    <span class="comment">//don&#x27;t hold the lock because some of the function will call zsys_init again</span></span><br><span class="line">    ZMUTEX_UNLOCK(s_init_mutex);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//  The following functions call zsys_init(), so they MUST be called after</span></span><br><span class="line">    <span class="comment">//  s_initialized is set in order to avoid an infinite recursion</span></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_INTERFACE&quot;</span>))</span><br><span class="line">        zsys_set_interface (getenv (<span class="string">&quot;ZSYS_INTERFACE&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_IPV6_ADDRESS&quot;</span>))</span><br><span class="line">        zsys_set_ipv6_address (getenv (<span class="string">&quot;ZSYS_IPV6_ADDRESS&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_IPV6_MCAST_ADDRESS&quot;</span>))</span><br><span class="line">        zsys_set_ipv6_mcast_address (getenv (<span class="string">&quot;ZSYS_IPV6_MCAST_ADDRESS&quot;</span>));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        zsys_set_ipv6_mcast_address (<span class="string">&quot;ff02:0:0:0:0:0:0:1&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_IPV4_MCAST_ADDRESS&quot;</span>))</span><br><span class="line">        zsys_set_ipv4_mcast_address (getenv (<span class="string">&quot;ZSYS_IPV4_MCAST_ADDRESS&quot;</span>));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        zsys_set_ipv4_mcast_address (<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_LOGIDENT&quot;</span>))</span><br><span class="line">        zsys_set_logident (getenv (<span class="string">&quot;ZSYS_LOGIDENT&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_LOGSENDER&quot;</span>))</span><br><span class="line">        zsys_set_logsender (getenv (<span class="string">&quot;ZSYS_LOGSENDER&quot;</span>));</span><br><span class="line"></span><br><span class="line">    zsys_set_max_msgsz (s_max_msgsz);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined ZMQ_ZERO_COPY_RECV</span></span><br><span class="line">    zmq_ctx_set (s_process_ctx, ZMQ_ZERO_COPY_RECV, s_zero_copy_recv);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    zsys_set_file_stable_age_msec (s_file_stable_age_msec);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_THREAD_PRIORITY&quot;</span>))</span><br><span class="line">        zsys_set_thread_priority (atoi (getenv (<span class="string">&quot;ZSYS_THREAD_PRIORITY&quot;</span>)));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        zsys_set_thread_priority (s_thread_priority);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_THREAD_SCHED_POLICY&quot;</span>))</span><br><span class="line">        zsys_set_thread_sched_policy (atoi (getenv (<span class="string">&quot;ZSYS_THREAD_SCHED_POLICY&quot;</span>)));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        zsys_set_thread_sched_policy (s_thread_sched_policy);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_THREAD_NAME_PREFIX&quot;</span>))</span><br><span class="line">        zsys_set_thread_name_prefix (atoi (getenv (<span class="string">&quot;ZSYS_THREAD_NAME_PREFIX&quot;</span>)));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        zsys_set_thread_name_prefix (s_thread_name_prefix);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (getenv (<span class="string">&quot;ZSYS_THREAD_NAME_PREFIX_STR&quot;</span>))</span><br><span class="line">        zsys_set_thread_name_prefix_str (getenv (<span class="string">&quot;ZSYS_THREAD_NAME_PREFIX_STR&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s_process_ctx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>若为 Unix 系统，则使用 <code>pthread_once</code> 避免在多个线程中同时进行初始化</li>
<li>若已初始化，则返回进程 context，退出</li>
<li>获取环境变量</li>
<li>定义信号处理函数 <code>zsys_catch_interrupts()</code></li>
<li>初始化 socket 存储列表 <code>s_sockref_list</code>  </li>
<li>ZMQ 初始化，使用 <strong><code>zmq_init/zmq_term</code></strong> 兼容 ZMQ v2</li>
<li>若为 Unix 系统，则通过 <code>atexit(zsys_shutdown)</code> 指定退出时执行 <code>zsys_shutdown</code> 函数；并调用 <code>pthread_atfork</code>  </li>
<li>是否设置零拷贝 <code>ZMQ_ZERO_COPY_RECV</code>  </li>
<li><code>zsys_set_file_stable_age_msec</code></li>
<li>设置线程参数：    <ul>
<li>设置线程优先级 <code>zsys_set_thread_priority</code>  </li>
<li>设置线程调度策略 <code>zsys_set_thread_sched_polcy</code></li>
<li>设置线程名字前缀 <code>zsys_set_thread_name_prefix</code>，<code>zsys_set_thread_name_prefix_str</code></li>
</ul>
</li>
</ul>
<h2 id="zmq-socket"><a href="#zmq-socket" class="headerlink" title="zmq_socket"></a>zmq_socket</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> *<span class="title function_">zmq_socket</span> <span class="params">(<span class="type">void</span> *ctx_, <span class="type">int</span> type_)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!ctx_ || !(static_cast&lt;zmq::<span class="type">ctx_t</span> *&gt; (ctx_))-&gt;check_tag ()) &#123;</span><br><span class="line">        errno = EFAULT;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    zmq::<span class="type">ctx_t</span> *ctx = static_cast&lt;zmq::<span class="type">ctx_t</span> *&gt; (ctx_);</span><br><span class="line">    zmq::<span class="type">socket_base_t</span> *s = ctx-&gt;create_socket (type_);</span><br><span class="line">    <span class="keyword">return</span> static_cast&lt;<span class="type">void</span> *&gt; (s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>调用 <code>ctx-&gt;create_socket(type_)</code> 来创建套接字。该接口调用 <code>socket_base_t::create(...)</code> 来创建 socket 并注册其 mailbox，该接口中，根据套接字类型，调用相应接口(如：<code>pair_t</code>、<code>pub_t</code>、<code>sub_t</code>、<code>req_t</code>、<code>dealer_t</code>、<code>router_t</code>、<code>pull_t</code>、<code>push_t</code>、<code>xpub_t</code>、<code>xsub_t</code>、<code>stream_t</code>、<code>server_t</code>、<code>client_t</code>、<code>radio_t</code>、<code>dish_t</code>、<code>gather_t</code>、<code>scatter_t</code>、<code>dgram_t</code>、<code>peer_t</code>、<code>channel_t</code>)创建对应类型套接字    </p>
<h2 id="reaper-t-线程"><a href="#reaper-t-线程" class="headerlink" title="reaper_t 线程"></a>reaper_t 线程</h2><p>ZeroMQ 中的 Reaper 线程是一个后台线程，负责清理不再使用的资源，比如已断开的连接、已完成的消息等等。当一个 socket 或者一个 endpoint 被关闭时，其相关的资源会被标记为不再使用，并放入 Reaper thread 维护的队列中。Reaper thread 在空闲时会扫描这个队列，将不再使用的资源清理掉。</p>
<p>Reaper thread 的存在可以有效地减少应用程序的内存占用和资源浪费，特别是当应用程序运行时间较长、连接数量较大时。同时，Reaper thread 也可以提高应用程序的运行效率和稳定性。</p>
<h2 id="主要参数"><a href="#主要参数" class="headerlink" title="主要参数"></a>主要参数</h2><ul>
<li>ZSYS_IO_THREADS</li>
<li>ZSYS_MAX_SOCKETS</li>
<li>ZSYS_MAX_MSGSZ</li>
<li>ZSYS_ZERO_COPY_RECV</li>
<li>ZSYS_FILE_STABLE_AGE_MSEC</li>
<li>ZSYS_LINGER</li>
<li>ZSYS_SNDHWM</li>
<li>ZSYS_RCVHWM</li>
<li>ZSYS_PIPEHWM</li>
<li>ZSYS_IPV6</li>
<li>ZSYS_LOGSTREAM：日志路径</li>
<li>ZSYS_LOGSYSTEM</li>
<li>ZSYS_AUTO_USE_FD</li>
</ul>
<p>以下参数需在 <code>zsys_init()</code> 之后调用：  </p>
<ul>
<li>ZSYS_INTERFACE</li>
<li>ZSYS_IPV6_ADDRESS</li>
<li>ZSYS_IPV6_MCAST_ADDRESS</li>
<li>ZSYS_IPV4_MCAST_ADDRESS</li>
<li>ZSYS_LOGIDENT</li>
<li>ZSYS_LOGSENDER</li>
<li>ZSYS_THREAD_PRIORITY</li>
<li>ZSYS_THREAD_SCHED_POLICY</li>
<li>ZSYS_THREAD_NAME_PREFIX</li>
<li>ZSYS_THREAD_NAME_PREFIX_STR</li>
</ul>
<h1 id="使用问题"><a href="#使用问题" class="headerlink" title="使用问题"></a>使用问题</h1><h2 id="error-unknown-type-name-‘zctx-t’"><a href="#error-unknown-type-name-‘zctx-t’" class="headerlink" title="error: unknown type name ‘zctx_t’"></a>error: unknown type name ‘zctx_t’</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;czmq.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">zctx_t</span> *ctx = zctx_new ();</span><br><span class="line">    <span class="type">void</span> *publisher = zsocket_new (ctx, ZMQ_PUB);</span><br><span class="line">    zsocket_set_curve_server (publisher, <span class="literal">true</span>);</span><br><span class="line">    <span class="built_in">puts</span> (<span class="string">&quot;Hello, Curve!&quot;</span>);</span><br><span class="line">    zctx_destroy (&amp;ctx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>error: unknown type name ‘zctx_t’; did you mean ‘zrex_t’?</code>    </p>
<p>原因：代码中使用的是 CZMQ v2 API，这些 API 在 v3 中已启用，在 v4 中已被删除。  </p>
<p>解决方法：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;czmq.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">zsock_t</span> *publisher = zsock_new (ZMQ_PUB);</span><br><span class="line">    zsock_set_curve_server (publisher, <span class="literal">true</span>);</span><br><span class="line">    <span class="built_in">puts</span> (<span class="string">&quot;Hello, Curve!&quot;</span>);</span><br><span class="line">    zsock_destroy (&amp;publisher);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Missing-Message-Problem-Solver"><a href="#Missing-Message-Problem-Solver" class="headerlink" title="Missing Message Problem Solver"></a>Missing Message Problem Solver</h2><p>在使用 ZeroMQ 构建应用程序时，经常会遇到：丢失期望接收的消息。  </p>
<p>造成这种情况的最常见原因：<br><img src="/./images/Missing%20Message%20Problem%20Solver.png" alt="Missing Message Problem Solver"></p>
]]></content>
      <categories>
        <category>数据通信</category>
        <category>ZeroMQ</category>
      </categories>
      <tags>
        <tag>ZeroMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Advance Request-Reply</title>
    <url>/2024/09/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/ZeroMQ/ZeroMQ%20Advanced%20Request-Reply%20patterns/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><!-- TOC -->

<ul>
<li><a href="#"></a></li>
<li><a href="#request-reply-%E6%9C%BA%E5%88%B6">Request-Reply 机制</a><ul>
<li><a href="#the-simple-reply-envelop">The Simple Reply Envelop</a></li>
<li><a href="#the-extended-rely-envelope">The Extended Rely Envelope</a></li>
</ul>
</li>
<li><a href="#request-reply-%E7%BB%84%E5%90%88">Request-Reply 组合</a><ul>
<li><a href="#dealer-to-rep">DEALER to REP</a></li>
<li><a href="#req-to-router">REQ to ROUTER</a></li>
<li><a href="#dealer-to-router">DEALER to ROUTER</a></li>
<li><a href="#dealer-to-dealer">DEALER to DEALER</a></li>
<li><a href="#router-to-router">ROUTER to ROUTER</a></li>
</ul>
</li>
<li><a href="#router-%E5%A5%97%E6%8E%A5%E5%AD%97">ROUTER 套接字</a><ul>
<li><a href="#identities-and-addresses">Identities and Addresses</a></li>
<li><a href="#router-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86">ROUTER 异常处理</a></li>
</ul>
</li>
<li><a href="#the-load-balancing-pattern">The Load Balancing Pattern</a><ul>
<li><a href="#router-broker-and-dealer-workers">ROUTER Broker and DEALER Workers</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="Request-Reply-机制"><a href="#Request-Reply-机制" class="headerlink" title="Request-Reply 机制"></a>Request-Reply 机制</h1><p>reply message envelopes  </p>
<p><strong>Envelopes 是一种用地址安全地包装数据而不接触数据本身的方法</strong>。通过将 Reply 地址分离到一个信封中，可以编写通用的中介，例如 api 和代理，这些中介可以创建、读取和删除地址，而不管消息有效负载或结构是什么。  </p>
<p>在 Request-reply 模式中，<strong>信封(<em>envelope</em>)保存应答的返回地址</strong>。这也是为什么没有状态的 ZeroMQ 网络创建双向(round-trip)请求-应答对话的方式。  </p>
<p>使用 REQ 和 REP 套接字时，甚至看不到信封；这些套接字自动处理它们。但是对于大多数有趣的请求-应答模式，需要了解信封，特别是 ROUTER 套接字。  </p>
<h2 id="The-Simple-Reply-Envelop"><a href="#The-Simple-Reply-Envelop" class="headerlink" title="The Simple Reply Envelop"></a>The Simple Reply Envelop</h2><p>request-reply 通信由请求消息和最终的应答消息组成。在简单的 request-reply 模式中，每个请求都有一个应答。在更高级的模式中，请求和应答可以异步流动。然而，应答信封的工作方式总是一样的。  </p>
<p>ZeroMQ 应答信封组成结构：  </p>
<ul>
<li>零个或多个应答地址</li>
<li>后面跟着一个空帧(信封分隔符 delimiter)</li>
<li>然后跟着消息正文(零个或多个帧)<br>信封是由多个套接字在一个链中一起工作创建的。</li>
</ul>
<p>例如，以通过 REQ 套接字发送 “Hello” 为例。REQ 套接字创建尽可能简单的 rely 信封，其中没有地址，只有一个空分隔符帧和包含“Hello”字符串的消息帧。这是一个两帧信息。<br><img src="/./images/request%20with%20minimal%20envelope.png" alt="request with minimal envelope">  </p>
<p><strong>REP 套接字完成匹配工作：去掉信封，直到并包括分隔符帧，保存整个信封</strong>，并将 “Hello” 字符串传递给应用程序。因此，最初的 Hello World 示例在内部使用 request-rely 信封，但应用程序从未看到它们。  </p>
<p>查看在 hwclient 和 hwserver 之间的网络数据，可以看到的：每个请求和每个应答实际上是两个帧，一个空帧，然后是正文。  </p>
<h2 id="The-Extended-Rely-Envelope"><a href="#The-Extended-Rely-Envelope" class="headerlink" title="The Extended Rely Envelope"></a>The Extended Rely Envelope</h2><p>现在，在中间添加 ROUTER-DEALER 代理扩展 REQ-REP，看看这会如何影响应答信封。参考：第2章-套接字和模式中已经看到的扩展的请求-应答模式。实际上，可以插入任意数量的代理步骤。机制是一样的。<br><img src="/./images/extended%20request-rely%20pattern.png" alt="extended request-rely pattern"></p>
<p>Proxy 功能伪代码：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">prepare context, frontend and backend sockets</span><br><span class="line">while true:</span><br><span class="line">    poll on both sockets</span><br><span class="line">    if frontend had input:</span><br><span class="line">        read all frames from frontend</span><br><span class="line">        send to backend</span><br><span class="line">    if backend had input:</span><br><span class="line">        read all frames from backend</span><br><span class="line">        send to frontend</span><br></pre></td></tr></table></figure>

<p>ROUTER 套接字与其他套接字不同，它跟踪它拥有的每个连接，并告诉调用者这些连接。它告诉调用者的方式是将连接标识粘贴到接收到的每个消息前面。<strong>标识，也即地址</strong>，是一个二进制字符串，除了“这是连接的唯一句柄”之外没有任何意义。然后，当通过 ROUTER 套接字发送消息时，首先发送一个身份帧。</p>
<ul>
<li>从 Router 读取一条消息时，ZeroMQ 会封装一层信封，注明消息的来源</li>
<li>向 Router 写入一条消息时，ZeroMQ 会将信封拆开，并将消息传递给相应的对象</li>
</ul>
<p>ZeroMQ v2.2 及以前版本使用 <code>uid</code> 作为标识。<strong>ZeroMQ v3.0 及以后版本默认生成一个 5 字节的标识(0 +一个随机的 32 位整数)</strong> 。这对网络性能有一些影响，但只有在使用多个代理时才会有影响，这种情况很少见。主要的变化是通过删除对 UUID 库的依赖来简化 libzmq 的编译。  </p>
<p>假设 REQ 套接字于一个三字节的标识 <code>ABC</code>：<br><img src="/./images/reply%20with%20one%20address.png" alt="Reply with one Address"></p>
<h1 id="Request-Reply-组合"><a href="#Request-Reply-组合" class="headerlink" title="Request-Reply 组合"></a>Request-Reply 组合</h1><p>有四个请求-应答套接字，每个套接字都有特定的行为。已经了解了它们如何以简单和扩展的 请求-答复 模式进行连接。但这些套接字是可以用来解决许多问题。  </p>
<p>有效组合：  </p>
<ul>
<li>REQ to REP</li>
<li>DEALER to REP</li>
<li>REQ to ROUTER</li>
<li>DEALER to ROUTER</li>
<li>DEALER to DEALER</li>
<li>ROUTER to ROUTER</li>
</ul>
<p>无效组合：  </p>
<ul>
<li>REQ to REQ</li>
<li>REQ to DEALER</li>
<li>REP to REP</li>
<li>REP to ROUTER</li>
</ul>
<p>DEALER 就像一个异步 REQ 套接字，而 ROUTER 就像一个异步 REP 套接字。当使用 REQ 套接字时，可以使用 DEALER；只需要自己阅读和书写信封即可。在使用 REP 套接字的地方，可以使用一个 ROUTER；只需要自己管理身份即可。</p>
<h2 id="DEALER-to-REP"><a href="#DEALER-to-REP" class="headerlink" title="DEALER to REP"></a>DEALER to REP</h2><p>使用 DEALER 替代 REQ，提供了一个可以与多个 REP 服务器通信的异步客户端，发送请求后无需等待应答。  </p>
<p>使用 DEALER 于 REP 套接字通信时，必须准确的模拟 REQ 套接字将发送的信封，否则 REP 套接字将丢弃该消息。因此，要发送消息，需要：  </p>
<ul>
<li>发送一个设置了 MORE 标志的空消息帧</li>
<li>发送消息正文</li>
</ul>
<p>另一端接收到消息时：  </p>
<ul>
<li>接收第一帧，若不为空，则丢弃整条消息</li>
<li>接受下一帧并将其传递给应用程序</li>
</ul>
<h2 id="REQ-to-ROUTER"><a href="#REQ-to-ROUTER" class="headerlink" title="REQ to ROUTER"></a>REQ to ROUTER</h2><p>提供了一个可以同时与多个 REQ 客户端通信的异步服务器。  </p>
<p>可通过两种不同的方式使用 ROUTER：  </p>
<ul>
<li>作为在前端和后端套接字之间切换消息的代理</li>
<li>作为读取消息并对其进行操作的应用程序</li>
</ul>
<p>第一种方式，ROUTER 简单读取所有帧，包括身份识别帧，然后直接传送他们。第二种方法，ROUTER 必须知道它所发送的 REPLY 信封的格式。  </p>
<h2 id="DEALER-to-ROUTER"><a href="#DEALER-to-ROUTER" class="headerlink" title="DEALER to ROUTER"></a>DEALER to ROUTER</h2><p>使异步客户端能够与异步服务器进行通信，双方都可以完全控制消息格式。  </p>
<p>DEALER 和 ROUTER 都可以处理任意消息格式。  </p>
<h2 id="DEALER-to-DEALER"><a href="#DEALER-to-DEALER" class="headerlink" title="DEALER to DEALER"></a>DEALER to DEALER</h2><p>使用 DEALER 替换 REP 时，worker 进程可以是完全异步的，发送任意数量的回复。代价是必须自行管理回复信封。  </p>
<h2 id="ROUTER-to-ROUTER"><a href="#ROUTER-to-ROUTER" class="headerlink" title="ROUTER to ROUTER"></a>ROUTER to ROUTER</h2><p>使用复杂。  </p>
<h1 id="ROUTER-套接字"><a href="#ROUTER-套接字" class="headerlink" title="ROUTER 套接字"></a>ROUTER 套接字</h1><h2 id="Identities-and-Addresses"><a href="#Identities-and-Addresses" class="headerlink" title="Identities and Addresses"></a>Identities and Addresses</h2><p>ZeroMQ 中的身份(identity)被用作回复信封中的地址。在大多数情况下，标识是任意的并且对于 ROUTER 套接字而言是本地的：它是哈希表中的查找键。独立地，对端可以拥有物理地址（网络端点，如 <code>tcp://192.168.55.117:5670</code>）或逻辑地址（UUID 或电子邮件地址或其他唯一密钥）。  </p>
<p>使用 ROUTER 套接字与特定对端通信的应用程序可以将逻辑地址转换为标识（如果它已构建了必要的哈希表）。因为 ROUTER 套接字仅在某个对端发送消息时宣布连接的身份（到特定对端），所以只能真正回复消息，而不能自发地与对端通信。  </p>
<p>即使翻转规则并使 ROUTER 连接到对端而不是等待对端连接到 ROUTER，情况也是如此。但是，可以强制 ROUTER 套接字使用逻辑地址来代替其标识。通过 <code>zmq_setsockopt</code> 配置。其工作原理如下：</p>
<ul>
<li>对端应用程序在绑定或连接之前设置其对端套接字（DEALER 或 REQ）的 <code>ZMQ_IDENTITY</code> 选项</li>
<li>通常，对端会连接到已绑定的 ROUTER 套接字。但 ROUTER 也可以连接到对端</li>
<li>在连接时，对端套接字告诉 ROUTER 套接字“请使用此身份进行此连接”</li>
<li>如果对端套接字没有说明这一点，则 ROUTER 会为连接生成任意随机标识</li>
<li>ROUTER 套接字现在向应用程序提供此逻辑地址，作为来自该对端的任何消息的前缀身份帧</li>
<li>ROUTER 还期望逻辑地址作为任何传出消息的前缀标识帧</li>
</ul>
<p>例如：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  Demonstrate request-reply identities</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;zhelpers.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> *context = zmq_ctx_new ();</span><br><span class="line">    <span class="type">void</span> *sink = zmq_socket (context, ZMQ_ROUTER);</span><br><span class="line">    zmq_bind (sink, <span class="string">&quot;inproc://example&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  First allow 0MQ to set the identity</span></span><br><span class="line">    <span class="type">void</span> *anonymous = zmq_socket (context, ZMQ_REQ);</span><br><span class="line">    zmq_connect (anonymous, <span class="string">&quot;inproc://example&quot;</span>);</span><br><span class="line">    s_send (anonymous, <span class="string">&quot;ROUTER uses a generated 5 byte identity&quot;</span>);</span><br><span class="line">    s_dump (sink);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Then set the identity ourselves</span></span><br><span class="line">    <span class="type">void</span> *identified = zmq_socket (context, ZMQ_REQ);</span><br><span class="line">    zmq_setsockopt (identified, ZMQ_IDENTITY, <span class="string">&quot;PEER2&quot;</span>, <span class="number">5</span>);</span><br><span class="line">    zmq_connect (identified, <span class="string">&quot;inproc://example&quot;</span>);</span><br><span class="line">    s_send (identified, <span class="string">&quot;ROUTER socket uses REQ&#x27;s socket identity&quot;</span>);</span><br><span class="line">    s_dump (sink);</span><br><span class="line"></span><br><span class="line">    zmq_close (sink);</span><br><span class="line">    zmq_close (anonymous);</span><br><span class="line">    zmq_close (identified);</span><br><span class="line">    zmq_ctx_destroy (context);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该示例是链接到 ROUTER 套接字的两个端点的示例，其中一个强加逻辑地址 “PEER2”。  </p>
<h2 id="ROUTER-异常处理"><a href="#ROUTER-异常处理" class="headerlink" title="ROUTER 异常处理"></a>ROUTER 异常处理</h2><p>ZeroMQ V3.2 开始，可以设置 <code>ZMQ_ROUTER_MANDATORY</code> 来捕获发送失败错误（旧版本无法发送消息时采用丢弃策略）。在 ROUTER 套接字上设置，然后在 send 调用上提供不可路由的标识时，套接字将发出 <code>EHOSTUNREACH</code> 错误。  </p>
<h1 id="The-Load-Balancing-Pattern"><a href="#The-Load-Balancing-Pattern" class="headerlink" title="The Load Balancing Pattern"></a>The Load Balancing Pattern</h1><p><strong>负载均衡</strong>。  </p>
<p>以邮局为例，如果每个柜台有一个队列，并且有些人购买邮票(一种快速、简单的交易)，有些人开设新账户(一种非常缓慢的交易)，那么将发现购买邮票的人被不公平地困在队列中。就像在邮局一样，如果消息传递体系结构不公平，人们就会感到恼火。  </p>
<p>邮局示例的解决方案是创建一个单一队列，这样即使一两个柜台工作缓慢，其他柜台也将继续按照先到先得的原则为客户提供服务。  </p>
<p>PUSH 和 DEALER 使用简单方法的原因之一是纯粹的性能。如果您到达美国任何一个主要机场，您都会发现入境处排着长队。边境巡逻官员会提前派人在每个柜台排队，而不是单独排队。让人们提前步行五十码可以为每位乘客节省一两分钟。而且由于每次护照检查所需的时间大致相同，因此或多或少是公平的。这就是 <strong>PUSH 和 DEALER 的策略：提前发送工作负载，so that there is less travel distance</strong>。</p>
<p>回到连接到代理(ROUTER)的 worker (DEALER 或 REQ)的场景。代理必须知道 worker 何时准备好，并保留 worker 列表，以便每次都可以使用最近使用最少的 worker。  </p>
<p>事实上，解决方案非常简单：worker 在启动时以及完成每项任务后发送一条 <code>ready</code> 消息。代理逐一读取这些消息。每次它读取一条消息时，都是来自最后使用的工作线程。因为使用的是 ROUTER 套接字，所以获得了一个身份，然后可以使用该身份将任务发送回 worker 线程。</p>
<p>这是请求-答复的一种变形，因为任务是与答复一起发送的，并且任务的任何响应都作为新请求发送。  </p>
<h2 id="ROUTER-Broker-and-DEALER-Workers"><a href="#ROUTER-Broker-and-DEALER-Workers" class="headerlink" title="ROUTER Broker and DEALER Workers"></a>ROUTER Broker and DEALER Workers</h2><p>任何可以使用 REQ 的地方，都可以使用 DEALER。具体区别有两点：  </p>
<ul>
<li>REQ 套接字始终在任何数据帧之前发送一个空定界符帧，而 DEALER 没有</li>
<li>REQ 套接字在收到回复之前只会发送一条消息，而 DEALER 是完全异步的</li>
</ul>
]]></content>
      <categories>
        <category>数据通信</category>
        <category>ZeroMQ</category>
      </categories>
      <tags>
        <tag>ZeroMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>ctx_t</title>
    <url>/2024/09/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/ZeroMQ/ZeroMQ%20context/</url>
    <content><![CDATA[<h1 id="ctx-t"><a href="#ctx-t" class="headerlink" title="ctx_t"></a>ctx_t</h1><p>ZeroMQ 中的 context 相关类。封装了与库关联的所有全局状态。用于支持 ZeroMQ 的多个套接字（Socket）在同一个进程中进行通信。<code>ctx_t</code> 会管理 ZeroMQ 库中所有的内存和线程资源，并且负责将消息传递给正确的套接字。ctx_t 主要提供以下功能：  </p>
<ul>
<li><strong>管理 ZeroMQ 库中的内存和线程资源</strong>。context 会为每个与之关联的套接字分配内存和线程资源，并在套接字关闭后回收这些资源，以避免内存泄漏和资源浪费</li>
<li><strong>建立、销毁套接字</strong></li>
<li><strong>提供事件循环（Event Loop）机制，以支持异步 I&#x2F;O</strong>。套接字接收到消息时，其回调函数将被加入到时事件循环队列中，等待后续处理</li>
</ul>
<p><code>ctx_t</code> 实例可以通过调用 <code>zmq_ctx_new()</code> 函数来创建，并且用 <code>zmq_ctx_destroy()</code> 函数来销毁。一个进程可以拥有多个 <code>ctx_t</code> 实例，但通常情况下只需要一个。在创建 <code>ctx_t</code> 实例时，可以提供一个整数参数来指定该 context 的线程数，即可以指定该 context 在多少个线程中进行。线程数目一般需要根据使用场景和机器配置来确定。<strong>如果线程数值为 0，则 ctx_t 会根据机器配置选择合适的线程数目</strong>。</p>
<p>通过使用 context，可以有效地管理和优化 ZeroMQ 库中的资源使用。在创建 context 时，可以通过设置参数来改变 context 的属性。常用的参数包括：</p>
<ul>
<li><strong>线程数目</strong>：可以指定 context 的线程数目，以控制其并发处理能力。如果线程数值为 0，则 ctx_t 会根据机器配置选择合适的线程数目</li>
<li><strong>消息缓冲区大小</strong>：可以控制消息缓冲区的大小，以适应不同的应用场景</li>
<li><strong>I&#x2F;O 内核事件驱动器类型</strong>：可以选择使用 epoll、kqueue 等内核事件驱动器类型，以更好地利用操作系统底层的异步 I&#x2F;O 能力</li>
</ul>
<blockquote>
<hr>
<ul>
<li>注意：在同一进程中，应该只创建一个 context。多个 context 会导致资源浪费和不必要的复杂性。</li>
</ul>
<hr>
</blockquote>
<h2 id="ctx-t-构造函数"><a href="#ctx-t-构造函数" class="headerlink" title="ctx_t() 构造函数"></a>ctx_t() 构造函数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">zmq::<span class="type">ctx_t</span>::<span class="type">ctx_t</span> () :</span><br><span class="line">    _tag (ZMQ_CTX_TAG_VALUE_GOOD), <span class="comment">// ZMQ_CTX_TAG_VALUE_GOOD 与 ZMQ_CTX_TAG_VALUE_BAD</span></span><br><span class="line">    _starting (<span class="literal">true</span>),</span><br><span class="line">    _terminating (<span class="literal">false</span>),</span><br><span class="line">    _reaper (<span class="literal">NULL</span>),</span><br><span class="line">    _max_sockets (clipped_maxsocket (ZMQ_MAX_SOCKETS_DFLT)),</span><br><span class="line">    _max_msgsz (INT_MAX), <span class="comment">// 消息最大大小</span></span><br><span class="line">    _io_thread_count (ZMQ_IO_THREADS_DFLT), <span class="comment">// 默认线程数为 1</span></span><br><span class="line">    _blocky (<span class="literal">true</span>), <span class="comment">// context 是否在终止时等待(可能永远)</span></span><br><span class="line">    _ipv6 (<span class="literal">false</span>),</span><br><span class="line">    _zero_copy (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> HAVE_FORK</span></span><br><span class="line">    _pid = getpid (); <span class="comment">// 获取当前进程 ID</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ZMQ_HAVE_VMCI</span></span><br><span class="line">    _vmci_fd = <span class="number">-1</span>;</span><br><span class="line">    _vmci_family = <span class="number">-1</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Initialise crypto library, if needed.若设置 ZMQ_USE_LIBSODIUM 初始化加密库 sodium </span></span><br><span class="line">    zmq::random_open ();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ZMQ_USE_NSS</span></span><br><span class="line">    <span class="comment">// 初始化NSS库（Network Security Services）的函数. </span></span><br><span class="line">    <span class="comment">// NSS 是一个开源加密库，用于支持网络安全协议的实现。例如 SSL/TLS 及 S/MIME 等</span></span><br><span class="line">    NSS_NoDB_Init (<span class="literal">NULL</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ZMQ_USE_GNUTLS</span></span><br><span class="line">    <span class="comment">// 初始化 GnuTLS 加密库.</span></span><br><span class="line">    gnutls_global_init ();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据通信</category>
        <category>ZeroMQ</category>
      </categories>
      <tags>
        <tag>ZeroMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>ZeroMQ sockets and patterns</title>
    <url>/2024/09/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/ZeroMQ/ZeroMQ%20sockets%20and%20patterns/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><!-- TOC -->

<ul>
<li><a href="#"></a></li>
<li><a href="#socket-api">Socket API</a><ul>
<li><a href="#%E5%B0%86%E5%A5%97%E6%8E%A5%E5%AD%97%E6%B7%BB%E5%8A%A0%E5%88%B0%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E7%BB%93%E6%9E%84%E4%B8%AD">将套接字添加到网络拓扑结构中</a></li>
<li><a href="#%E5%8F%91%E9%80%81%E6%8E%A5%E6%94%B6%E6%B6%88%E6%81%AF">发送&#x2F;接收消息</a></li>
<li><a href="#unicast-transports">Unicast Transports</a></li>
<li><a href="#zeromq-%E4%B8%8D%E5%8F%AA%E6%98%AF%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93">ZeroMQ 不只是数据传输</a></li>
<li><a href="#io-threads">I&#x2F;O Threads</a></li>
</ul>
</li>
<li><a href="#%E6%B6%88%E6%81%AF%E6%A8%A1%E5%BC%8F">消息模式</a><ul>
<li><a href="#high-level-%E6%B6%88%E6%81%AF%E6%A8%A1%E5%BC%8F">High-Level 消息模式</a></li>
<li><a href="#%E6%B6%88%E6%81%AF%E7%9A%84%E4%BD%BF%E7%94%A8">消息的使用</a></li>
<li><a href="#%E5%A4%84%E7%90%86%E5%A4%9A%E4%B8%AA%E5%A5%97%E6%8E%A5%E5%AD%97">处理多个套接字</a></li>
<li><a href="#multipart-messages">Multipart Messages</a></li>
<li><a href="#intermediaries-and-proxies">Intermediaries and Proxies</a></li>
<li><a href="#%E5%8F%91%E7%8E%B0%E6%9C%8D%E5%8A%A1%E9%97%AE%E9%A2%98">发现服务问题</a></li>
<li><a href="#shared-queue">Shared Queue</a></li>
<li><a href="#zeromq-%E7%9A%84%E5%86%85%E7%BD%AE%E4%BB%A3%E7%90%86%E5%87%BD%E6%95%B0">ZeroMQ 的内置代理函数</a></li>
<li><a href="#transport-bridging">Transport Bridging</a></li>
</ul>
</li>
<li><a href="#%E5%A4%84%E7%90%86%E9%94%99%E8%AF%AF%E5%8F%8A-eterm">处理错误及 ETERM</a></li>
<li><a href="#%E5%A4%84%E7%90%86%E4%B8%AD%E6%96%AD%E4%BF%A1%E5%8F%B7">处理中断信号</a></li>
<li><a href="#%E6%A3%80%E6%9F%A5%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F">检查内存泄漏</a></li>
<li><a href="#zeromq-%E5%A4%9A%E7%BA%BF%E7%A8%8B">ZeroMQ 多线程</a></li>
<li><a href="#%E9%9B%B6%E6%8B%B7%E8%B4%9D%E2%80%BB">零拷贝※</a></li>
<li><a href="#pub-sub-message-envelopes">Pub-Sub Message Envelopes</a></li>
<li><a href="#high-water-marks%E5%8D%B3-hwm">High-Water Marks即 HWM</a></li>
</ul>
<!-- /TOC -->

<h1 id="Socket-API"><a href="#Socket-API" class="headerlink" title="Socket API"></a>Socket API</h1><p>ZMQ 提供了一套类似于 BSD 套接字的 API，但将很多消息处理机制的细节隐藏了起来。  </p>
<p>套接字事实上是用于网络编程的标准接口，ZMQ 之所那么吸引人眼球（stopping your eyes from falling onto your cheeks），原因之一就是它是建立在标准套接字 API 之上。因此，ZMQ 的套接字操作非常容易理解，其生命周期主要包含四个部分：  </p>
<ul>
<li>创建和销毁套接字：<code>zmq_socket()</code>, <code>zmq_close()</code></li>
<li>配置和读取套接字选项：<code>zmq_setsockopt()</code>， <code>zmq_getsockopt()</code></li>
<li>为套接字建立连接：<code>zmq_bind()</code>，<code>zmq_connect()</code>  </li>
<li>发送和接收消息：<code>zmq_send()</code>，<code>zmq_recv()</code></li>
</ul>
<p>注意：套接字永远是 void * 类型，而消息则是一个数据结构体。因此，在 C 语言中，通过变量传递套接字，而用引用传递消息。注意：<strong>ZMQ 中所有的套接字都由 ZMQ 管理，只有消息是由用户管理</strong>。  </p>
<p>创建、销毁以及配置套接字的工作和处理任何对象一样。但是，注意 ZMQ 是异步的、可扩展的，因此将其应用到网络结构中时，可能需要更多时间来理解。  </p>
<h2 id="将套接字添加到网络拓扑结构中"><a href="#将套接字添加到网络拓扑结构中" class="headerlink" title="将套接字添加到网络拓扑结构中"></a>将套接字添加到网络拓扑结构中</h2><p>连接两个节点时，其中一个节点需要适用 <code>zmq_bind()</code>，另一个则使用 <code>zmq_connect()</code>。通常而言，使用 <code>zmq_bind()</code> 的节点称为服务器，其有一个较为固定的网络地址；使用 <code>zmq_connect()</code> 连接的节点称为客户端，其地址不固定。  </p>
<p>ZMQ 连接和传统 TCP 连接的区别主要有：  </p>
<ul>
<li>使用多种协议，例如：inproc(进程内)、IPC(进程间)、TCP、pgm、epgm 等。对应接口：<code>zmq_inproc()</code>、<code>zmq_ipc()</code>、<code>zmq_tcp()</code>、<code>zmq_pgm()</code>、<code>zmq_epgm()</code> 等</li>
<li>一个套接字可以有许多 outgoing 连接和许多 incoming 连接</li>
<li>没有 <code>zmq_accept()</code> 方法。当套接字绑定到端点时，它会自动开始 accepting 连接</li>
<li>网络连接是在后台进行的，如果网络连接断开(例如，如果端点退出然后又重启)，ZeroMQ 会自动重新连接</li>
<li>应用程序代码不能直接使用这些连接；它们被封装在 ZMQ 底层</li>
<li>连接是异步的，并由一组消息队列做缓冲</li>
<li>连接会表现出某种消息模式，这是由创建连接的套接字类型决定的</li>
</ul>
<p>很多架构中都使用 C&#x2F;S 架构。其中服务端是比较稳定的组件，而客户端组件则较为动态，也就是说，它们经常启动&#x2F;停止。所以，有时会出现寻址问题：服务器对客户端是可见的，但客户端不一定是可见的。因此，架构中哪些组件应作为服务端(使用 <code>zmq_bind()</code>)，哪些作为客户端(<code>zmq_connect()</code>) 是很明显的。同时，它还取决于正在使用的套接字类型，对于不同的网络体系结构有一些例外。  </p>
<p>在传统网络连接中，先打开客户端时一定会收到系统报错信息，但 ZQM 让用户能够自由地启动架构中的组件。当客户端使用 <code>zmq_connect()</code> 连接至某个端点时，它就已经能够使用该套接字发送消息了。如果这时，服务端启动起来了，并使用 <code>zmq_bind()</code> 绑定至该端点，ZMQ 将自动开始转发消息。  </p>
<p>服务端节点可以仅使用一个套接字就能绑定至多个端点，也就是说，能够使用不同的协议来建立连接。例如：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">zmq_bind (socket, <span class="string">&quot;tcp://*:5555&quot;</span>);</span><br><span class="line">zmq_bind (socket, <span class="string">&quot;tcp://*:9999&quot;</span>);</span><br><span class="line">zmq_bind (socket, <span class="string">&quot;ipc://myserver.ipc&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>注意：不能多次绑定至同一个端点。  </p>
<p>每当有客户端节点使用 <code>zmq_connect()</code> 连接至上述某个端点时，服务端就会自动创建连接。ZMQ 没有对连接数量进行限制。此外，<strong>客户端节点也可以使用一个套接字同时建立多个连接</strong>。  </p>
<p><strong>套接字是有类型的，套接字类型定义了套接字的行为，它在发送和接收消息时的规则等</strong>。<strong>可以将不同种类的套接字进行连接</strong>，如 PUB-SUB 组合，这种组合称之为发布-订阅模式，其他组合也会有相应的模式名称。  </p>
<h2 id="发送-接收消息"><a href="#发送-接收消息" class="headerlink" title="发送&#x2F;接收消息"></a>发送&#x2F;接收消息</h2><p>发送和接收消息使用的是 <code>zmq_msg_send()</code>和 <code>zmq_msg_recv()</code>。虽然函数名称看起来很直白，但由于 ZMQ 的 I&#x2F;O 模式和传统的TCP协议有很大不同，因此还是需要花点时间去理解的。  </p>
<p>TCP 套接字和 ZMQ 套接字在传输数据方面的区别：  </p>
<ul>
<li>**ZMQ 套接字传输的是消息，而不是字节(TCP)或帧(UDP)**。消息是指一段指定长度的二进制数据。这种设计是为了性能优化而考虑的</li>
<li>ZMQ 套接字在后台进行 I&#x2F;O 操作，即：无论是接收还是发送消息，都会先传送到一个本地的缓冲队列，这个内存队列的大小是可配置的</li>
<li>根据套接字类型，ZMQ 套接字内置一对多路由行为；此外。ZMQ 还支持多对多、多对一、一对一连接。TCP 只能进行点对点的连接</li>
</ul>
<p><code>zmq_send()</code> 方法实际上并不会将消息发送到套接字连接。消息会在一个内存队列中保存下来，以便 I&#x2F;O 线程可以<strong>异步</strong>发送消息。它不会阻塞，除非在某些例外情况下。因此，当 <code>zmq_send()</code> 返回时，并不一定已发送消息。  </p>
<blockquote>
<hr>
<ul>
<li>当用 <code>zmq_msg_init_data()</code> 初始化消息后，不能重用或是释放这条消息，否则 ZMQ 的 I&#x2F;O 线程会认为它在传输垃圾数据</li>
</ul>
<hr>
</blockquote>
<p>  

<h2 id="Unicast-Transports"><a href="#Unicast-Transports" class="headerlink" title="Unicast Transports"></a>Unicast Transports</h2><p>ZMQ 提供了一组单播传输协议(inproc、IPC、TCP)，以及两个广播协议(epgm、pgm)。  </p>
<p><em><strong>fan-out ratios will make 1-to-N unicast impossible</strong></em>  </p>
<p>通常会使用 TCP 作为传输协议，ZMQ 中的 TCP 连接是可以脱机运作的，其灵活、便携、且足够快速。之所以称之为**脱机(disconnected)**，是因为 ZMQ 中 TCP 连接不需要该端点已经有某个服务器进行了绑定，客户端和服务端可以随时进行连接和绑定，这对应用程序而言都是透明的。  </p>
<p>ZMQ 中的进程间通信协议 IPC 类似 TCP，也是脱机的。它有一个限制：<strong>不能在Windows上运行</strong>。按照惯例，使用带有 <code>.ipc</code> 后缀的端点名，以避免与其他文件名的潜在冲突。在 UNIX 系统上，使用 ipc 端点时，需要注意权限问题，否则它们可能无法在以不同用户 id 运行的进程之间共享。还必须确保所有进程都可以访问这些 IPC 端点文件。  </p>
<p>线程内通信协议 inproc，可以在同一个进程的不同线程之间进行消息传输，比 IPC 或 TCP 快得多。该协议有一个限制：<strong>必须先绑定到端点，才能建立连接</strong>。该限制将在 ZeroMQ v4.0 后之后的版本修复。  </p>
<h2 id="ZeroMQ-不只是数据传输"><a href="#ZeroMQ-不只是数据传输" class="headerlink" title="ZeroMQ 不只是数据传输"></a>ZeroMQ 不只是数据传输</h2><p><strong>ZeroMQ is Not a Neutral Carrier</strong>  </p>
<p>ZeroMQ 不是一个中立的载体：<strong>它在它使用的传输协议上强加了一个帧。这种帧与现有协议不兼容</strong>，现有协议倾向于使用自己的帧。例如，比较 HTTP 请求和 ZeroMQ 请求，两者都通过TCP&#x2F;IP。 </p>
<p><img src="/./images/HTTP%20%E4%B8%8E%20ZeroMQ.png" alt="HTTP vs ZeroMQ">    </p>
<p>HTTP request 使用 CR-LF 作为最简单的帧分隔符，而 ZeroMQ 使用长度指定的帧。虽然可以使用 ZeroMQ 编写一个类似 HTTP 协议的东西，但这并不是 HTTP。  </p>
<p>从v3.3开始，ZeroMQ 有一个名为 <strong><code>ZMQ_ROUTER_RAW</code></strong> 的套接字选项，它允许在没有 ZeroMQ 帧的情况下读写数据。可以使用它来读取和编写正确的 HTTP 请求和响应。Hardeep Singh 贡献了这个更改，这样他就可以从他的 ZeroMQ 应用程序连接到 Telnet 服务器。在撰写本文时，这仍然是实验性的，但它显示了 ZeroMQ 如何不断发展以解决新问题。  </p>
<p>可以使用 ZeroMQ 设计自有通信协议。参考：<a href="http://mongrel2.org/">Mongrel2</a> 网络服务架构。  </p>
<h2 id="I-O-Threads"><a href="#I-O-Threads" class="headerlink" title="I&#x2F;O Threads"></a>I&#x2F;O Threads</h2><p>前面提到 ZeroMQ 是通过后台 I&#x2F;O 线程进行消息传输的。除了最极端的应用程序外，一个 I&#x2F;O 线程已经足以处理多个套接字的数据传输要求。这也是创建 context 时传入的 1 的作用：  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> *context = <span class="built_in">zmq_init</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure>

<p>创建多个 I&#x2F;O 线程：  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> io_threads = <span class="number">4</span>;</span><br><span class="line"><span class="type">void</span> *context = <span class="built_in">zmq_ctx_new</span> ();</span><br><span class="line"><span class="built_in">zmq_ctx_set</span> (context, ZMQ_IO_THREADS, io_threads);</span><br><span class="line"><span class="built_in">assert</span> (<span class="built_in">zmq_ctx_get</span> (context, ZMQ_IO_THREADS) == io_threads);</span><br></pre></td></tr></table></figure>

<p>已经看到，ZeroMQ 中一个套接字可以同时处理数十甚至数千个连接。这对如何编写应用程序具有根本性的影响。<strong>传统的网络应用程序每个远程连接有一个进程或一个线程，每个进程或线程处理一个套接字</strong>。ZeroMQ 允许将整个结构折叠为单个进程，然后根据扩展需要将其分解。</p>
<p>如果仅将 ZeroMQ 用于线程间通信(即，不进行外部套接字 I&#x2F;O 的多线程应用程序)，则可以将 I&#x2F;O 线程设置为零。这并不是一个重要的优化，更多的是一种好奇。  </p>
<h1 id="消息模式"><a href="#消息模式" class="headerlink" title="消息模式"></a>消息模式</h1><p>ZeroMQ 套接字 API 中提供了多种消息模式。  </p>
<ul>
<li>ZeroMQ 会将消息快速高效地发送给其它节点。这里的节点可以是线程、进程或其它 nodes；</li>
<li>ZeroMQ 为应用程序提供了一套简单的套接字 API，不需要考虑实际使用的协议类型(in-process、inter-process、TCP、multicast)；</li>
<li>ZeroMQ 会自动进行连接或重连；</li>
<li>无论是发送消息还是接收消息，ZeroMQ 都会先将消息放入队列中，并保证进程不会因为内存溢出而崩溃；</li>
<li>ZeroMQ 会处理套接字异常；</li>
<li>所有 I&#x2F;O 操作都在后台进行；</li>
<li><strong>ZeroMQ 使用无锁技术在节点之间通信</strong>，因此不存在锁、等待、信号量或死锁，不会产生死锁</li>
</ul>
<p>但是，以上种种的前提是用户能够正确地使用消息模式。  </p>
<p>ZeroMQ 消息模式是指不同类型套接字的组合。换句话说，要理解 ZeroMQ 的消息模式，需要了解套接字类型以及它们如何协同工作。  </p>
<p>ZeroMQ 内置的核心消息模式包括：  </p>
<ul>
<li><strong>Request-reply</strong>：该模式将一组服务端和一组客户端相连，用于远程过程调用会任务分发</li>
<li><strong>Pub-sub</strong>：该模式将一组发布者和一组订阅者相连，用于数据分发</li>
<li><strong>Pipeline</strong>：该模式以扇出&#x2F;扇入形式连接节点，该模式可以有多个步骤和循环。这是一个并行的任务分发和收集模式</li>
<li><strong>Exclusive pair</strong>：该模式将两个套接字一对一的连接起来。这是一种在进程中连接两个线程的模式，不要与“普通”套接字对混淆</li>
</ul>
<p><a href="http://api.zeromq.org/master:zmq_socket"><code>zmq_socket()</code></a>手册中详细介绍了所有消息模式。  </p>
<p>以下是合法的套接字连接-绑定对（一端绑定，一端连接即可）：  </p>
<ul>
<li>PUB and SUB</li>
<li>REQ and REP</li>
<li>REQ and ROUTER (take care, REQ inserts an extra null frame)</li>
<li>DEALER and REP (take care, REP assumes a null frame)</li>
<li>DEALER and ROUTER</li>
<li>DEALER and DEALER</li>
<li>ROUTER and ROUTER</li>
<li>PUSH and PULL</li>
<li>PAIR and PAIR</li>
</ul>
<p>还将看到对 XPUB 和 XSUB 套接字的引用。任何其他组合都将产生未记录且不可靠的结果，并且如果尝试它们，ZeroMQ 的未来版本可能会返回错误。当然，可以并且将通过代码桥接其他套接字类型，即从一个套接字类型读取并写入另一个套接字类型。  </p>
<h2 id="High-Level-消息模式"><a href="#High-Level-消息模式" class="headerlink" title="High-Level 消息模式"></a>High-Level 消息模式</h2><p>上面四种核心模式是 ZeroMQ 中内置的，是 API 的一部分，在 ZeroMQ 的 C++ 核心类库中实现，能保证正确运行。  </p>
<p>在这些核心消息模式之上，会建立更为上层的消息模式。这种模式可以用任何预研编写，不属于核心模式，也不会随 ZeroMQ 发布。  </p>
<h2 id="消息的使用"><a href="#消息的使用" class="headerlink" title="消息的使用"></a>消息的使用</h2><p>ZeroMQ 的传输单位是消息，是一个二进制块。可以使用任意序列化工具，如 protocol buffer、XDR 等，将内容转换为 ZeroMQ 消息。  </p>
<p><code>libzmq</code> 核心库实际上有两个 API 来发送和接收消息。前面已经看到和使用的 <code>zmq_send()</code> 和 <code>zmq_recv()</code> 方法是简单的一行程序。后续会经常使用这两个接口，但 <code>zmq_recv()</code> 不擅长处理任意大小的消息：它将消息截断为提供的缓冲区大小。所以有第二个 API 与 zmq_msg_t 结构一起工作，具有更丰富但更复杂的 API:  </p>
<ul>
<li>初始化消息：<code>zmq_msg_init()</code>、<code>zmq_msg_init_size()</code>、<code>zmq_msg_init_data()</code></li>
<li>发送及接收消息：<code>zmq_msg_send()</code>、<code>zmq_msg_recv()</code></li>
<li>释放消息：<code>zmq_msg_close()</code></li>
<li>访问消息内容：<code>zmq_msg_data()</code>、<code>zmq_msg_size()</code>、<code>zmq_msg_more()</code></li>
<li>操作消息属性：<code>zmq_msg_get()</code>、<code>zmq_msg_set()</code>  </li>
<li>消息处理：<code>zmq_msg_copy()</code>、<code>zmq_msg_move()</code></li>
</ul>
<p>在内存中，ZeroMQ 消息用 <code>zmq_msg_t</code> 结构表示。在 C 语言中使用 ZeroMQ 消息的基本规则:  </p>
<ul>
<li>创建并传递 <code>zmq_msg_t</code> 对象，而不是一组数据块</li>
<li>读取消息是，先用 <code>zmq_msg_init()</code> 初始化一个空消息，然后将其传递给 <code>zmq_recv()</code> 函数</li>
<li>写入消息时，先用 <code>zmq_msg_init_size()</code> 来创建消息(同时也初始化了一块内存区域)，然后使用 <code>memcpy()</code> 函数将数据拷贝到该对象中，最后传递给 <code>zmq_send()</code>  </li>
<li>释放消息（并不是销毁）时，使用 <code>zmq_msg_close()</code> 函数，它会将对消息对象的引用删除，最终由 ZeroMQ 将消息销毁</li>
<li>获取消息内容时需使用 <code>zmq_msg_data()</code> 函数；若想知道消息的长度，可以使用 <code>zmq_msg_size()</code> 函数</li>
</ul>
<p>如果需要多次发送相同的消息，并且该消息相当大，请创建第二条消息，使用 <code>zmq_msg_init()</code> 对其进行初始化，然后使用 <code>zmq_msg_copy()</code> 创建第一条消息的副本。这不是复制数据，而是复制引用。然后，可以发送消息两次，并且只有在发送或关闭最后一个副本时才会最终销毁消息。  </p>
<p>帧是 ZeroMQ 消息的基本连线格式。帧是指定长度的数据块。长度可以是 0 以上。有一个称为 <a href="http://rfc.zeromq.org/spec:15">ZMTP</a> 的线级协议，它定义了 ZeroMQ 如何在 TCP 连接上读写帧。  </p>
<p>关于消息，还有一些需要注意的地方：  </p>
<ul>
<li>可以发送长度为 0  的消息，例如：从一个线程向另一个线程发送信号</li>
<li>ZeroMQ 的消息作为一个整体来收发的，不会只收到消息的一部分  </li>
<li>ZeroMQ 不会立即发送消息，而是有一定延迟（非实时？？）</li>
<li>消息必须能在内存中保存，若想发送文件或大的消息，则需将其切割成小块，在独立的消息中进行发送  </li>
<li>必须使用 <code>zmq_msg_close()</code> 函数来关闭消息，但在一些会在变量超出作用域时自动释放消息对象的语言中除外</li>
</ul>
<p>注意：不要贸然使用 <code>zmq_msg_init_data()</code>，它是用于零拷贝，且可能会造成麻烦。  </p>
<h2 id="处理多个套接字"><a href="#处理多个套接字" class="headerlink" title="处理多个套接字"></a>处理多个套接字</h2><p>要从多个端点读取消息，最简单的方法是将一个套接字连接到所有端点上，让 ZeroMQ 执行 <em><strong>fan-in</strong></em>。如果远程端点处于相同的模式，这是合法的，但是<strong>将 PULL 套接字连接到 PUB 端点将是错误的</strong>。</p>
<p>正确的方法是使用 <code>zmq_poll()</code>。更好的方法是将 <code>zmq_poll()</code> 封装为一个框架，编写一个事件驱动反应器(event-driven reactor)。  </p>
<p><code>zmq_poll()</code> 将使用 <code>zmq_pollitem_t</code>:  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="type">void</span> *socket;       <span class="comment">//  ZeroMQ socket to poll on</span></span><br><span class="line">    <span class="type">int</span> fd;             <span class="comment">//  OR, native file handle to poll on</span></span><br><span class="line">    <span class="type">short</span> events;       <span class="comment">//  Events to poll on</span></span><br><span class="line">    <span class="type">short</span> revents;      <span class="comment">//  Events returned after poll</span></span><br><span class="line">&#125; <span class="type">zmq_pollitem_t</span>;</span><br></pre></td></tr></table></figure>

<h2 id="Multipart-Messages"><a href="#Multipart-Messages" class="headerlink" title="Multipart Messages"></a>Multipart Messages</h2><p>使用 multipart 消息时，每个部分都是一个 <code>zmq_msg</code> 项。例如，如果要发送一个包含五个部分的消息，必须构造、发送和销毁五个 <code>zmq_msg</code> 项。  </p>
<p>下面是如何在一个 multipart 消息中发送帧(将每个帧接收到一个消息对象中):</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">zmq_msg_send</span> (&amp;message, socket, ZMQ_SNDMORE);</span><br><span class="line">...</span><br><span class="line"><span class="built_in">zmq_msg_send</span> (&amp;message, socket, ZMQ_SNDMORE);</span><br><span class="line">...</span><br><span class="line"><span class="built_in">zmq_msg_send</span> (&amp;message, socket, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>
<p>下面是如何接收和处理消息中的所有部分，无论是单个部分还是多个部分:  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="type">zmq_msg_t</span> message;</span><br><span class="line">    <span class="built_in">zmq_msg_init</span> (&amp;message);</span><br><span class="line">    <span class="built_in">zmq_msg_recv</span> (&amp;message, socket, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">//  Process the message frame</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">zmq_msg_close</span> (&amp;message);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">zmq_msg_more</span> (&amp;message))</span><br><span class="line">        <span class="keyword">break</span>;      <span class="comment">//  Last message frame</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>关于 Multipart 消息需要了解的一些事情:  </p>
<ul>
<li>发送 multipart 消息时，第一部分(及后续部分)在发送最后一部分之后才会真正的发送出去</li>
<li>若使用 <code>zmq_poll()</code>，当接收到第一部分消息时，实际上其余的部分也都到达了  </li>
<li>要么就接收到所有消息，要么就完全接收不到，不会接收到不完整的消息  </li>
<li>消息的每个部分都是一个 <code>zmq_msg</code> 项</li>
<li>无论是否选中 more 属性，都将收到消息的所有部分</li>
<li>在发送时，ZeroMQ 将消息帧在内存中排队，直到最后一个消息帧被接收，然后将它们全部发送出去</li>
<li>没有办法取消部分发送的消息，除非关闭套接字</li>
</ul>
<h2 id="Intermediaries-and-Proxies"><a href="#Intermediaries-and-Proxies" class="headerlink" title="Intermediaries and Proxies"></a>Intermediaries and Proxies</h2><h2 id="发现服务问题"><a href="#发现服务问题" class="headerlink" title="发现服务问题"></a>发现服务问题</h2><p>在设计大型分布式架构时，将遇到的一个问题是发现。也就是说，pieces 是如何知道彼此的？如果 pieces 来了又走，这尤其困难，所以称之为“动态发现问题”。  </p>
<p>有几种动态发现的解决方案。最简单的方法是通过硬编码(或配置)网络架构来完全避免这种情况，以便手工完成发现。也就是说，当添加一个新 piece 时，需要重新配置网络以发现它。该方式在客户端增多时，维护的代价越来越大。  </p>
<p>对此有很多答案，但最简单的答案是添加一个中介；也就是说，所有其他节点都连接到网络中的一个静态点。在经典消息传递中，这是消息代理的工作。ZeroMQ 没有自带消息代理，但是它让我们可以很容易地构建中介体。  </p>
<h2 id="Shared-Queue"><a href="#Shared-Queue" class="headerlink" title="Shared Queue"></a>Shared Queue</h2><p>在实际情况中，通常需要允许多个服务和多个客户端。这让我们可以扩展服务的能力(多个线程、进程或节点，而不仅仅是一个)。唯一的约束是<strong>服务必须是无状态的</strong>，所有状态都在请求中或在某些共享存储(如数据库)中。  </p>
<p>有两种方法可以将多个客户机连接到多个服务器。<strong>暴力方法</strong>是将每个客户端套接字连接到多个服务端点。一个客户端套接字可以连接到多个服务套接字，然后 REQ 套接字将在这些服务之间分发请求。假设将客户端套接字连接到三个服务端点；A、B、C。客户端请求R1、R2、R3、R4。R1 和 R4 去服务端 A, R2 去服务端 B, R3 去服务端 C。  </p>
<p>这种设计使得可以方便地添加更多客户端。还可以添加更多的服务端。每个客户机将其请求分发给服务。但是每个客户机都必须知道服务拓扑。如果有 100 个客户端，然后决定再添加三个服务，那么需要重新配置并重新启动 100 个客户端，以便客户端了解这三个新服务。  </p>
<p>因此，将编写一个小消息队列代理来提供这种灵活性。代理绑定到两个端点，一个 frontend 用于客户端，一个 backend 用于服务端。然后，它使用 <code>zmq_poll()</code> 监视这两个套接字的活动，当有活动时，它在两个套接字之间传送消息。它实际上并不显式地管理任何队列 —— ZeroMQ 在每个套接字上自动管理队列。  </p>
<p>当使用 REQ 与 REP 通信时，将得到一个严格同步的请求-应答会话。客户端发送请求。服务读取请求并发送应答。然后客户端读取应答。如果客户端或服务试图做任何其他事情(例如，连续发送两个请求而不等待响应)，它们将得到一个错误。  </p>
<p>但 broker 必须是非阻塞的。显然，可以使用 <code>zmq_poll()</code> 来等待两个套接字上的活动，但是不能使用 REP 和 REQ。    </p>
<p>幸运的是，有两个套接字 <em><code>DEALER</code></em> 和 <em><code>ROUTER</code></em> ，它们允许执行非阻塞请求-响应。<br><img src="/./images/request-reply%20broker.png" alt="request-reply broker.png">  </p>
<p>在这个简单的扩展请求-应答模式中，REQ 与 ROUTER 对话，DEALER 与 REP 对话。在 DEALER 和 ROUTER 之间，必须有代码将消息从一个套接字中取出并推到另一个套接字上。</p>
<h2 id="ZeroMQ-的内置代理函数"><a href="#ZeroMQ-的内置代理函数" class="headerlink" title="ZeroMQ 的内置代理函数"></a>ZeroMQ 的内置代理函数</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">zmq_proxy</span>(frontend, backend, capture);</span><br></pre></td></tr></table></figure>
<p>两个套接字(或者三个套接字，如果想捕获数据)必须正确连接、绑定和配置。  </p>
<h2 id="Transport-Bridging"><a href="#Transport-Bridging" class="headerlink" title="Transport Bridging"></a>Transport Bridging</h2><p>ZeroMQ用户经常提出的一个问题是，“如何将 ZeroMQ 网络与 X 技术连接起来?”其中 X 是其他网络或消息传递技术。</p>
<p>最简单的答案就是 <em>bridge</em>。Bridge 是一个小应用程序，它在一个套接字上使用一种协议，并在另一个套接字上转换为&#x2F;从另一种协议。可以看做一个协议解释器。ZeroMQ 中常见的桥接问题是桥接两个传输或网络。  </p>
<p><img src="/./images/pub-sub%20forwarder%20proxy.png" alt="pub-sub forwarder proxy"></p>
<h1 id="处理错误及-ETERM"><a href="#处理错误及-ETERM" class="headerlink" title="处理错误及 ETERM"></a>处理错误及 ETERM</h1><p>ZeroMQ 的错误处理理念是<strong>快速崩溃</strong>和弹性的结合。<strong>一个进程对于自身内部的错误来说要越脆弱越好，而对外部的攻击和错误要足够健壮</strong>。  </p>
<p><strong>代码中应该对每一次的 ZMQ 函数调用作错误处理</strong>。  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> *socket = <span class="built_in">zmq_socket</span> (context, ZMQ_REP);</span><br><span class="line"><span class="built_in">assert</span> (socket);</span><br></pre></td></tr></table></figure>
<p>不要将函数调用直接放在 <code>assert()</code> 函数中，因为一些优化程序会直接将程序中的 <code>assert()</code> 函数去除。  </p>
<h1 id="处理中断信号"><a href="#处理中断信号" class="headerlink" title="处理中断信号"></a>处理中断信号</h1><p>实际的应用程序需要在使用 Ctrl-C 或其他信号(如SIGTERM)时正确地清理和退出。默认情况下，这些信号会终止进程，这意味着尚未发送的消息会就此丢失，文件不会被正确地关闭等等。  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">int</span> s_interrupted = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">s_signal_handler</span> <span class="params">(<span class="type">int</span> signal_value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s_interrupted = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">s_catch_signals</span> <span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">sigaction</span> action;</span><br><span class="line">    action.sa_handler = s_signal_handler;</span><br><span class="line">    action.sa_flags = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">sigemptyset</span> (&amp;action.sa_mask);</span><br><span class="line">    <span class="built_in">sigaction</span> (SIGINT, &amp;action, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">sigaction</span> (SIGTERM, &amp;action, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">s_catch_signals</span>();</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (s_interrpted) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 清理资源</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当接收到 Ctrl-C(SIGINT) 或 SIGTERM 信号时，会将 <code>s_interrupted</code> 设置为 1。此时程序不会自动停止，而是退出循环，执行清理操作。   </p>
<p>注意：  </p>
<ul>
<li>若程序在 <code>zmq_recv()</code>、<code>zmq_poll()</code>、<code>zmq_send()</code> 等函数中阻塞，当有信号传来时，会返回 <code>EINTR</code></li>
<li>像 <code>s_recv()</code> 函数会将这种中断封装为 NULL 返回</li>
</ul>
<h1 id="检查内存泄漏"><a href="#检查内存泄漏" class="headerlink" title="检查内存泄漏"></a>检查内存泄漏</h1><p>任何长时间运行的程序都应该妥善的管理内存，否则最终会发生内存溢出，导致程序崩溃。使用类似C&#x2F;C++之类的语言时，需要自己动手进行内存管理。  </p>
<p>Linux 下常用内存泄漏检查工具：  </p>
<ul>
<li>valgrind</li>
<li>mtrace：为内存分配函数(<code>malloc</code>,<code>rellaoc</code>,<code>memalign</code>,<code>free</code>)安装 hook 函数</li>
<li>dmalloc：检查程序运行结束还没有释放的内存</li>
<li>memwatch：可检测未释放的内存、多次释放同一段内存、位址存取错误及不当使用未分配的内存区域</li>
<li>mpatrol：</li>
<li>dbgmem：</li>
<li>Electric Fece：不仅能跟踪 <code>malloc()</code> 和 <code>free()</code>，同时还能检测读访问及写入，能够准确指出导致错误的指令</li>
</ul>
<p>要对 ZeroMQ 使用 valgrind，需要注意一下事项：</p>
<ul>
<li>默认情况下，ZeroMQ 会导致 valgrind 不停地输出警告，要剔除警告信息，可创建 vg.supp 文件：  <figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   &lt;socketcall_sendto&gt;</span><br><span class="line">   Memcheck<span class="punctuation">:</span>Param</span><br><span class="line">   socketcall.sendto(msg)</span><br><span class="line">   fun<span class="punctuation">:</span>send</span><br><span class="line">   ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   &lt;socketcall_sendto&gt;</span><br><span class="line">   Memcheck<span class="punctuation">:</span>Param</span><br><span class="line">   socketcall.send(msg)</span><br><span class="line">   fun<span class="punctuation">:</span>send</span><br><span class="line">   ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<!--在编译时指定 `ZMQ_MAKE_VALGRIND_HAPPY` 宏，否则会不停输出警告。    
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> zeromq2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> CPPFLAGS=-DZMQ_MAKE_VALGRIND_HAPPY</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make clean; make</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> make install</span></span><br></pre></td></tr></table></figure>
<p>–&gt;</p>
<ul>
<li>应用程序应正确地处理 Ctrl-C，尤其是长时间运行的程序，如果不这么做，valgrind 会报告所有已分配的内存发生了错误</li>
<li>使用 -DDEBUG 编译程序，这样可让 valgrind 告知具体哪段代码发生内存泄漏</li>
</ul>
<p><code>valgrind --tool=memcheck --leak-check=full --suppressions=vg.supp someprog</code>  </p>
<h1 id="ZeroMQ-多线程"><a href="#ZeroMQ-多线程" class="headerlink" title="ZeroMQ 多线程"></a>ZeroMQ 多线程</h1><p><strong>并发编程：不要共享状态</strong>。  </p>
<p>使用 ZeroMQ 编写多线程代码，需遵循以下规则：  </p>
<ul>
<li>在线程中隔离数据，并且不在多个线程中共享数据。唯一的例外是 ZeroMQ contexts，它是线程安全的</li>
<li>远离经典的并发机制，如互斥锁、临界区(critical sections)、信号量等。这是 ZeroMQ 应用程序中的反模式(anti-pattern)</li>
<li>在进程开始时创建 ZeroMQ context，并将其传递给希望通过 inproc 套接字连接的所有线程</li>
<li>使用 attached 线程在应用程序中创建结构，并使用 inproc 上的 PAIR 套接字将这些线程连接到它们的父线程。模式是:绑定父套接字，然后创建连接其套接字的子线程</li>
<li>线程之间的所有交互都以 ZeroMQ 消息的形式完成，可以或多或少地对其进行正式定义</li>
<li>不要在线程间共享 ZeroMQ 套接字。ZeroMQ 套接字不是线程安全的。从技术上讲，将套接字从一个线程迁移到另一个线程是可能的，但这需要技巧。在线程之间共享套接字的唯一合理的地方是需要在套接字上执行垃圾收集之类的魔法的语言绑定</li>
</ul>
<blockquote>
<hr>
<ul>
<li>Do not use or close sockets except in the thread that created them.</li>
</ul>
<hr>
</blockquote>
<p>ZeroMQ 使用 native OS threads，而不是虚拟的“绿色”线程。其优点是不需要学习任何新的线程 API，并且 ZeroMQ 线程可以清晰地映射到操作系统。可以使用标准的工具，比如英特尔的 ThreadChecker 来查看应用程序在做什么。缺点是本机线程 api 并不总是可移植的，并且如果有大量的线程(数千个)，某些操作系统将会受到压力。  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Multithreaded Hello World server</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;zhelpers.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> *<span class="title function_">worker_routine</span> <span class="params">(<span class="type">void</span> *context)</span> &#123;</span><br><span class="line">    <span class="comment">//  Socket to talk to dispatcher</span></span><br><span class="line">    <span class="type">void</span> *receiver = zmq_socket (context, ZMQ_REP);</span><br><span class="line">    zmq_connect (receiver, <span class="string">&quot;inproc://workers&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">char</span> *<span class="built_in">string</span> = s_recv (receiver);</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">&quot;Received request: [%s]\n&quot;</span>, <span class="built_in">string</span>);</span><br><span class="line">        <span class="built_in">free</span> (<span class="built_in">string</span>);</span><br><span class="line">        <span class="comment">//  Do some &#x27;work&#x27;</span></span><br><span class="line">        sleep (<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//  Send reply back to client</span></span><br><span class="line">        s_send (receiver, <span class="string">&quot;World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    zmq_close (receiver);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> *context = zmq_ctx_new ();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Socket to talk to clients</span></span><br><span class="line">    <span class="type">void</span> *clients = zmq_socket (context, ZMQ_ROUTER);</span><br><span class="line">    zmq_bind (clients, <span class="string">&quot;tcp://*:5555&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Socket to talk to workers</span></span><br><span class="line">    <span class="type">void</span> *workers = zmq_socket (context, ZMQ_DEALER);</span><br><span class="line">    zmq_bind (workers, <span class="string">&quot;inproc://workers&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Launch pool of worker threads</span></span><br><span class="line">    <span class="type">int</span> thread_nbr;</span><br><span class="line">    <span class="keyword">for</span> (thread_nbr = <span class="number">0</span>; thread_nbr &lt; <span class="number">5</span>; thread_nbr++) &#123;</span><br><span class="line">        <span class="type">pthread_t</span> worker;</span><br><span class="line">        pthread_create (&amp;worker, <span class="literal">NULL</span>, worker_routine, context);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//  Connect work threads to client threads via a queue proxy</span></span><br><span class="line">    zmq_proxy (clients, workers, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  We never get here, but clean up anyhow</span></span><br><span class="line">    zmq_close (clients);</span><br><span class="line">    zmq_close (workers);</span><br><span class="line">    zmq_ctx_destroy (context);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/./images/multithreaded%20server.png" alt="Multithreaded Server"><br>消息流向：<code>REQ-ROUTER-queue-DEALER-REP</code></p>
<ul>
<li>服务端启动一组 worker 线程，每个线程创建一个 REP 套接字，并处理收到的请求。Worker 线程就像单线程服务。唯一的区别是使用 inproc 而不是 tcp，以及绑定-连接方向调换了</li>
<li>服务端创建 ROUTER 套接字用以和客户端通信，因此提供了一个 TCP 协议的外部接口</li>
<li>服务端创建 DEALER 套接字用以和 worker 通信，使用了 inproc</li>
<li>服务端启动连接两个套接字的代理。代理公平地从所有客户端提取传入请求，并将其分发给 worker 。它还将应答路由回它们的请求方</li>
</ul>
<p>注意：此例中创建线程使用的是 POSIX 提供的 pthreads 库，该方法在 windows 下不适用。后续介绍如何封装多线程编程的 API。  </p>
<h1 id="零拷贝※"><a href="#零拷贝※" class="headerlink" title="零拷贝※"></a>零拷贝※</h1><p>ZeroMQ 的消息 API 允许直接在应用程序缓冲区之间发送和接收消息，而无需复制数据。称之为 Zero-Copy，它可以提高某些应用程序的性能。  </p>
<p>在以高频率发送大块内存(数千字节)的特定情况下，应该考虑使用零拷贝。对于短消息或较低的消息速率，使用零拷贝反而将使代码更混乱和更复杂。  </p>
<p>使用零拷贝时，用 <code>zmq_msg_init_data()</code> 函数创建消息，其内容指向某个已经分配好的内存区域，然后将该消息传递给 <code>zmq_send()</code> 函数。创建消息时，还需提供一个用于释放消息内容的函数，ZeroMQ 会在消息发送完毕时调用。例如：  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">my_free</span> <span class="params">(<span class="type">void</span> *data, <span class="type">void</span> *hint)</span> &#123;</span><br><span class="line">    <span class="built_in">free</span> (data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  Send message from buffer, which we allocate and ZeroMQ will free for us</span></span><br><span class="line"><span class="type">zmq_msg_t</span> message;</span><br><span class="line">zmq_msg_init_data (&amp;message, buffer, <span class="number">1000</span>, my_free, <span class="literal">NULL</span>);</span><br><span class="line">zmq_msg_send (&amp;message, socket, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>
<p>注意，在发送消息后不要调用 <code>zmq_msg_close()</code> — libzmq 在实际完成发送消息时将自动执行此操作。  </p>
<p>在消息接收端无法使用零拷贝：ZeroMQ 会将收到的消息放入一块内存区域供用户读取，但不会直接将消息写入程序指定的内存区域。  </p>
<p>ZeroMQ 的 multipart 消息能够很好地支持零拷贝。在传统消息系统中，需要将不同缓存中的内容保存到同一个缓存中，然后才能发送。但 ZeroMQ 会将来自不同内存区域的内容作为消息的一个帧进行发送。而且在 ZeroMQ 内部，一条消息会作为一个整体进行收发，因而非常高效。  </p>
<h1 id="Pub-Sub-Message-Envelopes"><a href="#Pub-Sub-Message-Envelopes" class="headerlink" title="Pub-Sub Message Envelopes"></a>Pub-Sub Message Envelopes</h1><p>在 Pub-Sub 模式中，可以将 key 拆分为一个单独的消息帧，称之为信封(envelope)。如果想用 pub-sub envelopes，需要自行生成和设置。这是可选的，在之前的发布-订阅示例中，没有这样做。对于简单的情况，使用 pub-sub envelopes 需要做更多的工作，但是对于真正的情况，它更清晰，因为 key 和数据自然是分开的。<br><img src="/./images/pub-sub%20envelop.png" alt="pub-sub envelop">  </p>
<p>带发布者地址的 envelope：<br><img src="/./images/pub-sub%20envelop%20with%20sender%20address.png" alt="pub-sub envelop with sender address"></p>
<h1 id="High-Water-Marks-即-HWM"><a href="#High-Water-Marks-即-HWM" class="headerlink" title="High-Water Marks(即 HWM)"></a>High-Water Marks(即 HWM)</h1><p>当在进程之间快速地发送消息时，很快就会发现内存是一种宝贵的资源，而且很容易被填满。除非了解问题所在并采取预防措施，否则流程中某个地方的几秒钟延迟可能会变成导致服务器崩溃的积压。  </p>
<p>问题：假设进程 A 以高频率向正在处理它们的进程 B 发送消息。突然间，B 变得非常繁忙(垃圾收集、CPU 过载等等)，并且在短时间内无法处理消息。对于一些繁重的垃圾收集，可能需要几秒钟，如果有更严重的问题，可能需要更长的时间。进程 A 仍然试图疯狂发送消息会发生什么?有些会在 B 的网络缓冲区中。一些将位于以太网线本身。有些会在 A 的网络缓冲区中。剩下的会在 A 的内存中积累，和 A 后面的应用程序发送它们的速度一样快。如果不采取一些预防措施，A 很容易耗尽内存并崩溃。  </p>
<p>这是消息代理的一个一贯的经典问题。更糟糕的是，表面上看，这是 B 的错，而 B 通常是 A 无法控制的用户编写的应用程序。</p>
<p>解决方案：一是将问题向上游传递。A 从其他地方获取信息。告诉这个进程，“停止!”等等，这被称为<strong>流量控制</strong>。这听起来似乎有道理，但如果正在发送 Twitter 消息呢?你会告诉全世界不要再发推特了吗?  </p>
<p><strong>流量控制</strong>在某些情况下有效，但在其他情况下无效。传输层不能告诉应用层“停止”，就像地铁系统不能告诉一个大企业，“请你的员工再工作半个小时。我太忙了”。消息传递的答案是<strong>限制缓冲区的大小</strong>，然后当达到这些限制时，采取一些明智的行动。在某些情况下(但不包括地铁系统)，答案是扔掉信息。在其他情况下，最好的策略是等待。  </p>
<p><strong>ZeroMQ 使用 <code>HWM</code> 来定义其内部 pipes 的容量</strong>。每个出套接字或入套接字的连接都有自己的管道和用于发送和&#x2F;或接收的 HWM，具体取决于套接字类型。一些套接字(PUB, PUSH)只有发送缓冲区。有些(SUB, PULL, REQ, REP)只有接收缓冲区。一些(DEALER, ROUTER, PAIR)同时具有发送和接收缓冲区。  </p>
<p>在 ZeroMQ v2 中。缺省情况下，<code>HWM</code> 为无穷大。在 ZeroMQ v3.X 中，默认设置为 1000。  </p>
<p><strong>当套接字达到其 <code>HWM</code> 时，它将根据套接字类型阻塞或丢弃数据</strong>。PUB 和 ROUTER 套接字在达到 <code>HWM</code> 时将丢弃数据，而其他类型的套接字将阻塞。<strong>在 inproc 传输中，发送方和接收方共享相同的缓冲区，因此真正的 <code>HWM</code> 是双方设置的 <code>HWM</code> 的总和</strong>。  </p>
<p>最后，<code>HWM</code> 是不精确的；虽然默认情况下最多可以获得 1000 条消息，但由于 libzmq 实现队列的方式，实际缓冲区大小可能要小得多(只有一半)。</p>
]]></content>
      <categories>
        <category>数据通信</category>
        <category>ZeroMQ</category>
      </categories>
      <tags>
        <tag>ZeroMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>ZeroMQ</title>
    <url>/2024/09/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/ZeroMQ/ZeroMQ/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#zeromq-%E6%B6%88%E6%81%AF%E6%A8%A1%E5%BC%8F">ZeroMQ 消息模式</a><ul>
<li><a href="#request-reply">Request-Reply</a></li>
<li><a href="#pub-sub">Pub-Sub</a></li>
</ul>
</li>
<li><a href="#parallel-pipeline">Parallel Pipeline</a></li>
<li><a href="#fair-queuing">Fair Queuing</a></li>
<li><a href="#zeromq-%E7%BC%96%E7%A8%8B">ZeroMQ 编程</a><ul>
<li><a href="#%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8-context">正确使用 Context</a></li>
<li><a href="#%E6%AD%A3%E7%A1%AE%E7%9A%84%E9%80%80%E5%87%BA%E5%92%8C%E6%B8%85%E7%90%86">正确的退出和清理</a></li>
<li><a href="#%E4%B8%BA%E4%BD%95%E9%9C%80%E8%A6%81-zeromq">为何需要 ZeroMQ</a></li>
<li><a href="#socket-scalability%E5%A5%97%E6%8E%A5%E5%AD%97%E7%9A%84%E6%89%A9%E5%B1%95%E6%80%A7">Socket Scalability套接字的扩展性</a></li>
</ul>
</li>
<li><a href="#%E4%BB%8E-zeromq-v22-%E5%8D%87%E7%BA%A7%E5%88%B0-zeromq-v32">从 ZeroMQ V2.2 升级到 ZeroMQ V3.2</a><ul>
<li><a href="#%E5%85%BC%E5%AE%B9%E6%80%A7%E5%8F%98%E6%9B%B4">兼容性变更</a></li>
<li><a href="#%E4%B8%8D%E5%85%BC%E5%AE%B9%E7%9A%84%E5%8F%98%E6%9B%B4">不兼容的变更</a></li>
<li><a href="#%E5%BB%BA%E8%AE%AE%E4%BD%BF%E7%94%A8-shim-%E5%AE%8F">建议使用 Shim 宏</a></li>
</ul>
</li>
<li><a href="#warning-unstable-paradigms">Warning: Unstable Paradigms</a></li>
</ul>
<!-- /TOC -->

<p>ZeroMQ (即：ØMQ, 0MQ, zmq)，看似是一个嵌入式网络库，但实际上是一个并发框架。提供了跨多种传输协议(如进程内、进程间、TCP、多播、websocket等)的套接字，可以传输原子消息(atomic messages)。ZeroMQ 支持多种消息传递模式，例如：</p>
<ul>
<li>fan-out</li>
<li>pub-sub</li>
<li>task distribution</li>
<li>request-reply </li>
<li>C&#x2F;S</li>
</ul>
<p>ZeroMQ 是一个高性能<strong>异步</strong>消息传递库，旨在用于分布式或并发应用程序。它提供了一个消息队列(message queue)，但与面向消息的中间件不同，ZeroMQ 系统可以在没有专用消息代理(message broker)的情况下运行。  </p>
<blockquote>
<hr>
<ul>
<li>ZeroMQ 中的 Zero 表示<strong>零代理(ZeroMQ 是无代理的)、零延迟、零成本(免费)和零管理</strong>。</li>
</ul>
<hr>
</blockquote>
<p>查看 ZMQ 版本：  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> major, minor, patch;</span><br><span class="line"><span class="built_in">zmq_version</span>(&amp;major, &amp;minor, &amp;patch);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">&quot;当前ZMQ版本号为 %d.%d.%d\n&quot;</span>, major, minor, patch);</span><br></pre></td></tr></table></figure>

<h1 id="ZeroMQ-编程"><a href="#ZeroMQ-编程" class="headerlink" title="ZeroMQ 编程"></a>ZeroMQ 编程</h1><h2 id="正确使用-Context"><a href="#正确使用-Context" class="headerlink" title="正确使用 Context"></a>正确使用 Context</h2><p>ZeroMQ 应用程序总是首先创建一个 context，然后使用它来创建套接字。C 语言中，使用 <code>zmq_ctx_new()</code> 创建。在一个应用程序中应当只创建并使用一个 context。从技术上讲，context 是单个进程中所有套接字的容器，并为 inproc 套接字提供实现，inproc 套接字是连接一个进程中线程的最快方式。如果在运行时<strong>一个进程有两个 context，它们就像单独的 ZeroMQ 实例</strong>。如果这是明确想要的，那没有问题，但记住: <strong>在一个进程中使用 <em><code>zmq_ctx_new()</code></em> 函数创建一个 context，并在结束时使用 <em><code>zmq_ctx_destroy()</code></em> 函数关闭它</strong>。  </p>
<p>若使用 <code>fork()</code> 创建了进程，那么每个进程都要有自己的 context。如果在调用 <code>fork()</code> 之前调用了 <em><code>zmq_ctx_new()</code></em> 函数，那每个子进程都会有自己的 context 对象。  </p>
<h2 id="正确的退出和清理"><a href="#正确的退出和清理" class="headerlink" title="正确的退出和清理"></a>正确的退出和清理</h2><p>在仍有套接字处于打开状态时调用 <em><code>zmq_ctx_destroy()</code></em> 会导致程序挂起；就算关闭了所有套接字，若仍有消息处于待发送状态，*<code>zmq_ctx_destroy()</code>* 也会造成程序的等待。只有当套接字的 <code>LINGER</code> 选项设为 0 时才能避免。</p>
<p>需要考虑的 ZeroMQ 对象是消息、套接字和 context。幸运的是，它非常简单，至少在简单的程序中:</p>
<ul>
<li>尽可能使用 <em><code>zmq_send()</code></em> 和 *<code>zmq_recv()</code>*，这样可以避免使用 <code>zmq_msg_t</code> 对象  </li>
<li>若使用 *<code>zmq_msg_recv</code>*，在处理完消息后及时调用 <em><code>zmq_msg_close()</code></em> 释放该消息</li>
<li>若同时打开和关闭大量 sockets，那可能需要重新规划程序的结构</li>
<li>退出程序是，先关闭套接字，然后调用 <em><code>zmq_ctx_destroy()</code></em> 删除 context<br>这至少是 C 语言开发的情况。在具有自动对象销毁的语言中，当离开作用域时，套接字和上下文将被销毁。如果使用异常，则必须在类似 <code>final</code> 块的地方进行清理，这与处理任何资源一样。</li>
</ul>
<p>用 ZMQ 进行多线程的编程，需要考虑的问题就更多了。一些建议：  </p>
<ul>
<li>不要在多个线程中使用同一个套接字</li>
<li>关闭具有正在进行的请求的每个套接字。正确的方法是设置较低的 <code>LINGER</code> 值(1秒)，然后关闭套接字</li>
<li>最后，删除 context。这将导致附加线程(即共享相同 context 的线程)中的任何阻塞 <code>recv</code> 或 <code>poll</code> 或 <code>send</code> 都返回错误。应该在主程序中捕获该错误，并设置 <code>linger on</code>，并关闭该线程中的套接字，然后退出。不要两次破删除相同的 context。主线程中的 <em><code>zmq_ctx_destroy</code></em> 将阻塞，直到它所知道的所有套接字都安全关闭为止</li>
</ul>
<h2 id="为何需要-ZeroMQ"><a href="#为何需要-ZeroMQ" class="headerlink" title="为何需要 ZeroMQ"></a>为何需要 ZeroMQ</h2><p>任何可重用的消息传递层都需要解决以下所有或大部分问题:  </p>
<ul>
<li>如何处理 I&#x2F;O？是让程序阻塞等待响应，还是在后台处理这些事？这是软件设计的关键因素。阻塞式的 I&#x2F;O 操作会让程序架构难以扩展，而后台处理 I&#x2F;O 也是比较困难的</li>
<li>如何处理动态组件（即临时的组件）？是否要将组件分为客户端和服务端两种，并要求服务端永不消失？那如果想要将服务端相连怎么办？要每隔几秒就进行重连吗？</li>
<li>如何表示一条消息？怎样通过拆分消息，让其变得易读易写，不用担心缓存溢出，既能高效地传输小消息，又能胜任视频等大型文件的传输？</li>
<li>如何处理那些不能立刻发送出去的消息？比如需要等待一个网络组件重新连接的时候？是直接丢弃该条消息，还是将它存入数据库，或是内存中的一个队列？</li>
<li>要在哪里保存消息队列？如果某个组件读取消息队列的速度很慢，造成消息的堆积怎么办？要采取什么样的策略？</li>
<li>如何处理丢失的消息？是等待新的数据，请求重发，还是需要建立一套新的可靠性机制以保证消息不会丢失？如果这个机制自身崩溃了呢？</li>
<li>如果想换一种网络连接协议，如用广播代替 TCP 单播？或者改用 IPv6？是否需要重写所有的应用程序，或者将这种协议抽象到一个单独的层中？</li>
<li>如何对消息进行路由？可以将消息同时发送给多个节点吗？是否能将应答消息返回给请求的发送方？</li>
<li>如何为另一种语言写一个 API？是否需要完全重写某项协议，还是重新打包一个类库？</li>
<li>怎样才能做到在不同的架构之间传送消息？是否需要为消息规定一种编码？</li>
<li>如何处理网络通信错误？等待并重试，还是直接忽略或取消？</li>
</ul>
<p>以开源代码，如Hadoop Zookeeper 为例，查看其 C 语言 API 源码，<a href="http://github.com/apache/zookeeper/blob/trunk/src/c/src/zookeeper.c">src&#x2F;c&#x2F;src&#x2F;zookeeper.c</a>。这段代码实现了一个 C&#x2F;S 网络通信协议。它工作起来很高效，因为使用了 <em><code>poll()</code></em> 来代替 *<code>select()</code>*。但是，Zookeeper应该被抽象出来，作为一种通用的消息通信层，并加以详细的注释。像这样的模块应该得到最大程度上的复用，而不是重复地制造轮子。  </p>
<p>大多数消息系统项目，如 AMQP，为了解决上面提到的种种问题，发明了一些新的概念，如“代理(<code>broker</code>)”的概念，将寻址、路由、队列等功能都包含了进来。结果就是在一个没有任何注释的协议之上，又构建了一个 C&#x2F;S 协议和相应的 API，让应用程序和代理相互通信。代理的确是一个不错的解决方案，帮助降低大型网络结构的复杂度。但是，在 Zookeeper 这样的项目中应用代理机制的消息系统，可能是件更加糟糕的事，因为这意味着需要添加一台新的计算机，并构成一个新的单点故障。代理会逐渐成为新的瓶颈，管理起来更具风险。如果软件支持，可以添加第二个、第三个、第四个代理，构成某种冗余容错的模式。有人就是这么做的，这让系统架构变得更为复杂，增加了隐患。  </p>
<p>在这种以代理为中心的架构下，需要一支专门的运维团队。</p>
<p>

<p>我们真正需要的是这样一种消息软件，它能够做大型消息软件所能做的一切，但使用起来又非常简单，成本很低，可以用到所有的应用程序中，没有任何依赖条件。因为没有了额外的模块，就降低了出错的概率。这种软件需要能够在所有的操作系统上运行，并能支持所有的编程语言。  </p>
<p>这就是 ZeroMQ:一个高效的、可嵌入的库，它解决了应用程序在网络上可扩展性所需的大多数问题，而且成本不高。  </p>
<p>ZMQ的主要特点有：</p>
<ul>
<li><strong>ZMQ 会在后台线程异步地处理 I&#x2F;O 操作</strong>。使用<strong>无锁数据结构</strong>与应用程序线程通信，因此 ZeroMQ 并发应用程序不需要锁、信号量或其他等待状态</li>
<li>网络组件可以动态增删，ZMQ 会负责自动重连，这就意味着可以以任何顺序启动组件；用它创建的面向服务架构（SOA：service-oriented architectures）中，服务端可以随意地加入或退出网络。</li>
<li>ZMQ 会在必要的情况下自动将消息放入队列中保存，一旦建立了连接就开始发送。</li>
<li><strong>ZMQ有阈值（HWM：High Water Mark）的机制，可以避免消息溢出</strong>。当队列已满，ZMQ 会自动阻塞发送者，或丢弃部分消息，这些行为取决于所使用的消息模式。</li>
<li>ZMQ 可以用不同的通信协议进行连接，如 TCP、广播、进程内、进程间。改变通信协议时不需要去修改代码。</li>
<li>ZMQ 会恰当地处理速度较慢的节点，会根据消息模式使用不同的策略。</li>
<li>ZMQ 提供了多种模式进行消息路由，如 请求-应答模式、发布-订阅模式等。这些模式可以用来搭建网络拓扑结构。</li>
<li>ZMQ 允许创建代理，以便通过单个调用对消息进行排队、转发或捕获。代理可以降低网络互连的复杂性。</li>
<li>ZMQ 会发送整个消息，使用消息帧的机制来传递。如果发送了 10KB 大小的消息，就会收到 10KB 大小的消息。</li>
<li>ZMQ 不强制使用某种消息格式，消息可以是 0 字节的，或是大到 GB 级的数据。当表示这些消息时，可以选用诸如 msgpack、protocol buffers、XDR 等序列化产品。</li>
<li>ZMQ 能够智能地处理网络错误，有时它会进行重试，有时会告知某项操作发生了错误。</li>
<li>ZMQ 节省了CPU 时间意味着节省了电能</li>
</ul>
<h2 id="Socket-Scalability-套接字的扩展性"><a href="#Socket-Scalability-套接字的扩展性" class="headerlink" title="Socket Scalability(套接字的扩展性)"></a>Socket Scalability(套接字的扩展性)</h2><p>例如，以下脚本会启动气象服务器，然后并行启动一堆客户端：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wuserver &amp;</span><br><span class="line">wuclient 12345 &amp;</span><br><span class="line">wuclient 23456 &amp;</span><br><span class="line">wuclient 34567 &amp;</span><br><span class="line">wuclient 45678 &amp;</span><br><span class="line">wuclient 56789 &amp;</span><br></pre></td></tr></table></figure>
<p>查看进程执行状态：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND</span><br><span class="line">7136 ph        20   0 1040m 959m 1156 R  157 12.0  16:25.47 wuserver</span><br><span class="line">7966 ph        20   0 98608 1804 1372 S   33  0.0   0:03.94 wuclient</span><br><span class="line">7963 ph        20   0 33116 1748 1372 S   14  0.0   0:00.76 wuclient</span><br><span class="line">7965 ph        20   0 33116 1784 1372 S    6  0.0   0:00.47 wuclient</span><br><span class="line">7964 ph        20   0 33116 1788 1372 S    5  0.0   0:00.25 wuclient</span><br></pre></td></tr></table></figure>
<p>气象服务器只有一个套接字，但是这里让它并行地向五个客户机发送数据。可能有数千个并发客户端。服务器应用程序看不到它们，也不直接与它们对话。因此，ZeroMQ 套接字就像一个小服务器，默默地接受客户端请求，并在网络可以处理的情况下尽可能快地将数据发送给客户端。</p>
<h1 id="从-ZeroMQ-V2-2-升级到-ZeroMQ-V3-2"><a href="#从-ZeroMQ-V2-2-升级到-ZeroMQ-V3-2" class="headerlink" title="从 ZeroMQ V2.2 升级到 ZeroMQ V3.2"></a>从 ZeroMQ V2.2 升级到 ZeroMQ V3.2</h1><h2 id="兼容性变更"><a href="#兼容性变更" class="headerlink" title="兼容性变更"></a>兼容性变更</h2><p>这些变更不影响现有程序：  </p>
<ul>
<li>pub-sub 过滤现在在 publisher 端而不是 subscriber 端完成。这在许多 pub-sub 用例中显著提高了性能。可以安全地混合使用 v3.2 和 v2.1&#x2F;v2.2 发布者和订阅者。</li>
<li>ZeroMQ V3.2 提供了新的 API。例如：<code>zmq_disconnect()</code>、<code>zmq_unbind()</code>、<code>zmq_monitor()</code>、<code>zmq_ctx_set()</code> 等</li>
</ul>
<h2 id="不兼容的变更"><a href="#不兼容的变更" class="headerlink" title="不兼容的变更"></a>不兼容的变更</h2><ul>
<li>send&#x2F;recv 方法变更：提供新的不同的、简单的接口 <code>zmq_send()</code> 和 <code>zmq_recv()</code>。旧的功能现在由 <code>zmq_msg_send()</code> 和 <code>zmq_msg_recv()</code> 提供</li>
<li>这两个方法成功时返回正值，出错时返回 -1。在 v2 版本中，成功时返回 0</li>
<li><code>zmq_poll()</code> 时间改为毫秒而不再是微秒</li>
<li><code>ZMQ_NOBLOCK</code> 更改为 <code>ZMQ_DONTWAIT</code></li>
<li><code>ZMQ_HWM</code> 拆分为 <code>ZMQ_SNDHWM</code> 和 <code>ZMQ_RCVHWM</code></li>
<li><code>zmq_getsockopt()</code> 的大部分选项都变更为整型值</li>
<li>删除了 <code>ZMQ_SWAP</code> 选项</li>
</ul>
<h2 id="建议使用-Shim-宏"><a href="#建议使用-Shim-宏" class="headerlink" title="建议使用 Shim 宏"></a>建议使用 Shim 宏</h2><p>对于想要同时支持 v2.x 和 v3.2 的程序：  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> ZMQ_DONTWAIT</span></span><br><span class="line"><span class="meta">#   <span class="keyword">define</span> ZMQ_DONTWAIT     ZMQ_NOBLOCK</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> ZMQ_VERSION_MAJOR == 2</span></span><br><span class="line"><span class="meta">#   <span class="keyword">define</span> zmq_msg_send(msg,sock,opt) zmq_send (sock, msg, opt)</span></span><br><span class="line"><span class="meta">#   <span class="keyword">define</span> zmq_msg_recv(msg,sock,opt) zmq_recv (sock, msg, opt)</span></span><br><span class="line"><span class="meta">#   <span class="keyword">define</span> zmq_ctx_destroy(context) zmq_term(context)</span></span><br><span class="line"><span class="meta">#   <span class="keyword">define</span> ZMQ_POLL_MSEC    1000        <span class="comment">//  zmq_poll is usec</span></span></span><br><span class="line"><span class="meta">#   <span class="keyword">define</span> ZMQ_SNDHWM ZMQ_HWM</span></span><br><span class="line"><span class="meta">#   <span class="keyword">define</span> ZMQ_RCVHWM ZMQ_HWM</span></span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> ZMQ_VERSION_MAJOR == 3</span></span><br><span class="line"><span class="meta">#   <span class="keyword">define</span> ZMQ_POLL_MSEC    1           <span class="comment">//  zmq_poll is msec</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<h1 id="Warning-Unstable-Paradigms"><a href="#Warning-Unstable-Paradigms" class="headerlink" title="Warning: Unstable Paradigms"></a>Warning: Unstable Paradigms</h1><p>传统网络编程的一个规则是套接字智能和一个节点建立连接。虽然有广播协议，但是第三方的。当我们认定“一个套接字 &#x3D; 一个连接”的时候，我们会用一些特定的方式来扩展应用程序架构：我们为每一块逻辑创建线程，该线程独立地维护一个套接字。</p>
<p><strong>但在 ZMQ 的世界里，套接字是智能的、多线程的，能够自动地维护一组完整的连接</strong>。你无法看到它们，甚至不能直接操纵这些连接。当你进行消息的收发、轮询等操作时，<strong>只能和 ZMQ 套接字打交道，而不是连接本身</strong>。所以说，ZMQ 世界里的连接是私有的，不对外部开放，这也是 ZMQ 易于扩展的原因之一。</p>
<p>由于你的代码只会和某个套接字进行通信，这样就可以处理任意多个连接，使用任意一种网络协议。而 ZMQ 的消息模式又可以进行更为廉价和便捷的扩展。</p>
<p>这样一来，传统的思维就无法在 ZMQ 的世界里应用了。在你阅读示例程序代码的时候，也许你脑子里会想方设法地将这些代码和传统的网络编程相关联：当你读到“套接字”的时候，会认为它就表示与另一个节点的连接——这种想法是错误的；当你读到“线程”时，会认为它是与另一个节点的连接——这也是错误的。</p>
<p>如果你是第一次阅读本指南，使用 ZMQ 进行了一两天的开发（或者更长），可能会觉得疑惑，ZMQ 怎么会让事情便得如此简单。你再次尝试用以往的思维去理解</p>
]]></content>
      <categories>
        <category>数据通信</category>
        <category>ZeroMQ</category>
      </categories>
      <tags>
        <tag>ZeroMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>ZeroMQ 架构</title>
    <url>/2024/09/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/ZeroMQ/ZeroMQ%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<p>ZeroMQ IO 是异步的，每个 ZeroMQ IO 线程(与实际线程不同)都有与之绑定的 Poller，Poller 采用经典的 Reactor 模式实现，根据不同的操作系统平台使用不同的 IO 模型(select、poll、epoll、devpoll、kequeue)。  </p>
<p>ZeroMQ 中，每个线程内含有一个 MailBox，用于线程间传递命令。创建 ZeroMQ IO 线程时，会把 mailbox 句柄添加到 Poller 中，用于监听是否有命令到达。  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">zmq::<span class="type">socket_base_t</span>::<span class="built_in">socket_base_t</span> (<span class="type">ctx_t</span> *parent_,</span><br><span class="line">                                   <span class="type">uint32_t</span> tid_,</span><br><span class="line">                                   <span class="type">int</span> sid_,</span><br><span class="line">                                   <span class="type">bool</span> thread_safe_) :</span><br><span class="line">    <span class="built_in">own_t</span> (parent_, tid_),</span><br><span class="line">    _sync (),</span><br><span class="line">    _tag (<span class="number">0xbaddecaf</span>),</span><br><span class="line">    _ctx_terminated (<span class="literal">false</span>),</span><br><span class="line">    _destroyed (<span class="literal">false</span>),</span><br><span class="line">    _poller (<span class="literal">NULL</span>),</span><br><span class="line">    _handle (<span class="built_in">static_cast</span>&lt;<span class="type">poller_t</span>::<span class="type">handle_t</span>&gt; (<span class="literal">NULL</span>)),</span><br><span class="line">    _last_tsc (<span class="number">0</span>),</span><br><span class="line">    _ticks (<span class="number">0</span>),</span><br><span class="line">    _rcvmore (<span class="literal">false</span>),</span><br><span class="line">    _monitor_socket (<span class="literal">NULL</span>),</span><br><span class="line">    _monitor_events (<span class="number">0</span>),</span><br><span class="line">    _thread_safe (thread_safe_),</span><br><span class="line">    _reaper_signaler (<span class="literal">NULL</span>),</span><br><span class="line">    _monitor_sync ()</span><br><span class="line">&#123;</span><br><span class="line">    options.socket_id = sid_;</span><br><span class="line">    options.ipv6 = (parent_-&gt;<span class="built_in">get</span> (ZMQ_IPV6) != <span class="number">0</span>);</span><br><span class="line">    options.linger.<span class="built_in">store</span> (parent_-&gt;<span class="built_in">get</span> (ZMQ_BLOCKY) ? <span class="number">-1</span> : <span class="number">0</span>);</span><br><span class="line">    options.zero_copy = parent_-&gt;<span class="built_in">get</span> (ZMQ_ZERO_COPY_RECV) != <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_thread_safe) &#123;</span><br><span class="line">        _mailbox = <span class="built_in">new</span> (std::nothrow) <span class="built_in">mailbox_safe_t</span> (&amp;_sync);</span><br><span class="line">        <span class="built_in">zmq_assert</span> (_mailbox);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">mailbox_t</span> *m = <span class="built_in">new</span> (std::nothrow) <span class="built_in">mailbox_t</span> ();</span><br><span class="line">        <span class="built_in">zmq_assert</span> (m);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (m-&gt;<span class="built_in">get_fd</span> () != retired_fd)</span><br><span class="line">            _mailbox = m;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">LIBZMQ_DELETE</span> (m);</span><br><span class="line">            _mailbox = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当客户端开始发起连接或服务端开始监听时，会在主线程创建 <code>zmq_connector</code> 或 <code>zmq_listener</code>，主线程使用 <code>zmq_socket</code> 的 mailbox 发送命令给 IO 线程，将其绑定到 IO 线程中，IO 线程会把 <code>zmq_connector</code> 或 <code>zmq_listener</code> 含有的句柄加入 Poller 中，以侦听读写时间。客户端与服务端通过 session 来管理连接，一个 session 代表一次会话，每个 session 都会关联到相应的读&#x2F;写通道。session 并不直接与 kernel 交换 IO 数据，而是通过 plugin 到 session 中的 engine 来与 kernel 交换 IO 数据。  </p>
<p><code>zmq::ctx_t::start ()</code> 中创建并启动 IO 线程  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ios 为 _io_thread_count</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = term_and_reaper_threads_count;</span><br><span class="line">    i != ios + term_and_reaper_threads_count; i++) &#123;</span><br><span class="line">    <span class="type">io_thread_t</span> *io_thread = <span class="built_in">new</span> (std::nothrow) <span class="built_in">io_thread_t</span> (<span class="keyword">this</span>, i);</span><br><span class="line">    <span class="keyword">if</span> (!io_thread) &#123;</span><br><span class="line">        errno = ENOMEM;</span><br><span class="line">        <span class="keyword">goto</span> fail_cleanup_reaper;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!io_thread-&gt;<span class="built_in">get_mailbox</span> ()-&gt;<span class="built_in">valid</span> ()) &#123;</span><br><span class="line">        <span class="keyword">delete</span> io_thread;</span><br><span class="line">        <span class="keyword">goto</span> fail_cleanup_reaper;</span><br><span class="line">    &#125;</span><br><span class="line">    _io_threads.<span class="built_in">push_back</span> (io_thread);</span><br><span class="line">    _slots[i] = io_thread-&gt;<span class="built_in">get_mailbox</span> ();</span><br><span class="line">    io_thread-&gt;<span class="built_in">start</span> ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>数据通信</category>
        <category>ZeroMQ</category>
      </categories>
      <tags>
        <tag>ZeroMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>io_thread</title>
    <url>/2024/09/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/ZeroMQ/io_thread/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>ZeroMQ IO 线程类 <code>io_thread_t</code>。包含 I&#x2F;O 线程的通用部分。特定于轮询机制(Polling-mechanism-specific)的特性在单独的“轮询对象”中实现。</p>
<p>每个 ZeroMQ IO 线程都有与之绑定的 <code>Poller</code>，<code>Poller</code> 采用经典的 Reactor 模式实现。</p>
<h1 id="io-thread-t"><a href="#io-thread-t" class="headerlink" title="io_thread_t"></a>io_thread_t</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">io_thread_t</span> ZMQ_FINAL : <span class="keyword">public</span> <span class="type">object_t</span>, <span class="keyword">public</span> i_poll_events</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">io_thread_t</span> (zmq::<span class="type">ctx_t</span> *ctx_, <span class="type">uint32_t</span> tid_);</span><br><span class="line"></span><br><span class="line">    ~<span class="built_in">io_thread_t</span> ();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动线程</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">start</span> <span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 停止线程</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">stop</span> <span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取与该 I/O 线程关联的 mailbox</span></span><br><span class="line">    <span class="function"><span class="type">mailbox_t</span> *<span class="title">get_mailbox</span> <span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// i_poll_events implementation.</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">in_event</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">out_event</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">timer_event</span> <span class="params">(<span class="type">int</span> id_)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由 io_objects 用于检索关联的 poller 对象</span></span><br><span class="line">    <span class="function"><span class="type">poller_t</span> *<span class="title">get_poller</span> <span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Command handlers.</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">process_stop</span> <span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取 I/O 线程负载</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">get_load</span> <span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// I/O 线程通过该 mailbox 访问 incoming commands</span></span><br><span class="line">    <span class="type">mailbox_t</span> _mailbox;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Handle associated with mailbox&#x27; file descriptor.</span></span><br><span class="line">    <span class="type">poller_t</span>::<span class="type">handle_t</span> _mailbox_handle;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// I/O 多路复用由 poller 对象执行</span></span><br><span class="line">    <span class="type">poller_t</span> *_poller;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过宏定义将其设置为 private 以禁用拷贝构造和赋值运算符</span></span><br><span class="line">    <span class="built_in">ZMQ_NON_COPYABLE_NOR_MOVABLE</span> (<span class="type">io_thread_t</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>其中，<code>poller.hpp</code> 中根据宏定义，选择相应的 I&#x2F;O 模型：</p>
<ul>
<li><code>ZMQ_IOTHREAD_POLLER_USE_KQUEUE</code>：使用 <code>kqueue</code></li>
<li><code>ZMQ_IOTHREAD_POLLER_USE_EPOLL</code>：使用 <code>epoll</code></li>
<li><code>ZMQ_IOTHREAD_POLLER_USE_DEVPOLL</code>：使用 <code>devpoll</code></li>
<li><code>ZMQ_IOTHREAD_POLLER_USE_POLLSET</code>：使用 <code>pollset</code></li>
<li><code>ZMQ_IOTHREAD_POLLER_USE_POLL</code>：使用 <code>poll</code></li>
<li><code>ZMQ_IOTHREAD_POLLER_USE_SELECT</code>：使用 <code>select</code></li>
<li><code>ZMQ_HAVE_GNU</code> 且 <code>ZMQ_IOTHREAD_POLLER_USE_POLL</code>：使用 <code>poll</code><br>若同时定义多个宏，则会报错。</li>
</ul>
<p>ZeroMQ 中，每个线程内含有一个 MailBox，用于线程间传递命令。创建 ZeroMQ IO 线程时，会把 mailbox 句柄添加到 Poller 中，用于监听是否有命令到达。</p>
<h2 id="io-thread-t-构造"><a href="#io-thread-t-构造" class="headerlink" title="io_thread_t 构造"></a>io_thread_t 构造</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">zmq::<span class="type">io_thread_t</span>::<span class="built_in">io_thread_t</span> (<span class="type">ctx_t</span> *ctx_, <span class="type">uint32_t</span> tid_) :</span><br><span class="line">    <span class="built_in">object_t</span> (ctx_, tid_),</span><br><span class="line">    _mailbox_handle (<span class="built_in">static_cast</span>&lt;<span class="type">poller_t</span>::<span class="type">handle_t</span>&gt; (<span class="literal">NULL</span>))</span><br><span class="line">&#123;</span><br><span class="line">    _poller = <span class="built_in">new</span> (std::nothrow) <span class="built_in">poller_t</span> (*ctx_);</span><br><span class="line">    <span class="built_in">alloc_assert</span> (_poller);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_mailbox.<span class="built_in">get_fd</span> () != retired_fd) &#123;</span><br><span class="line">        _mailbox_handle = _poller-&gt;<span class="built_in">add_fd</span> (_mailbox.<span class="built_in">get_fd</span> (), <span class="keyword">this</span>);</span><br><span class="line">        _poller-&gt;<span class="built_in">set_pollin</span> (_mailbox_handle);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>创建 <code>poller_t</code> 类对象 <code>_poller</code></li>
<li>配置 mailbox</li>
</ul>
]]></content>
      <categories>
        <category>数据通信</category>
        <category>ZeroMQ</category>
      </categories>
      <tags>
        <tag>ZeroMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>ZeroMQ消息模式</title>
    <url>/2024/09/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/ZeroMQ/ZeroMQ%E6%B6%88%E6%81%AF%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<!-- TOC -->

<ul>
<li><a href="#zeromq-%E6%B6%88%E6%81%AF%E6%A8%A1%E5%BC%8F">ZeroMQ 消息模式</a></li>
<li><a href="#request-reply">Request-Reply</a><ul>
<li><a href="#router-and-dealer">Router and Dealer</a></li>
</ul>
</li>
<li><a href="#pub-sub">Pub-Sub</a><ul>
<li><a href="#%E7%AE%80%E5%8D%95-pub-sub">简单 Pub-Sub</a></li>
<li><a href="#pub-sub-synchronization">Pub-Sub Synchronization</a><ul>
<li><a href="#node-coordination%E8%8A%82%E7%82%B9%E5%8D%8F%E8%B0%83">Node Coordination节点协调</a></li>
</ul>
</li>
<li><a href="#pub-sub-network-with-a-proxy">Pub-Sub Network with a Proxy</a></li>
<li><a href="#pub-sub-forward-proxy">Pub-Sub forward proxy</a></li>
<li><a href="#extended-pub-sub">Extended Pub-Sub</a></li>
</ul>
</li>
<li><a href="#push-pull">Push-Pull</a><ul>
<li><a href="#parallel-pipeline">Parallel Pipeline</a></li>
<li><a href="#fair-queuing">Fair Queuing</a></li>
</ul>
</li>
<li><a href="#exclusive-pair">Exclusive Pair</a></li>
</ul>
<!-- /TOC -->


<h1 id="ZeroMQ-消息模式"><a href="#ZeroMQ-消息模式" class="headerlink" title="ZeroMQ 消息模式"></a>ZeroMQ 消息模式</h1><p>ZeroMQ 内置四种核心消息模式：  </p>
<ul>
<li><strong>Request-reply</strong>：该模式将一组服务端和一组客户端相连，用于远程过程调用会任务分发。是一种 remote procedure call 和任务分发模式  </li>
<li><strong>Pub-sub</strong>：该模式将一组发布者和一组订阅者相连，用于数据分发</li>
<li><strong>Pipeline</strong>：该模式以fan-out&#x2F;fan-in形式连接节点，该模式可以有多个步骤和循环。这是一个并行的任务分发和收集模式</li>
<li><strong>Exclusive pair</strong>：该模式将两个套接字一对一的连接起来。这是一种在进程中连接两个线程的模式，不要与“普通”套接字对混淆</li>
</ul>
<p><a href="http://api.zeromq.org/master:zmq_socket"><code>zmq_socket()</code></a>手册中详细介绍了所有消息模式。  </p>
<p>以下是合法的套接字连接-绑定对（一端绑定，一端连接即可）：  </p>
<ul>
<li>PUB and SUB</li>
<li>REQ and REP</li>
<li>REQ and ROUTER (take care, REQ inserts an extra null frame)</li>
<li>DEALER and REP (take care, REP assumes a null frame)</li>
<li>DEALER and ROUTER</li>
<li>DEALER and DEALER</li>
<li>ROUTER and ROUTER</li>
<li>PUSH and PULL</li>
<li>PAIR and PAIR</li>
</ul>
<p>还将看到对 XPUB 和 XSUB 套接字的引用。任何其他组合都将产生未记录且不可靠的结果，并且如果尝试它们，ZeroMQ 的未来版本可能会返回错误。当然，可以并且将通过代码桥接其他套接字类型，即从一个套接字类型读取并写入另一个套接字类型。  </p>
<h1 id="Request-Reply"><a href="#Request-Reply" class="headerlink" title="Request-Reply"></a>Request-Reply</h1><p>是一种同步请求应答模式，发送 request 之后，必须等待 reply 才能继续发送请求。<br><img src="/./images/Request-Reply.png" alt="Request-Reply pattern">  </p>
<h2 id="Router-and-Dealer"><a href="#Router-and-Dealer" class="headerlink" title="Router and Dealer"></a>Router and Dealer</h2><p><img src="/./images/extended%20request-reply.png" alt="extended request-reply"> <img src="/./images/request-reply%20broker.png" alt="extended request-reply"><br>可用于解决请求分发问题。多个客户端和多个服务器，每个请求可能发送到不同的服务器进行处理。可解决当新增服务器时，每个客户端都需要修改以连接到新增的服务器。    </p>
<p>向 Router 发送消息，ZeroMQ 会自动带上消息来源帧。同时，由 Router 发送出去的消息，需手动带上目标 ID，该 ID 通常由 <code>zmq_setsockopt()</code> 定义。  </p>
<p>Router-Dealer 可演变为：  </p>
<ul>
<li>Router-Dealer</li>
<li>Router-REQ</li>
<li>Router-REP</li>
</ul>
<h1 id="Pub-Sub"><a href="#Pub-Sub" class="headerlink" title="Pub-Sub"></a>Pub-Sub</h1><h2 id="简单-Pub-Sub"><a href="#简单-Pub-Sub" class="headerlink" title="简单 Pub-Sub"></a>简单 Pub-Sub</h2><p><img src="/./images/Pub-Sub.png" alt="Pub-Sub pattern"><br>是一种异步模型。Publiser 向所有 subscriber 发布消息。Subscriber 可订阅多种消息，也可以向多个 publishers 订阅消息。  </p>
<p>要使用 SUB 套接字，必须使用 <code>zmq_setsockopt()</code> 设置 subscription。subscriber 可设置多个 subsciptions，只要消息满足其中一条订阅信息，SUB套接字就会收到。<br>pub-sub 模式需要注意：无法得知 SUB 何时开始接收消息，即便是先开启 SUB，后开启 PUB 发送消息，依然会丢失一部分消息。这是因为建立连接需要一些时间。解决方法：  </p>
<ul>
<li>方法一：可在建立连接之后，等待一段时间再发送消息 - 实际使用中不建议该方式，因为该方式太脆弱，且不好控制</li>
<li>方法二：该方法认为发布者发布的消息流是无穷无尽的，丢失一部分也没关系</li>
</ul>
<p>pub-sub 模式说明：  </p>
<ul>
<li>订阅者可连接多个发布者，轮流接收消息</li>
<li>若使用 TCP 协议，那么当订阅者处理速度过慢时，消息会在发布者端堆积(可使用阈值 HWM 进行保护)</li>
<li>ZeroMQ V3.X 版本，若使用 connected 协议(如: <code>tcp:@&lt;&gt;@</code> 或 <code>ipc:@&lt;&gt;@</code>)，则在 publisher 端进行过滤；若使用 <code>epgm:@&lt;//&gt;@</code> 协议，则在 subscriber 端进行过滤。在 ZeroMQ V2.X，所有过滤都是在 subscriber 端进行</li>
</ul>
<p>

<h2 id="Pub-Sub-Synchronization"><a href="#Pub-Sub-Synchronization" class="headerlink" title="Pub-Sub Synchronization"></a>Pub-Sub Synchronization</h2><p><img src="/./images/Pub-Sub%20Synchronization.png" alt="Pub-Sub Synchronization">  </p>
<p>使用 REQ-REP 来同步 Pub 于 Sub，Pub 等待所有 Sub 启动后再向发布消息。  </p>
<h3 id="Node-Coordination-节点协调"><a href="#Node-Coordination-节点协调" class="headerlink" title="Node Coordination(节点协调)"></a>Node Coordination(节点协调)</h3><p>要协调网络中的一组节点时，不适合使用 PAIR 套接字。这也是线程和节点之间的不同处之一。若远程节点断开后又重连，PAIR 不会进行处理。  </p>
<p>线程与节点的第二个重大区别在于：线程的数量一般是固定的，而节点的数量则会经常变化。  </p>
<p>以气象信息模型为基础，考虑节点的协调，保证客户端不会丢失最开始的消息。  </p>
<p>程序流程：  </p>
<ul>
<li>发布者知道预期的订阅者数量，可以任意指定</li>
<li>发布者启动后会等待所有订阅者进行连接，也就是节点协调。每个订阅者会使用另一个套接字来告知发布者自己已经就绪</li>
<li>当所有订阅者准备就绪后，发布者才开始发布消息</li>
</ul>
<p>此例中，使用 <code>REQ-REP</code> 套接字来同步发布者和订阅者。  </p>
<p>当 REQ-REP 请求完成时，仍无法保证 SUB 套接字已成功建立连接。除非使用 inproc 协议，否则对外连接的顺序是不一定的。因此，示例程序中使用了 <code>sleep(1)</code> 的方式来进行处理，随后再发送同步请求。</p>
<p>更可靠的模型是：  </p>
<ul>
<li>发布者打开 PUB 套接字，发送 Hello 消息</li>
<li>订阅者打开 SUB 套接字，当接收到 Hello 消息后再使用 REQ-REP 套接字进行同步</li>
<li>当发布者获得所有订阅者的同步消息后，再发送真正的数据</li>
</ul>
<h2 id="Pub-Sub-Network-with-a-Proxy"><a href="#Pub-Sub-Network-with-a-Proxy" class="headerlink" title="Pub-Sub Network with a Proxy"></a>Pub-Sub Network with a Proxy</h2><p><img src="/./images/Pub-Sub%20with%20a%20proxy.png" alt="Pub-Sub with a proxy"></p>
<h2 id="Pub-Sub-forward-proxy"><a href="#Pub-Sub-forward-proxy" class="headerlink" title="Pub-Sub forward proxy"></a>Pub-Sub forward proxy</h2><p>即：**<em>Transport Bridging</em>**<br>ZeroMQ 用户经常提出的一个问题是，“如何将 ZeroMQ 网络与 X 技术连接起来?”其中 X 是其他网络或消息传递技术。</p>
<p>最简单的答案就是 <em>bridge</em>。Bridge 是一个小应用程序，它在一个套接字上使用一种协议，并在另一个套接字上转换为&#x2F;从另一种协议。可以看做一个协议解释器。ZeroMQ 中常见的桥接问题是桥接两个传输或网络。 </p>
<p><img src="/./images/pub-sub%20forwarder%20proxy.png" alt="Pub-Sub forward proxy"> </p>
<h2 id="Extended-Pub-Sub"><a href="#Extended-Pub-Sub" class="headerlink" title="Extended Pub-Sub"></a>Extended Pub-Sub</h2><p><img src="/./images/Extended%20Pub-Sub.png" alt="Extended Pub-Sub"></p>
<h1 id="Push-Pull"><a href="#Push-Pull" class="headerlink" title="Push-Pull"></a>Push-Pull</h1><p>Push&#x2F;Pull 是消息传输的另一个重要的 pattern。<strong>用于 fan-out、fan-in 单向通信</strong>。  </p>
<p>Push 会将消息均匀地分发到所有可用的客户端，pull 会将来自所有连接的客户端的消息公平地排队。  </p>
<p>Push&#x2F;Pull 的特点是 <strong>Push 端和 Pull 端都可以做 server</strong>，<code>bind</code> 到某个地址等待对方访问。如果在 Push 端绑定地址，那么这是一个 Push server，对应的 Pull clients 可以 connect 到这个 Push server 往外拉数据；反之，如果建立一个 Pull server，对应的 Push clients 可以 connect 到这个 Pull server 往里压数据。由此，可以轻松实现一个 task 的 map reduce 的 framework。如下图所示，中间的 worker 可以随需增减。  </p>
<h2 id="Parallel-Pipeline"><a href="#Parallel-Pipeline" class="headerlink" title="Parallel Pipeline"></a>Parallel Pipeline</h2><p><img src="/./images/parallel%20pipeline.png" alt="Parallel Pipeline">  </p>
<ul>
<li>生成可以并行执行的任务的 ventilator</li>
<li>一组处理这些任务的 workers</li>
<li>结果收集器(Sink)会在末端接收所有worker的处理结果</li>
</ul>
<p>Ventilator 生成任务，并分发到 workers，wokers 处理后将结果发送到 Sink。是一种并行任务处理模型。  </p>
<p>现实中，workers 可能分布在不同的计算机中，也可能利用 GPU 进行复杂计算。  </p>
<p>更进一步，当任务处理完成时，干净的关闭进程。如果在后台启动了很多worker，现在希望在批处理完成时关闭它们。通过向 workers 发送一个 kill 消息来实现。最好的地方是 sink，因为它知道什么时候完成了一个批处理。<br><img src="/./images/parallel%20pipeline%20with%20kill%20signaling.png" alt="parallel pipeline with kill signaling">  </p>
<p>因为 Push-Pull 是单向的。因此需要使用另一种套接字类型，或者可以混合多个套接字流来将 sink 连接到 workers。此例中，如上图，使用 pub-sub 模型向 worker 发送 kill 消息。  </p>
<h2 id="Fair-Queuing"><a href="#Fair-Queuing" class="headerlink" title="Fair Queuing"></a>Fair Queuing</h2><p><img src="/./images/fair%20queuing.png" alt="Fair Queuing">  </p>
<p>管道模式也会出现慢连接的情况，让人误以为 PUSH 套接字没有进行负载均衡。如果正在使用 PUSH 和 PULL，并且其中一个 worker 程序比其他 worker 程序获得更多消息，这是因为其 PULL 套接字比其他 worker 程序连接得更快，并且在其他 worker 程序连接之前捕获了大量消息。如果想要适当的负载平衡，可以看看<a href="https://zguide.zeromq.org/docs/chapter3/#advanced-request-reply">第3章-高级请求-应答模式</a>中的负载平衡模式。</p>
<h1 id="Exclusive-Pair"><a href="#Exclusive-Pair" class="headerlink" title="Exclusive Pair"></a>Exclusive Pair</h1><p>该模式将两个套接字一对一链接起来。是一种在进程中连接两个线程的模式。<br><img src="/./images/Exclusive%20Pair.png" alt="Exclusive Pair"></p>
<p>参考：<a href="https://zguide.zeromq.org/docs/chapter2/#Signaling-Between-Threads-PAIR-Sockets">Signaling Between Threads(PAIR sockets)</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  Multithreaded relay</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;zhelpers.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> *</span></span><br><span class="line"><span class="function"><span class="title">step1</span> <span class="params">(<span class="type">void</span> *context)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//  Connect to step2 and tell it we&#x27;re ready</span></span><br><span class="line">    <span class="type">void</span> *xmitter = <span class="built_in">zmq_socket</span> (context, ZMQ_PAIR);</span><br><span class="line">    <span class="built_in">zmq_connect</span> (xmitter, <span class="string">&quot;inproc://step2&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;Step 1 ready, signaling step 2\n&quot;</span>);</span><br><span class="line">    <span class="built_in">s_send</span> (xmitter, <span class="string">&quot;READY&quot;</span>);</span><br><span class="line">    <span class="built_in">zmq_close</span> (xmitter);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> *</span></span><br><span class="line"><span class="function"><span class="title">step2</span> <span class="params">(<span class="type">void</span> *context)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//  Bind inproc socket before starting step1</span></span><br><span class="line">    <span class="type">void</span> *receiver = <span class="built_in">zmq_socket</span> (context, ZMQ_PAIR);</span><br><span class="line">    <span class="built_in">zmq_bind</span> (receiver, <span class="string">&quot;inproc://step2&quot;</span>);</span><br><span class="line">    <span class="type">pthread_t</span> thread;</span><br><span class="line">    <span class="built_in">pthread_create</span> (&amp;thread, <span class="literal">NULL</span>, step1, context);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Wait for signal and pass it on</span></span><br><span class="line">    <span class="type">char</span> *string = <span class="built_in">s_recv</span> (receiver);</span><br><span class="line">    <span class="built_in">free</span> (string);</span><br><span class="line">    <span class="built_in">zmq_close</span> (receiver);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Connect to step3 and tell it we&#x27;re ready</span></span><br><span class="line">    <span class="type">void</span> *xmitter = <span class="built_in">zmq_socket</span> (context, ZMQ_PAIR);</span><br><span class="line">    <span class="built_in">zmq_connect</span> (xmitter, <span class="string">&quot;inproc://step3&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;Step 2 ready, signaling step 3\n&quot;</span>);</span><br><span class="line">    <span class="built_in">s_send</span> (xmitter, <span class="string">&quot;READY&quot;</span>);</span><br><span class="line">    <span class="built_in">zmq_close</span> (xmitter);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">void</span> *context = <span class="built_in">zmq_ctx_new</span> ();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Bind inproc socket before starting step2</span></span><br><span class="line">    <span class="type">void</span> *receiver = <span class="built_in">zmq_socket</span> (context, ZMQ_PAIR);</span><br><span class="line">    <span class="built_in">zmq_bind</span> (receiver, <span class="string">&quot;inproc://step3&quot;</span>);</span><br><span class="line">    <span class="type">pthread_t</span> thread;</span><br><span class="line">    <span class="built_in">pthread_create</span> (&amp;thread, <span class="literal">NULL</span>, step2, context);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Wait for signal</span></span><br><span class="line">    <span class="type">char</span> *string = <span class="built_in">s_recv</span> (receiver);</span><br><span class="line">    <span class="built_in">free</span> (string);</span><br><span class="line">    <span class="built_in">zmq_close</span> (receiver);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;Test successful!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">zmq_ctx_destroy</span> (context);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这是 ZeroMQ 多线程编程的典型示例：  </p>
<ul>
<li>两个线程通过 &#96;inproc&#96;&#96; 通信，使用同一个 context</li>
<li>父线程创建一个套接字，绑定到 <code>inproc://&lt;端点&gt;</code>，然后启动子线程，将 context 对象传递给它</li>
<li>子线程创建一个套接字，连接到 <code>inproc://&lt;端点&gt;</code>，然后发送已就绪信号给父线程</li>
</ul>
<p>注意：使用这种模式的多线程代码不能扩展到进程。如果使用 <code>inproc</code> 和套接字对，那么会构建一个紧密绑定的应用程序，也就是说，线程在结构上是相互依赖的。当低延迟非常重要时，可以这样做。另一种设计模式是松散绑定(loosely bound)的应用程序，其中线程有自己的 context，并通过 <code>ipc</code> 或 <code>tcp</code> 进行通信。可以轻松地将松散绑定的线程分解为单独的进程。  </p>
<p>此处使用了 PAIR 套接字，而不使用其他套接字，是考虑到：  </p>
<ul>
<li>发送方可以使用 PUSH，接收方使用 PULL。看上去可行，但 <strong>PUSH 发送消息时会进行负载均衡</strong>，若开启了两个接收方，就会丢失一半的信号。而 PAIR 套接字建立的是一对一的链接，具有排他性</li>
<li>发送方可以使用 DEALER，接收方使用 ROUTER。但 ROUTER 套接字将信息封装在一个“envelope”中，这意味着零大小信号变成了一个 multipart 信息。如果不关心数据并将任何东西视为有效信号，并且如果重复读取套接字，那么这将无关紧要。但是，如果决定发送真实的数据，会突然发现 ROUTER 会提供“错误”的消息。DEALER 同样有负载均衡机制，和 PUSH 套接字有同样的风险</li>
<li>发送方可以使用 PUB，接收方使用 SUB。这样，消息可以远洋发送，PUB 套接字也不会进行负载均衡。但是，需要对 SUB 套接字设置一个空的订阅消息</li>
</ul>
<p>综上，使用 PAIR 套接字是线程协调最合适的方式。  </p>
<blockquote>
<hr>
<ul>
<li>ZeroMQ 中协调线程应该使用的唯一机制是 ZeroMQ 消息。</li>
</ul>
<hr>
</blockquote>
]]></content>
      <categories>
        <category>数据通信</category>
        <category>ZeroMQ</category>
      </categories>
      <tags>
        <tag>ZeroMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Mailbox</title>
    <url>/2024/09/07/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/ZeroMQ/mailbox/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>ZeroMQ 中，每个线程内含有一个 MailBox，用于线程间传递命令。创建 ZeroMQ IO 线程时，会把 mailbox 句柄添加到 Poller 中，用于监听是否有命令到达。  </p>
<p>在使用 <code>zsock_new()</code> 新建套接字时，最终会调用 <code>socket_base_t::create(...)</code> 方法创建 socket 并注册其 mailbox。  </p>
<p><code>socket_base_t::create(...)</code> 中会根据指定的套接字类型创建不同的套接字，例如：  </p>
<ul>
<li><code>ZMQ_PAIR</code>：pair_t</li>
<li><code>ZMQ_PUB</code>：pub_t</li>
<li><code>ZMQ_SUB</code>：sub_t</li>
<li>…</li>
</ul>
<p>所有套接字基类均为 <code>socket_base_t</code>，该类构造函数中创建 mailbox：  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (_thread_safe) &#123;</span><br><span class="line">    _mailbox = <span class="built_in">new</span> (std::nothrow) <span class="built_in">mailbox_safe_t</span> (&amp;_sync);</span><br><span class="line">    <span class="built_in">zmq_assert</span> (_mailbox);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="type">mailbox_t</span> *m = <span class="built_in">new</span> (std::nothrow) <span class="built_in">mailbox_t</span> ();</span><br><span class="line">    <span class="built_in">zmq_assert</span> (m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (m-&gt;<span class="built_in">get_fd</span> () != retired_fd)</span><br><span class="line">        _mailbox = m;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">LIBZMQ_DELETE</span> (m);</span><br><span class="line">        _mailbox = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="mailbox-t"><a href="#mailbox-t" class="headerlink" title="mailbox_t"></a>mailbox_t</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">mailbox_t</span> ZMQ_FINAL : <span class="keyword">public</span> i_mailbox</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">mailbox_t</span> ();</span><br><span class="line">    ~<span class="built_in">mailbox_t</span> ();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">fd_t</span> <span class="title">get_fd</span> <span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">send</span> <span class="params">(<span class="type">const</span> <span class="type">command_t</span> &amp;cmd_)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">recv</span> <span class="params">(<span class="type">command_t</span> *cmd_, <span class="type">int</span> timeout_)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">valid</span> <span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> HAVE_FORK</span></span><br><span class="line">    <span class="comment">// close the file descriptors in the signaller. This is used in a forked</span></span><br><span class="line">    <span class="comment">// child process to close the file descriptors so that they do not interfere</span></span><br><span class="line">    <span class="comment">// with the context in the parent process.</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">forked</span> <span class="params">()</span> ZMQ_FINAL</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        _signaler.forked ();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// 存储实际指令的队列</span></span><br><span class="line">    <span class="keyword">typedef</span> <span class="type">ypipe_t</span>&lt;<span class="type">command_t</span>, command_pipe_granularity&gt; <span class="type">cpipe_t</span>;</span><br><span class="line">    <span class="type">cpipe_t</span> _cpipe;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于从 writer 线程发送信号到 reader 线程</span></span><br><span class="line">    <span class="type">signaler_t</span> _signaler;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 只有一个线程从 mailbox 接收消息，但可以有任意数量的线程向 mailbox 发送消息。</span></span><br><span class="line">    <span class="comment">// 假设管道需要在它的两个端点上同步访问，必须同步发送端。</span></span><br><span class="line">    <span class="type">mutex_t</span> _sync;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果底层管道处于活动状态，则为 True。例如：当被允许从它读取命令时</span></span><br><span class="line">    <span class="type">bool</span> _active;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过宏定义将其设置为 private 以禁用拷贝构造和赋值运算符</span></span><br><span class="line">    <span class="built_in">ZMQ_NON_COPYABLE_NOR_MOVABLE</span> (<span class="type">mailbox_t</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>


<h2 id="ypipe-t"><a href="#ypipe-t" class="headerlink" title="ypipe_t"></a>ypipe_t</h2><p><code>ypipe_t</code> 是无锁队列(Lock-free queue)实现。  </p>
<ul>
<li>同一时刻只有一个线程可以从管道中读取数据  </li>
<li>同一时刻只有一个线程可以向管道写入数据</li>
</ul>
<p>使用 <code>yqueue_t</code> 队列存储数据。  </p>
<p>其中 yqueue 是用来设计队列，ypipe 用来设计队列的写入&#x2F;读取时机、回滚以及 flush  </p>
<h2 id="yqueue-t"><a href="#yqueue-t" class="headerlink" title="yqueue_t"></a>yqueue_t</h2><p>参考：  </p>
<ul>
<li><a href="https://www.zhihu.com/question/33309228">https://www.zhihu.com/question/33309228</a>  </li>
<li><a href="https://gopher.blog.csdn.net/article/details/126284313">https://gopher.blog.csdn.net/article/details/126284313</a></li>
</ul>
<p><code>yqueue</code> 是一个高效的队列实现。主要目的是最小化 <code>allocations/deallocations</code> 次数。  </p>
<p><code>yqueue</code> 中的使用 chunk 块机制，每次批量分配一批元素，这样可以减少内存的分配和释放。<code>yqueue_t</code> 由一组 chunk 组成，每个 chunk 保存 N 个元素：<code>spare_chunk</code>，当需要分配 <code>chunk_t</code> 时，从 <code>spare_chunk</code> 中获取。  </p>
<p>当队列空间不足时，每次分配一个 <code>chunk_t</code>，每个 <code>chunk_t</code> 能存储 N 个元素。在数据出队列后，队列有多余空间时，回收的 chunk 也不会立即释放，而是根据局部性原理先回收到队列中。  </p>
<p><code>yqueue_t</code> 类中的 <code>spare_chunk</code> 用于保存最近的空闲块。即：在将一个 chunk 中的所有元素都 <code>pop</code> 掉之后，就可以释放这个 chunk。但是可以保存一块最近的空闲块，以后如果 chunk 不够用时，扩容 chunk 就不用 malloc，直接复用该 <code>spare_chunk</code> 即可。根据局部性原理，这个 <code>spare_chunk</code> 的地址或者内存也很可能还在 cache 中，这样的机制可以减少一次 malloc 以及存入 cache 操作。  </p>
<p><code>yqueue_t</code> 内部有三个 <code>chunk_t</code> 类型指针以及对应的索引位置：  </p>
<ul>
<li><code>begin_chunk/begin_pos</code>：指向队列中第一个 chunk，begin_pos 指向第一个 chunk 中第一个元素的索引位置，因为 <code>pop()</code>，所以第一个元素不可能永远为 0，会随着 <code>pop()</code> 而改变。同理，第一个 chunk 也会被回收，也需记录第一个 chunk 的位置</li>
<li><code>back_chunk/back_pos</code>：用于指向队列最后一个 chunk，back_pos 指向之后一个 chunk 的最后一个元素的索引位置</li>
<li><code>end_chunk/end_pos</code>：在最后一个 chunk 未满时，end_chunk 和 back_chunk 相同，back_pos 的下一个就是 end_pos。最后一个 chunk 已满时，end_chunk 指向新分配的 chunk，end_pos 为 0。即：end_chunk 和 end_pos 是辅助 back_chunk&#x2F;back_pos 的</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> defined HAVE_POSIX_MEMALIGN</span></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * ALIGN 是在 posix_memalign 可用的情况下使用的内存对齐大小。默认值是 64，</span></span><br><span class="line"><span class="comment"> * 这种对齐将防止两个队列块占用同一 CPU 缓存线(Cache line)，在缓存线 &lt;= 64字节的架构</span></span><br><span class="line"><span class="comment"> * (例如，除了POWER之外的大多数内容)。它是在构建时检测到的，以尝试考虑 POWER 和 s390x 等其他平台。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="type">int</span> N, <span class="type">size_t</span> ALIGN = ZMQ_CACHELINE_SIZE&gt; <span class="keyword">class</span> <span class="type">yqueue_t</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="type">int</span> N&gt; <span class="keyword">class</span> <span class="type">yqueue_t</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//  Create the queue.</span></span><br><span class="line">    <span class="keyword">inline</span> <span class="built_in">yqueue_t</span> ()</span><br><span class="line">    &#123;</span><br><span class="line">        _begin_chunk = <span class="built_in">allocate_chunk</span> ();</span><br><span class="line">        <span class="built_in">alloc_assert</span> (_begin_chunk);</span><br><span class="line">        _begin_pos = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// back_chunk总是指向队列中最后一个元素所在的 chunk，初始为空</span></span><br><span class="line">        _back_chunk = <span class="literal">NULL</span>;</span><br><span class="line">        _back_pos = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// end_chunk 总是指向链表的最后一个 chunk</span></span><br><span class="line">        _end_chunk = _begin_chunk;</span><br><span class="line">        _end_pos = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Destroy the queue.</span></span><br><span class="line">    <span class="keyword">inline</span> ~<span class="built_in">yqueue_t</span> ()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (_begin_chunk == _end_chunk) &#123;</span><br><span class="line">                <span class="built_in">free</span> (_begin_chunk);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">chunk_t</span> *o = _begin_chunk;</span><br><span class="line">            _begin_chunk = _begin_chunk-&gt;next;</span><br><span class="line">            <span class="built_in">free</span> (o);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">chunk_t</span> *sc = _spare_chunk.<span class="built_in">xchg</span> (<span class="literal">NULL</span>);</span><br><span class="line">        <span class="built_in">free</span> (sc);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  返回队列首元素.注意：若队列为空，行为未定义</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> T &amp;<span class="title">front</span> <span class="params">()</span> </span>&#123; <span class="keyword">return</span> _begin_chunk-&gt;values[_begin_pos]; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> T &amp;<span class="title">back</span> <span class="params">()</span> </span>&#123; <span class="keyword">return</span> _back_chunk-&gt;values[_back_pos]; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">push</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        _back_chunk = _end_chunk;</span><br><span class="line">        _back_pos = _end_pos;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (++_end_pos != N) <span class="comment">// 当前 chunk 未满</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">chunk_t</span> *sc = _spare_chunk.<span class="built_in">xchg</span> (<span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (sc) &#123; <span class="comment">// 若有 spare_chunk，则继续复用</span></span><br><span class="line">            _end_chunk-&gt;next = sc;</span><br><span class="line">            sc-&gt;prev = _end_chunk;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 若没有 spare_chunk，则重新分配 chunk</span></span><br><span class="line">            _end_chunk-&gt;next = <span class="built_in">allocate_chunk</span> (); <span class="comment">// 分配一个 chunk</span></span><br><span class="line">            <span class="built_in">alloc_assert</span> (_end_chunk-&gt;next);</span><br><span class="line">            _end_chunk-&gt;next-&gt;prev = _end_chunk;</span><br><span class="line">        &#125;</span><br><span class="line">        _end_chunk = _end_chunk-&gt;next;</span><br><span class="line">        _end_pos = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除队列末尾元素。即：回滚最后一次推送到队列的元素。注意：调用者负责销毁 unpushed 的对象。</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">unpush</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//  First, move &#x27;back&#x27; one position backwards.</span></span><br><span class="line">        <span class="keyword">if</span> (_back_pos)</span><br><span class="line">            --_back_pos;</span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            _back_pos = N - <span class="number">1</span>;</span><br><span class="line">            _back_chunk = _back_chunk-&gt;prev;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  Now, move &#x27;end&#x27; position backwards. Note that obsolete end chunk</span></span><br><span class="line">        <span class="comment">//  is not used as a spare chunk. The analysis shows that doing so</span></span><br><span class="line">        <span class="comment">//  would require free and atomic operation per chunk deallocated</span></span><br><span class="line">        <span class="comment">//  instead of a simple free.</span></span><br><span class="line">        <span class="keyword">if</span> (_end_pos)</span><br><span class="line">            --_end_pos;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            _end_pos = N - <span class="number">1</span>;</span><br><span class="line">            _end_chunk = _end_chunk-&gt;prev;</span><br><span class="line">            <span class="built_in">free</span> (_end_chunk-&gt;next);</span><br><span class="line">            _end_chunk-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  Removes an element from the front end of the queue.</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">pop</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (++_begin_pos == N) &#123; <span class="comment">// 删除满一个 chunk 才回收 chunk</span></span><br><span class="line">            <span class="type">chunk_t</span> *o = _begin_chunk;</span><br><span class="line">            _begin_chunk = _begin_chunk-&gt;next;</span><br><span class="line">            _begin_chunk-&gt;prev = <span class="literal">NULL</span>;</span><br><span class="line">            _begin_pos = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  &#x27;o&#x27; has been more recently used than _spare_chunk,</span></span><br><span class="line">            <span class="comment">//  so for cache reasons we&#x27;ll get rid of the spare and</span></span><br><span class="line">            <span class="comment">//  use &#x27;o&#x27; as the spare.</span></span><br><span class="line">            <span class="comment">// 根据局部性原理，总是保存最新的空闲块儿释放先前的空闲块</span></span><br><span class="line">            <span class="type">chunk_t</span> *cs = _spare_chunk.<span class="built_in">xchg</span> (o); </span><br><span class="line">            <span class="built_in">free</span> (cs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// Individual memory chunk to hold N elements. 链表节点</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">chunk_t</span></span><br><span class="line">    &#123;</span><br><span class="line">        T values[N];</span><br><span class="line">        <span class="type">chunk_t</span> *prev;</span><br><span class="line">        <span class="type">chunk_t</span> *next;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">chunk_t</span> *<span class="title">allocate_chunk</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 分配的内存空间大小：sizeof(T) * N + 8 (32bit系统，+ 16：64bit系统) </span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined HAVE_POSIX_MEMALIGN</span></span><br><span class="line">        <span class="type">void</span> *pv;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">posix_memalign</span> (&amp;pv, ALIGN, <span class="built_in">sizeof</span> (<span class="type">chunk_t</span>)) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> (<span class="type">chunk_t</span> *) pv;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">static_cast</span>&lt;<span class="type">chunk_t</span> *&gt; (<span class="built_in">malloc</span> (<span class="built_in">sizeof</span> (<span class="type">chunk_t</span>)));</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果队列为空，返回位置可能指向无效内存，而开始和结束位置总是有效的。</span></span><br><span class="line"><span class="comment">     * 开始位置由队列读取器(front/pop)独占访问，而back和结束位置由队列写入器(back/push)独占访问。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">chunk_t</span> *_begin_chunk;</span><br><span class="line">    <span class="type">int</span> _begin_pos;</span><br><span class="line">    <span class="type">chunk_t</span> *_back_chunk;</span><br><span class="line">    <span class="type">int</span> _back_pos;</span><br><span class="line">    <span class="type">chunk_t</span> *_end_chunk;</span><br><span class="line">    <span class="type">int</span> _end_pos;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生产和消费速度可能接近。此时，保留最近释放的块使得不必调用 malloc/free。 </span></span><br><span class="line">    <span class="type">atomic_ptr_t</span>&lt;<span class="type">chunk_t</span>&gt; _spare_chunk;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ZMQ_NON_COPYABLE_NOR_MOVABLE</span> (<span class="type">yqueue_t</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据通信</category>
        <category>ZeroMQ</category>
      </categories>
      <tags>
        <tag>ZeroMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>CMake-QT5</title>
    <url>/2024/09/15/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/CMake-QT5/</url>
    <content><![CDATA[<h1 id="AUTORCC"><a href="#AUTORCC" class="headerlink" title="AUTORCC"></a>AUTORCC</h1><p>AUTORCC 是 boolean 值，指定 CMake 是否自动处理 Qt rcc 代码生成器，即：无需使用 QT4_ADD_RESOURCES()、QT5_ADD_RESOURCES()等命令。</p>
<p>若该属性为 ON，CMake 将处理在构建时添加为目标源的 .qrc 文件，并相应的调用 rcc。如果在创建目标时设置类该属性，则该属性由 CMAKE_AUTORCC 变量的值初始化。</p>
<p>默认情况下，AUTORCC 由自定义命令处理。 如果 .qrc 文件是 GENERATED，则使用自定义目标。</p>
<p>当存在多个同名的 .qrc 文件时，CMake 将为 rcc 生成未指定的唯一输出文件名。因此，如果需要使用 Q_INIT_RESOURCE() 或 Q_CLEANUP_RESOURCE()，则 .qrc 文件名必须是唯一的。</p>
<h1 id="QT-接口"><a href="#QT-接口" class="headerlink" title="QT 接口"></a>QT 接口</h1><h2 id="qt5-add-resources"><a href="#qt5-add-resources" class="headerlink" title="qt5_add_resources"></a>qt5_add_resources</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">qt5_add_resources(&lt;VAR&gt; file1.qrc [file2.qrc ...]</span><br><span class="line">                  [OPTIONS ...])</span><br></pre></td></tr></table></figure>

<p>使用 Resource Compiler（rcc）从 Qt 资源文件创建源代码。生成的源文件的路径已添加到中 。</p>
<h2 id="qt5-add-big-resources"><a href="#qt5-add-big-resources" class="headerlink" title="qt5_add_big_resources"></a>qt5_add_big_resources</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">qt5_add_big_resources(&lt;VAR&gt; file1.qrc [file2.qrc ...]</span><br><span class="line">                      [OPTIONS ...])</span><br></pre></td></tr></table></figure>

<p>类似于 qt5_add_resources，但是直接生成目标文件（.o，.obj）而不是 C++ 源代码。这样可以嵌入更大的资源，而在这些资源中编译为 C++ 源代码然后再编译为二进制代码将非常耗时或占用大量内存。</p>
<p>注意：仅 CMake 3.9 及以上版本支持</p>
<h2 id="qt5-wrap-cpp"><a href="#qt5-wrap-cpp" class="headerlink" title="qt5_wrap_cpp"></a>qt5_wrap_cpp</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">qt5_wrap_cpp</span>(&lt;VAR&gt; src_file1 [src_file2 ...]</span><br><span class="line">             [<span class="keyword">TARGET</span> <span class="keyword">target</span>]</span><br><span class="line">             [OPTIONS ...]</span><br><span class="line">             [DEPENDS ...])</span><br></pre></td></tr></table></figure>

<p>创建用于在给定源文件上调用元对象编译器（moc）的规则。对于每个输入文件，将在构建目录中生成一个输出文件。生成文件的路径添加到中 <code>&lt;var&gt;</code></p>
]]></content>
      <categories>
        <category>编译工具</category>
        <category>CMake</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>CMake</title>
    <url>/2024/09/15/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/CMake/</url>
    <content><![CDATA[<p>为 cmake 设置快捷方式</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">alias cmakedebug=&#x27;cmake $1 -DCMAKE_BUILD_TYPE=DEBUG&#x27;</span><br><span class="line">alias cmakerelease=&#x27;cmake $1 -DCMAKE_BUILD_TYPE=RELEASE&#x27;</span><br></pre></td></tr></table></figure>





<h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><p>变量使用 <code>$&#123;&#125;</code> 方式取值，但是在 <code>IF</code> 控制语句中是直接使用变量名。</p>
<p><code>指令 ( 参数 1 参数 2 … )</code> 参数使用括弧括起，参数之间使用空格或分号分开。 以 <code>ADD_EXECUTABLE</code> 指令为例：<code>ADD_EXECUTABLE(hello main.c func.c)</code> 或者 <code>ADD_EXECUTABLE(hello main.c;func.c) </code>。</p>
<p>指令是大小写无关的，参数和变量是大小写相关的。但，推荐全部使用大写指令。</p>
<p>cmake 语法灵活，例如： <code>SET(SRC_LIST main.c)</code> 也可写成 <code>SET(SRC_LIST &quot;main.c&quot;) </code>，但是当文件名中有空格时则必须使用双引号；还可以忽略源文件列表中的文件后缀， cmake 会自动在本目录查找。</p>
<p>当工程中有多个子目录时，每个子目录都需创建 CMakeLists.txt 文件</p>
<h2 id="内部构建与外部构建"><a href="#内部构建与外部构建" class="headerlink" title="内部构建与外部构建"></a>内部构建与外部构建</h2><p>内部构建即在项目 CMakeLists.txt 同级目录进行配置及编译。外部构建即在项目外进行编译，例如：在项目中创建 <code>&lt;project&gt;/build</code> 目录，然后进入该目录执行 <code>cmake .. &amp;&amp; make</code> 配置及配置。</p>
<p>外部构建时，<code>&lt;project&gt;_SOURCE_DIRS</code> 仍为项目根目录，而 <code>&lt;project&gt;_BINRAY_DIR</code> 则为 <code>&lt;project&gt;/build</code> </p>
<h1 id="基础指令"><a href="#基础指令" class="headerlink" title="基础指令"></a>基础指令</h1><h2 id="project"><a href="#project" class="headerlink" title="project"></a>project</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># language 列表可选，默认表示支持所有语言</span></span><br><span class="line"><span class="comment"># VERSION 指定版本号，并同时定义以下变量</span></span><br><span class="line"><span class="comment"># 	- PROJECT_VERSION: 项目完整版本号</span></span><br><span class="line"><span class="comment"># 	- PROJECT_VERSION_MAJOR</span></span><br><span class="line"><span class="comment"># 	- PROJECT_VERSION_MINOR</span></span><br><span class="line"><span class="comment"># 	- PROJECT_VERSION_PATCH: 补丁号</span></span><br><span class="line"><span class="comment"># DESCRIPTION 添加项目描述，并定义 PROJECT_DESCRIPTION 变量</span></span><br><span class="line"><span class="comment"># HOMEPAGE_URL 设置项目主页，并定义 PROJECT_HOMEPAGE_URL 变量</span></span><br><span class="line"><span class="keyword">project</span>(&lt;<span class="keyword">PROJECT</span>-NAME&gt; [&lt;language-name&gt;...])</span><br><span class="line"><span class="keyword">project</span>(&lt;<span class="keyword">PROJECT</span>-NAME&gt;</span><br><span class="line">        [VERSION &lt;major&gt;[.&lt;minor&gt;[.&lt;patch&gt;[.&lt;tweak&gt;]]]]</span><br><span class="line">        [DESCRIPTION &lt;<span class="keyword">project</span>-description-<span class="keyword">string</span>&gt;]</span><br><span class="line">        [HOMEPAGE_URL &lt;url-<span class="keyword">string</span>&gt;]</span><br><span class="line">        [LANGUAGES &lt;language-name&gt;...])</span><br></pre></td></tr></table></figure>

<p>定义项目名称， <strong>必要</strong>，多个 <code>projcet</code> 指令以最后一个为准。当从顶层调用 CMakeLists.txt 时，cmake 还将项目名称存储在变量 <strong><code>CMAKE_PROJECT_NAME</code></strong> 中。</p>
<p>同时设置以下变量：</p>
<ul>
<li><strong><code>PROJECT_SOURCE_DIR</code></strong> 、**<code>&lt;PROJECT-NAME&gt;_SOURCE_DIR</code>** ：项目源目录的绝对路径</li>
<li><strong><code>PROJECT_BINARY_DIR</code></strong> 、**<code>&lt;PROJECT-NAME&gt;_BINARY_DIR</code>** ：项目可执行文件目录的绝对路径</li>
<li><strong><code>PROJECT_IS_TOP_LEVEL</code></strong> 、**<code>&lt;PROJECT-NAME&gt;_IS_TOP_LEVEL</code>** ：v3.21 新增变量，表示当前项目是否为 top-level</li>
</ul>
<h2 id="MESSAGE"><a href="#MESSAGE" class="headerlink" title="MESSAGE"></a>MESSAGE</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通用消息</span></span><br><span class="line"><span class="comment">## mode: 消息类型，会影响消息的处理方式:</span></span><br><span class="line"><span class="comment">## 	- FATAL_ERROR: CMake 错误，停止</span></span><br><span class="line"><span class="comment">## 	- SEND_ERROR: CMake 错误，继续处理，但跳过生成</span></span><br><span class="line"><span class="comment">##	- WARNING: 警告，继续处理</span></span><br><span class="line"><span class="comment">##	- AUTHOR_WARNING: </span></span><br><span class="line"><span class="comment">## 	- DEPRECATION: 如果变量 CMAKE_ERROR_DEPRECATED 或 CMAKE_WARN_DEPRECATED 分别被启用，则产 生Deprecation 错误或警告，否则没有消息</span></span><br><span class="line"><span class="comment">## 	- 空/NOTICE: 输出日志到 stderr</span></span><br><span class="line"><span class="comment">## 	- STATUS: 感兴趣的主要信息</span></span><br><span class="line"><span class="comment">## 	- VERBOSE: 详细信息消息。提供额外的细节</span></span><br><span class="line"><span class="comment">## 	- DE<span class="doctag">BUG:</span> </span></span><br><span class="line"><span class="comment">## 	- TRACE: 最低级别消息。通常只是临时的，项目发布之前会被删除</span></span><br><span class="line"><span class="keyword">message</span>([&lt;mode&gt;] <span class="string">&quot;message text&quot;</span> ...)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Reporting checks. v3.17 新增</span></span><br><span class="line"><span class="comment">## checktate:</span></span><br><span class="line"><span class="comment">## 	- CHECK_START: 记录即将执行的检查的简短信息</span></span><br><span class="line"><span class="comment">## 	- CHECK_PASS: 若成功则记录</span></span><br><span class="line"><span class="comment">## 	- CHECK_FAIL: 若失败则记录</span></span><br><span class="line"><span class="keyword">message</span>(&lt;checkState&gt; <span class="string">&quot;message text&quot;</span> ...)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure Log。V3.26 新增</span></span><br><span class="line"><span class="keyword">message</span>(CONFIGURE_LOG &lt;text&gt;...)</span><br></pre></td></tr></table></figure>



<h2 id="ADD-COMPILE-OPTIONS"><a href="#ADD-COMPILE-OPTIONS" class="headerlink" title="ADD_COMPILE_OPTIONS"></a>ADD_COMPILE_OPTIONS</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ADD_COMPILE_OPTIONS</span>(-std=c++<span class="number">11</span>)</span><br></pre></td></tr></table></figure>



<h2 id="ADD-EXECUTABLE"><a href="#ADD-EXECUTABLE" class="headerlink" title="ADD_EXECUTABLE"></a>ADD_EXECUTABLE</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加可执行文件</span></span><br><span class="line"><span class="comment"># name: 可执行文件名，在项目中必须是全局唯一的</span></span><br><span class="line"><span class="comment"># options：</span></span><br><span class="line"><span class="comment"># 	- WIN32: 自动设置 WIN32_EXECUTABLE 属性</span></span><br><span class="line"><span class="comment">#	- MACOSX_BUNDLE: 自动设置 MACOSX_BUNDLE 属性</span></span><br><span class="line"><span class="comment">#	- EXCLUDE_FROM_ALL: 设置 EXCLUDE_FROM_ALL 属性</span></span><br><span class="line"><span class="comment"># sources: 源文件列表</span></span><br><span class="line"><span class="keyword">add_executable</span>(&lt;name&gt; &lt;options&gt;... &lt;sources&gt;...)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Imported Executables</span></span><br><span class="line"><span class="comment"># options:</span></span><br><span class="line"><span class="comment"># 	- GLOBAL: 使目标名称全局可见 </span></span><br><span class="line"><span class="keyword">add_executable</span>(&lt;name&gt; IMPORTED [GLOBAL])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Alias Executables</span></span><br><span class="line"><span class="keyword">add_executable</span>(&lt;name&gt; ALIAS &lt;<span class="keyword">target</span>&gt;)</span><br></pre></td></tr></table></figure>



<h2 id="ADD-LIBRARY"><a href="#ADD-LIBRARY" class="headerlink" title="ADD_LIBRARY"></a>ADD_LIBRARY</h2><p>生成动态&#x2F;静态库。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Normal Libraries</span></span><br><span class="line"><span class="comment"># name: 库名，在项目中全局唯一。实际库名是基于编译平台的约定(例如lib&lt;name&gt;.a 或 &lt;name&gt;.lib)</span></span><br><span class="line"><span class="comment"># type: 库的类型，若不指定，则根据 BUILD_SHARED_LIBS 变量选择</span></span><br><span class="line"><span class="comment"># 	- STATIC: 静态库</span></span><br><span class="line"><span class="comment">#	- SHARED: 动态库</span></span><br><span class="line"><span class="comment">#	- MODULE: 插件，可能不会被其他目标链接，但可以在运行时使用 dlopen 等动态加载。若不支持 dyld，等同于 SHARED</span></span><br><span class="line"><span class="comment"># EXCLUDE_FROM_ALL: </span></span><br><span class="line"><span class="keyword">add_library</span>(&lt;name&gt; [&lt;type&gt;] [EXCLUDE_FROM_ALL] &lt;sources&gt;...)</span><br></pre></td></tr></table></figure>

<p>对于 <code>SHARED</code> 和 <code>MODULE</code>，会自动将 <code>POSITION_INDEPENDENT_CODE</code> 设置为 <code>ON</code>。</p>
<p>若一个库不暴露任何 symbols，则不能被定义为 <code>SHARED</code> 库。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Object Libraries</span></span><br><span class="line"><span class="comment"># 添加对象库以编译源文件，而无需将其对象文件归档或链接到库中.</span></span><br><span class="line"><span class="comment"># 其它通过 add_library/add_executable 构建的目标可依赖该对象</span></span><br><span class="line"><span class="keyword">add_library</span>(&lt;name&gt; OBJECT &lt;sources&gt;...)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 例如：</span></span><br><span class="line"><span class="keyword">add_library</span>(... $&lt;TARGET_OBJECTS:objlib&gt; ...)</span><br><span class="line"><span class="keyword">add_executable</span>(... $&lt;TARGET_OBJECTS:objlib&gt; ...)</span><br></pre></td></tr></table></figure>



<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># interface Libraries</span></span><br><span class="line"><span class="comment"># 添加 Interface Library 目标。可以指定依赖项的使用需求，但不编译源代码，也不会在磁盘上生成库</span></span><br><span class="line"><span class="keyword">add_library</span>(&lt;name&gt; INTERFACE)</span><br></pre></td></tr></table></figure>



<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Imported Libraries</span></span><br><span class="line"><span class="comment"># type 支持 STATIC/SHARED/MODULE/UNKNOWN</span></span><br><span class="line"><span class="keyword">add_library</span>(&lt;name&gt; &lt;type&gt; IMPORTED [GLOBAL])</span><br></pre></td></tr></table></figure>



<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Alias Libraries</span></span><br><span class="line"><span class="keyword">add_library</span>(&lt;name&gt; ALIAS &lt;<span class="keyword">target</span>&gt;)</span><br></pre></td></tr></table></figure>



<h2 id="ADD-SUBDIRECTORY"><a href="#ADD-SUBDIRECTORY" class="headerlink" title="ADD_SUBDIRECTORY"></a>ADD_SUBDIRECTORY</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># binary_dir 指定放置输出文件的目录</span></span><br><span class="line"><span class="keyword">add_subdirectory</span>(source_dir [binary_dir] [EXCLUDE_FROM_ALL] [SYSTEM])</span><br></pre></td></tr></table></figure>

<p>该指令用于向当前工程添加存放源文件的子目录，并可以指定中间二进制和目标二进制存 放的位置。 </p>
<p>EXCLUDE_FROM_ALL 参数的含义是将这个目录从编译过程中排除，比如，工程 的 example ，可能就需要工程构建完成后，再进入 example 目录单独进行构建</p>
<p>V3.25 新增 SYSTEM 参数，子目录的 SYSTEM directory 属性将被设置为true。该属性用于初始化在该子目录中创建的每个非导入目标的SYSTEM属性。</p>
<h2 id="AUX-SOURCE-DIRECTORY"><a href="#AUX-SOURCE-DIRECTORY" class="headerlink" title="AUX_SOURCE_DIRECTORY"></a>AUX_SOURCE_DIRECTORY</h2><p>查找指定目录下的所有源文件，并将结果写入 variable 中</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">AUX_SOURCE_DIRECTORY</span>(&lt;dir&gt; &lt;variable&gt;)</span><br></pre></td></tr></table></figure>



<h2 id="INCLUDE-DIRECTORIES"><a href="#INCLUDE-DIRECTORIES" class="headerlink" title="INCLUDE_DIRECTORIES"></a>INCLUDE_DIRECTORIES</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include_directories</span>(<span class="keyword">include</span> <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span> ) </span><br><span class="line"><span class="keyword">if</span>(ENABLE_EGO) </span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;thd_lib_path&#125;</span>/boost/<span class="keyword">include</span>) </span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">#message($&#123;INCLUDE_DIRECTORIES&#125;) 不可使用</span></span><br><span class="line"><span class="keyword">get_property</span>(dirs DIRECTORY <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span> PROPERTY <span class="keyword">INCLUDE_DIRECTORIES</span>) </span><br><span class="line"><span class="keyword">foreach</span>(dir <span class="variable">$&#123;dirs&#125;</span>) </span><br><span class="line"><span class="keyword">message</span>(STATUS <span class="string">&quot;dir=&#x27;$&#123;dir&#125;&#x27;&quot;</span>) </span><br><span class="line"><span class="keyword">endforeach</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/<span class="keyword">include</span>)</span><br></pre></td></tr></table></figure>





<h2 id="INSTALL"><a href="#INSTALL" class="headerlink" title="INSTALL"></a>INSTALL</h2><h3 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装目标文件，通常是ADD_EXECUTABLE/ADD_LIBRARY定义的目标</span></span><br><span class="line"><span class="keyword">install</span>(TARGETS &lt;<span class="keyword">target</span>&gt;... [<span class="keyword">EXPORT</span> &lt;<span class="keyword">export</span>-name&gt;]</span><br><span class="line">        [RUNTIME_DEPENDENCIES &lt;arg&gt;...|RUNTIME_DEPENDENCY_SET &lt;<span class="keyword">set</span>-name&gt;]</span><br><span class="line">        [&lt;artifact-<span class="keyword">option</span>&gt;...]</span><br><span class="line">        [&lt;artifact-kind&gt; &lt;artifact-<span class="keyword">option</span>&gt;...]...</span><br><span class="line">        [INCLUDES DESTINATION [&lt;dir&gt; ...]]</span><br><span class="line">        )</span><br></pre></td></tr></table></figure>

<p>目标文件类型有：</p>
<ul>
<li>ARCHIVE：特指静态库</li>
<li>LIBRARY：特指动态库</li>
<li>RUNTIME：特指可执行目标二进制</li>
<li>PUBLIC_HEADER：与目标文件相关联的 <code>PUBLIC_HEADER</code> 文件。由 <code>PUBLIC_HEADER</code> 属性指定</li>
<li>PRIVATE_HEADER：</li>
<li>FILE_SET(type HEADERS)：</li>
</ul>
<p>DESTINATION 定义了安装的路径，如果路径以 &#x2F; 开头，那么指的是绝对路径，这时候 <code>CMAKE_INSTALL_PREFIX</code> 就无效了。如果希望使用 <code>CMAKE_INSTALL_PREFIX</code> 来定义安装路径，就要写成相对路径，即不要以 &#x2F; 开头，那么安装后的路径就是 <code>$&#123;CMAKE_INSTALL_PREFIX&#125;/</code> </p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set_target_properties</span>(mylib PROPERTIES PUBLIC_HEADER mylib.h)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 myrun 安装到 CMAKE_INSTALL_PREFIX/bin 目录</span></span><br><span class="line"><span class="comment"># 将 mylib 安装到 CMAKE_INSTALL_PREFIX/lib 目录</span></span><br><span class="line"><span class="comment"># 将 mystaticlib 安装到 CMAKE_INSTALL_PREFIX/libstatic 目录</span></span><br><span class="line"><span class="keyword">INSTALL</span>(TARGETS myrun mylib mystaticlib </span><br><span class="line">    RUNTIME DESTINATION bin </span><br><span class="line">    LIBRARY DESTINATION lib </span><br><span class="line">    ARCHIVE DESTINATION libstatic</span><br><span class="line">    PUBLIC_HEADER DESTINATION <span class="variable">$&#123;CMAKE_INSTALL_INCLUDEDIR&#125;</span>/myproj)</span><br></pre></td></tr></table></figure>



<h3 id="FILES-与-programs"><a href="#FILES-与-programs" class="headerlink" title="FILES 与 programs"></a>FILES 与 programs</h3><p>两者指令使用方法相同，不同的是安装后的权限。</p>
<p>FILES 默认权限为：<code>OWNER_WRITE</code>, <code>OWNER_READ</code>, <code>GROUP_READ</code>, 和 WORLD_READ ，即 644 </p>
<p>programs 权限为：<code>WNER_EXECUTE</code>, <code>GROUP_EXECUTE</code>, 和 <code>WORLD_EXECUTE</code>，即 755 </p>
<h3 id="DIRECTORY"><a href="#DIRECTORY" class="headerlink" title="DIRECTORY"></a>DIRECTORY</h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">install</span>(DIRECTORY dirs...</span><br><span class="line">        TYPE &lt;type&gt; | DESTINATION &lt;dir&gt;</span><br><span class="line">        [FILE_PERMISSIONS &lt;permission&gt;...]</span><br><span class="line">        [DIRECTORY_PERMISSIONS &lt;permission&gt;...]</span><br><span class="line">        [USE_SOURCE_PERMISSIONS] [OPTIONAL] [MESSAGE_NEVER]</span><br><span class="line">        [CONFIGURATIONS &lt;config&gt;...]</span><br><span class="line">        [COMPONENT &lt;component&gt;] [EXCLUDE_FROM_ALL]</span><br><span class="line">        [FILES_MATCHING]</span><br><span class="line">        [[PATTERN &lt;pattern&gt; | REGEX &lt;regex&gt;]</span><br><span class="line">         [EXCLUDE] [PERMISSIONS &lt;permission&gt;...]] [...])</span><br></pre></td></tr></table></figure>

<p>目录安装。注意: abc 表示将被安装到目标路径下的 abc ,而 abc&#x2F; 表示将 abc 中的内容安装到目标路径，不包括该目录本身 。</p>
<p>参数 <code>PATTERN</code> 用于使用正则表达式进行过滤， <code>PERMISSIONS</code> 用于指定 <code>PATTERN</code> 过滤后的文件 权限。</p>
<p>不论是 <code>SUBDIRS</code> 还是 <code>ADD_SUBDIRECTORY</code> 指令 ( 不论是否指定编译输出目录 ) ，都可 以通过 SET 指令重新定义 <code>EXECUTABLE_OUTPUT_PATH</code> 和 <code>LIBRARY_OUTPUT_PATH</code> 变量 来指定最终的目标二进制的位置 ( 指最终生成的 hello 或者最终的共享库，不包含编译生成 的中间文件 )</p>
<h2 id="SET-SOURCE-FILES-PROPERTIES"><a href="#SET-SOURCE-FILES-PROPERTIES" class="headerlink" title="SET_SOURCE_FILES_PROPERTIES"></a><strong>SET_SOURCE_FILES_PROPERTIES</strong></h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET_SOURCE_FILES_PROPERTIES</span>(<span class="variable">$&#123;DIR_SRS&#125;</span> PROPERTIES LANGUAGE CXX)</span><br></pre></td></tr></table></figure>

<p>将源文件列表 DIR_SRS 中的所有源文件的属性设置为CXX,则编译器会将该列表中的所有源文件都当做 C++ 文件,使用 g++ 进行编译.</p>
<p>例如,当在C++工程内部包含 .c 格式的源文件, 并且该文件中为某些参数设置了默认参数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">record_dev_id <span class="title">get_default_input_dev</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* capdev = <span class="literal">NULL</span>)</span></span></span><br></pre></td></tr></table></figure>

<p>则编译时，若不设置 CXX 属性，会存在如下错误</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error: expected &#x27;;&#x27;, &#x27;,&#x27; or &#x27;)&#x27; before &#x27;=&#x27; token</span><br></pre></td></tr></table></figure>







<h1 id="常用变量"><a href="#常用变量" class="headerlink" title="常用变量"></a>常用变量</h1><ul>
<li><p><strong><code>&lt;project&gt;_BINARY_DIR</code></strong> 工程根目录</p>
</li>
<li><p><strong><code>PROJECT_NAME</code></strong> 返回通过PROJECT指令定义的项目名称 </p>
</li>
<li><p><strong><code>CMAKE_BINARY_DIR</code></strong> 、**<code>PROJECT_BINARY_DIR</code>** 运行cmake命令的目录,通常是 <code>$&#123;PROJECT_SOURCE_DIR&#125;/build</code></p>
</li>
<li><p><strong><code>PROJECT_SOURCE_DIR</code></strong> 工程的根目录</p>
</li>
<li><p><strong><code>CMAKE_SOURCE_DIR</code></strong></p>
</li>
<li><p><strong><code>&lt;project&gt;_SOURCE_DIR</code></strong></p>
</li>
<li><p><strong><code>CMAKE_INCLUDE_PATH</code></strong> 环境变量,非cmake变量 </p>
</li>
<li><p><strong><code>CMAKE_LIBRARY_PATH</code></strong> 环境变量</p>
</li>
<li><p><strong><code>CMAKE_CURRENT_SOURCE_DIR</code></strong> 当前处理的CMakeLists.txt所在的路径</p>
</li>
<li><p><strong><code>CMAKE_CURRENT_BINARY_DIR</code></strong> target编译目录。使用 **<code>ADD_SURDIRECTORY(src bin)</code><strong>可以更改此变量的值。</strong><code>SET(EXECUTABLE_OUTPUT_PATH &lt;新路径&gt;)</code>**并不会对此变量有影响,只是改变了最终目标文件的存储路径 </p>
</li>
<li><p><strong><code>CMAKE_CURRENT_LIST_FILE</code></strong> 输出调用这个变量的CMakeLists.txt的完整路径 </p>
</li>
<li><p><strong><code>CMAKE_CURRENT_LIST_LINE</code></strong> 输出这个变量所在的行 </p>
</li>
<li><p><strong><code>CMAKE_MODULE_PATH</code></strong> 定义自己的cmake模块所在的路径。**<code>SET(CMAKE_MODULE_PATH $&#123;PROJECT_SOURCE_DIR&#125;/cmake)</code>**,然后可以用 <em><code>INCLUDE</code></em> 命令来调用自己的模块 </p>
</li>
<li><p><strong><code>EXECUTABLE_OUTPUT_PATH</code></strong> 重新定义目标二进制可执行文件的存放位置 </p>
</li>
<li><p><strong><code>LIBRARY_OUTPUT_PATH</code></strong> 重新定义目标链接库文件的存放位置 </p>
</li>
<li><p><strong><code>CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS</code></strong> 用来控制 <code>IF ELSE</code> 语句的书写方式</p>
</li>
</ul>
<p><strong>系统信息</strong></p>
<ul>
<li><p><strong><code>CMAKE_MAJOR_VERSION</code></strong> cmake主版本号,如2.8.6中的2 </p>
</li>
<li><p><strong><code>CMAKE_MINOR_VERSION</code></strong> cmake次版本号,如2.8.6中的8 </p>
</li>
<li><p><strong><code>CMAKE_PATCH_VERSION</code></strong> cmake补丁等级,如2.8.6中的6 </p>
</li>
<li><p><strong><code>CMAKE_SYSTEM</code></strong> 系统名称,例如Linux-2.6.22 </p>
</li>
<li><p><strong><code>CAMKE_SYSTEM_NAME</code></strong> 不包含版本的系统名,如Linux </p>
</li>
<li><p><strong><code>CMAKE_SYSTEM_VERSION</code></strong> 系统版本,如2.6.22 </p>
</li>
<li><p><strong><code>CMAKE_SYSTEM_PROCESSOR</code></strong> 处理器名称,如i686</p>
</li>
</ul>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(CMAKE_SYSTEM_PROCESSOR <span class="keyword">MATCHES</span> <span class="string">&quot;i686.*|i386.*|x86.*|amd64.*|AMD64.*&quot;</span>)</span><br><span class="line"><span class="keyword">if</span>(CMAKE_SYSTEM_PROCESSOR <span class="keyword">MATCHES</span> <span class="string">&quot;^(arm.*|ARM.*))&quot;</span>)</span><br><span class="line"><span class="keyword">if</span>(CMAKE_SYSTEM_PROCESSOR <span class="keyword">MATCHES</span> <span class="string">&quot;^(aarch64.*|AARCH64.*))&quot;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong><code>UNIX</code></strong> 在所有的类UNIX平台为TRUE,包括OS X和cygwin </p>
</li>
<li><p><strong><code>WIN32</code></strong> 在所有的win32平台为TRUE,包括cygwin</p>
</li>
</ul>
<p><strong>开关选项</strong></p>
<ul>
<li><p><strong><code>BUILD_SHARED_LIBS</code></strong> 控制默认的库编译方式。如果未进行设置，使用 <code>ADD_LIBRARY</code> 时又没有指定库类型,默认编译生成的库都是静态库</p>
</li>
<li><p><strong><code>CMAKE_C_FLAGS</code></strong> 设置C编译选项 </p>
</li>
<li><p><strong><code>CMAKE_CXX_FLAGS</code></strong> 设置C++编译选项</p>
</li>
<li><p><strong><code>CMAKE_C_COMPILER_INIT</code></strong></p>
</li>
<li><p>**<code>CMAKE_BUILD_TYPE</code>**：Debug、Release、RelWithDebInfo、MinSizeRel。对应使用如下宏来生成 Makefile: </p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">CMAKE_C_FLAGS_[DEBUG|RELEASE|RELWITHDEBINFO|MINSIZEREL]</span><br><span class="line">CMAKE_CXX_FLAGS_[DEBUG|RELEASE|RELWITHDEBINFO|MINSIZEREL]</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong><code>CMAKE_SIZEOF_VOID_P</code></strong>: void* 的大小，可用于判断当前系统是 32bits 还是 64bits</p>
</li>
</ul>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(CMAKE_SIZEOF_VOID_P <span class="keyword">EQUAL</span> <span class="number">8</span>)    </span><br><span class="line">	<span class="comment"># 64bits </span></span><br><span class="line"><span class="keyword">else</span>()    </span><br><span class="line">	<span class="comment"># 32bits </span></span><br><span class="line"><span class="keyword">endif</span>()           </span><br></pre></td></tr></table></figure>

<p><strong>cmake自定义变量</strong></p>
<p>主要有隐式定义和显式定义两种.</p>
<p>隐式定义：就是 PROJECT 指令,会隐式的定义_BINARY_DIR 和_SOURCE_DIR 两个变量。</p>
<p>显式定义：使用 SET 指令,就可以构建一个自定义变量了。</p>
<h1 id="Macro"><a href="#Macro" class="headerlink" title="Macro"></a>Macro</h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment">## utils.cmake, 定义 macro 宏，用于获取 Git 的 hash 及 分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get git hash</span></span><br><span class="line"><span class="keyword">macro</span>(get_git_hash _git_hash)   <span class="comment"># 宏的开始</span></span><br><span class="line">    <span class="keyword">find_package</span>(Git QUIET)     <span class="comment"># 查找Git，QUIET静默方式不报错</span></span><br><span class="line">    <span class="keyword">if</span>(GIT_FOUND)</span><br><span class="line">      <span class="keyword">execute_process</span>(          <span class="comment"># 执行一个子进程</span></span><br><span class="line">        <span class="keyword">COMMAND</span> <span class="variable">$&#123;GIT_EXECUTABLE&#125;</span> log -<span class="number">1</span> --pretty=format:%h <span class="comment"># 命令</span></span><br><span class="line">        OUTPUT_VARIABLE <span class="variable">$&#123;_git_hash&#125;</span>        <span class="comment"># 输出字符串存入变量</span></span><br><span class="line">        OUTPUT_STRIP_TRAILING_WHITESPACE    <span class="comment"># 删除字符串尾的换行符</span></span><br><span class="line">        ERROR_QUIET                         <span class="comment"># 对执行错误静默</span></span><br><span class="line">        WORKING_DIRECTORY                   <span class="comment"># 执行路径</span></span><br><span class="line">          <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span></span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">endif</span>()</span><br><span class="line"><span class="keyword">endmacro</span>()                      <span class="comment"># 宏的结束</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get git branch</span></span><br><span class="line"><span class="keyword">macro</span>(get_git_branch _git_branch)   <span class="comment"># 宏的开始</span></span><br><span class="line">    <span class="keyword">find_package</span>(Git QUIET)     <span class="comment"># 查找Git，QUIET静默方式不报错</span></span><br><span class="line">    <span class="keyword">if</span>(GIT_FOUND)</span><br><span class="line">      <span class="keyword">execute_process</span>(          <span class="comment"># 执行一个子进程</span></span><br><span class="line">        <span class="keyword">COMMAND</span> <span class="variable">$&#123;GIT_EXECUTABLE&#125;</span> symbolic-ref --short -q HEAD</span><br><span class="line">        OUTPUT_VARIABLE <span class="variable">$&#123;_git_branch&#125;</span>        <span class="comment"># 输出字符串存入变量</span></span><br><span class="line">        OUTPUT_STRIP_TRAILING_WHITESPACE    <span class="comment"># 删除字符串尾的换行符</span></span><br><span class="line">        ERROR_QUIET                         <span class="comment"># 对执行错误静默</span></span><br><span class="line">        WORKING_DIRECTORY                   <span class="comment"># 执行路径</span></span><br><span class="line">          <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span></span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">endif</span>()</span><br><span class="line"><span class="keyword">endmacro</span>()                      <span class="comment"># 宏的结束</span></span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span>(cmake/utils.cmake)</span><br><span class="line"><span class="comment">#  添加自定义cmake文件目录.</span></span><br><span class="line"><span class="comment"># list(APPEND CMAKE_MODULE_PATH $&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/cmake)</span></span><br><span class="line"><span class="comment"># include(utils) # 使用 utils.cmake. 可替代上面 include</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span>(TIMESTAMP BUILD_TIMESTAMP <span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line"><span class="keyword">message</span>(<span class="string">&quot;Build timestamp is $&#123;BUILD_TIMESTAMP&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(VERSION_MAJOR <span class="number">0</span>)</span><br><span class="line"><span class="keyword">set</span>(VERSION_MINOR <span class="number">0</span>)</span><br><span class="line"><span class="keyword">set</span>(VERSION_PATCH <span class="number">1</span>)</span><br><span class="line"><span class="keyword">message</span>(<span class="string">&quot;Version is $&#123;VERSION_MAJOR&#125; $&#123;VERSION_MINOR&#125; $&#123;VERSION_PATCH&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(GIT_HASH <span class="string">&quot;&quot;</span>)</span><br><span class="line">get_git_hash(GIT_HASH)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(GIT_BRANCH <span class="string">&quot;&quot;</span>)</span><br><span class="line">get_git_branch(GIT_BRANCH)</span><br></pre></td></tr></table></figure>



<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Get version info from git and pass it into compiled code</span></span><br><span class="line"><span class="keyword">execute_process</span>(<span class="keyword">COMMAND</span> git rev-parse --abbrev-ref HEAD</span><br><span class="line">    WORKING_DIRECTORY <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span></span><br><span class="line">    OUTPUT_VARIABLE GIT_BRANCH)</span><br><span class="line"><span class="keyword">string</span>(STRIP <span class="string">&quot;$&#123;GIT_BRANCH&#125;&quot;</span> GIT_BRANCH)</span><br><span class="line"></span><br><span class="line"><span class="keyword">execute_process</span>(<span class="keyword">COMMAND</span> git describe --tags --abbrev=<span class="number">0</span></span><br><span class="line">    WORKING_DIRECTORY <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span></span><br><span class="line">    OUTPUT_VARIABLE GIT_VERSION)</span><br><span class="line"><span class="keyword">string</span>(STRIP <span class="string">&quot;$&#123;GIT_VERSION&#125;&quot;</span> GIT_VERSION)</span><br><span class="line"></span><br><span class="line"><span class="keyword">execute_process</span>(<span class="keyword">COMMAND</span> date <span class="string">&quot;+%Y-%m-%d-%H:%M&quot;</span></span><br><span class="line">    OUTPUT_VARIABLE BUILD_TIME)</span><br><span class="line"><span class="keyword">string</span>(STRIP <span class="variable">$&#123;BUILD_TIME&#125;</span> BUILD_TIME)</span><br></pre></td></tr></table></figure>





<h1 id="例一"><a href="#例一" class="headerlink" title="例一"></a>例一</h1><p>创建 cmake 目录 ( 测试用，可任意指定目录名 ) <code>mkdir -p /home/ros/Documents/test/tutorial</code></p>
<p>创建 Tutorial.c 文件：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*Tutorial.c*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">( <span class="type">int</span> argc , <span class="type">char</span> * argv [])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span> ( <span class="string">&quot;Hello world!\n&quot;</span> );</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>创建 CMakeLists.txt</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span> ( VERSION <span class="number">2.8</span>.<span class="number">3</span> ) <span class="comment"># 指定 CMake 版本</span></span><br><span class="line"><span class="keyword">project</span> ( Tutorial )</span><br><span class="line"> </span><br><span class="line"><span class="keyword">message</span> ( STATUS <span class="string">&quot;This is BINARY dir &quot;</span> <span class="variable">$&#123;Tutorial_BINARY_DIR&#125;</span>)</span><br><span class="line"><span class="keyword">message</span> ( STATUS <span class="string">&quot;This is SOURCE dir &quot;</span> <span class="variable">$&#123;Tutorial_SOURCE_DIR&#125;</span>)</span><br><span class="line"><span class="keyword">add_executable</span> ( Tutorial tutorial.c )</span><br></pre></td></tr></table></figure>



<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">内部构建。Tutorial_BINARY_DIR 与 Tutorial_SOURCE_DIR 相同，均为 /home/ros/Documents/test/tutorial</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /home/ros/Documents/test/tutorial</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake .</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make <span class="comment"># make VERBOSE=1 或 VERBOSE=1 make 可显示详细编译信息</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">外部构建</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /home/ros/Documents/test/tutorial</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> build; <span class="built_in">cd</span> build</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake ..</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make <span class="comment"># make VERBOSE=1 或 VERBOSE=1 make 可显示详细编译信息</span></span></span><br></pre></td></tr></table></figure>



<h1 id="例二"><a href="#例二" class="headerlink" title="例二"></a>例二</h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">2.8</span>.<span class="number">3</span>)</span><br><span class="line"><span class="keyword">project</span>(<span class="keyword">test</span>)</span><br><span class="line"><span class="keyword">add_compile_options</span>(-std=c++<span class="number">11</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">set</span>(CMAKE_INSTALL_PREFIX <span class="variable">$&#123;CMAKE_SOURCE_DIR&#125;</span>/<span class="keyword">install</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#option(arm &quot;toggle for arm environment.&quot; OFF) </span></span><br><span class="line"><span class="keyword">set</span>(PLATFORM <span class="string">&quot;x86&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(arm <span class="keyword">OFF</span>)</span><br><span class="line"><span class="keyword">if</span>(arm)</span><br><span class="line"> <span class="keyword">set</span>(PLATFORM <span class="string">&quot;arm&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>(arm)</span><br><span class="line"> <span class="keyword">set</span>(PLATFORM <span class="string">&quot;x86&quot;</span>)</span><br><span class="line"><span class="keyword">endif</span>(arm)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">set</span>(BUILD_TYPE <span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(<span class="keyword">test</span> <span class="keyword">ON</span>)</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">test</span>)</span><br><span class="line"> <span class="keyword">set</span>(BUILD_TYPE <span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>(<span class="keyword">test</span>)</span><br><span class="line"> <span class="keyword">set</span>(IFLYTEK_TYPE <span class="string">&quot;release&quot;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">set</span>(lib_path <span class="string">&quot;$&#123;PROJECT_SOURCE_DIR&#125;/lib/$&#123;BUILD_TYPE&#125;/$&#123;PLATFORM&#125;&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#add_definitions( -DTEST_LIBRARY_PATH=$&#123;lib_path&#125; )</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="keyword">include</span> <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span></span><br><span class="line">  <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/<span class="keyword">include</span></span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">link_directories</span>(<span class="variable">$&#123;lib_path&#125;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">aux_source_directory</span>(./src DIR_SRCS) <span class="keyword">aux_source_directory</span>(./jsoncpp DIR_SRCS)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">set_source_files_properties</span>(<span class="variable">$&#123;DIR_SRCS&#125;</span> PROPERTIES LANGUAGE CXX)</span><br><span class="line"> </span><br><span class="line"><span class="comment">## Declare a cpp executable</span></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="keyword">test</span> <span class="variable">$&#123;DIR_SRCS&#125;</span>)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="keyword">test</span> dl asound pthread ev)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">install</span>(TARGETS audio_capturer RUNTIME DESTINATION . )</span><br><span class="line"> </span><br><span class="line"><span class="keyword">install</span>(DIRECTORY res config udev modules system <span class="keyword">include</span> DESTINATION  . )</span><br><span class="line"> </span><br><span class="line"><span class="comment"># install 无法使用 * 等符号,可使用 file 来实现</span></span><br><span class="line"><span class="keyword">file</span>(GLOB libs <span class="string">&quot;$&#123;lib_path&#125;/*&quot;</span>)</span><br><span class="line"><span class="keyword">install</span>(FILES <span class="variable">$&#123;libs&#125;</span> DESTINATION  lib )</span><br><span class="line"></span><br><span class="line"><span class="keyword">file</span>(GLOB script_files <span class="string">&quot;scripts/*.sh&quot;</span>)</span><br><span class="line"><span class="keyword">install</span>(PROGRAMS <span class="variable">$&#123;script_file&#125;</span></span><br><span class="line">    DESTINATION .)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用方式</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake -Darm=1/0/ON/OFF/YES/NO/TRUE/FALSE/Y/N -Dtest=1/0/ON/OFF/YES/NO/TRUE/FALSE/Y/N</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编译工具</category>
        <category>CMake</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>CMake使用</title>
    <url>/2024/09/15/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/CMake%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="指定依赖库及增加宏定义"><a href="#指定依赖库及增加宏定义" class="headerlink" title="指定依赖库及增加宏定义"></a><strong>指定依赖库及增加宏定义</strong></h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(PkgConfig)</span><br><span class="line">pkg_check_modules(NEW_YAMLCPP yaml-cpp&gt;=<span class="number">0.5</span>)</span><br><span class="line"><span class="keyword">if</span>(NEW_YAMLCPP_FOUND)</span><br><span class="line">  <span class="keyword">add_definitions</span>(-DHAVE_NEW_YAMLCPP)</span><br><span class="line"><span class="keyword">endif</span>(NEW_YAMLCPP_FOUND)</span><br><span class="line">……</span><br><span class="line"><span class="keyword">target_link_libraries</span>(sanbot_app <span class="variable">$&#123;catkin_LIBRARIES&#125;</span> usb-<span class="number">1.0</span> yaml-cpp)</span><br></pre></td></tr></table></figure>

<p> 上例中，查找 yaml-cpp 库，并判断库的版本是否大于 0.5，若是，则通过 <code>add_definitions</code> 函数增加 <em><code>HAVE_NEW_YAML_CPP</code></em> 宏</p>
<h1 id="查找某个路径下的所有源文件"><a href="#查找某个路径下的所有源文件" class="headerlink" title="查找某个路径下的所有源文件"></a><strong>查找某个路径下的所有源文件</strong></h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">aux_source_directory</span>(&lt; dir &gt; &lt; variable &gt;)</span><br></pre></td></tr></table></figure>



<h1 id="指定编译选项"><a href="#指定编译选项" class="headerlink" title="指定编译选项"></a><strong>指定编译选项</strong></h1><h2 id="指定-C-11"><a href="#指定-C-11" class="headerlink" title="指定 C++11"></a><strong>指定 C++11</strong></h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment">#方法一：</span></span><br><span class="line"><span class="keyword">add_definitions</span>(-std=c++<span class="number">11</span>)</span><br><span class="line"><span class="comment">#方法二：</span></span><br><span class="line"><span class="keyword">SET</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=c++11&quot;</span>)</span><br><span class="line"><span class="comment">#方法三：</span></span><br><span class="line"><span class="keyword">add_compile_options</span>(-std=c++<span class="number">11</span>)</span><br><span class="line"><span class="comment">#方法四：</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br></pre></td></tr></table></figure>



<h1 id="msg-编译顺序"><a href="#msg-编译顺序" class="headerlink" title="msg 编译顺序"></a><strong>msg 编译顺序</strong></h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;PROJECT_NAME&#125;</span>_generate_headers</span><br></pre></td></tr></table></figure>

<p>可确保在编译包时，先根据 msg 目录生成头文件在编译，否则可能出现找不到头文件的错误。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add_dependencies</span>(control_master_node <span class="variable">$&#123;PROJECT_NAME&#125;</span>_generate_headers <span class="variable">$&#123;PROJECT_NAME&#125;</span>_generate_messages_cpp)</span><br><span class="line"><span class="comment"># 或者：</span></span><br><span class="line"><span class="keyword">set</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>_EXPORTED_TARGETS <span class="variable">$&#123;PROJECT_NAME&#125;</span>_generate_headers)</span><br></pre></td></tr></table></figure>



<h1 id="catkin-package"><a href="#catkin-package" class="headerlink" title="catkin_package()"></a><strong>catkin_package()</strong></h1><p><strong>该方法不能缺少，即便没有内容</strong>，也需指出，例如：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">catkin_package(</span><br><span class="line"><span class="comment">#  INCLUDE_DIRS include</span></span><br><span class="line"><span class="comment">#  LIBRARIES sanbot_navigation</span></span><br><span class="line"><span class="comment">#  CATKIN_DEPENDS roscpp rospy</span></span><br><span class="line"><span class="comment">#  DEPENDS system_lib</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p><strong>否则，可能出现 <code>CATKIN_PACKAGE_SHARE_DESTINATION</code> 等环境变量为空的问题</strong>。</p>
<p><strong>6、设置系统环境变量</strong></p>
<p>例如：PKG_CONFIG_PATH</p>
<p>首先会在模块路径中寻找 Find.cmake，这是查找库的一个典型方式。具体查找路径依次为 CMake：变量 ${<strong>CMAKE_MODULE_PATH</strong>} 中的所有目录。如果没有，然后再查看它自己的模块目录 &#x2F;share&#x2F;cmake-x.y&#x2F;Modules&#x2F;（例如：ubuntu上为 &#x2F;usr&#x2F;share&#x2F;cmake-3.5&#x2F;Modules&#x2F;）。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(ENV&#123;PKG_CONFIG_PATH&#125; <span class="string">&quot;/path_to_protobuf/lib/pkgconfig:$ENV&#123;PKG_CONFIG_PATH&#125;&quot;</span>)</span><br></pre></td></tr></table></figure>



<h1 id="编译异常时退出"><a href="#编译异常时退出" class="headerlink" title="编译异常时退出"></a><strong>编译异常时退出</strong></h1><p>CMakeLists.txt 中没有 EXIT 类似的语法指令. 但可使用如下方式退出:</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">message</span>(FATAL_ERROR  <span class="string">&quot;Error&quot;</span>)</span><br></pre></td></tr></table></figure>



<h1 id="install-python-脚本"><a href="#install-python-脚本" class="headerlink" title="install python 脚本"></a><strong>install python 脚本</strong></h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">catkin_install_python(PROGRAMS scripts/<span class="keyword">test</span>.py</span><br><span class="line">            DESTINATION <span class="variable">$&#123;CATKIN_PACKAGE_SHARE_DESTINATION&#125;</span>/scripts) </span><br></pre></td></tr></table></figure>



<h1 id="catkin-add-gtest"><a href="#catkin-add-gtest" class="headerlink" title="catkin_add_gtest"></a><strong>catkin_add_gtest</strong></h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(CATKIN_ENABLE_TESTING)  </span><br><span class="line">	catkin_add_gtest(myUnitTest <span class="keyword">test</span>/utest.cpp) </span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ul>
<li>不要在 manifest 中声明依赖于 gtest。catkin_add_gtest()宏将引入必要的标志</li>
<li>如果想构建一个针对 gtest 的可执行文件，但是不声明它是一个单独的测试(例如，当想要这个可执行文件由 rostest 运行时)，使用catkin_add_executable_with_gtest()</li>
</ul>
<h1 id="deprecated-报错"><a href="#deprecated-报错" class="headerlink" title="deprecated 报错"></a><strong>deprecated 报错</strong></h1><p>在 CMakeLists.txt 中添加：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_CXX_FLAGS&#125; -Wno-error=deprecated-declarations&quot;</span>)</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>编译工具</category>
        <category>CMake</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>Hand-Eye Calibration</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/Hand-Eye%20Calibration/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="dd4d4b0ce7c250ba9105a423b6e1d041606ad1b3804e339c408d5e14b579689a"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Low Level Controllers</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/Low%20Level%20Controllers/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="4ff6c98c259994b86be94f9fdbaa8628edd7ae5ccec59f80c14118a8c828f66f"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>MTC</title>
    <url>/2024/10/19/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MTC/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="2b79f190474a5b40897a0fede385b97093a882ca8868fec2bcf86ece5bac8747">61a285bea0bd1a3904d1b9b9e1d94077ad6eccdab3555e9cfad13d6006adbf39d937da246271f0bb6e6e6cf4cd2642d8e1aa33262fd32356909b2033559713e38ba7d7530a2a4e7b08bb61c0bddcb98c5ebd0cba30cb7377d05a021d3ed2c3bcf74b31ebcc8a253d660be19b3fb9933b1bf03586a093131cd64b24c9c23d4e9ebd56ef3d3adf3ff51ad5b7bc28d60b5cbc8fd50ddd8f1a85185e0f13556ee50e2a5ed0bfbdd03a193b36b5d46bc3987c6717be6a2bec3aa7a6bc32fdeb3213d2aa76f4df9519a4a60caf945ba647a6d2d50c734bcb234144b14180d3668d6ddd40720020fc4072fef3689d7017d57fe43c77a36619296ed600ddd307a24995e56918b7e4e069a27070109efc8343cf0086b85a8f292a65a53b0ef6eac3f7d2b075f886079fdf6cc7ef92a5f5742d45b14e8bf442f2dd92cad6cfcfa87a27e24eb614a0116864cefce40a1c9a98e7744058c623cd44296cba355a6eb6670e4fe852ddc4db6241d63bbc601f820a8695ddeb21464e015667cd796c5f5f42605a981395fd7dd759672817c9a982d09a02f321fa28802c2cf50326aff46840b2f6b7178b79e21f8d705c4f2bc79e361cfaea82b670eaa094fc0fe8ea520f5ef7587d745ccffeb853c0c07b7f2e7ad2e1a46d0ebc4b80bb1c55bd0bef6ead6c1bd754533f4e886a52b5d6e44f7a3b8f921b2829255df10587aed993c02924f6465f11fce6b3d1961b9d2a860bf328971dbae0bb777ab3378101004925325b02f7ae8189bd1238773a0e1d3f1a76564f5adcc2d4db16bb95be813e6e7fc3934badc15cdfbc3093f28e50112758b7c4d69801ad91e89e0a75e3561df386d297dc8165b3660b5a54a411d66c1fa11f1d452cfa3f83161b881de2fb4704a649042288de8e15695711b285b3adc585c7a14480283e941a3aa102f820bb16e2faec919288ad0a1126bab579db024f47d63b984a6aed9d33780a055e4d17b98f6f9d3d3e741ada4043c15596f45b0bee948a2d1b3dd6c2133f3933bb60bc9c90bf03198537bebb2ef7eceaceff83abb05209a9bc49d0cf1bc75f392823528aa8afc5593653395a1076bbe7fdeadd9e46cfd1b09e8b339b1d81197a02271e7861f43d94563b1780778d8e9094ed1b9d7cd3754c2ad89018da56204fdc80f4677d4a2c22498633a741caddbd15ea903cc4d039541c2a1358a110e569a254723445719b89cbd0325211c2428e06dd994eb0899c334adf308c579500800b2f3bdf1ec32b741fa9fa338068255056e0dc37fb58fbf91d97002d40696feeaccbcfabe7eb4932998e55c4991564bf3eadce6d29b13b482fcef64fc2ab37e527dcef65e2a75ce1c171d5b4ac3953417c2742762f4becc93d7636a16a090c855095a9d2724886ffcffd442e069dc48de5371c6bd6f55ea4a9604fd64894d5f50201b70bfe31ecae3ecae33368400861bc83be0df313dd14a6bbe74c90c67a11f204e7f8452844d323a01b88276e89c6d5badcaff2d8da39a016f7edbd6ac45cd826fce244f202830b7ad041ac7c70823551b2a70bb395711f21e948ce50bd7168fb801662a8fbef9d2cb0402c071fcbfe62ee8e7b45ba9c38d84988815e25997d18fe0218a9c906f4a47c85fd824c6ac76d5fb7c83cdb0e60696cc2be4ffd132ac327b333fdf3f6487b45aa6829fb43df86e225cd8c1de42abd481a8958ea0976f8215833ff749ad819b6a1f83e9526409aafc48a22a45c9075091668aa1034b7e633d0021f660a94275b1d0021876fdee05233da01e62e02fe6e672d1bdff2754d55bf10c89a36651eb894d07b9687805cf392eaad8bbbb32c1dad0a0888bb8e9ad2badfa6e144b8f67eac76a18f6a5c155dd3a9c75529291aa75557e5e25730942edd16e932301d5e4d0d66f9d90839bce1fc9c1ccd342c885ec77f6776f2f669b58f63ba55b7b220617079cc2802a96121d5a27b78dbb91d03dc30f1425f97336c14b5c059cfdb06ee79ebcaa2e98b02d7965970c3cc512835bbc07b340c687f53711c3612e01c7ec6ae7e77dab37b6c297f09d3f5c766c17a34d90996771108b75110b59960ff63eadf6c5760e8977b5b42b32dc1a4a3a49225a61a55512c17fee1b704992e5fb033ef7e5443be02249448780c2e7563665fa925771dfaae067bc284362db9da1f9318d481cd546203a63dd3b6c17042880b5c70b19fc0506a5baaf45fcba96d0543f506640caeeaf1132bd512a79802e8433ebecaa02d30cedeb333f06e5a12d52ba95206234e6c2978789c7c0004b2487df9bca8bd5c34f539568ea67e886619ae0653db18988b4e3c233c8d12b0db1c799a3c6103ff7d8c16680a88956340818c926cbddc90ebe02a977c85ae8b981a8f123006118beaae5015d1ce01313406070e838042054c8fc33282c3ab8dd3a005acea51de7687ce09aa314744e861d9c700b3e0b113a0fee8d5aa81815fef35b0d058bff52d8f3e969ca7b3884d73e76bcc7895010ce7f4eb61e1de10317a9aeaa19fb362d514598a49f486b5f690fe82cfa035d2c25dd837cde949300bacc268c97a4d4954ea4faa5a24d7bd8faea0b2bdaa594b93bcac8000e9a4646ef325ea65e9f5e117aaa1c5bf455b7296dc9dd393211270d955feb73905fc521c7a97e07f0323d6c8367aec3dcb72a376e657abe18af9eea9a020fd8837d4f1964cac57c3a52388ddcd86197d8f07e5cb5857d958d58b44dd6ac2d44c57024ec595de832fe608bfa5debc74a4b23bc7fe5087747fb83cb56c97d9af80160816261141ec3ac0f48b13a2c68cba1d29ed73b4e4bf05b774f19dbfa08657753ba8ce16f087fa1121a1f790c8f9e4db0f72bb2ad27109762901439991c512ba98a577485533d1cc7a446cfcc93cf391de8ae8afd09eae74c3d36b25289095b2c4a02c276619adf2fbca7168133658c1033ca4363285b872675d48c60f7f15f18f67afe89745b75b8f6ddf87429e2d1e7ee82379e6d3dea62187003237919e6b3ec01969c1bdd2efe88ce4b65f12a87a2eb857b0d49e79467fa9ddfe6da8f8a9bc9e40a502cfde397e55f60fac68cbb892e82904214d193a65a99163ae60856fc011014b07d16e5b659595956c82605873306d59e2e4ac409493be00223894844b3f39d980f68d286a1462341c63d4038c576f61f4a0c7abce8c0b34d7e899f181ea1da4638908dc2614908a9f74657f6b3cb350823e3da94182da015036d9b89789fefda3289306a2cf02aa98259df5892b38cc2b1d6b20b92cb2cfea142f00b776590dd45fb5e1df5a8f62c8763bd957afa6d94e0596ed14585ad59b51226bcb038e6c9601daf33465867c55191f9b66716f59696ca6ef1bd2dc465ea7f9675ec64f7627945f16b0862f4d5816a6cb75dbc8dcda59f03ad7a1b328fa077a67e558031989ea6415c37e794fba1388ba424483ba38a6d8b4ed7109c341219b34b78af00b592c4ce63006b5e31c2168a3e7694eaf948eb660b8d4776f54a14a555846eb0b6c717790ded6ed3f75f02ae1b37ddf5ce29e80249a983a483e729e975acd08019d53b99d72364d57d4eed08ba7ffc0a4d16e7087b484504eff973c5460bcfe78122e41e989edd15b6949366c49a3259601d8c3dd39f0ed1ae21872125150f044f5c33dee07c5d985bdb81c6776b4f41a7dacce5e13dee5093b136f86559e6867a3f48569dab15d7d5f523b7f67e10fa117d25f2b0b96c891905014e0dbbc74ea92e051d8b9cb976e4b183cb34462a49c38ac88717fed05455af0d2131b05f93289a12f10a953c39abc34eb5e52aa8974fc0ef1dc0406ec847065688539ec3a33aef537eb910570b7c363f59d9011dd13274e24e2b067adc5db1387d9719cdd6aed1f0ecb6cbd65fc136f8771bc9404a20a7b17defd5ad1ab382a35da9b28fdba85746f1e9794010f36268202dd702900ca1353027578e7c67657fa81c182e8d2ed741bc7ad29a1b4a3d9f70231c8e7b36638210b99d1c69ea71370844114ef7596b300404e7416e1137f2f134eb0abe98369e9441a52ee364b47760297d8dac063be3e2288ec0a4247d69e631932754988a14da4223eaa2869d5079d26fda9f36d2480b7a71c5d51bcc7bb48aa53164db5033965fff662d4d7a21f5b7781f1ff933595fe05bb8d1ccf9d99efba47e64050cf92737ab69ac24a3235bfe60a856255b1a931ef28443a58947f3c1e55e72065424662ce171a39a864d32833f933e1608d2a339e06a314bac443af0c11842ec12891389810a07d21b67b3eee9b9435a2a3f27f5e51df18428af3eacc078d4e0d2372952db6fd3bfcab9e6e4a0d3edc53b527909013203a9263e66d1b083c79f98857016d807009b4ebfa6e196085fac99b8aa45486229b8e2f79ce632ea3d8d68510cbf5119a3d4974a6f95e6dc577f214af9877509fbfaf7bded36779bc5db0ec18a1f6dc1e6262eebd4c17cc1fc87811682902a950fd235c418404f13a01647e59c7267afbb53c594c275b92098b46b9af25137d7eb55e76c16092f82d8777232a51ef1ba80d509ed19646ed3e75474009b6507b510356c6e5c779c32bc988733597fa6a71d9a5bbec418c072d2c54d15b1dfc00880d9841c7825fa3258d4a2d5a37080d5d5b8813ae0d24d4087d8706a6f1b744d8166fab1bf645c0b62b9c5d04d2e24d332b9dc76477117cb781e6a27cfd323750ac6ba8620354f12e4d571775baf803852106113eefe247e4e5682413f158775c8e50ebbb9e8ee658eea8d9580ada69b48fbef7ab0eac796fbbd529517214eb798f8e1b262bff892fbf464161c1df08598f9018a0bcd4b208fcd6c8ae0f1ae484becd8fadd9908629c596f2d09ee7677496517d53967b7a09a36728ed68d62ad1b4c9cce947826d382bf3ba18baf533e5b0d33a0f6f9604637c1a89e4ae4c703865e03ddf41a723c94527a4c4e73b3c3d946c9a157a47b27750bcc2a00f8c2bda3b7184541e3d052b261476e86a3e98fc7dfc74a9b7a901521903f92eed28b36f2f3c3ca4e4564f940b7864493163194c6e46f96923402039d42439a18ff3925e431f913167f3d724343baa4227801f75362d36970e076ecd353e76243bbd7f36c6b1dbdbd71cf3484839a3219d3bc32a92cfa0b0a36d8f48bdf76ab9f1aec2fb6fb3770476bd0ec728686ce3f125b5f7d17fbc2a8a8ef78e9a295c118082d26e044ab50e22c761a6b9f3b887a8da00030924e52d30d9528af6838987e1da2156a83ddc5932023b9b4a6e94fb356f9998745ef496656c331dfd6736367087310dfc5ba1f444a103a0a54210cc74d27211509cd9ba0f7216d049da1499bd5c22e4860040dde567a87361ed852f7ace83ba2b09bd7c097f7e6fa938b99e44ee5de89e8d651f09d00f221b0c86ca027ee9cf42a500f8a06386ce762b0d0718cef4a7e73ffa285620ae65fa9e81df2cbd15472c375d18648d1aaa9d09ec72e913d0ce7e1dafafca4ed63ba141679b6bf12eb546587743cadf0fd7590a121b713f3814de854e8aa0e4158d1a7a4db25f215c2de7df883aaa8473e54d05dd033443331348e1c791956db44ee8fe85842fdceb9b923b81a0011c5733b269cefc649e98ea89a5b010016782797f5807478c5c059dfc8c4b82a287e369bc2ba78ddd6e529a9de1662a6309d19291d747b6c4b7126a4ad92847739cdef216185c5974c426ba3793b9c510d4926ffd1998e74c20ba7a2560c40fb2330d015ed70eb6a5c94b56aea12e9027b0d4448e7bdb8503be9849bce0c9ce064e97fa3e9eadded3f5482c641fd3b7041f0ba2da7d3bc24562bf2f1b38e4f661e3ed9e08f11f145fdf04f1f6275dd189d0c96f23e0dbcf7a5e73bb304ffbbe1e77948541e471400ba43a7c79acc343b70212fe71d3a92fa0914d1bb0106c4522a84fb66541429ab720ad8b4a3ee5ed4d0b3de90bb09c1dceaa3c2c6af02f2fd119326f1625ac027b01c0a7bfd697faf7dd7931db10dd5aa965aef29f63367c7f6548d95720f6796e3c02d7f722160d09b101379443fcc49ffbbb9d3da5ece5b038b3bc527790f58565c41c9d1008364b051885f99d4870f7e74c46869cab3cf9bef13f264f2e5f44c720e1cf5dee8d763d667ab28da547089eed4559d2e2a83384fb78a63ef3840bec4298dca3a296ee27e383ef49354aa7c92466c5c89548e96d3f1e0cdf463f3686c6a1e09d8ffe4fd67a58e9a24a517fad7178e26942b186d66995434b34c81a15bb640a26d0bfc1118be765babac56cc9333c687d1c13cf0def8750f2eda1c696a3f2c87954c5968ad86e9f62fd37b2663f42fc0ab5e5f0a80ebc24701e2b242d9de52e9b257f41309b1494a8073289f30d34753a697806ed1b103ce8a3b18cea62729414ab4b93870ed22beab3b6498233b5008c11cfb1a99aece1291809d8d3ce4e6fbce634aaab998de4fa8edb9e1c5f087f5a7906949a97c2ca3b537a80706bf2eb60d47d1bd072ae7ef19f8b9f9f6620b3ef8f2eab03792ef0f9faf977c8d909484d47da08a55aae746993801d541b593865e12438b84276a2e0a89a1820572d0594a8c91877331c9c43ff9b27534200fa859035b618f89454c02386487da0fb6682506288ef9e626a4e3a8764a8800fca4d6c477ccc5338e9c3f6efdefb28d55f2c79747ebfaf3bd7bfb143906059f4191356052f5d6ad0b4a5aa67f9b78a8f94c99177a46f438c548721da254936760f0f59700c05f05ca69d01968e7f4a117f23c3f6f0bd821dd0bc4b6270af6dfd744551bed6131b3bbb8c7e3d6dc079931f2aeb4b2e2bd390e0141b94c73a54b840b7c743c59169a488e526e4d5d50555d59ff065800078ff274f31cb8058b37e82705ce57b913609288611bd55a1439b77b572f31940c410562c45f4f512e770e25095c7d5f42d944558a135544cf19887c85495bf7488402595b3cf5ac724096ed61e7a67ff2869c8b1747dea31e105300f2304dc41e28f8b07bedae84f1beb89c6b74e70b7a132ddad7cbaf8e5bc91ffc16a3de2a05cb627cd9ce389740fd7f20857ddc55a32976b6f39593bd1a6bd11afce7c8f191f8c61ff0e9e379898c44b57261e7d415a1ddfe92af79efa4a02022c489815abe641c9f094656898b39a41e42a0a8f8e8e2717ae75488f16362bcfa198f2febe940f55754820ea0d276be81d2da98229d9c8558b58d6381326de248f0c31e25a06308d7c40062f9bfa7339b3c2b1e533db24ed715a4f6a2a31417e677533a82be0dbd7dc3385cb131f0624f1aadaa4bf02877b69c3dba6281f1f0a45c872f2aecb058badc13691265ef67ad024f44a99d85c9192b1a556e729fbfb930c82745a1b214eb06b1d2a345204f305d41a8f8d44d3cf15511d61ad051e3fda05cb93b66587a45367d4cff26d8a87938b9fd2893ae35f02cee555d31ce0b6f396835a92150e896fae36ce682ed71fa81a472df96ae00a17182ef7bf8c357ef41dd5e542f7a032a623bba708b362a62af16e6ba63721304c615404f681c36e5af32f2066a779d5f890fbce3ae06f5c93a47bb7596ae2b55f2fe8b239c6441c39809fdc0b617447f01c448f3ae9ddfce763becd3ad546216a60897fc44e83bcda489a6eda1141ea61e1fd2e335cb578a5206d82368448ca147b8e38e84c4a2e471c98f9643c214b534525112efedd933d9f83f98993282303c1ccdbb27ddef1bdc57601edce5fb82e536284772479baac65f179b1d517c64c9e68c29d4c26e51a202d55bd45722bfa336707b10f9c6b8c76e78f505a1a7be85a59694701bde8e66170d385c305236d52a1cfd0ab1e62c7127789b0bc4bd1abf2af2c23a8170cd3bb3b00024056d280e635ccb83a99c54a152d07822dbcefaf96a528086d8ddafd91c37df7bda41920572e660e21d8a0e1d07fb6fdb28b336ac540e678b5cb25aca2c4b363bbad0c89a1b4f82ae4ddaa8162a3f7b9c9b7603f8330ef516be45c56180455db59946367d328b0c955da414b04c21f6695950c430ebe32f90b0bad3bc3fcd57cda9753b44107ea04f5ef4c6e69aa22c9fa75e38a1659073633ffae2fb94b1b997412e4442704ab8ac60a1af95dd6a3c043b6840fda93a892b28a094f3afd42cc1d7ed74119861d92381dab2115d1defb12c3c9c3b9e53ae9a989344c3d61045771e38612242235c7ef98eace0ad1143b58c779d89b550cc31c2aa3c6a22b2fd4486af17302c22afb996bec8d243ed1680d07d01626c7f0a71aba94d8b84b1e9745a7125870029267824222183ffcf6eb6e98a8c4efc119df13e6d3cd73a549f27178d19ef52b73c37efea4f7b3cf74d0be0fb8eb1f344448e7b619d89e1a2619d25bede67d2a9e1083c93868f68caf7e504b9d477c23c12ec603df677c0a9865ea2acc08ccc4663f8fbe1cd64e6297725bf4346064523eeb3cca7275abe153b8bcb6144d79ef0ef3d2a440a934312500b009cc904386f9e62656a7fec2a81cc64e73a1040628ec70ef2a1149d25811a751bbdd1eeb4fd56fcbf9b6ca2f1499982e4156fb6ed0c6b5e9750987d48122d27354bef662ae848c13408c0500862336174677ac91e16781d550b42bc2e83585524e11681938fe24e8d1b2d48e5576e7352e138d7c8d5c9ca9a1c45925d09719ef458c57e3cf87cfb55ee2123ca1789ffa3f92af16f40f40ed68b755a33da3fa08a12e2a8af6d1ddbd4fa4d4bb07adc9c2b68296547402b4f63e1df9133268805166dd1a3fe6287cf61bb828322c0fbd3108e4c6c018667428774b40003d520270ee93b5c0d78d6e4348f8d8d15e97eda1dfe43d16411ad3a0bab59923ee659b7d507a9b4b20d9a67d2154a7d73f3d3b15a1db81f4d90449f7972b17d9c9cc7bcf0bd88ce8b99889fb24488a9273c16d576dee1af4f50fcf92db31a1b287fc669fac3d407ae4951be7890c4672198f185b16c5bdbf115a35bfa6c0cb9bea67e3e8caeb4e69347f5d75842944771275c18aa9ec7093768fbc5da697758e7b9178e0e4cf0e0574d8409786074fd633874cbdef712d8508632f61212e1c6e51e7236fa0a690f97d9bdc3d5b5b1491e6e7c2e2c9edc906bbe20e63877a0ff9db1d361470d97481439fe1f94107abfaad038b387521fc1650065393102b435e08096547aeecb6580498711701c2f898643df906bc90b22141e822b81b06c42036523b288bb710a5797b6f4cbb567d8f6438cf9a7bbe6af5b215a831dd1a70ca8f23899cd2951b385c74901dd9adfd2b2e893e6c48689404b1332a791eb754492b3f64606540e7a64229703169f31a18c3774145e64e5aabef831850e73983d1a20cb0013ff534d79e94aa85ea29122713a7fc004e459e95bea96d904e620872af62b429b96be7ee2581d83017364fbd480a7f91fbc569d8ede0b902356fbb19f60e598f5593123c14720e31836f2e06eabe473a3a5586141e0382760b0181fa322c99d11e78f2ece2c09844d45a0d08bb3872f7a9c4da4bdfea4f35e4a0a35d256a01bbec61d2178d3646da7552845b200b204333ab69d08b74765ade380288112f9fd2692af05bfd1104517c1b37db180020aa1c24ff2aea7d788d8f196a44489e50302a940f197873b5abcdc7d27e42ef008660882eb9bc145fa69eec3d92fc21225ea7c32721fe6b078aeef44b9b57e89b87e205c11cec90d53cc5971a4d99efb88c2d5c883b90067fff03d9419337449465c9b890a594f824988cdbf62daf5466bc3a0fe837a260cccc914899d9c1dd99075d2083835446f661931116c0f067f19037a0abe522413951c237f11a2b4db4e68ea5251774358c8a1f2598b058940eca8b544364acde86c8402b8d7a79fab7f8f09e9babd4eb9a35c15e8f3c0c6b37b673a77bf091f84040ec982d7e2478d8682ea8b622835e18d6ef5e180fc183dab65b0e16d487bc916dce2d5962c171d370f1237f13465fd058cf45836daf497cbcd5d138980e62dad91fbf0fdea06a5ccdd1b04fbef872a533d6d3273d3a99f37e1eb1a02137b55fb8392608135756a75bfde580867ea8873927c4f7c731eeb33ddce4bf1e0d015cb6144b079a7876de875141260cc231573ecde66ab5b2801daecf88995e3acd00aa6098102fb25065b4d878d3cca2acb0a4deaf6ac927fbfe97a1af44f7bd54d1d40592c0d1ed7ce3a0cca3dd82838e8239cb13545253116fb685bc1325a013ef5cae9160bd314ef582e88583ecbea7527050ad14b11986bcebb287fddf15f98479bac559deb27ae63dc43ba09918cfca59f86b2cfee59c67291118d1ff75e3da6a1a59c64b539fa6beb2576f2b27a92768dc8b18390effda1ec48d9c960d7bde0627e41e7ac7d55eeaba0ebd2cc4dc2ca8d307dc88bf0b4b687c4fe9364111d05d07521234707ec396484bfc29d55d143b38905fc8979fd5f3166211b7d391ef7f514655af43a5f105e2359eada5d18af8abc2a7f6f613266fddc8901d5329c94e1692d18c02863cbdcd701e3a2e221790f2194e6ea4e1c776478ac8876c799f3c7084ffc7911e03e9441f30ae18ea2fa9f2a39df6b51f6ebe2bcea47e1a77bd3057003cca834f888c950a67700684b4e7dfc492a9d0bfe534cfa25aade07f6bf020bacbc3937dda09e221d0f3598e3a00e5c17d8891873a010a84871b2c765779e69910273928f00986740bbd834ab6b21977b9dc19c5842192d3c30141181cfbaf618660546a0f21b3e90ae9a5774dd833256e73e6341222cf9a4eec81e3cfc7cc63c8819926f1796357eab18bbb3f21de26a6575251803329f32313a5a79201bb5955c16a0491130f9efda9c3a181fc82dfa6e3968730a60426e2e170c91457315d9a241d71f67dc4183761b85c76527e360bc187bc1606de5410a770828d148dc5bded0ec7b79b90ae49b76ea188939dde443d303fe9b4d014f7e1eaf87ecf1ac89776c4c941b988a1b539cbf143dd18086f09e2fa684f621757445121c16124c18f00af3840d9ce3a2b0e60e8b5b549fd02dba23a2347119cf8670ff9d21e2aa814ee885f0e947ca24635ede4ebd54ce1d30c029fe838e40eec78cd898256342f3dcf30da3e9b488548284b1f08bc2465aa27f815dfb5956cf2014965c425b8ae00c77343dab3b9ea8257a1520b159d06a23601e4f18e83eb34bfd825c6fee65a776ee056f88ce34a5c27e9a1d99808ae01c21b874437e6d58ec0ebb4f224617956ea092bccd43aa217258fd1b3f66a31413cd9ffaaa294d009e33aa8f42361e812ef539f456ae51b5211e29c3d6e129c5ccb3197cea1be8bf0593ef632c981893947d81f14d90937212052266f24eda838b1d1161e9f44d279cb909e086acc5829a6d42394914a20168e17db77a88a71f43431f8ccf0439e03de71b46b3155d11e5a3f60dc41a696534b93a7c4a452e93ce4df094d355eb09d73272799f62813cc7bc5836d4f9f1b6bb759614fbebf383f5ab744b166b3ae71aa0d6b771918a5b5eb37450715b122c522e56482acaa1a3d775813c5eff5a8db229d95d979952148f5da3afa3d614fbe388e3b1ef3970c460b2055a244260a9c2f1540cf4b6783cac4aab414f220b891ed9dfec2ff0eb01fb9b23d90fdd0f15ead3c2d7240d6912e7cc8c5bf6e40395d0625c20bb79ff1b35c8ad099c6597ce075b733174cecd207f34b77d1a0709f78c14549f7cda1aad6a4c86329953daf8ba43d00737f1f876896fe43189c684cd06147dd591c3f794fd9dcdb01f0f4890a6569b0f6da086cd346715e981641fe917e92a1afabd73d7639a10e9b539d133c4242b59d01c42400a00c4364289e77197c0ccd7fe8dedc4bec03f833d810f4882263025bbeabbbcf96a9bab1f8b70345dfe000f77c5d8573358101dde506070a0899570100b5ba3b9351b42f59cb2a2d31682d99cc565d01d9ccc4ad75537dfde5ffd03dbb92e8b84f810dabf37fd4520679440b6d2bfc84cef624515f007dafd9d09cc8400aeb3cc67840750fa5f1375b4affb9f53b64522c974952eee9c3360df5eb7daec7759835a9f54667dd11496cf5de2324dd80cf6b7813d13f86f09af777e79ae07d5e0415f773be8860932b32a260c034915d8525e2bcef65ab4974489230dc06680b637e028d299623adab6f93bdfa735f11aaf8b5ec031abafa8b88b4b406dc174d294580537f43ce1a8643abb23e76908816071274c370ede8111ce2320db49b8e4ff320490c4dc857262038aa3d9184e224c17c853dc33baff1d8dcdcfc25f9da4e89edf986e5dd280eca89c8a92b4d4c410b01e9b359924a0f1dc58ca1be79c3ba84dcaec0c0141a3ef0d8511773151fa6919b9c2429948fd641b033efadab146bac5487a207ffbf5a792572468da4b6c8042d766c11ce1cb5923878b790917672024ae2bf1b0a5f2e90cb053e76c057bb073536ebcd6913a4e9663be5d9c5b7a4eda632f0f36b704fb2264d965ae8ae02a706c58d3ee382ffa216c98ce67f2847b433cd4f3482249e4731b2ffc4e56f09b6f5252bc1ccaadd0dd64bacf6dc3e8a4e93df6b97123de1edfb0401ee149f32fb0efb3aa285f582c148903abe6d73303cfc6c35f6e299f46367f354f6909d0663a6d99fbb0aa0407727184d174cb2a82d39ffa7da11d22f75596c918ddfc8017481a09cf442d1980c47233ab61ab0b5cea1820981e3eafe6c781933df348b10ac809093e78aa54e4d1daf8e2f225ffa90fff20ac8089d66def5a4779f361ceadfecb587ab8318b1b983c273b78b7e4ac30c3ecce30a7ee24f17925df735bdaf4e5c581d2441741da787f2468d54bca8e8f148a676c8c924f0675b9218b7c5d911cb07aad8082be2ffb4f3a6608951e5bc6f157cfc9ac14dca42d659b33bc29389763fa33d4a1dd34a6e93cb06052b4629bc4c3f5550ca1cbcfbfad27bf93790c6709689c58465195394bf6ceb93f0919111b2e6636cf56cc6bf1dfb5c6f589ddc6048b4bc163fdd733057b9c462841ee9e33906e53db96356ce1067dfb0b36449f01a6d2e1416b472f0277ccfeea1b7023a898553f73040849f749f2c18d1e64f1281296f3a8cd510a600df02a892e78c88de678f022833b3e197bfd2aa9d5549f256dfe7a44979036aa0c655145c26d8b629c16c52e4aaa5aea8105bb49965703e3556b69a947a9484792563fb62ede8068e253ce608d86b06177c9b7032236ef84d85ee2eeb9d87abdb54d5c43748c56053940e541d5fdf0fa0ff6f64a2b093fd5a9328a835f6f4d1216a76ae2a8e44268a79ec5ce72412a5aaa02d83c407efd272b3a4e92a0192e27983762cb8537e189a5231288ab68c1fc552e57719f6a31744302ac372c4ad08a0d5d911de9a584b2acdae7a1fd27e93a57303deb416cf571931a73670e604443d65e6b57aeb4c2108c6e21dc76c7451fbf695e39d1cfbe330db1ec63ce8ab49ed8cc9ef24f2a5962067a668b1e16b4a57c3611a8d5cd1e768f47a2a217041c32946aaa16a159d9755a730aa68089d0fb9bfdacabd49350572e1307f0031211b1a4a659c2a54520208185269614e47070bc7d662161b0d9f0c810965c4e62a3bfae18d56c493571fb5aaa11795a37533d39a5d4c86f06b3af3c2d72246394aa8e89f4a4cae2b1ce41ffd73db9aab1cc11eb725c9bd40559bc3c64336bd0d2edb3b88cd2f746d51ab47d026b1215690ff65028bfca8586fb702f4f884e77cbfe0126e0214358406049a262ab360392d530fcace9017ac713ea15128a8435dbf1b8b6e5861b4240c50583714835da8f844dc48eba4b279bba11331ce3e1d3459449c25a5732092f533d3b9ba6eabfbfaf561ae18e6a99fe7db5264e35c01aa8aa4111ae220416cb6498d23919607c5f728a0772ae6fcbc9414e1818ec57d0d822e212a3472150c312a5ae0ee6646548324697adbcc69012450201dc71bb9a194c451f38ab0b200f0437a3e7f6d2db839f62d392d3c01636ff5e323a1f0e58dd21cf995da76e8c34a2df97b55e0d1814b64891d0bc5039724d92a46631e037cd85d5087b76fb63f96338c0be3d734077f79e437c1c593d500a8ef9c326ffe9f7202e444b99da3ac48317809df8957b6644b4be39d561e448c5f9a651b537c9c305d1f0bfe13a4169fd614792a1d0dd91dcff11aa66d808b717bbb9d8bcede8cbb09f5c355fd68db1b41c4f25c8acc809d52804689c18001f075a52110959dfe291a808329326faabb1480b33f3cbcccbddb63f362c390e4942f1cf3a39e3405a89d7934e8aadd7595540e018823f0994609e5d097a315f2a1978a2a8399dda564e2abcc1293fa57197200011b59a97c7cef5ea17be4f11e08e21f519472d6d704fd3c34a29c247961b4db7c272a0250f116639887ec166c9ec26312e3b8bda7f1025514388681a5d619b903ab2893e53a59a85c86ae02eb8a6aac28fad11c3df351522bffb82965d70ffa3d8c6fb7a0529a10b563231981c583824a1c78fc21acc49b4d9cd4bc12684e18235f12f1b2bfe5042f4c4413577d4ab3900ec59537e491e5d13fca80db1171f05dfd88bbcefbf6f4c9609bf2bbb3c99748e6ce98584ed7319a35321166484f1d7b00de5c762639ca7b7c03c97b274607b44afba683dc9a822c89f79ac60cc4f6a8426f1277de9715643f8bc27964efd5bb4b5ed0fbc12f4f8ea0ff1e55f471e35dbe5ff33261920431ed64e12851db1121ab162b9a393f29f8e4d86858bca6c7e61e5d4c67f7383130f0cdb6a8c3fee170429d653655c21ff2628723b29d51df06857f6c7dbcc8116ad3459a9a3ee38c00018ed314af80d9e0aba65366b19bdf2c960be59e527de8c956e5cc18ca3bf967d305b941cb37c6b5ba7b1880d30e8126f047ef0b4bc0d8111c0bf2c0f523be8096764f306580bd6b2d2860799f7afec89f0d3fa9866795fdf004fcc077e209ad9b8695eb4b4ee6e1a326f784f8b3cedcd0edb8e36b0aee5e73bc4dbae64e2b39e3d91fb1ee822ca6e17353ea5a7ce46e401a7ba30ddaaf67984977bbce7122e3b2503b004c23bfc4c2d0bca210fd5038ae8c7c130263280c2d258de2967eccf8142cf7c9780dc63f3f0d79f3fe7d7d449afb8b1302f30b4719378071b308600834e5f0f6a5eff411c08a6c7452fb2f2d0db90300b895ed3033fe9bcd189417404087ca259f3a6a0def8c1182db8f5edd930a28ea9ced2e50e1d132efd5949da523a7314fda940a3b17cd97084326989f3b99aa4e63a75bc9a29234b149ebd553858c179d50b928f1e3e4b2553dc5fb6e9a3a2f85b107893ab2adf447b8f8abdbbc3658865ae17b7527f3ef9fd511dc96b695674ddb0b6cff824e5302518d280c07585848d951706b5a6ac0482b7327765da94140df288c8061828034114eb028a85b73940fc1f619c947c9053590db3754ddb751c2f7ee1355811767f046db46a96493eb81649c38c7d031902975d75eeb9be82d662fcc079cebe10a78bd58c3118adcbffbfda9995a41339713744a802570d6b8fdd970f07e8d17768e910577cb8c11127d4e024ba8eeb416b60751218d8aa1ffa8735358e3edae91e7cb255655ad60682d9b18f7aa4aeab7c92843327e15a20cd69c89ab535e75c754c8cb5cefc6df3ffad02207187ddd51d7b06b3f9ff252ab492749173de631ff73e01a31da8248d001e34242ed0f06896be48ff4e714cd6a96619ff7586efde1229e66acb60df3df1c29d758251683472263bed37b78ecdbd6703e9ca54d11e6755a4f28e069cec021763119dc6b24e037ee0486c394597edaa476f39d3d53629350b30b9e669f243f00b2fd9d42afa8c7d9479c236b4f77da70f3b2588fe07f6dea46f03b251269dd712d4df2b1ccf05117233938f7dc552c0b5d004dbc8929c19f5f5039e9cdc459934340b72eb333cf51e7b023ac77c41b3372361eca1e767160313bce24fae4cbc5cba400ae9c3324b485b4c8aca1c66e0c59a964ff21be46cce8133dc60fdd122d025f7678dd7ba49817be2bd406468829dd232f14093eecb4adbf4ad4daed2e998ba4a82d500b1c75d37e1d3fb0f83b9b215dff84945fe3bd422bb750223c0aae4175b9f4b11e69b9c7acb92c5aaa9282b7d2522e084d9fd434dd338be6a5f6a74cb1a6afb349c4372a034dbee3e53fbd6693bb13c8596602c2f1b885fc08ae0e8614d2a9793a9a3af0e2f7b5e9bafa718e22ac941d1e6a34691ea4f88fc1b7ff7452afa381809859ca1a0628a904a1d68510f239c9b155f363ec7a7d5c197399617b37a9bd35aab0782b6aab85a2e22b43a5824eae99c3df1bb914b2ac7f23ed0e6a5f5bb2d0f2ef05d01ac5a2ff7b9e1c6f2181be3f65aa6dd54211aa44e9a52f1241eff24ba2aecbfed8f6759a2f7802e5a475ab03bc4068a6f5a105c61fb8077d9698a7d2cdb8603458bdf75db8f34bdfb54d913539e8233241c8c0222bbe324e9877dc6dcb5283eaf9e9001052c246af65c58525e9121a940562ad055948bb7c5fccd1ffb81b468a9f5bb5c686226c923981a432584c01db95eaccaf33664e5faf4f320507e218d84c79a32bb407e4d6776bcec7e731aa2a4bce150434a5866f0c4fc789177fa19c488d2b6f5869a17eac276286408ab9684e182c28f43292ccef1f97e66b37c510e3cbd3376c35e8d6da9d0a3fd623ffa157f00773919eec24f51a3700928898a582c5f1c9aeb2d84ae4a9df58664f0047fe8b2555ab45a133617e65b10ea1b88a1c451f08ee36ad1996af6b34296a1ee976f0cbfc14d739b6a0827f280dbd9686fd5cbdbb1579e0fa4608146912b04f37a517bb16f2ef47614dcd93625b86a9ba6540273ff64e2d12e02194c19b65ffe5f5c72fad7be6cbb8b7f4d55424c5e599fd1af077b63e70da88a617716d412f366e06d11d599a625ed383ec721d7982adfe6008e6fd68c65092ca79da18a9d52e1b8bd31d8e73b58a7c0ecda282332b22e3cc52a04795d68bbe7cff53459048cd408e52479a8bd8e192b7708ffee64128b57ae14dee996992049d5b1c244419844fa369c9fa6f49345982c753839c95ed686c9a768583d61317118899d28bc92caed9e8480b448bb0ea9d203b975bcf3103ce0c346b7beb9ec4b58dcb643f7268168cb7c0987288f70ba17fd063fd2c48045978c7c6374d1541ba975d0a7d66542d0ba0fb6b58eedce6fc35f875c55e1bb9046a78d87d52d6edf65aa80d0f4c0d8b6e88d1f9c4a41e168d3fc86b0423d99109b7c93708cba09946588b9bf5afde787f6999acc4a760d271860cb72fa95cf8eb26d94f939fa6834bdf6cd7196f3364b65006a6f4b51e2d93aa8da37426a4e3edb0ebc184c804bb2e1f2aab085b6530b13832405fc16854962d17a4b1728d912c9a3315d9cb43c5771fa6d3160f48ba2b5a05a7f6ac9bf63c994d14a92b5e8cddb39c03f8d4c64f0674e24f6de52c767a387363f73102fa14d73726ac3087a26f911f9caff535e9d51523a7e036e76014c3d210755ec26276df548483486ffc3f5bb63a6503be4ce705bf880ba1fbcd9814211a9edc2783bd6575200d4295fa87fd3e67a7564669d39b622eed0f426be43fbf0721dc020bd4ee98e626ca3478e534e4b7156c65a989fe604ab650639b655f9869491e2279336cc9e570d9dc0106071e7ca31d9dd6b63d29a8932d7886ed09005ba54e65068d5abbdb161197322aa9fd904cca29189a6ecded8aefbb70f4c0eaf08cf5516a1949e578dd3537356336243a7407a4d6b2bc67f98d2e0d0c1e2794e8d9decf2c9d86d473ec5f31069b268d9f0f31afca4fc38b12a43f8d05fad9f8c3677a0e0296117282a7dafb75db9f8369b4045e9945c9f2b821a729cbba16d20a2be75c1e77ca10b5ee908633d9d708a732f982ff64205e0e75191e75ed106f141feed00ee5d5ec0cb016194b303ac76195bf38ee42dc5165516510391d28ba91c2e0ecb29c6cb3ebdbac9c0ee5d53acfe57c9cf7238db279fbcd38150a74c32fc359c6834f103aa557c05f1cfa3db9ff8487d548958ab7b6b71410884cac916cd0f9f788143e0d855f7022fec66451885cbec64593d3afa7eb891aa911a2c1dd95b07ee68eefb26d8adabe208f88da6d6f18b7bdf2dd6ef1d6e0b3617d3e210560ff7dc8144515569d9334e0dbffc5d700eb9745df626ac890163e65aae28a8d6cbc27e22a4da52201e8e906d1c26ec8f8d1ba2a7b9590b73c2c5d97afe2c87b110ece8aa2bfc5daf1ca4d8d701ddfd3a55326a24949735e99c07a30c6d40570c715275faa50448f8240b2d4a08e7e79cabdfc723e1caa58e07dfb24517487f0030fe8bc0418a3a4ce11e66f788b2b347dc385cfb2640a1c587612422b0f2ea857180c65e7c4c88918f7f38b3455d068fbd19d6941ed08e8520539065699a8e14ebf6e47d0e3aa613edf4f5f67afe7f3e1a2249d4d6e8f8a16b69d44305f1650196fe161ba7330ab74183074f5e3115282805e6ca9d5718bcb67ed9d4d5cbaeaa5943c9eafff6985e3fabb2562463fe96763029337a48cbd8ea2fb8f684f66d87b5340f662f657296f84fd5e91748f3cfe1f8ccb06f0efd9faee3fa948003b8df0fd527f20330aca98bbfa5721aeaf3a1e709dae24a5f2a695f63a34151d75ae6b4041a8260de0dd90b2db896af8235b3e5a1f10db4192665b22472b198107c4cafb3ca81798793fa74a1eff949bbaf933f56a55b4379d878e366d5bf0952ec28210362175c4d26f0982ba8623641f5f0cb8a48eeb7896776329c6a110af82e64115f3075a0da37afbca5c155ad5acec12e364a02c66432e7184186ff8d4c0427a7b0b1a0208f8cc00e9e381655fe7e05c693a04fc18c551d71ffde8e0cf1ff89ee27aa6b2a9dab8ca4524def02de9031b1b750509a12fe48e38a3aea1fc70d539b676766f265d0d1bd9c8af9e011444e569f6fd68439de4da80dd37ac58d798c125dd1ae6809d95d6cee59c949c2131b2dadeb269540edf02f510cb1366c2ee14cc0510f8b223c999ff37f416f2996483e385bd54dcfac0ffd6df145f06b4390a9fa321fde2322dffb3f6da5c6bf18db639dfb0655eaa5e0f1c62672f9d88f5d03aff488474b137bdfd31a16c91f02125425c48f0660cc510fc891adc888c9610baefb83e2e00929a54680b7efdba18e45e2ab308a0e62c23f35ce0a24d0344216da6ad5193dd4c3ed7186a3018464aca4a7ebb8f184d64684be37faea7990a9d3e3301da6f1e227cb4a5319fc4844116586f550bfd2c56e54848eae375b615bad3e695ab7cef363927203c978c9f00b49af5f63d6d3ba20c4ee11a9ed6b4331ec2d4a98b8acca80a9654bc09cca74998a3458c5ed9ba7e571077f5793cfb7cf74d1053fe4264abe0e5ddd8df43a110ce1943e8a825622d07dad7efc96957765ed21fe1bd8e43ab1a1da3304f4b61273219de23c65b2abf069898e8316bbb133c11479f6ab5c97674d10a133e1b3be6206f366600df0833967bf4b66404e629cc9a00afe9a7f41df97a8d62ff996e6c23a38265fec25d8947b38441acda8040a48e36bd319320f64f4b343d3352d546a8a1a550cbd4e3207a886ffdd8c33e9fd7ae638b27878ae685e3480e0aded88dc0cc29f8450f9ed6696aa5eaabc088d78e59b1d9766ac4ddf03bf020ef04b116dd8e26985b85b5c10b35fd1b96c86459acfc7f1196959cfe6e99f77aa17aa0086329e54f006ccc739f5abf9f34053161ba0902b510ce99950d683fed8556ef2ce068f700640db5743a406c1137a1a348d94e25b08db417a004fb6d0be35ae061af5f23c0050da916ea6b8e723523aafd1ca39c888b39b437cbbb3a8351a50ac2aa9e012f1e7daf40489e3ebcbc2d39a3dd288e2224d886f3a18309ddf15f9a4a31a4a59f0dcd364ff3c1da5ca9fb1429621c18b3848ebacd2dc38e5c1f34b1e8231d933da3985a0366af1f71287f0688c00e88e0aab16b567ac483cae1b8dce69aa44a50dda41d26c5438717b9a6210c70052b30caa0314fbc8c1d08c689afa98f8e7bd25ff0739a5baf6abe030a7bb97bf404806af4d01a24d67427c12aea007c40188392d19f17982a8932d356d39023ec2476115691df29911ee62843e49152fe62b1cb49767ae49fc7cf6cd4058319f1a94fe421d63c0f6d5c9b37f3a6c72cae03a509429d575321dbcffd8dd112f482a03607a0044c4283dd64ce76436aaa9df3d6c064c9d810bb6dd23ec6780de5da9b7020f43b8dd9767f01b34e02a90da3b16459ef2bbbe5e6b1a30d73fad1726df2f052b35e39a14a1e429d2913fe3e4eefa3db62d617d41ba345898d6dc5aca56fdecf533fbf43ceda151ef3dacbb05de04aff6d07f86720ae56538a1b66fe6fba7fc432318fbf836f066b064ab678f288429f12076fc9579e7f75d0cbf998bae50ae1325337b1a77a12abb408a5f12f6bc27e19d25caa123b7c3a1d47e87d5075efdc433a1c3d001cbe66d420388a71fa0db530e72a8a0cd5829d6c0d76488f397d5903ff0b2846fd03e0caba0031f66418cf4c8d071a23c9e99fe0d415d5fe2813b723b36c1d640b27cd1b3afad85c966b632b21ede2f67ff9430db019a69214f40efb4a437ba96cf79edd0954384088aa697da473927c7a6cf6dfcc1e54ede1e181020ba771a1f340923c46b071663400bf9dfee3128388b84664a9b7d85fd786fcc069d84155d79d4ee450d074ae79f7f07550317fac8d9a97f0a3978a3f19a0b8cc5af2e2b730c7b4bdab7039f1bba0bd94fbcde2ca4f47a7b2933b320e7dd53d256b131f3fc7b946e3cdaf596e88132d7d18878a7bbf3fadbd843194e9f90c217fe80ebbde92aab87c423619dd8114ed1a4b6c425e3559e1326eac0158cda0f42c970c5fc8173e7322e25937920e453642983ad7cd8c0400e15c78711eb15440b361450bc412860daadbd2315b65472ad46b5759c11c17147cf8a4a711f9f48d9fdecec91dd0c524a926055f91dd1b12b32af37680ef74d2c087413226b4684d2cb60ca061d696187a70d6a8f8aaa77f57b5af97795748917ca1a9ac4754119191720a09915efbf27530c35d00908e7313ef77e02ac446a28eb46bfa2e844d164e69a5a62389e24c7fda5177b18cdecf5f64c0b721323f8e7e89d5c2e5d796c678b6ac611b9fafe28a795bff04f3fd4cd0078defcf2b7c8dd883dce66474da888606ac9cc566b1bd6720a23318fe42edfec00bcbf51126c999a85e4e7934755bcb3bfa2b4b6c559bda1a93e39435aaa25c911a323187494159b086faef0c6c054dc416fa8442b677b89db764531dbff97c8c6424d3adffc6403fd8f0704091b413da4a027befcc67b2ca6f8ec2e7ffe2c5fec43e02f1aac1378d19972b53c140f598f3ff420df617302c096f2eabf1446dcf27787a1c9ccceeccf511b064d89be4c1120f746bd6ba14a42ba5b9d8b2f072ac0e05981f3419cbe9034f40b8cd72746756c718cedd618eb147c3e36294ca00a70b538e2298a44a81b8324738ae1199d7aa3100cd88edd75194d054f3cfe03e5dc727f9198ae624398512f49317d0b6ab74d822728919507ebb4ab8caea92976f4bf5775cf5668605b6b2ac68f454e2d94811ac667bd61d729ff214b5f880a48ccd91c8d7058df1914e20d68322706b3fb99911b7d0dd318ded7aa4e99b77009f56cc41f97a71a8599e100106b88332035a4f1dc62f0f2af0c0548f32424d875fa068163880140c45169cd52a995b03cff7243d0215c2d4bd8ddbb18be10e0818aedec1430d52433fc7f653f735ecde0abb4bd9e600ffd62e5451ddda0008e2c2066de26f4bfed60d3a13074f7f8e4a7387098ce54eaf464d01818e9e93cb85eaee35eea2b4a12f10e7a18487c055de67377bc13745aaca631769983147f154b3e971e0d3cf5cbca58e70ade6a3dfcf5b048e68cfd4ad4e5825fff97f3dfca84f5ae321740fc703936c330d1e9ae745029eff2fcd07ec72ebd461e18c938f51d93ec3c6da821a4d7dcf9a6f6240a081ab4e4f1a6ad6c83f77d1446c1edc2fa68b61013dda68bd0cb797776e40dbaa5e60e07305daadf6c247311ab631162d6936c2e78f0f8c77d22b67f486345950f86e6d84bded3ce8805769d470c6847c57c14501860cdb70f5f0611b2122c5d52c6fbdb1403018a684c59caa863ae103781deaf8977a7c0d69575a0bbeb8becec0002ad80e194f6b3f213dfbd8153209055ff8aaaf52f162166d8008fd713a78843a9c28aaaed5985071d7d676ff1992eb50e7e286bb04b8532c0332de55d55ab939e87aae861750e1ae90fc4ff8b46e7d541f8d89c4ac59f616ca74c999a419296f4d3978c546e0d138c74e4957acf2fc70688a2267ae4bd7ea2f23959d951c794da17ce18204fa5810d79267bd6d023a0a7435690dd444bdd89b981f85d74bc2d831b9c31ce2f95cbad3affed4894722af59642403a037455d9a650995e53a77c230789d594e1673471e9dc494a77a88dc21f9a06f91e801e93e5d6177508a920cd6100ee26bb9d9ee23a18c58d1a96e4d6006478e396c6a7c1a3f0d972cf0c1e732214914b86506aac01f282d1f8f0fd2db51fbd972ec3d888628f58abe8fe47b2fa184f7dbf9be5fd48d8eb3f8d8f56c8ec75bd2c09d416542affab2173ddea0ad13c6020362ac0c70623035eefd3dca1fe8f0c15826ec39e8e621a3957366b8a9f7e79955e1d4a40431b6d170183d9273f7a395e0156a6485a8d4426094f91f8f1b72d3fb6f80de34ac0f50788f1c4aafc5aee1cd6b36d15c3170aca7ebda7b33fad0a0d75eb9044a5f5ec5a351530d480612990f8d002f36c2456c67ff77e9a5a5ece0d8d67a255ad49efa4f90d849339a78399dd45e8a61e4f45c58cb0573cfa9ca391d9c48c7733fb465c67b08832ac5a037401929f3f3203e5e0d7a9622fb34f6b321622277b37e0e0106d4ad62815d76e5e216751a84b066e77c0bbc245c606860179e4bef3a51df3af9af6bce753ca4833314dc7af71b3037a2fb2016818306ed4bcfe1f9c0000091b07670d92f52706f2021df35a6e9538dc6b2991b29be1c9cb6d633f35cec7771935a417dcc485c9514268db2b42f3892f13a1464a1dae7d615496fa97ba48ad56b67c698c050002cebec5f03a27ad0a7a1b6cf203eec7f830c32184719647b1641f7651f1920164e1bc941769ed2a233632d887b02870b448dff7b1e6ba1b709889a8d7d2c8c1247f9d59863f7d4b6840e15ef7d675dca0520502fa6ec2f296973bb27e75378b3d8c42cf872b6c6148d4bbdcc154465e1d0317beb99371cb7759694ea1bb8b35f8ae622dbe02bc0055861f1295c0f1c4bb7b97ffd8fb3981eabe04c130520466d7fe4af86cb24a905112cdc7e9269e03ac756ec058a714d7512efadc3a30279f8ba1ee51d37a4a9fa770f09b9633de1a554f901eba10b6f4bb88f63fc14f3a61069f8505eab433d620be2b7039acf67cd316f76e3766ec7cef30853ad299d609a996ae5f9a863293c2b054ffcfe8aff5a8f65ce7e570c45d95ee4b184050952f0482ccd083fcfb8c8854b7f870942b030599b7b338a657ff244eaadbe60fa22f08d0e64c275715a85d72f91be53c73e94cc35f1e85d815ed5b423cef6be02d062d7ebc664f107b344a361e18f48a481bb6afed8b62b8f49c605f30502eff56073c765d9694b50222501fcba0715b5c5ed3f94e64f6c2b83c1b1b3cd535769d3febbdecf1d9d6a8c42d2a6903548db38740059e3d34926fee7bcc93f21efb04b5c6895bd2f9a86619947e8866f3329d78ea931bb8402d38ce705eb6613709f5f939392283555a05e6db3071ac469bc6bf481f1ffe237e6e982e8ccd8dbc4e011962757ad1be57b99e84f2d49fe71f27a8437fd7317ccd089dbcc64e74805f696e359ea84522551734eb179b0fd9a8552403bbc4af2e4bc71614317eccb1e4dffaf91f92627d4bec1661de950251f7319f9219e3488921344e80a35aaa87c4c76ffccdfc7d566bb8dbf29f73e6f8a2b0c6400056f35751289c896e938d7f879690e49b2554875981bcae7f8825525b2e2b1109a62a52e42e38894b168af73b3e96223f74e9d1486df5b23a928c77299aa6fc305c7628fdf56392b493c7b073842d3aec2789ae8d2e09c7b444cc3e01ff5231f02fedc938c420208bce71ec2de3dfd9eb1935e2ce8745e3234f08c5b3e46bd68a80c113c72ea784d81fbc98856ecb35be9933aaa0fe55e04a6a581aba8b7e04a3d92f7324f06c13b5d700f5f1ae3e958b14545b3b28d5f209f51fd70c0d5fe9277ae71c1ab8ba93f7e29d3f3f72df12c87dd6b15ddfee8eb12c419144d8be40787ceaccf8838fdfec3d7daf9e21030831f85c6e6a3cd065fd920bd22ff9f85db7ebb6437dbbae6814214355c44b8a08699d7553df5bb10f436482b7e33709f2c3eed30c1498dcf024ea730616e28c09a1214100f87d94b7a5bb1c8eba4a579ecbab2427882c72369799dd5517ddd17658ea48b4164b27bda32aea4cde0c5dc84bbc90470dcdd67b643d7d36e9818f4c437c1394f3ac00b77a233d0253b44f6050762b1adf873812e8475268fce171cdde906c69e04a6e314924736944ec9130df933e89fbd002d28b4550908a6d4f4789837cb8abace263da3c182eb97790b73649273f141b3268a9a590d1aaece00fc79865f76935d715f1f23b783cb5a848f864971d49433358d8b8d214937e35a466584ef4dd9b9e8a647acc5f4967220d75247c938ecb984e5be6f6c42a1293f3c6a6c283803a2e05ab8e45a7c9d573e09f740aecc669c3ff3825bbe85705ad04660b381eb6fabc05f745a24facc3b0020bb0546d32f8d8f48ced3c152ae0bf9bf1bf73bd3ab55243355a9346c3e3d3224a7e06a78943b39c02bcefda864ae1b418420773d728880247acee7e12e01e699cc6820a6b1521fb07473f6ce9669ad81702effd7a3621aa541b2696d1370e540d0b099dbfad9028b89859f7f318718392e9038c9b0cbc9b358fb04ada458c41b07b30adc1a0c411ef5e6026f1bbd1e138aea355134afda169d415eeba19059090ee314182ceb881cd37d6916b3dd76c30e120949b003dfe12e29608ce24b9d942913774b5028de6b91bdefd604f6cd099d340be6e14564e1cd911f842210052a20010c96d17b590319871d1bc4f808965830818b6c3355128296deeedd825a959aaf54d2238abb989c4195f4e2c7de51b938fbddb35a3717a71f73ef0c5a30cd0fbb6a77b10b3d1ff44a39edb1880ec93c3ed57adb60ce3355efc5622984d0e9345f0e9e8dbc48bb4ca5f74a6e5c85fc647d7e2420fa81e70f998952159d9983295acd9805852dcf4e25ef7bc02188c2b56c48b44b20f061edf99c34b7ed70ed9540825b90a9b2043bb5fa1e2d3833b95feb44a820a3aa163cbccaba0cb87030cabf4f02e60ca706f66938b42907cc25cccd7510b5658b753e4ccc4e09aaacbee37650a315492d3d3e008a8b7b1c92cf5c8ba2c0426e98194bccd62bea1a1a329a77dc7ae35b2fd8b40941d628d350735a16d4441b54fb0c840cbbcc5ec451e3eb717ecbcc877d041dd65d4fe62f844517c745cb45fa6b35241ff5ca90d115bc71d3cc2d75981bbec682903773447a806f846381dbe8c51706e749e9d143f8469ea071f50ca9d8773d5401ceb86f0a2189f1275f38acde8523717ff24833a3c2402a66633617404dd7fa6cfba934a6680e1bfe0b8e5ac1f40d8db4154536e1c79e15316f823bafd5822fd7f2408b21380e1dd483df6d67eabe7f78e4feece49c210514a36852239a5eeec7662d8bbb5a38ad00de40d6474a54054ffe7aaed8cd823777d7d5971f8542bcc00b258e33c4b03fd9dffe0242bff6c2bf0fffa0fdf8245e44a1d0656340a2b984be08162b335de158ce71b476ff92d6b4b4665e5a018b4a0296c77f23123bf6a78acd3ceccb36003515215f57d081029e9422cbdf899c34a7b5dcf91360f4b44d779e8b3f72dce12407c24ad61c817a0d4b92ecf42fe16e8961221ce9e2c102876ba99b3a7627e08f0a072d21662ce2c5167275dac8fc5aa19c6739da5ebcfade8960d53954bbed469f7eaf7f28090e37fa960bd12ee910b0f51c7d4237333449e1aa3f3bec6521558663c4304ccd950ff2b665101989a9e004efa43cdf0003da3a85e6bf9b6db6f6337f6c14b127989784eaf4e61661946d48d85b7e4d73a70079def92622495c994245e7223e4020c976d643938e2a34c7f00d486d6ff96600570cc400fb00a31ec06341bbecf3ebdf0db06272e7c1d1a7671b4f549e03ea934c42fc629843ba1388aec9fec7fc53ba6ede6f4e65b197321bb54f210029e9c97927697a690133968ab377fcdc72051f9f7b7eb30309429a4a365a34ee34c4e5d69f2f972b5eb7869bf1e0bb656ecb256aba85493fc081896d5f4cbd50dba310baf0af5e8a1403d136541634a4755aad424e1196f249a1de5e195f09f3d6ad0ec023e418b4d5f7d868455931a8d3e9153560bae2c7faa388ea1792ae3b3674ed3ef64b7e0ce3b61ae1b56ebee38b67c73b9031f45eedd4fce0c518eb0f886959224ef68b739ceab55c3579616087b1a778fd511e947eb520e91b057f6421a26eb0d3f74d59dfba5af464a42db0bd809c40661d8933a722cbb68df2ea9dc6e1ae16a3a8151bf3749152585f41f7d97f84d20e33fdd934e8a11b721328ea0efe20ab4314a29e555eff05ccd01ed3efa0ef3945b808d2d22fba83dbe242577f505fe19f26b1a660ea234f6f89ab4ade97b919c413e70d558c786b2eac1531e9f8c499e36942666a3068ddab1797ed09b90978f941d48a15d6a56aa46fcb1e0a8543d6823c48d3eee4aa69042ba173a6cf1fe370ceb2111b51cd2932c75fd7ee3e58d9978b9f278ead63e9ca8fc44115bc86998962bc8a45e5745874671f0accaa0640f36e99b33c44b773d1ecf2e766b42be9116c17ea70ebc078838e2c2e6e377ef653090d49bb6aeeed107b7464688bdf7b663a0691f62c89167c2af407c5d1df235475ba4e74a53600aa5f1e2a98f2aeec493d55426a03225f3e9e7026104bc7f20a0b738e5119e674c2b9be1d336d48a5eb0ea2bf1583d6dc7e54c2acd2dcf17753a313e3ba705e306b150b812beea2aeafccdc45ff5775bc30913e89cde72bffd6f1c4175db38ed5f72df4f16ed5d9024166f43c5da0a7d982fc17ee11f8d89abf4ec981b9d92a6cfd39d3c06cbdaaf4bf3a23b9b8a31ee0f117ecf8f694c357c874177375e3ea2838c1f89bcf34b4beaeb49246f5e0569a04f450aad0a3a912dfa4abe5bfadf4a3c23746a885799f9290a022973b67f378a596c3ecfecdd0cdc112eddbbe1dc411fb0d74cdd86b8e419b07a5c5f1af6b50071e67cb6c0edfcbaf50d836bf651116507af8856a178ba7e5fa9046804a3d81c460a79a7fda4a06f9ee53d91c3380f6f2cc70ead7307cd7b541f2efbad597ed36e55c33905142bb2f4d6a675a3c246547081e6c04fd906bf628a199ebb0477c20db50cac52230b2642f94966af9af1a245db9759a6bf2128960f0b4119a0d236f5e2aea025b9ab6d6de00e94c019090b4f9ce1285456b1fd4bb1cae685858d5c83d23b29b2cde256d365a0f4f58e6e5c53e809215a5b88962af1e2b850e82e35042d2ef9b13af78b83fa09366f313b425f638ac4a72b89290c92135d9f1353336ccfe13d49b5c704a6152efb42a0013c42829b2b37b4cedd1f58a093a16d3a66bb44991fc3996a78876d642df77f411c0cc1f40558fd744f8e0721ebbeca8e6039e733cc124daa888b82b2fbbe5db4aa87ab5393bc7940bba0cf9627648a04791cdf6056edacb08de8e6913c9615670f0b3aa98da396b0d647130880cf81b52d68461b17f05118b33e63a8238d3a1ffd3359c755541d4a53656663a08d46a22fc6e7d383518e6c18ce20eec599484768b58f777008ceede0d1dadf88ecbf0d625ba1d2e5ff00a1086afb8b8028b773e47815a2d88b4a872a85315c26073e0edc90fc7d72607ba8c0e4ea4cb1f5144f7bf335448ce695af3328ae020f197ad54a1fe88648d8d7662d3960416364e125fdeba032aab774dd2733aea6a31cf5a448abc086f3eb58bb19ea2097bf59f631a578d84ce5995071216c68ecc73ee4616b5f7f2f99ff70a34889a5231ff8b17590aba4ca594f721308c6417060f5f7ee55e5b2ba7da3ef67617bfdd05fe77af399e079be6015d290bc16e240a6ed39b19436d1c63c083307d02ffeedb3d87dcb3acab7a80291710e42156042d2282edfde396a549eb6a494c55f941e7a87b417cfeeb2e2228c0981c2d12307274985be32f450134eb6b3137ca6c9e5c5a889d7a8564ed51c7a168413058b80a9b2628d22acf0e71aebe0069a11cad6454a3f62e7390e0114ccbbcb2f34781bf7a42a6cd115ac57b5622becc7ff7b436c7f79172cfbbe23584983b8e6baf049c6b1b2f30e1eeb22d90de07cb5c7c013a7fca49694bfdd52be8fc22ea9d4e33355c3dfe6dbe2713435873e8d178441af344905a16048533ff9336dd126b244faac96b3b75182e82c7a69e750d7d5ba075414fcc0e394ffd777a04dd0a4f39af89fd4a94feb17a46353506e27e0e1fb6049a9842734e5b5c3e07a35f95c14af2d4ba99d5986a4619f95826be7edf5e928a0490be6f61b23b8cd6f0c1c90176902c6f69ce96c50a8d5d1c405aa7fb7c0466327cb6ca9174e3df39ef081bdb9d352e2d274470632b629d5ce41424a671804bbba423bdab19f92808385bee7c8bbcdff367db35af209b9ce2f7da56eea5a149aa049d854992ab92e5e520a2ed428df2d22884c66bb74398105dbc58a9619aed063ccd4e512e05c778fc88b10773640b20da2465151121e7c422ad1622abe9612855f2faf5a611484ada20121f67a2c2aec060cdc98d2d04dbe51351560c4ab3c9692e6c33d286b9f7397e5ab8cfbb5e28201973fa866d47486deb536a0fea6b04c3aa5ef2eb24be4607fd50e9f9335da08d0f4bc62ad7ebcd009ab65f9960e9f88b75dceae53969ad45f7abd98e04cfd8bc68e1996cc9d48bf95a6c349be5381b0892e053693b04fca1782b24fd7fb2fab5d9945a6a5393a8bdc8ad42279c6bb002f92894b33af818048d727e79373b4b43e71d4c19be552d1e8d890d67eed5253004e945cfc4b8d5b4ab307f29a4ef60b9b18aa436c1e5590681563c67ec2f4212a1462508d59a0d04bc3502c210df0d5075983a855ab8deb86873c987ec48b385f4b495497720907f885d0eb4dac09831ea97f7ee150dc259af4993068f3676131a9c24d5c2be56243c394e715e1f3c576fb535faa840e345f5ac353b055c7e8acc4d7b8bf3efe0b1155dac271fa22e8b27a7894025fb3a787068edd13f9fc0b3e4b9a2a08a59c0c056419b86dbdd4739bfa43b4b9649ebad28365b2b49c7ff926905e8afcff9919e12b98e63b03199595ee3c987afd00d04a19dbe99c09fcdadbea5b4a2e0f4441f5f6764c45026b0084e258d9d29041866c6d3b00c12afb6a47499c36332d3f786434b12eff149e04394aebeec67599d599a93ac2b798622f5b8026deeebd6a9e24e6de913575c8661525184a4388c7e0421df3297b3e8f7497f4842d46c2ea7d299c26b836c5dd32406a857b4d700df68d07910639ded68687d9d77d02a89f330617cf47e7088348a6166f87871fc137aab00ac8a235b55bdd50e4d7298a988358d0c15ec00a08fd18993f3b58bf9eadd0fcd0eb831a9821c98f236a38f8a0c9a951a161377f7b7b6af26ae440290feb79b92898f5e1ad59cfafe96c52bf39602b1118788a8a98f9d57813edad85f4f6268d8df2ce2d737268d0b1415f3b746493da32c2a0203f3580d0e6f7d27cfd8d86dcaa9f5fe6f32d090e3949f213daea68ba3c29613a022fc1da64dcda2ebaa11d127ce66118355697e457aae10adff2be3399a7df8051392c7c9007e1e239756c0af7f04ffa6ebf00217df9baa306d4b4a627599a3ec15b567149233b0ebde381731c34ba3bc030545233d73606cf8b074f4e3fab4e3852f498fa6c0fc222076efb4ac30f389869d7fc462889e05d2f9c7b54da7eb39a0242488e0743b7b28ea83d8bee48f9a8ebfdd4efa53bd8a609772c6860d59159f94f9c52f2c2e42b77eb80144f8e7ba40957014b20366fc25917755441c92ba0c7d05d6bb56164c3c33514cc79d18d1ed5410c97913c3f90536d035b8a5972d5aaeb31f453bada7ddba2bc7b5d206d8bd3824b2f45ad9bb2d911cc8048ee25fb452c3bc980a241e7192a3908bf4ff2823d1e575737d30d45d6927c42298ae8a9c823ad59ec0906265b86377fdf228653e2f3b1cf319cd199d7f1d1131365f5216513506a1fc7c02e007a41dd257b76321ba861ab280f5ca6ff69214b5202ac9a02784eb1533b6256e4150feb763d95a22c5eac193d2abf57f1860b69e06192d1f0b48aef50acfbb6e176514a31f1ccca82c2b229964a6006670c4e4475a3ad4186ebf0b6d2b7ca2ec10360a9b205f86e8a5d131613370d651714271da209a2a108cf4ec3ede1702a146cb7368d07bf132422e0b005724788f609b38e3f4373cbb11c01096d36bacee49591436cea63e200c765bc9d6bb72c28703ebd01873fea8176bbcb6cbfb543e1330363691f0a89bea428d99983cb4d0068d517f1675954f192cc758c45bfdb6d3ab0f10f0e5e8cf2fa83dadb23e80c06cb6a29cf831242bf39b1a30a3815224045844af1109b2021114c960507257dd0def71194a913de9e62032ca30d6e75fa4f2db48fe4e5ac42d18027ab5d4be5622a89098d0e52a1b5f80091223fa1176c2258b576a0d2f0c68496e4238d3ba23922c2ade402a6ecde64073018d95b19e7a56e8ccf6c6481cadecda68e51b935e31cd48e9c4f7f7fc477a9145d14b6994b290de31d7107026d37a2e2c7d9916cee7ca7caac89450c7fec15074126dfbd9e814bab3308e4e9664f706b95b89b34ae7ee92a62d768fc3673ad848cb2f60aa877a215dcb541465f2138002858a1110e117f1f7dbed1922601e0c09ecff394b4edba111512832b5c2f5bbc71d3b5d037fb3c8d6100a2ff9c42a45d2abfb6682945fbe411592c98c6aa2773ef9c31b2d3ccf83c01da2c31d840918ff6fea15845852978766e0ea6b84e67bd4fe3896d31ac6db8fe288ff4dbfc529a76649abf775c543ecb02ed941ea2aab3bb82bdc6a064abcb785c159fa1928826174648feeb5b98a07db1b3ff4fe8bad3bcfcd6409ef2ac70b2d44083ba93dd44337a2389e5af597520486119a2d6c573cbea33b2f07b8cf5a860a2aef1e4349a0a588a029e8eaae8229866cf874a98d5dd9156d9ba387b6b70e1745d1f7296a54440a9ef4950d302d1a1e136f9871b18ba199f874682db4d6c0f13761f2eedb86c59aaa5d3d8bd57d5413c15e96fb4758a3f59df6d1ab02f74b72f1736d8613464ee1177c01c3608ed9b3f17499e9c307c929e23abe87d8aa11556093c484ecab158221d800fcac2abceb32ff76780fbc330b7d9f25fa9cbf087ce832c224dd2b6f227b9cf8d04d599cf94e51515308346b26074ca1ddf58cdb4d89330d7810e92c473526ad190aace18146cbc0b2b5067d771f07de066c72acdf432aa30b645209833e6abe9cbd88451a22817695da728c8840b8e983ee557af9914e61a22285fd8dbc0ab722aac2a112d8d64f1308e4a451a34ac8c1e60dd6f2fee538911d7eeccd121fc6d7c433646651b36d7d60ffea4d6f6774033ed9015071dd1e38a74bf7159d2fefa5aa5eacc43a81ffb52640ce1216fd0f2c69e419f3f67b50af2581c9d79aac8294afe3cd733659374c0764b7a89405258fabf63e38d240f1bcd4082b6cdcef6e52aa96643bd493fb747deaabdd5d494991dd445859f2f3288aa16efb34144431396725d8c21a1fbb1e44faa1015d0386bac87af7f790cd37f27f0bef1948a9e86ccd6aa554afe1d6603f25753b6d79406304eda0e585fa2319e1ba7f8b7ff64470279ca8002985b86614c8d319bf9f562e0b01843546e4af4d750bedc41e0972905c99ad2f2327d3c2a61042600aee099bcc75e3c6cc64132f4f48db453b3b431a420de6ad7b86f6e73a1f22f7b639a65094a771c30937b8c35c1399393a649f0f022570656eb1424f82f3474fa6b98c638a8e4d865c00aa336121571b78517b4be0a417c1bb28c0d4b82cbec0ccf3985523958bd1b4d1cbdfaf0d28a64d31ad7d0afd346f644704303f0e76503abdb6f60672ada7e3c4f111e24978a33e56c7933a6c5aed987e041ae4a9420ce165018a9af1732889099c95fdf5d770deaea7ba730c9525f0d835a05ce0256d652afcfbda139ef3e6faf3af8bda477b5757ba8916a00ade9be8b166357d596a83005ace952e6814891a0c9ca25460084786098589206faf57e5496b2de24a014ac80120632b13e9f8866cd0ae995ba9229841c6650eff720abae6049b850ad9b0d24f3dc1d2536f4f94c723fd8dadad58d203cdb064a7297a578827808187596553e78bf6ab54ad6b82cc7b4b3a56916ac4b0b45d40455fbfd2da8f63906710724d0f0c67dbc5cd33d305d6dcfd9dff6e85a152a078738b2e85c1db901eb5194b2c3057b4bcd38d4c8111fdb8741444669c742c75ea6a4da23a60a1b4c7e3042282991637fe03fad6a9670b505159abfca0e7781bc2cefbe2044a37887d99a59e56e987741a6653f34f7824f4ac980ca03b26c2f85a5475b87697eb3869f23a25f5d9d8397e348f2c4075f700e8215298e07cba8190e0ed08376aa2aad96c2867c70e314a1b3485e6ebbda3da0810494c8dfe7032d4cf75e5252eb18ca5af9953e91a81e3bb74dcd9b6bd2273874900ee9cdae21973f74f39a4e39adec468a73ccb786c5eebd8eb141ce443f9f066ad6fd9ee88d11827052f8d420fe20093fcd6f149022ad3f35074736ced747cd5b9f2bd482c7b9e86aaf28d376feeb8618e8047e12b6f0907c45f4b10a18b7a5c8c254947da10868fbfa8115110cff55c71913c95e2ce6c3a5f688ed1de491e0bd80f76f98aa59cea0589e0431ae258c58f94bd041f8f97d1d00ec78086d3835908ce189188ea2a61cfa525a3b6cb88e1265335ab0b46a9d01cff377480f857b42016b7d1dc70e1b7d627e9b1f45aac8f4d90c1f8cade1ec53fed510ccf4031ea81d6389fac7771f3a57a3991d898f11b59fe0591b0900a9884db4c1f8c20c6d3e00caec2cf4cc750acac12b897a1e63cc99c6d7a8552e0570ceb9081eb554714c6d574c916d0e0984eb566eabe32678fc8541798641cbc9d7aec7ef00024ae8354826a9e6ba63622d568309a31e8a58c350ded4317573238e1a3bed221d09dd55b8cefb391ea7fe0c0ecf90ed7c70b101859f9776fccd03876ee15b2242ade920e2349b95b6a02a2565ec62d10d0ac6098a75403dafc95cb3a1111908737373c724489a6100270bd22915b9c7c320e93eb1265fcfed6a9f458c00c56c1de0c6893ffe1e94d4673c1d26c8cb561b5237f4483d9dca99c5f81273bdfaf2572bed39514323ad8ea247614f5f9a15392124ce62a19434f6a7dd7cbfedb61b865625601969ea5b7e5844b31a0fc1d6127cff8f9ac407a3b988e1022bc192ca0926a17cd14b7cbd426b1ccc76f3e664aba28b82e3f43ee178577efb18718775ddbdd7678b6aba844f2fa8ef8847f5d80adc849d82dd055f19eb80c0fee30cf20912dd2955e6e94a504503a706cbeca40def0668a81756ed886487a5fe18295d6ba3503254e1c77799a206dd1189dde38994fe74a08ea0c6e139aac77512d96e21896da25783903e4cdd8c46c7ec24852c5625c79c421f838910f4f318d6c86d0f5de7aedfaebcc91734dcac1ac60a5847957b3ed117663d59b4e2f93c5f65bc66b6ce74f4b61ccde114e5befc10e61e11cd8da0cf78ad175ac17e097557f77c393ab0a7785368765bec4185beb7bb5cde5780edc3422d3017f133861e3dfd99fb87848fed1cb6e546e921bea3c3ad708b1167017ddb4f8d06f35210554a0b249a3199c5a1df39a174a1044972a08542bd68e5294aca39a49b0ecc0659e830063a5efe0feec4dec633f2c23c1720a9a9863af8b3991e12272c2591b9f5c1238b5f277a712d2434135d2759921271b177aa6319ceb1d5bba9f116903e9e5121f4280b952f6ed0dc981b7a51e71a93b8649b35f292057dd0b795779ae476fd16195b30920d17b1150e20dabd46ecb2934ab2de5e95374381ce732492cb176a9d34f1367e47ad782fe2008d32c3cad154da9f68e75fc53c86d9412cca884022ed4bbebad0daee77e6aa968071c828052afeee4a8b4793ec73acc99367aecd055d2b1cbadcf6419d7c4a2815873bb38b3aeb9990dcf1d1385409174c87026056c85b9c3a742f289587a83765cd2e7176d585c08dc95655707b7c4d28d082920bcebf74a7a35aa894682c2b9b777812702341f0ef32097d9773fbb52c78a57d78ffa2c544f81371ff73b1ac0ad73f074f9d1a3cce18295daf181d5981a3f11a158fd5ad59633e1331ddaff888be145618e4b863f842e38608b1905ff62c356676c2a71654dbcba9a85fadcd9ed380e0fa86f30a1013fadb4d62dfeb59693e908ddbc6abf86ab9325cd2f2edc18acacecec339d1231e144e8c6693590d804e5db521671e5002d0797baba71de060d20f5102194ca0b3560ed9f4edf7d634366dbe6487064b9b748ca269dfd5e1e6ea57aba37790e859900cbb9d18bbd8dfb2f5f86a9e8cdc1befbb34f31a11598501c569a113a3f3c5a40236452cd83d00dafa97965252fc062620195f6c0cacf044a19beb48e2d4ec14dfe287291499bb5e0075c56edf7387f2522caaf5380c4f5681b157c91b9483ffb721cd18de3068ce8148c2a1fce7548c93c50e7b56c14b4f2070270dac26ef140c1c927c67a2982f98f3b34d6204bf0f1f530eb80dca70835e30cdb409532f97f52a064b323e935a6481e92efd538dff19722f6eaf41157db0fe119c83225a7ae8a28f5640ad5dcf49c28a7fe365786a074fe891c071ec41198703e65f3e77875a600e90f160120f7106ad9b1fd63bf61558f56d1fcbc3b4abf0681b428667b4148fdc213cb5c3a2e94006c332a8a8e8d964818b8303bbd7d517b7a5841dce48277b2146b37a72036c5bee6aabfbb9f73c77f2c9c7e352e96dd041f5b693cd4baf1f8b497d42605dae29cdedf3c60f8944bf696247ed57ee91b92613689580b519efad1e27c8d1e9f9a2b1bd650f545c825567416f3b996323ef45047a4de7dd83f55bd5fa9972aeead11894afbeb40a15f11bcd669477db2f91400e034c5e80efb4ac5d23301bf3c088c50354f54c206ef9d4b457df45ffe3691311de3db002dee5cf4cb040bf3b0f513cc0016768d522b85d2e9ada3b0b53cd80adc68cc5c7ff2f26cca8d83333de79a3c115e3b0414e2146e385b6a63a6a616220f55f6a926189899df97dfc2123c4596a1c2adb752590731854862e556ca334369b618f85434264a9c88019e046298c5263613ed0775363808571b1552fb8b76571dc0a14b955542c717b2137f1d8fe00b4d0cd1c943d58f1e998010d382136c5ba11a51313d4625cca4627e1a5468bc0b0e84adedee4dcc21f876b7cb1635754edc37dba726ec277044854841f513011b6b9e1881a3c8e7a9f9d6c4deb59daf7a2ab17bfa8cae2c8bf1e4c794eacce0eddd79f84539cd9267692924734f92e8f2812a0a9843531d8f1f0f345c8ca84d058ee34a39d2f3098eb5ab63414249d9f248bdc04f7fce7674d24a9b183060044bc042c1e119703f9cdc321505f83c1e6642e003ea008bd81a8e7f26739188429290318f2370d3b4d034554fdeab32a0591247b38086ddfc738ff3e97f72e0ceb9e528a2de1acdc66bcba5b3050eda8c54f554a120f48701e2683607b218ac4ed34ec84066c47f1cebaa3139a000466b5732b6b82de0d5345da8e105df037192c4aaaf1c01483d100004ddc85a458b2d3281775405b155004a6656cd4fa2fa97ee5c25496e40ac30bf09bc8ce6a8566f3c49470bd14d7a4b1ded9a7335545c25e0835de9698a447ceafaaa35462c1c7525413634323cefd7f6ab40427462c474cf8339624e8895f1cc9d3400aa6f90723a23f2db8305a7dc6c116d5d85d0011aee94c093ac5fc55ba9d1e21010569041ddb78dc7d09f406e0de8ae2b2b0c3b7ecc7aa2472b38397259af773ebd5a08de14debc37a4282d5880998c2f88c91225034074918c62e8cf3328c5da9b193bf2aa6df96de03850f5ad2b9ffebe059a90eeaad0e100ff7798064e109009ab7e7c18641991b952fa060a9cfa9dbf734b97d3b5c9151e43439f11dbc70500aa137959b19ad6d419aa669d3bd79f9a1a5e9253fb11a425ff4f9dea8329740cf65a95af490e4a1196fb9c832f6601a131558f5f498fbcc21c3a122a86274e63acfeddc40382ee70d25d65ebfd5818fe64422ad4887f707c7e77bb97f7e00f93b111bac0c1f0ed712be5c2b4d7d0d7e87ef581c346dd54fdebd6f7280d7aea9f111c09c7875b02cd9184deee987974f3728bf1d6d244f5cba477826b827dc17fee9b9ac4e07f6ebb2d3102fb8711690637986d967fb8f119a637ef6521faf663909c2a846332d74843cfe665dd84e7f3d61820d87bfd1b128d98e2696012207682330cdb1748518e1a01278bc1045d77388838578b516abd12b2d0dcd6f140dbc2069f2a6180ab3b68c33a57720e7be7dcf371991e75740d304bfc0d3575f814f363ba7cb56c2ce53bc72df033a6cf819b02c2e7ab245953bd99f4516d4eaad90ed4906f1ce4dec8676f8f994b10d7c8908376e5870f1ac3f1a9622e044044c2c86170725deb1fa6c9237d06eddc7ef643090e73f77069973b6d98960e7c7caadc4d861f42b783d3085f989a595191d478cebac39d8d7d514dac1340d47785157a57652bd1fc1d29b0d241d3246baae8543d47f6deced59224fa0e15bfc3842575dbbdf42d283c462b417d2ae991e665229540765fb643e9ad6b5c8b4d7405a9fe4542319b1afb211d6d0b76bbfb2f6d3efcbe00be6e92941bad6715b57f88a33239cee4ae7833a18d20e379e6d69fc52bbc09615f74c3a3056d9f417bd167e3eee26e8971150769659facaeca0429a8dac9c3840d6312d463343f096d5356f4058e68afa756ee2131f144dd16143596416e60b52a108bee2d375b4e5459546b14460702a4bccdc4f0d9a4c69cbf0a640a1c1e317b76efabd192683ddbb794635023cf5548c4e15ba39c0a934b6085a98727987098a7011efeff8c50d4b74f93f72844e0bfd6cd2eb50943e233e0f5fcaa00a3fcbea58023b351b419f872121fc2c2cdd4cc7c601038529a68fed5d2e8620de639ec79342a5d0b84416ec6c1c6ba3c089858d65c693c2df8d5f5539236d1f1ad1fced047cf3785067f89fbd14b3c188dc08a62d05a9a39c6634d63a8bc47f7c7702f49522c381343c537a2fcfca1a565a21f6789d079d0f1cb9a8c47ac986531569a3dbea0309d32cc820620d943b3c05cf221c3a7baefc8190d8c7a2715263a5b615c4a4edb08d87d3a569fa4f9a38a25077ad4a8acf6fab18c1ead11996fd8e485cbaeedb8051a4303f5bed77412ee1a4998c4ccdf2078b2c462509d5de388ba57556d41290cc9ae857152519926068af5d27b6d3ea0de73619ee164ba85a1ab7535650697b01753be7b78d7d0d6bb381fa6bcb33c5e5d5e96515bdb8dcb9127514275605381019f9826585dbc249e370c765b3a543cac0ccee382e850b80d1aa2a5d5aa5f15009889166f04406653b1ebe22e217624a47bc26f8cc3c90f8a038067cb7979a0f4a749b3d980a3986168fdba2bb7898631d58e94318990a61dc196874c290e94cb083658b6d3012e24fdbb4ae594c06f90b47361ce0134cfa054bfdd76b2fd8db16a5fa666d7bd6bd2f562f3e1b1774304e721abf354cf7255ec6f6ac67609c7a20a98c8d86399f0885907795b26d4c1ebfa1f1afa9fb40f9fdd5f96c9d1693cfe397b0f98efd0cc7f92c0e3d709d763313a620a93fd8b322fb05cee8bd29f3bd5bbbdedc3e7937b036a8f4ff870ce231b88492374200b97d698c29d0c8b1e30135d9a136b4cd442b79097af912d18185442df1e5161fd4f1f5c7a408f458a7db80c28387f950f5f9ec42cf728b1f6aa9356e6c269958b06ab6a3366f7e285f25df6cabd49360ba8d73bf0ff7cf5c60e54a2f8814c89ba704f666798edfeab1f83930fd970b279b3782869d374832ccec9adf5512f1c6eaab7ad114f49d7b539f125bf26439e97daeca34599fe4c1dc360088bbe17db0ca83061d40db72f6cca441259db5fe4bffa129d9f472428cc3f67b9163e7f9c4f9c5f79373a158eab796757ae6f2aaa2fbc865f08b43d24a037a35207ad38449fd2f708cbef0f95c29469a01f7c1f2fcd060be5ffd3f171241ecad6c5c102154109770755cb70ca294908536368023409deae03d6f32f07f69b9a2fcb6e00295aaab9f8079324d6b7ee1d4c34fa80c52d4de621f871951e295a2f29de8fad2b4ef5b137c625d2888d6d6ebb90026ed24b069f9e393f162268515e76a5d088f92f00611ba92c59053c5f787e98684f520ae40904f610a2dc16098f806e10931757957c6ea473f76cabfc3696566a0484ffd1f984894823ac414aa1a82cdd3b32b35582210444f848c3d39abcbbb6c16499be787691b3c5be2adc3fa9656201083df859b4657b2442621047654a407d7a1a447d1d84cc386aef354d08baeb1854d4d8f7280a2e75a5e3415393b160467ed83fdd01e15e9decf05d2ba7ef33d294350325a027d7ab269a880cb568001007d14abbabffc3167017364302d0079b72c410ecf58af0f5ab464d40275dbdbedddb2f22c3ce6fcafed2fa2e4e99220b05449b9d1fdb69196c2fb439036da930f138480f3b64f1c680d4db118b6670285e264c1c31d2d9a7190e2f6fdc503b3df440a25cc0e421a48ffccb8c0219617caa646c96c09a71742501541d6d6c5cdb04b11504758cc5bf7e3b4af1f24f113bb6e0776eee4a84fac5682f4707cd2cf8e9fea97c37a2e68059190944642efd92eee4f4afa92cca1b4e2f05cb761a1c95bd040e2191212d1654d8aef391b2d2321ff6e3709bd10776627dd82f378688789e20cfd219dfa5a2bebd63c5b5d28fb5277cac98235691fdc6d45859dd932b0b59f4861bc498b3a4e6d37041e0822f3521f3a0c1ee5574dc7f88627fdf4a201dc9d9c71bdb8f36a4381e3052e5a9f0a64b147184d5848b4cf146f01c3405c16a0d84f16ba20aeaa79f2fdbbd0c5e2ba5b47d139b62e27960df5a33c1d925d75bf880cd4bd80bcb05c44495143ecd7ddbbfb66855628aee61d1f45f94ffad339ec069abcf7c12e40c7bee5a42cdfd1940591bee4d7125dfbeff97742b8bda2c892f38ecd5da47d35871fd5e9382c82e72a2fdde4adc6075aa2607f5bbc647302e74975a3bf4ded3569651e4ef02a37ca7046ef54813372bc2c86abd9785201c595f4a5ffa3100a40a2b0495fa63a3c64c11f9a4d654fbafa56e390a4cb8656332989ac5a6c8885603f45ac67cf2601ef9b3fd873e01b350fa0656dc2f988d68ca12f9a3eea5de18b78d2f53cc5966fe2726afc8ca6d8a3d102bd7bd58c4d50dbcead2f667cea53a46642efe0cb01fd6e8a407c7fd477d08465000fcf2fa3a669485c537e7c4b97b11b2c707b32cd8b0596e7265d278005df321d97b115591746e2368fd8fb72f63c6b5b21f0443e279cb69bfe25a59c4826ddbb58511f0f2d943b6d6b8e6e1d684b61fac4e2bc7faa53f4822340113010b9641e34df4ac1475518c1f73d6826621d107de5c23c15435c4bafa8fb7559e0199d80da575fcc8bfe9e90eca61b01666ed1e20c43a773b1a52d24149e93d6314fd5cf81043a54f30c5d2049e5583ce9d04d927e922b922c2623edaea1ed07617ac894970e9c269609614829d6cdc8a986a3f572c77771b2ffb0c6c224274e754d291070ae9c495fa28c929f2c92ad6a9383303dabbc9be9df07c4b4821a67b459fce73d8f40c93d77cbc02f739fbc51bdfd15a599f12fea2e72948980d59dae8c85a3c3bd8384e19b8b25d192d70092829f63ac983b18887c05cef1cbe4d67cc7460f090a61b096fdeb476d7029b1cd1399c2eb18ad9f615ae874ced67f8a04e9f691f5f93ecb43543c49522e8d48305a999c570be7093cb005e55f1c7a371df2543db7fc564b76ef48fcea59d15d0886217eed006bf5907cc39765dece8c3a5e5f8a2faaec5e4c1d13b624dca3a44325b54275756be993b92a61d49fbed68a4e4aef60820e96ba2221e22490346591a157359eb19edc8bb3ad7becdd2eecb9fd4d03a27a89483930d49ebb7213556bde90ad01fe8d3dd6fdffa85c8e9e30de60cca003d1c0b2369c9c8a854bb02a8760ff37daef333a508fb51a6f5e5ba7c88c0f6be45f0d33d504cc53b27fb77d71f2ab7a91badf4e9f365f82ef413528e93ae1f480bb20124864b17cbaec86815833f833aa17d1789586ca8c69b470325c31eb804ed4c6643ae6472f68ca84c07919039b13c6870aa1084d2737123bca2ed3daae9dbbcb333d67f5fecc7227f273d05a5810fa5d87c9b2352e8ecbfc14e20c5e18499d9fd2cbd224e8879ea8f93b8bc1bf08da582090c606034697bf926ec227a190e1696f16cfa39bfbd08aeac82fa93eaf0c31c5dc3d7aef5806f8bf37603edf08a84e5cedc43d21257edb52695abf781e3a71c92ba5b67d2f80c2a44a382b1f909b5b1faea5b6c1e955e375a49eecfabc6d5eda08cdb534c05f2914b9594639b63c5b30187b3b3369b1625a279c460c8e9ef71b49c00f9958726a90ca59249d2f40dd23cd3b9db6208a7954935bae54e66e4580482c7e28790bcc3a06b87306b9d01ed0afd4ef22089b183ae09d4f578404aeb6d07ef40d013c5dc73e6cd9db984592f4e106ecaafcad35980094b21616c743a4563d1ad689e9461cc6dc572ca2eed624d6cdc48d6de583f18da8764333b8d4c204ce890d27f0b739bff7d946390f4c0bc07533bff12c44848e7a160331f6f0a510db9b6509348fbb43ba82d65febc13f7883f7c6818cc7fa8e9b664b6851bdeae99c2cfaa4c6da1c64efbfc24dd80bdf5aa4e64da590c1452ec9094710310365785987fa2abd55eef54b3639eb78c574eb0a543dddf132d7717bc7e015b580c1a14c4abe5f167c6db68e7f0d64c88d13672027b2adfbe9d1620cb53dbb9eed8626413cfbcfbf68e10ca514daa3ce2d4a5d2dff9a6693d05cf219a2bac020fb4e77e03d025df6b4c651476c206acf40cca965b80901a216f351d1df989c6af2044236564d77f97561844624a68e460dbc04bbc2290084aef158a591db6dd4b13495bc9bd1e180bf576ec0266a903f220e8669cc4c68c7e9d68b9fb38e8854d63c65dd451dfafdb7f1b9e0e08c7f8dbba4c66d60af21621ddf446ffa36cf1eab24da3935e21ec299cae82c22efd9d6ff3dcd879ae5782da5b0eb80931a48f18ef9a391ba5ac1027c4bcb56dda80d1f7951fb3497fbfa5efba685a6de2a1f08239cc987b1b41129228c64a8f0fd1cb557576dcb799b135d41d6b1faa35fa2780844a524cf4e18365b26e89dcb8fcc0392090b68617eb88ae98da73b1d841c0e8272bcc2d87db55e130a27e5af80e4192c0130d1b150f3fadf3f4bd4381113c391e936c30d73998b12cf03e4c3a35a9571b9a5c05db98dee535373ce40ed1f506abb4e5da0208dd736887af44fc7185fa45ff3687727d2e10ee00a43fb2c66433d270d7037b427a8608349d267c8d4708252cab93ae57f6c6f5fc6e0382d40c73fa279901bcb85f4f660af999fd06a815e7de50be247ceacb7b090cdfb9ad163513745d95ee34400f6ff891a04ab6b164049690af011b9c2bab06ab50ae12a4abb1e5d12fa09cc0dada559c7ce73e5a8fbd7f83052eb36d7beafb4ac73a99d9c1506c11c5ac43962dea89fe18f2a0adfb8f408c17a89af23e971d72f64768a9f6b374bc96d6270d7afc60b7dc8c1f2067112658ca2d1b5cca4cc745523f31d12fd315c8f1a2724fbbe502e26a2277c0a976f4655cbd10f2e5daf926c8fb51a6809690bf8f1d4598cfa88afced2f6eaa49691f582151e2317f6392f36016434199b26e8a1f297de4e23c2f3aed2e8d78d209051f486db8ac13fd748dfb863a8cec1da534a695c3a3c37ae15f749f556bc49fa64102b61b9296e3ac5597009891199510352ea388a32153a073e606a2964abe09e019861a36c61fa29f9c602902956c51605f606d29f70a25b5b95ee8c7fc7c8cb2429424bfb72ab8d1e74c2b054db1e34c08b6a217ac6b862484ccc8c53c0e519f9a07a3d5e3a6619689efa7d86664f5afcc0559a77857c8fb35f820d5dff29309388bfe6f6670dac8b56e26abaf82fff3ef3e830ead428bba8c40eb42de6a0816ca8076d1d796e4d32f67aec9dcd77c5231c0df4fa2c0a8add8648333733bc6bf75d7ac675cd8d23de92711825886b288e2baa431eb15759d0e5fc747c2d757b769ab48c3fc3ed00a3088cdfba67f83850083fef9078c46616bf119ea53d51215fcdfa0a3d9d4bf2f7e2abea8576a6e916c6eb0c25db4bb3519b188676a852959ee3dc9aa8e8b59612fda22d120dd45069ebbe151cf74b7ef738a6c442af0b4ecea5e8c8f080061e2a5ef39ef60ce1b1c98665342d132cf66a8894bfd4445c2f310db7476171386b5b7d69fd7df9f2f24517eb89705529a2b161624d7694a458b61afb3d6ad19d6594dd442fc2778897fd4015f8e7c7ad6210ed0556943e19d6b25d4e060f34b64dba7152a1b1d9adb4ca7e4788f806071d5a8a6229b1d5d0fc1027b1d4a5a618e2f4a18edfd2914ccee309b3fddfbf125cd0301a290bb0f2febd3f89a4e767214a0cc707d151c5024c5c8e31eaf77338d742468781e091fed51ef11b1305894b9c8de3d805b293a28c6c6fa2ef05f9c0739dc93f5627b8d3d0fe2b1ee91388662a971929181b6c589e3d8e90a2804f790757248d4c5ee89cff3ca6ada4ae03a89e4e370d155f59cf2ffb245534333fcd8abf4db1c4eb33282fe42ae8b3c32cac776b4d0e0eb6714d8ff49362c092f9dd0077ec3bd70636a03ffa5ee99ae9025c5e3c81931b3b5194f49c59b2cdcf8f14476b8cdd86105264969ba0c8adbb6c84688c0f083430f08b7cd6ab59f5f4297f0ad66a9f8b298fbe28234a11ae229110fc06b10e7e2e7ac551a75439bf3120f77f9c6a5d4d91416cc7a1969fbc4a7b033325c9115dedc817f5f98b62175bd6d5333ce4bc78ddefba7843ff653440c22eefa99a437c7c9e91410be7d5d5d59db8dbb2e31d732cb6eede383d23fdc93c4f47eafe52c934665b371655f57db54e7b4e7697d5543f98d66ea9ad1687f0796dbe09cefe504436efb4f8ed11638d0e5ff0ffd462930f6b8a0f131049a3dda3c4eb7906de250893d37fd06b050851cf71eeec8c3a59610f746bb41c6d59a7e369a32ba8f1db21c93f13da867ef49f67e4a982f0967d0010910f710e348c85d8d794e60d240fab313d1b2547da1ff8bb8bff26dcfef659db4ad532b9607c5af0d3191962dfc6a6ef79a6585d999fa4ccdda65b6564e925bfa1ffcf45c02576c3c779ecf0b377ab17feda90dc70d835fc86f4e838ad6f4a1f58624b950055859712d38596a6477cb765790850df51bb339169594a2a8379ddc55bcd8992ac6cf4bbc4df5ad950a5cf32e7430ba3e38a8e36b0e3e0deaeaf405ac897d5b0b0e947ac2447e3a10253a698f366bea54179b41f0287ecca1142f2b1368a6fc0b4a183693aef596c5ade5cdab0be7c4ec2582c85b4321c0755ffc81e7afe1c7c6bb3dfc3538761bca863f399fe02e8122d0fb1a8ac9c97e27ecfcb9b4f235e70d0cf8e6d0039ba5af73ec454160cc59beefa9cabc4c9a04ae4b52e13656f1fbbb64d130b15235a1c32751e321231e01fd0a55e18872eb199f2056881f18546111d8d46496ed33c5ae7c87f71c41cbf4f2bb61f5338d098940261ed0a2a69fc89e955cf32cecc81bbb8c02cca1f37a2a2a2624181e87c71b28307474a43b51d9e7c1bd6dec1ac23319d7dc3d8467035449507fc842f263e08294945865ce1c35313044ce1777fb0191b91ff87eda714cfcc636fc2cbfa8e6d766865d942e97e76d3773e1768c0196a6d7fe9e171b804672f7ac3029fb4ba29058c2082f403cca5f6e1fd9b64feb26f90e43a33baef717d013a88f2cd3db738748f3b1b272124b163297ed40dbb669169f473b52a69201b603fa5f3dc61540d5f26524f0bf2c21f38147a1f4267cd9c461f1637dc413ee05df890136017a756f9af339efb8e827ca53087fef36797acf569d274961382fe8217835b482333f5d5c59822a325c0ba89ae73f5d3f244d1d7a78310e4d0af540ebd716374184528681c2a95604fb4d1fd4424285abb685d18bce87ddd01d116d86a12733bf618c2d247bbab1e9bf9ba1390279bd4b3a4a43838035c3a8bf21646795a917290e44ba2e57c7813c7068e2fe531a4c3fb716ee7b42e5c1b32e15c4523c2fc594cf25a8361c8a96c60335581ce5c5a62d5ace4e71fa48b9bf16592b9f8c34e971a4e948908983145ac23d1c54be21d872e761a215b557d28db1fd565d01f213843519ffa634cff6e5e35c5367f5edc3c61aba2f7a70d1d07aca8d505e478e4b3d4bff0e8ffff7b423e25dc95a05be7122bbcb0ba560f74cb666cd087334692dfe72d2d65cddb31b289929fc2aec24361e95246bfd220965f2a2177ea187d5cd31c96514d8cb65a3b15bbdc3fe957728ec4829ad2aaac9ac0a2fc434960acd65d0c5abb420bd57d305a378ead62c9ad44e73396174311be7c87c68c6a12945ce336f51a512292b1fcdf9f0cdbe6996bcf20082202e47cfeb87132631a7a07462b7456ed393e6df8920a88e119f8b2bbb3fb5ace7aa94fd200edf465df24fb9557f81a28959a9a76e03ae1b89bbed12c52d0d700695561e1700bd3ebb2a71e70dfa8df014b1b4bb1be58cfe8f58dd4ad09aef50c3daab208069dc4ef4825cb6fa5eabb3d10b75cf6e5bf1c73fba680806d1ebaf199334f24a9aac9212d765465773645f28871b4bdcb7aea364d10867ea99a7346a40579d2c25521cba8fd88b29edd0ca3551a0c0e4fa96574c672e70c2aa137ff10714541b35e2e738a5b6d40002c214cd7692deacfa12435932207d903199002703c2bf14ca0d2f66fd4cca19c5219b90fa298f8fe96afc61fe5f527e9e4c37574c1cc69cf482ad959f32dc3ba9e7e7deb8d3b65db01e0c81bf161abc7619c49a0f5bf0eb07569c7d6b2e9469e6f0aca793bd3aac5015aeefdf0ce1e6ead1d08750920e3526aa5d94971f522ea82a63ef237c9e2efdb375dbf6bbf8b6a8db98e508f20157c1ab3a8c9680f6da5e4e99b9a874d943d19a0d75385200417afc26e4e677835fadae2fd44ce38938bfd304954d7df6187b57b7e595ca5c1e01ffeed6f7915696b3aba57aa4d7fad1ddb53ca8caf11b87ad527efb4e0323b6bcf70dcba239093739b51b9f90705b23e47b8321e8b4f919a185b0eff89795094c9062f33ddd5827d4864422e20e760b2b1d1567638363dc5fd3fd38b1d29557870dcdb25abe7b463ca8367dd8dc3a494ca1a1f9583e5cadb1a1a2d822bd6ea8505afe7664481c906039f497ed4a5b54b1660728ae6fb4d96b219f5f88258457d1db2b4085d91e4a4b23afe02912149dce4494a9b0119a36529c6b6e2867c003618356a6f3333339e3ba7d7c9646f6b6e4d12bb171184c0567c2b88f112e91aa52544ca950f6bef7a61da5a8749759c3161d6761d7d57590f9502f3b389a121b5b76674167a3949fd04451708d181029af07f2a8f8b5a3af2f5fe2768938cfd91f6e31b4cf63bce51e9ca05839563a1eb542f79fd5503bac1770aee810bc6aa537f3ee6aca401c073abaf3c09d90e496ed25e02f69b92913214f04cc4f2fdd71208a83eb26d72979557d8eb0549dc8bf7893cef7090b7bf554c862cf9f2fcd9e81129817f09df89018622e7b9c92482127abff8d4b85c733efa292758fd68cab11edd9638247f181f73f9be4797113fc1220268bedfa9eb6203ba07d0465650b757f4b8e1737f7eed698f57da3f6bbeac36f76b6a0fe6e6231f21e9e2bda4ad881a93eca8f8ec3c0bae82f55b0afeca00a9bf217857ea77ce2a003766b80bf7462872c968424cb86195b20a7564aa43a1ba6a5b8cdd17c53faebedcb821bc3442ab46afe1c57087d3b8fe7036f5ffcc71ed9ba2a5a77ac15ae67ed2e23a5296e8a25394b69838e9c802c24c23dcb90a389d6bd4d1e98f4be83bd288e177570fbc9e1b377bb734667060010b1f6d33e94f81588e8f362b9970e40d79c0c3132ae2d94fd6e9838f944a2d52a7b5875b860cf94d4dc65d5414b6159cb1e92f3b3894f166aeb48d5864e40aa3f234327427e5cc13857f4b44332b293d2a04bff9adaba9eae01d24fef7c7d261756485196e049a942894c6248537ab3c7542b76d35f9a9bf388ba7f5f351734efffdbbcaba813cfcfcda1e6241076c652a39f9401b8aaa936bc9cbc48118f06187cd8edc4b5898771b3ea6420eec369e7ab92652da29e2e9ab14f202d296ba2d36c72f22978c6e28318b264647cba57c7d6b6b420a1ed26202f1fe3b43d13e5bb539224275568ed9a791bb816889d33e54a93b841ab9148fb49ae5ede482a38218e2cf66295506b4c70adeb0f8230d475286236cabeb49f34a2e7549e459abadf3e45c3aaf3fe5f70cdf259fe16ead9395f492cc92df3e538fa8a30c981f99d2678726f03a83f3e052c2695f0b93457e1b78e06dd88ae25aefd18c23e88c9429f1ab4bbbf39781fe9f87447f465ab58556765b710fdcdd0f528d23cd4544019e4623613c41a716090cc4fd8de511aece60b59bb53a227dbacaee8b85aeceb8d517a28bfd3ea90b8f0d41c071970e73c60cf854bbb5978697d45138a2072866203bb292db6b5dca205e5e82cdfe727f1c71654d1a704a41eb3b65a6d3355a3a5f0a16f7f31b35aff3ac3880b746a381529d3a8688994e38eca4ecf40fd9913e678ac55c7b7c7232fe820a561affab1e80e2b6f02af57f883ec13473e613b2bb06dbc8ad35207d61da55ada2d6f5fd6ad8de2d289ffe39254479b2377e552abeecb9c56044e013b55b8f55d57893b796300812c84a24fbf8091868eed5d4c92239fa5e7145d9d0b22e78d0d001554ede2d24c707ac407b7dd7120bbe6ea18f73ece14b3079921fa4b1d7f4ef9205f73f443176cd745d3e2fb0c2fa9fb9c216d17aa4e4e4ac8d05cdadf99bb5491e97f5a4f9d8b698b1e30c14036cbbb71eafb288e69ab733bfc43d3f96e7d0cb9b0f92c3fc5d8226e316778fc5873a5460454d48e0eda80eeebd37c2418f67e2375c2a1b5bddec158c50c271162309f8e9786498d2788bbb4d2ad24431e70a06fb73249abe2156e7da5227b4f1e64069d40c4cc7e8fd840e1cd7759367e9fd15e7d337655729b4c12f3bfdf267408957e2bb9c2a8075f72f9dc12022185388a6812f4d07d1c2bfdf592c0ebf43a80f948e5191537fc99e0f8567fda1ca7266f0d14bb1af96101e61e306df8ec18024cd43e65bcbf68980bd2a186f88670a028a2eb2f485acdba07f3c60c1383611716d29df87e69a0033f0a5b28ad0a063e5e586d6d332960a859d0cb70cd32f2f13d5aef2b1bf06214361611ffe02489bc3ffb20db010fd1e012539c84f5f0eaa5fc43206c8044b27b7ca8d3f5e904332ed6340f4003ddecd49e0655547e8d63542172ae7be0e556ff3c9a0e6719d20fb7955dfbf4387b0e89aead254333ca93568c6a5f607dac36b8d5f6fd144c35e8c78b8c293f3266f7092f5b299e76a343d11a436714ebf905738f544eb4b47b3c3f8e97643424e024884c5566435c826c6d92655864846dbd2e21eb8304ada354e194f091f69f4e7bc6ca7b268953b3d8e2bcc9c65343b9bf66c6b0b030020c932318c594d3c5bad0ddf9f313f215e1e00f8697db93b2e0e866f4c9032455eb7914dc9d92dfc1becf0e96b5d49ce47a65989023b600931119f4e4ea00b256249bc1314a43e4674e68bf811dfc5f008ed46cc9f13675931b1c5c296c83d8720c088df1e81523fa8baac9f8462aa9c8b4b7003971db11f1e1290430d19c3fd4112ca6caf78dd825eb8b90443e3357ab03e88c2d66c475bd0053f724e1b901bbf91ee3867e9be03932d8b4b7a84e4945b1738dde6dc8fb2cdea7017af882af345985aad9abd9060b043cff2be80a298b197179b4e019373db068dcb2b793aa034f5f8fea10bc0e92f9e1e353252368799b0790bb03e4f639afb7a37556afd7547a1774084deb7ba76ad0885f9c5d2230417a207b41b583c5dff30fb16a57889624e05ca3287065fe06bdb2c3c313a606ecf5cbbb93023f6db8d06517441477bc090974232d0c080b92751655a2e62241681c365d55518cb06ca0aa31c287d898524a2c6a3aeb14dd2c3a9e594e24f19cf9c850ccc2d0715376216deb632557c5723b3904843f3ed2cb918086cbde950cc548808c6b8b43ca51110343976d2fb8528adeb47c5f439ff80604319c636e3025b225592608fe0f2002810c4ad2c38e44795e4e692ba46f5ced1d12503df374ca9f710d6a05822350e30b7a33a3d6f5aa263b7a3a98b95cc8c011217ed32e6124122766bbc59ab57a7f0c06a99728b8fff7e018c8ee472cd4e90d9f4c1a185fc450bbdc440662324b74f4a080ddcb77da501d9ea5830243cf185e52395ae574af5b1d7822962350efd065deaeaa5a3329025e9e51398b55684e39be630d348498e9c1cc0b4d30ebeab1c54471c59173c63ac9e6cca81412cf9a0d1ac5d1474a5c766d4fc33091198cedf9ac1b8bef7b2af021a170922c2898161b6a73a7965c733dcfb1944be7f8153e6fcd7c1a12f14858434a8453452661074215748b38f3bfb33684b30f9fc6666cc4f13e07137206c894b2d57dc7f9fd9675d61885da2a12a65b791d66e2b24ee01de400eae40ae652145950c942732eee38c950f110ed56d8779963c87f10d88ebc7be29b76f160ccff2af8b33e5f4a39795ef30a8a446d8c3a4da6e674d2477fd27ac8458a886757de20c6e50945fddba7e24aa8c38fd200f286fc26aeb35d7e997802b6a3d446e49d9d4d7149386cf4ae4320cbb589d32a94f5288a4d9a740e57fc3b4fb7bf2b4207992dca15176966fdc482a0aec6948e7aaa6dd92208975b7ac6892db5b82f0e6a0c39a07026334964184fe8561bbb90c23d62ffcd95225391131ada48f4e0a18d139c65d1b8d6c72a0c3909083d79676178993ced0c35133fe946dbc358abd7333bafdd84e484bacc1be362224a2379c791c3275a40ee9c5e0a309133342742caef2b8bee352508b70a9307dae5153ff6b02d68a497af5e64667455ee85c1c0ba805197ced348fc6e4246053d02e287f7cf6521eb6741ffb4d810e2a6b66ec665f32263567c01ceaca611fe3dc02c7dc0b36dcc257816c121d68292e2c7e5837e2904eddc661ab0ccf9394259f390aa13f71a40b790822aede805854e2ae784c53ed6ff8fddb76401004f8596a1b55107f2061075da9f23787023784ce28612318f5a7c9ce08708a2d7d6d932f3ae5c43a48c65bb64b3800b20d383a26762ed5422aa110295b480f37647bf73566e70ce3524439d54217cbf0618c51ca0957a633c2c29de11f3c51a7fe27fb9482c629170aca76c5d751941ce000ad64c7bd8a1dbdad5fe78fb3c4c9b29ee9c3737706806a9bf8b6d28cd394ed1a438f78e752b5b1306328138e3f754ad86516417885df442df10456683b1261b18630ff4f2cc67b52472e2ec2a1311448fe4f2a55abdb1b65dcdf5b0df35317dc15d0206db24a0469bddc88a05bb00ef42ff4bbfc7b5bc11f6fcc2c7c335a239f2723ff2a663e93122431fd8fe1516f0b7110049f7577283adee38bfa68814e075afb6c4f24e3903802c91796320ab433accf738d38f7315c4102df6b98868d5628efa1d525b362eeb399536425cc2b7132c2767536aba115e4798dbc241a847fc1ca64d0ef6b640ff8e5ff3e9564cfd655772c26a0adcfe68fdfe7d042def1ab41a8184d7b9012b02e6e7f8bd904f9394bc04b5744c5edcae3ab2426f0077370d4fa61ad211585a21863f0442cbf8c5836613eeb110f5d5c228a10965cde115adafaea1323cf0e3bb0c6aa85530ca12cb01be84922d499e47d6cb0410c3815368acd6680325005d4ea74a624628ee440977dc412fc1c9542ed3bf187a15d139e037851217dbe685ce79a8cfaeb3437576eaa42a327b6809ed4b91defa98b37f4d742f369be08d2f206a8220eec7d98180cbbf6dc17f1d94ad7de927f3d0681aa174c7c186673be59cbfafb82f752d8fe64a2ef71fd36885eea06cb6d449b74ab4f57dada0bbd5cefe6c80d5bede700a414236cacde415133d8dabe0e89d091dd24a312903469d4f727fb81bee5412a71aa78ddbf46f18385ccfce372c6e074897362a5d02e29cc85947813efd02ccba6e4b5d5373515cfd28d3eb61309a6ca70003ac0f7714e7555e0ac0571c19982f60d7b381537ac0ff83f11ccc3d3173d3a1b680da4863a0dc5f88c5bdfd346be816a48f91bc056b933ed12e6e829385218552a7e4a1156b639ffa06fa59154d98ccc3b162bf514e5d26736ae1692e9ea394316eb17fa372eac05f9b4f3da45cf105a8a9f013ec5f7bc0ab697f00b816e6224dc7d8354aad07d2b9b5c4942fe612d0697a0a2c8a27754b6ffe7747dfebaf68c0769c2e7d0d7387e359e2fb7650492088508feec53ba8ea025fdfb556645cf06e22c45c6cbc1e3eff73f5a8c7e803174ee5588b4ed09dbc3b3fd7a8d7324c43b3829580b60a99a4c7844e0b9255a6022de5ce9fedf890ae5628bdb268a10ccaad25c563c8728897e3e960959b90c546703605579876cbffb1e66e25720192e24ab8900ff13a22d4204969aacebd0025f2d379070552de38ed0266196c6af5cad1e70a834a300f12979f01024779a6e3512c67b0139915e2b5ffae0fd996c8f03466fe4d6778a7b3d0a4cff7f761a2dd887b9c0bbd1d90098fe38c1a3e2c2bb92add9233d8f9500a51989b03a9ff5966fb025405553a4bb1ad630f6a679dfe1d8dd431117c9c4538209363bf81cf06d8a93f7323c8750558796a133f079f72f8068a41ec653c8df96e30f87c74c695a643a00e638e7c58d469d54aa841ffa8c05001e86d56d09d7fe74b93affb8a0e4a907383d28626081efbf4388634a9eab26c3564489bd6fc4e65a8809dde4845a910f793e0152ab9dfeec4ca362ccefbdcebaf0ba1db8ada06c6df9a31934b42b323d6f398fa94d7a3447c46692c8d05f3085b67d7d74db1818787f043530e62494a67f4405aac92e4ca522365a7b0b25593d74c28354e295ce3c85e4a3df6607d24e23d9aba091e10181306946ce3e1fe22aa519ba0a45084b23997c72aff638661393534984579782f87797f9c3051358179001f9222f7e76737b877851df12f996b7da82c9ac2dac72c566f6917ae14ea2d03ea8f7587ae7516b572f756aa3962116be2970305eb29a73b0fc60217aaf313888634861e97838d0bae20a5511caa769ef5710dfb09db6795901657fa0174ca22e0608a81e8c916ef318269b6163a3c7f9b0317c3c56f49621ccd55f7839993e6a38777ccc878495235f2f920504f8be4b935784ae915c9034b6236d807bf60d9db4fca273f07453cb426eb44d5846cfd74216f52327f4bf5a575982bbb27e39430ccc2a641564ec80a2b7790e755228e09f4b8a2423956731b9f9de140ee6a1ab2146233fb44cb07e6934475084dd3f3120f29060eea53fb949f3faee991f6cc3ac55e6a6c70e551946df21292186aa153e26a0340e4a6b00650e33ef9ed3d54c48370825cd353e8100d1756e0e4a791bac323707fe014ec390beb487f10fc7c1c2123563f783eb3175f4e301dd7d79e227eee18504a7e580e6784e2ac11feeb18c7cb6c978147f5857b8d1eea7cefbf438f8ce943024814e9e7ba6ac66fe3f9899277c4952f738d6f669477f179195eca229bd6cb692444cd20a85da3610cbfca3223fca89ba0658b8104a7ff556b2cc836974bdb274c98a841788bbb9efdd79d8aabe098d3b88663a632a685e9786b029e093f6ab63bbc318be995c6bbe16a6e7a31bf3de70ee19142a2194de955f382ae46c00d3fc9fd2fbbaeb3a70c833eb41007ae98d3977ce6dad6a2f12e5a5928ff132c390c02108d09244257fc96b4e2d50a8be3ab0d81ba8f8d06532dca945880b05370de6ed465459fb32b201432c7d1a933a27f7ee555b8d2d94023b9e7589e74a080306112f372da3b227887a6a05c09ff4f5031ad1e372d4cab06040902b50b5af88e43f956cf6f0bec202e8ff429bdc18f68604faa373a789fcc3e0a46a64f68ccf9bc06e6c3e98813a3dac6d2cd3997d397fa131af780997d6a6cf792637d1f255745b748ec0777dcc38904c1c8cfd22fcc9bfb6e9f8f41e5d6365026bdb9926c38e1f8e78241f432e5b6b027cdd63cacdd08fc5ad6617e716a66998f0977d34ea16c982bbf324933c267ee3f58ae14bb47f743ebd328f63841c081efe73bd8395dc2eec416a27063d22bf4578d6d50efb3975bd6e8cc565fab2387a425b65409ce8bdf5e19fe233ef20b31981ac8eb9a38a56fadb272960378eb3d2d0cc199935133a75ce71a24719490d300e07f6340dd7e63f8e17329492468c6daa99fc93361ecc67e3a46d5f9699cf2431551c3dc563d51163b294e1b907049c926b357623e63659d9bcbd65fdc743fcf8faa013ecca44c49fe29fa5d607a40b0d51448f02e24175ed2a8091631984287a8d5e0050dedea23b590e34e1ecb533d6491ee36d6f8b8244f2c702527684770561cc9ecf27aa00b9e87345b80c02c0174a70807013ac529725db21fd1e8b0c3f68947addc676854f6404e9389ae22d4a552765124dd2280995293eb8043f8b88761a5b6b2e5e6d702e4c465733b5af4a8ed6aa4a1ebebcaaea880db21db1f462c4feaaa159eaf49f0b5d9e65a9bf5e5c1e38e1b6394d3be4b4764f85812dbf0b8648353a2323263df7d52edced7d96099a2661c321213c433964effe066e1ed8c2a7188eba46cd0058f15c82e23b3035ce37153d68cc130d7a0a539777f423a37b17ce1ccbf709948fb01eef902e0782073461aa76b1a247cdd0930c3c79a62f68a2dd622b5625a959ce34ebd40a6e49bbd0ce0b3f6b1da8f8752fbf74762da61a3264e4d5b21820975a8fef0968ca13aa5e8384460ce183ecbe64ea4f67be4c0f6b4b7b0386416b57f48e0a324b2accb35e6b2dbbe845a55c028a12148e8e0113c4f2e12a4ed153ca0a7745fe2e06c7e35c31da870d2ece1fec7ea10a859ce58f55d9c8d97b890e45e6a92c3d91cadb9e5dc031655906e09479d348bf9ebc85beea6cb9ea6c7bf5f3b3e66bbf3400ae2c2e42121e3a4eb7ad541cabcd704eefc5621a1fe27a516ca18191eb32dff6412febdf8c0b3082f73a6a58a425cfb9b12891ccf87386ccb25d27ab62ea5281dc2588602647c87155d2f6b60a3e540df82a97b414acacfb8c9703df5fee47d7b3312d591ceeb18b8a363aa1e2bd12f9dd5a7ad6d9b91407aea6b7370b495abec14a3070876a9b3bf395d12a7e28fdf75ae8af9b2ed32d8bca5329ec4b52f3832b5b9b30cea499917360131c3e52cc174eac0c138b7d61d778a1cce48d6e2d75097c15803438593a0435af8479e8cc654f81b22cf60ed920445d8dfe61fcd448c7ec9bad36361eae0420adf9dc6c4427d546c9e2034c13d3bd6d628a01a23c585c2853ed5cb501efbeefa21d4d5c62612f7cdd3d6d5d3c16114c243b80a56f68e6dc507f4eae47326dcc5b49f8bd5603f07c4e2c0879f195e7c33d698f87f7003a761235e8013a07eeccecd4f38870ab91516d28e2dc5f2d5831bb85c8ba1188f77febe852dc1ef917064ea4bec7c75abfcfbefda3458a2e57a1cfdcfd69459848fbd0377e8fdc49bf15f8638580cf675da96c46af7fb72a5cfd00a16b164819821745b2d762c7e416274fd8fe972970dab7c113419b745a6157fd66d4382de101da7a8c6c876ee7ce95a5c26252030c333e939d77c32f83d9517a9d1477503235dc1931e3210061cea1d58c25309e3b5830c31227075cdc33873965c047d4084200d945e69abd63e52fba1b38c237738d534126d00d088ea2160b867d69b4ab5f291e4cb4a0479b170359cd0f8b83047150a258c88994d4b7926d84c0662c5f15daaadcfbef34f34eaa31dedeea7615f289290eb2a7edfa4495ab5ac7eb473f70ecad9aedce9c6329416299e4efed8aabee4553d9aa7b07abd62fe0b542d14a276efb11f28b2394281c342ea13796a88cfe51b5b1da5c40bcc79c24e8116fbff36277fb7085a42e00adda50c0eccaba956536d2d86db72d074cf949e6975a3d1e80304b650d5de5a513f439d08beaa59458207f054edfdcea22fa32a33439591525423c86fd0996b1c21a555c5016603aa61e5a8fc11fbffb496dd4fe901f1852faa4a4196882d9d85b817e5bf1998a52406b56d8b108af8c808dc3773206e3949ac05400cb519a79c70110257838e0a57a9f4d32600189f0a865f91257cd72222f1a9785e05aa92ca98dd630871373eb623f57945ab1d87e6d0d3ef8fe49d4902b2627be4cf5f4eeb23e4483b915df3cfa806d615b31afd92798972d989ac499ec211947d8ff8a0d17f293ea0d2b445bdcfe1da9d9f8ac2a2224405923283666dba6688b6b87e0423be3f7535bb250b3c6da1e88fa3081853008270c32709e37d777b74d2bce6ee2d8590e44cc5fb0721f0ca06b155638ed12254ca969c932a3d2b34f268ca4f7f3e75da55b266d81af077a894a0d9a5b68607fe3a73de5ac68e8b731d9d8290eaebe1ae670fd4c2530c3f0db6dc89cbe055eae745603104bbb361ec9f0f9dedc50b338cd8fc9050ae7f38c68b5913e283866a0bd6ebeacb094133ddd9deebda0fe9bea2df4085a860f01e7abd3680468d092b140b0ac86473c3dc0db2896ade77d37de4295a649a01ebd859e61a18221728a2d2581575fb6174929d4f6edf3c0d0f550c4b36183863460a0d7750e0e16c337044379efcaa27645d3f88ffd0eefd79d721eab46a2fbf934b4902646f14f2504840d7cff15bdc67a0aab93d9b79f542eb0c2a1a0e748c41aaad48a8b0cccca93f9b6114b7c436caadcce7c53cb2556367f39baca343723c4d6c0b8d7a6d879ee2c83e71b4c71cee89d443e27538ac92e2c154056e88d5d9b9c0f603f000221a8435446bae9925e2934462fdaac98a344cce51aaf12b5b534d421d24506928261c4be47e6658f8d7cff32bc5df34ee0c734a0a8f0196f2f013633f0893fe094a21ebfbd3e929e9dc9adb17cd0224783a451d26fa9c33e78b356f25d05a5d29798b69bb6a7894b8b1c55a3b9e8c97308468d1e5a09b5740698c2c9d9e0408b504b74ec233375955d4bf18554dd0a3b2495d4d0ad6b885a96e0eadcd2a8c98431ab7cae54ac967f086b2ae0feeb30a20743bf7063f0d8909752d18d9efd0ca3eee2d1311bfeec55781f6fcbe63b907e79357239b779fa4674cf3e160390a4d138c5debffeeb03837f86cef6afe968adcf62705ec7a78d9b690bbda6ea2a1f12acbb2c244b6065c4f4ce1a57422f1a9618d7e277de4846308810d64b4d9bebffae5b7b89fbd9a6a6dbf6bcaa0ff258d4da978f4ef45382b5e335dc787edaa360d53077eaa624081b4deb5ca1352f519d89194bf82e02b25feeb928a23f067a74dc8c07680cf86a4162186f30e0200ff06ab2ad0a135652a0287bf696ffc3c8b42b881d93e498cf9ce28daf80c8fc810e6f5c00a5d4e73e1c1dc9477a21b8e602bd2cfec7bd5594ad3bfa4e6ebb3e227bfc65a87635b877ffbec230ead304f286f51bbf1f7d7d79115953f393bcf11f116bd8b50a095abfd8cf4088fc2da559001e613c71c5e8cc9e256df219429916cbc899d4e14db1be6753b1e6b98ffff9e9b02d9c2f0c2cd5fedf348ca6d34a245d761e18a476c2dbc77ad3a6d6547a2ca7ffc9ea3a9a3e7311c0e4cbc04e22e43400de15c7ba1e8cd812165fa5af6e33deb3152a23f32e34036297bbea6e6726494d356d8a2e6034c03893a3e0446d0c71870155685b17754a9c74276c129572d0f4a9ed965c16fbca96bc846a018d9054b42721b42947c4afc33685dce6f474d5628d6230bff225022c42fcb9ce11320bbeef54c5a334f35cb9057089e1978b7a0582ac798e7ca47e4b3e57a76481cba175eaccbe736451566a856d65b0883ecb78871fa2ff5deeef4214b530cc92a92fb7775b83cc80ce62aa10ef554f42d561cab52c2341690da9ee18400099570e9b7d31f84586fd62b3fd24110be4c1a1d748fa0eb8e214c73302d0d836542280385ee8b13578210d482b12f8ffb95cb2ebf93921118d01f56d0d1b682460aefa78bf248471b4e8c965cc7b9e03ac7784685728314f05f861e29343159cec759a38df530af807a199e705db6edd1963bf624a28c26c66629ef0c2de074cf84c76635306c4dff385cf1367553139d858f9f7aaa54cbf98631b98519d1d039e2568a5b447419abbfe58ab923da5508d8b6db4988663fd8b2793d487876dd360666e75bb5383238ee634956003c8cd9c5174a2e93931342cedf19ba6a879ad130962d0c41f7f375c33c8ae3c0a1aa104a9804a350d8ccc93f0cb6d98a6cc86c7444ec81d168649e6eacfc74903530b5b8330f3645274865463b371f6e56b097e10b9f153f866f4a436e7a08c9c78b25f4d6d81935eaaccf737cf241505719e0685d9e88fc8fd6655ec6822cc87156c21cf43e54bb1bf6276cbe454d93efafb0014cd5fd16078379cfc0291f7645b9d865105e7ee748e10cb819ac0638bc1284031951f2526d1d0639eab3136e05b8941d5694ab31dd3dca051ab2f7661a4d7ddeee200ec237e8a77fef82fb8a739918a74ad72340cbb59ecc9cdae06fe43ee72a6e2c9ec8b1e49b5f1aeb4636647a3e2e12e38fdbb5d37aadc62ca9797526f9f39186ce4ddab925f23471ec6b540335669058bc82756545428fe6648277213b6d0be7696de5c8841f10d069d9e11e4a15d6bdaf1c793cae091bef7119886fd139fe3d56b471cee342e3f5120ec1be1f311a5de627a731125957ab0741cc34b115991360b53063a8d7b5e21a7bc613a8c110cb5ce9abbf1979b4a5c26e0aaf5eb126d0f3d3b6c09441c63eb055ba4a474ba665326c74a67c6295f9d75feeca7970bf74e0345dfcc8a62f4dd1f45ac9051532554c34741ed6ba53867d92f16df468dc376ce6393eabbcc9126045ede5bdfb8e38fb410b26184c28963c0398d39c5228d95f4361da7f67db321deb1ccb549fc0a89fc8a16bb2faf5b3a2a5765910cefcc3c1cf92651e5ebb3c14087dffc30b4201bbeb1ad0271ec81f18b942d49f2f3ac529124b4cec84bf0e7f21d42be7bf7cca786ff420a69952b9cffe401a494ed4f6d07c4a71b34e592f9609c72480031e220f152bcd1c42324fe378f43fe55b90d1e96af0f672896dcd02d708166dd6399206147f0946b170c3eb3692a6037c652691ecdc65a22914e9f8f2b215e65c55bad57f85ddc8584a6091551c4355ff5d51503b845a283cbdc1e4cd8ae7f31b905322a9a9465031d13a1e3e9225db4947b77368fc3dfe72d5fec93d0428c42461539656631a1d04b5c701e987e992ed182a7dbd0f2a085d8ff107717b724bcd2259af54dfbc56f7f99ab3f571fe333bf76c626422f36fec10e1fe01ff2834194f1c74746a2ef61f51a5bb3f31c8f26f0ec8cff3d58b43d3e9e617b3dba66f6f79cb3033d45e6961f1693554502a393b11327a3d2bb39742f868256375b773650029b04d2aa0ac8bbf4fa8456c940d5287c4d02696abcfba6f8b45f0d1712c237972b78559db4df4b0cc06feda0c41b257d202d6d65ed3deac695e3d9a2dec1b9092b95de8188d90ecb00f38f60ca4aa64f2a0ceae5be7ca0f4ffc507cf49619778473ee1cf7c61679bb61cdbd10936beae0409f675f172f71ef648a4f75495655c4471b64edc7138350f9b34eda5fd8408e7acbcb1de220c7de1e2da31013fa098b02913905b459dc520d1dfc1941bcb71c588ab7cceafd85795a36d19438fb1869c407ea819ad975d06545634556ec87af647e81783eba7a4307ee7139a90185950fbd8aef06b97543f6076de83e5fb0bcc3bb27b4235ed31c0faa83bf9ce497d65fdf26a5f4a6a85d86bc041e26639de81d8fc50329857112b4232586787aa0793a1dc74a127678d5eace8d04be640998514fa806b731f9c86121c77dffc7fd522f0ccfad85210eb52a626669cafd04e1eb6ffb3229b06aac5411875fd11e82dfdbce8d7b5b1b4759dea615869e20b4ab4b4ddf82ee5d7d6d4eebe68058e6f0c3fe9ac0f7056b2ef9ef67f51d0e484d0a37cbf19f917ca7523decf30133eb6a80c1dd61d3047e6ae4d902e9b74f082df50d0904b4917d4e04bd83576fdb23ae33bb214767cbc3fad75e34301a618990dd07a572a57046960d168bbcc3711172cdcf34acf0f1ed2f195b41cb1ccc63d47711ed3cb8b39020d4444e42eda5e3ed5dcc12920d18c41645c94303557422e21de2991c0e1f5cb8299160455d7b964e61a8def9a2a9a3609df11e723c8a36b96ab161e3e678b99a5d30507f69350ba8fa67f9070673e7977ef97bdd2d10718fe687e4768b72310a3939d7b00e07fbcf49b39b19d68ca29de33248075805d947e225ef810c897bad5b4277f147a0b75085aded396b37e138b05d7e2249d2fd3ad645385dc83aebddf4597af4e7b65cef7845d6a745eb41a0efb8a20d318066b7a0b74ccc7ad6eb2980355b150bee2d9e65f4715ed590750c2db250e6298cbfa51f442f9d1211389f3779bf8281f3041c2e0ebf5598c659c6e94c273b55a0dcde828c630f02e402e10f4d33d78f9cad8e239967fecf82816a90018cd7ac4845f984b5ab8245c10818d3a815bc00a2c910d7c8d60942719e09c470ef4a95d3655fdff9e28ce1d17853faea6b5cabca645e06c4cf7db529babfceb0b720368bd794b8ff86195ed6b995dfb5c5854ed3bf7a7683d60398a76d4b5b8fadec96fc9860fe89bf941fe284bdd0561e8fa4e22885244fd626a79ca76231a1ac535818d0461fcbd2705e4b2b40235bee38099ea42e0658775f1527deb67a0ee33ab4916d79c5b78b30d17ed12833c8687b7cea3342a6bfa558fc750d4633ec3aed41e3436f94bcd14e99fc3a830f235d85ba03688fc8ffeef4933f5ceba6e8afbcc42a5220c60bec3cb7c072f7bbaef590df43f6cccfb7d84984f04b12c58c0ce3ce294f4c21dc724f37979e7b3424a9f5ecc302d066709d998f53c5a8f70b15b79904d4622ed0fa205427a5ada018dff622cd424f2f99a2b266bb5ef4f14fa2f93fa8007daade47c9ea0273b7b7d57ef738431157f96d13cdc2279d4b5f0248843429b5976c4979622a713ea0720c2d484a4d23745d968b4e1d76c99feb912613dde534d960db32fab963b4dcf21120a2e10636227fe62d13115b2b13874c561500f1ddb63479af451501fcfa8220579ca60da02060208c7f8ba461bbc7d2ce8d8a421179451005115431762ec4a1136612b17eea3291f8b65d9f7bbfd8503548fa626bfb3eeaa1093961f508c084d20b708fe00e016e598530bdab5605198f8b3856a88f18ce4a13bed378afd510d6081ab81b19d62bb2f83ead453e014f939de61846725e52e97002ded93840aaf4b81dedd7695eca27b86ed1702e4f0632dd319aae2bcfd05a8dc479866eb1ee13eaf04d6af3a5da181df417cde82107d6db8a9fb7ed3aa73002495ac5b4665128e35c2f68ef5b2903526105cdaa18b598820306c544ce0fefb1ddf080721614309d8c2dde3ab7e01f09460f5e06ad8b0bec09c127dbcdb29b3dc934886778b901b50278a666b173df88425e374136a82b406efdb28a9f0015baf90d633e3ee3f49f94f7d604384fc733acc5557406a04849aafc33b87d35a6348567cb5039c3382492d4fd59d8c9fa606d18c5de7185b1a58a293cfc68f2ffc33c0f16763d35506f2af6b139c85afe36bf0ce596b6d419cb8fb83b93874af51dbbf6e66b484ba1323ddb33f23a967ef5e0fb8a5a93eea108ef9fed387e92f2b079ac0ff675d44ec56c4eadceb0ef5b2a4852ad96559d9a2adf294d569134f7e688a3f8a858bea788a8431a7270aaa4dae5c53b3d1ae43928f9f5f2cedf2e73f1542c7e60f4cada46b5231dc95ede2ae54c105405e4a59b60eb920238682d6f8361d8bf52a27a32b26b58e64ae259c3a30f0a332180622f7fce4514285ddfa881a94d7c7f6b3c849374c6de00f05a332f4171ff53e3c2f5aa474514001c93037e8ff347914133e67950008d43f18db522a721ca3309a5e78d6575febde0b2e4ab2eaf10d07a52f5744df50e10d02c48ab309dcf010f63ac1e6904aa2973ff22834fcfd10acbf95aa6e099fcdb3bd64b0cef5206e4727072fe37e3e41df494593742845888f42a2f78804ace8f720c2538be8336711be4c03c9adc861c7d25aacf806386d93d2f79bbdc0c83ca4f57066fa5b148c4e69ae006b76d6fa52db46500348c799710c7ad9b2b9b35a0cca3ab563c0e3fc43e37f669c06bc5dd63d640d6f3f8263161f0b66a50976351b56373ea9624035f8d9340cefea9cf841a401d67630e8b1c61fb2493e6c24ac4019af04852d32cc27ade6394f4468e8e607099fbc385c2c904775348e41ac76a8c007e646eca9d084981d590737016f6bd2b19bed825068b249579c5e25de533152fa5c0f806ec28772ac8624ec646d13bd7ec1e7b035d20133bf2cf48f0a884cd2497285a5e7f9eeb8040f786e2b85aeeb5cc0c1718d6d72b7747672e416d6dc403ae84bc0a471c37e9778f2a419ae0a24bb7ef4c58f9f49bde922775bd06f2fc68b342150d14362401655c4fdd208ba4e0f344bad0fd9ac20c03896bb26d299a2b317dbc04a023cb5ab717e39416f170c77362c819af36516067b2ea93b983b998b6e482c327a11500176e56a505430321c2a30b2303dfff61e2a99d23e69b6cab435e6ebaa084d3c9a6c9f96c9dc98c980427eea88f40fbd9c74f152a98da96c89df87bfb5a9bd3618e4684ba17c498397935df66c346271d6e43f0bed901cf26211bd0681bbbd15517c2764f02407967a074b0eebd61b08a0cb63b6b0699f0a40277efa35a5f5def409a1a85eb97f0a45f945cd3b0719c2b899cee4cfddcb67fd2feea2b530d2ee28449e202a759fb05d554d73dd57719068f7ac7360317057c677f381cbbf2c659e56d21698d8b05c197eca2a628944174f3188ec7d491d236f254b38226a537217f36143c05ca240cc295ac37c50ddb0746e5d8d85bbe925d856a616907688178c919fe263a009e3ba689458503f103fedeec819a6d77328e5955047ea4870439ae3c75917b24fb5a16a39cbbd10ef3c4c80b53aa49c67d3df2fe97ad61517fa710626fd5d66b76186634f8ac671d75e0df5e6a1b2bce183a28e807bf420e74f524c560d0d427f3a5be912c8cd1d83d80e1a009ff43f6691f2144a1c51854b52d42af431489fb83f9519d61358f2638993609bcc7b3bfd03ff84cd8edfb397adbc44c71f1c71606dcecf8cbdf2676a49da2d330694fc970c2b63638e674e41941306936d8e3654f9662cc21fa2fae1a1e5495a9fbdbf720426a5ce715640e5d3e05cd05b765e66ee491b2f8f2a87a27f4f087f1ea2e159e9cb017aeca3abf3fbc760f5428c6475e6dc4c8aa615ec678d482357bcb398c31b7aaf4e7901a36867a2d5040da3fb16aff398b1e1cc98d2f4530b0c4bd7885f13764a340c9c140510c17c21ead2deac207b7b65479b00cb352b63d0e8eede685d3c44ee9937f6fceab7086adc99e1eccb7fecb6c1f034f1d1361cab2d57c08651cd86f6c98634950840a63cf6b2d8e17490316c7577f636e18458787f44529ce3eb0aed0380ad7e81d342004b108e0b9b776b18cdf699c6943d12ffa435d2132d269b99e7410f4a3283b3473949dbb8203f7fbfaa2fe58db124a2357cb3045f770db659df6be763ccaee08b3e683a20aa41bed8448003bc61045b26622c079f30a658d1836ed2eca1e92c2e31d7462d00da8998e8adebf1fb78925eb0a2528d09c0f3403fee23a818dac1f061a4caab0c91bc8c73733798227f2e81927b6050f7daaca94613087825a5dd85e099d04b2b33e19eae07a84a1a33f9ad745ec7c93a0b95832f0b6366275695b606d173f22e17eed86bdce930455c0b7c31da3b6e36d33bd3694f42a955d79955bd8ec4fb53c137917959708baa990bdbf2dba32c8bdfb7ec85f87e26b49629bb2bddfa0c5a86cfc85216cf21f79a8e6f2eea2d7c4d3e5f52f6433d33c544811628bfc20920d872e5526bdc371d72277e88068d2fb3283172e9a1bcd2ddc177d273e01258f4ed128c5faf16acf4972b4933dc6f00c991dc6544d5ac7ece4d4ae1c95ca079bb3494eb537f241b4ef744c9b84fc8d61d207f0b525a32caab0ea1afc4e4afa5154f2ea9f03cb3da89794f72a115ba6dfb2a69e4ee89d0377d054c356a9261fcbd27764e705a05c9b16dae5e4dca353779a17aa380e03606ed41cdb5b2805b5fed13c4d0e2964ed8ed41a59b5801a45442d811ef3a66fd236cec99710402edd826cdb5c5d2d95eca639ce0c81ec8537e4aa6fe8d44d480034ea374232686ab6f2223e8d359d415f732ceb9e3521c8d072ef393c46dde4e7ec44c8c6ad8c53228bff82b8beca68f38caaaec13731a0ffa7400338d10e94ad6c38994b4ee7a13b82ce5673b7569cb9268ea2dfe41d4d6f049d62766d998fb5d4ebb6088b94d29c59e0040f8015c044a364429fa2b92a7f3121ee7afcc32dcbaee456de5aa7926d1b4c498456fee87a6af95fe7461f4943a017c5d041241601dcbea598df79e9979639ec7d60e060d70217297f3e8a2ee5e02098a88f434f10d4a5e549128b0095a4ac72b606ca3d71a63d85cb55fc706a9cf1f2d35081c81564b2375380de2631b3f08979176eb06073fed400d461ed2700a23434b912b48abec8e19a0757413a5a6c6f1b4a1545fc5a4365529e8bf2d5fb89ecafbb04799f82486d52f698e40b342c7714ac4917391c7ebbb99d624dc343443f7ec4b7c28a39a02800ae392d5deac6ae44968a0ff476650a42b60811c565f4b2192635da37d6ab7a506777296f6f08cd5fe6592be9a2478e6c3175f1c7e6a6d3f780e7c49844170bd01e0fbd71890167fd57a41a301833891006e7fb178ece14bb03310f0911c94d91688c6223130398a9b2f5b0c3d509b98cbe0bfd92c9354005fa39496028292330b7f58a30c5eddbbfdfbe4fa8427a8e653a102cedf427c6316acdecb5a880a53f9f4eeae6460244f99772b2729fb5c8ba01ec58e24cb414ad152c6c6c4f52a650cb60b3ed6c5c8f12a2b60323bd3956de855fe6f4f32541d82b113cad607e6d0d3e46f7dfebaa6f000e2ca53787980116d61a1b206ae5c74f876d3b1f7e4776bf5fe2281866f49cb7a3120bdd305ffc4d7f16e1d965b11fd3f2326637b9e6b4f2b914ddeba44d24e33af08bc7ab10e80f5a472a332e26ea88b1e8833f22a3f420343523279205bbcab3b1267b39885022e4f1c5be2669d03b0e37732cc3fd8d378c402b000b99fc5841b6db9ca4bab763a7069da99be87f5f567277ea4e62809faf0a369a28816c223e4bd4964c1d5436ff4c849200b84eed50b3b425b32ac6c5c6dce4fa7c6e204851c5ae93e6a48f907d399826bfe660d296f675bbe943ca21d531f81333e4731bd6104cc25c69a91aa76b2ba64a47545fc44e1c1847e16ee93a2549e477e21804b3544346cf0f93ac395c002e67a8d523f6da8d16cbfd905baed0ca7771c2b9510178c77a0b82d232f3160e41a68cd915aeb18ee7da2c1a1827ee31baff41de28507e34f5b2d0e54ac25a4a858eed585acd1c47d7fb5911baa9ad5cfaa528765cfef4071a507156600ebf3fdce86fe337cf6d574cd3ebb39ae373a35c7f28f7823b9c23bcbb2d081ffdb3db85e095917b6ecab1847c1526e99120d4928cbc5bb0c886026b2e1e7258ee750ec38590383ffab3a769cda003f65e80e3935911c3f7df02ce3a867b58348114631ddda210e480080fdcbe0b0045c60b0bf93e1023a2f510382bf5b406614cf1a02c9095a4ef1513b6867fb567a46798863bee73f7b714a8c009e9dc85dd2d3ea5d6829270acfddaa16c67a92aafd564b408674c1d3395cbb84a4a59e7333984ed8696022ffd19b6acc66754476da6b31c93a582bdf2daeb448707427ecea19330bbf673de86b2c28f9393a8c6d640315ce36834a9cb1b1751e570db2352269555aea56b6cd38088e9cd88edbfdaf128a3ac0bd3c05a2d0edc110104decb567fb34339d1a6fd799c4d7bf0e917f2780b633cbd17097a066798ca2f7a94cd33d9a5fefaad46ac6ecebd881804e261d8ed7f6d8270de9c4c34636ffb26e3d63c6ccde5a51ff928ae3ffced8ca79cb358449ac60f2352bb2b3408fe0cce79d61d7de8dfc89da1b03b7edfbf49a50a175b7dcc3c57a1069a7aaf5162d732895c7422eb8787432195345ca1c5cb50cf32b9f2f07e1ed3c8e2d02d1cec894edbd3da94f26e324b008d1d07a10e614864aa0ce05c399cf796de0dfaf1d8ff335f03b6201190a4eb93370163941fbd9b10f3735d1eaff2e47750fbd336fe1b96c6231ec0dbca8da169b5fdbfa47b0cc2c67276245d671be3842e61e5d21708e28cd99ab700675affbe84f5a9318891f85c124067be2dc2a9d43cd7b0f7a03e6861282b93ac1124e77526115b7be605e50d4bfc1da7d3703fbf694cd29450748a4257f1cedbc46b6bb05a3f660af53116befba4acdb7be3ba302570afaef270f94dfdbd98c96d6ae5ec9f6f5a13c2330334c8e44bf7eb49b289b87bbe9127fb9cc462d1f6fcf4eae54b3a979b7b5d3744c92154836309ce1822049d116aeab5a46c1f2bcfd59f005524f65a486a533d237c371ba3e2541e034942b61f171c814bbe96f1def88424b1e00bcb03b37c0a0252640d81b32b8906a5c2afb1c7469bc937e28a6c5fcd37dd42f9b49bce78cb9163d1b1ab7feeb8827dedc5400df811c997baf18b2d5c6e25b49edd665d1746dad67ebcf756bdd83c16119b4cb62a948f00bad49be08b7ccd68eeb36220e1799e0fc70efa3f0b794a4641fe45320a7a55ab5aaebc7e78d9a7672466d8d2fa6ee7b62e18218f37e5ee48a7c6dd6e57a787ced3947f7f5ef919daeec60bc1b2d744961d597586482016f5f4e3cccace381657461008d7d1d2e1c7dff0a963607e5a9bed836608ae5b7a57b95fcc88e2da5fae258ac6bb59d5a9bc489f053da773b38a5cbd3ba016fc1bf33e81105acadcaf1e678d1ac1007d498260750eb8e1fd247b2bcc98255ad420ef5f76ba1dc4203be0a107323c3be5afc329da71f7a037a1bee768ad7d1101dceb7bad32972ff7d4dd67393ea5630b5e5aa4597d8e1bd525e40775d596aa248fea8bd05ce94ddf3c36262d58ffae207b5983538d031f554cdb6417612300fceb12ce2ab32b429eea5d32e5d304d3c6df95104b78bb92391801354fff9ad7957e50e0421644455625e65dacca3598980ed740b3be76c314057435ba13b6f6ba7a761707ce12274877f8efbdc4f4c43270150e0d48ce767f6c151f1b8ca886cf65248d0881267e86a220de1172e42b7f9342f525b45f026deb0e8ce4801c353efb05f2f994788ac0d62330a93f10ac8b01ef6ca53fdf5d5bfdd0c0b12d51601a5a704965874fdd04ce83b422635e9dd3d6beed1162d2764d77e84c8fd854e365ba9819338693891f4c35e1a14ecdf43ffd03273511512aa750d982f24bb14ec3a40d366c529c3fcc23fd13d0d9b25e4c68e361d4ec3fbee0b0cfcbefc21c78e9b662aac01976037fe3c5101bf1d47fda29f00241a547ee9ae8f282bbdfc800a9cf35f1fa1077b3753324629428e4d59eb5d7921b298fd483164e29f83e2cff2a343ce21251e00c06ee8e35d5e9a33b52039d4510498ee9ebf41598e7d8ad4a9391b47a2ef8eda31585913183d84d61dbe077b7fc6b53f17f94c55949ecad249ad44d4ee66b44062c46b6fcd21e351a2e30909531c3d7a311a2534e7002bd60bfef65bdd9aab2504e44a5e742bf5d0259e7c55899871f8caf0c6c5013bc2e07cb187e40813d685343bf5e6f65756f2ad04fed8308771f19ffd1bb99e0703d730658e55f72a1ae5fae144603fd0a5a93ad44a463dfb2c172e45d33ea382bed1abb0bc33f6d7060d13ec6499afa898bd757e6f45d51c097c599b72a8183646d30d9a67a10100da77def849e62fd4e8afa06adfa29c462b3d3295c6a57c69086efab76e9e5e941aa292c0c13bdb2bfc98c930ea40108e141ec9a85e9caf241ca84d839f77d9d3254b4d2437ee3f2f3825d56d268c5c3bf64ea5a1e5af168cd4bf171324f98d8317fa30b638a814a4b6805fd4bac42b51181703447929dd273cf8578ebf0bcccd03c84794db27ba6dbc609cf8b1e2948e00ceffacb879acad08cfd83ad1b9e2275952386de0d2e2ffd2b6750a73bcd139258190aa36efd4e06ee96353f4ed32467ef0845c141727fd7bcee920ab577b141f8a889515163b4ec599476ada4fd6096c6fae2f2876ff52a7085f856b4b2e186517c23c10d4e480d3f8d7eb9748dd3091b3f6d65bfd035fd0a06cee9d5bb06ee8f372e8d3eb94d90bccfd9ea1576691c322e5882e29562845230e032f9b766fba13ae95145aabc5ed56ec637f67fede449611bd5fc593adc655612adfe4c6a2e33408f1d2dacf847f59c5afa0253ec4b6b196301df912e4ee9961b3dca292b8490cbbbd52b0c28a69ffbe9516e1885c77e66ed8b4c58d6085ebe79b5e54223d4f85b10b3b039ce22786adac97b8a48e42d241d064c5e44c9bf0131b3c00997e1f32d01fbb78b0a66f7998a96296d47ae4dacd299fa7e749cc2d886c873b37e841e96c0e4cf12faf3d3f1ec68878a98c41e6239f6c1817885bf6a2830fc2a90ee572076ab72dc7956c83d1c735a3b9445a40f92f0122f7395ebce4fc6b07dbedd718b200f693626bc60993772aa395e2433f313dafa10c337f7bb133afc6fdb6351cfa16a4ece6638d07126d95ae302c3e5ad12c04e9cf4bde642a226087ed842ffb603ac301350aafd1f5f3e00a31cd21fec08956b5435257f1cca510307264acfcc0cb40304d6b0f6a0a62b2fa5f820302cc50acd489ceec90ec4a458c8e25f4cc34bafe6a41f3c13222e2f07897c7520502a961133eb5a08ff5407d3b7e5ce8c4642e052d752036d9970ee1f391571732ba3b255116aa97fc49c0222d3761fe8bb09c9930b30d6f722902292c5dcd16d6d9dd452546370eb85e25068431f11d0eadc0c9fe567d82c05b03cb524fea7792acf2c90e50974c1d81ec7d0e331d32acbf92ce6d4172917ee6e07254d6f75a3225148715e12cdf11254daed0ba2d3a3790eab4ed3c9e3e64374ac54b5fe5401342fea6b9c9e7787f29f7b54b50fb91373e8f4febe4f0f925c095d548b6fca6428849beb598161e0e5095f7f1bbb7cda42954c68d68326143db4ad83b4f8f3f56c641c5af6b03cee67b7a4e70ef54cec31a6767dc22eabb716eb9580e0978d95b2cd2b77e29492dcf785fca7a5792ef87d2712008c50a46b87fe70ae89a0739fa95de70e052c263947256c285526545f64f519af411d393d9011d3cb1d08a3bce5bea0dabc9d8fe8075cd643d2946d8b21445ea58ff66bb9df2a87c205c9be168eb2d775a9dd95ee038c579e7dacff60efb0de287f2f5b3df6867d0088e0de5dbd8275ee38bb4256826c737aea76197972a47431c1e1a0cc6eb52ac01cad8e81aa4df783998b155fbb25035a4b07010875004d077d9699e832bd9d598526ed1da46e087e60bc17805e16cbbae1644b74ae32fc4d3627794d49b5a4594fe77482ec1e0ca150998fde7a9777b5dc6e07b525f3aa0f677fc0901bd3d1161dbd07791c5b8b2d7ab8f31c6c91c6f3cba98d36ac9575ad4ffa4b009f1775512463e57a3499a2c6f4050db45c5cad3a5805acd848ab17f34cd25669fc21f43747bb8e7fc9efcd2681bcae8fc7c39ab3ba4ec9276e18eb0ed695e5fa8f29784bb1a301eda91da51640f447b61f1e487fa21b8305d84c5161f9470e643d2c67fe33f7e327eb6f31ace9efe53bf7f0ec8c447f6e101942db02ec09f8c89b118bfdd3e23e7bf4605620b652730697211bce51979e58a62f7b4e59124b5bab91d608c1f1f384a6fb655329f6c97cb3f93a723da84ec2fc6790cafd91a43b4a0d628ed9ac3b1df74baac79d077558a43f43b7b6a3498f849345db0ff0842629a15bf58c2aa42760712665d824a2e1b7d3d8e28339b2657922e7751e5f91605cedac03b544a1e981fdde183db89d27074427325ff4465f100f56ae202096976d88b0dc44d599ebccc6379d8484a7b0ce244af198fa256725fe9fdf50691d4ee5564b9f9cdaa81d73af43e9ee137b30f576bbf505d7e79c1966262adfc5b8e0330d1076448bd8ee3c12f04b7bd80ca786e36b919fd935cd879447b2d78ea406b7a02127a93dde501ab648e6d252a16b2c01ac0fd8fe1fd9c127006bc83d11089bee58931d641d0f38b0b71692c9527d5003bc4ba24ac7795b44b9406caa992b1ce1f1dc94aa29946e8c2626032da2b8c8dddb386a6dd5e9593cdc1b3fd21c6f732c8b0042324d7c7447440e37da8e891214c4e0354c82573d5408f4eaf1097eccc3b45f59058492eb10bbbe261852ad0773d676acb76643a281810b57d1c18005e6fa54c49a9d8a811a921665ad4c88a60a8095b697992edc195c5bd50cae273e852426dff34762a96830cae85d745b7743671b0761f929a4ad90728325d81a9c6b6e50ef2ff7f8ba6c4f220cc971c7f04606e7746ed708a2c78c2611c8538c58b920b1f2a2c12e2ce54c31a17581092ac92977e3d298d10e8a9fbb3ac338c04ab298e34044b060e34dbd157104ccb7ecdb7de8b2c743d20f77ef9f0a53f3fb4c3cf3e5d187060ab88ac996c955f35c1b149086dfd4fa154eecb64d5e80521faf865d3591989e8eed2ab03f99c917eade3cf47b084d219a52167665aad165e67ea148a8958f6e0168121a08d6af581341d880490dd58b39b236f21cf138a1a4fcdbf028c2006d326e176c82cf467ba07a78e534f67bd6af2a731b1e9f8be000a1be60d3ce48bf66bc964adbe81a5a28c0fb120aaf8e519ff1f6bc7f166475416a517283eb297dd0c27aeab4538348261d52a90a7816c9a6e545660b130bada0ec5b57d61ff7c009c858a32a096ad8e5535bf31fa0ff674b18bdef63b71319b9a5fa15357aade2ce2294287ce3ed3bef0abfec93a36612b4e22c8794a772c697e2a9f02d6443f37644ddc7f8900e1ef64786fca22babe763e9b97993184c3fc5022145544c4bf2ec1cf9d4ed094e2a1b2c8ed831bfa1c3c9b72480d2066086b883265d34fe4fee6d1dc68e49b2be1b4ee23828cb1b80209fb04e004c5100bb92dc3c667591463a587bb5f3e64f6372fa981802b69d6b4abb3cfb4ae69973bf63abc07ec1ff954b5af0bbc7fd4e1745b3dee8b880add9fa8e56303c44b4a663d1934a478860576f02a6e81395fe869e956572034a3606fb52e7708f8a8b3dadf64ea4918f096fb28006dfcc3d6c4354d17cc679ae1eca3865eae0d58652f3bc3d122ec4ed4e2ed78396db04d03bd8e3f73210b8ffee38d557a173b13beb151196d1c09456f4b8184f21fa850bbb31cb456160f3265e5614c2e18632e3f82aabdd10b5fe0d65e442e41dc1ced28b3dcf2a63ce3f77c1c868cb94d7063ebd627852ac1f1ebe6d2e6b93f6e93ad9797e7c5eb1ef709bd4ce93cb3afba4fc5a17e7d309b8d204b7e20c3d7ed9c40acaeee31296586c9e169a1a29f41f3b1c264d09e5720692dd945b15419a3c6f0e3731b177f96ae631e5a248b531790d0cc48600740b70c9ff7ecb4da6f996a8fefb4e6d393fcf7fcca8ef4e743091fb6fc88c24f8f4bb307ebb02e9742a29de26ebe6ca5868d848101a81752589e699b9976493dbbf6eab0f37d174b4cd53b92a87767bc12eb9b95b00d9c080f28ed433f7177f8fb840e665fd1f35929163e2a47fc346a3417d28ac049d3eb89049cfb2446735c457aeb68e533f4681ef0af46cd00a1ec8d39ea69053e92d67d9fd23217d012a4b78e3f120fb03b8dee616eeeb27fd175d52a0eaa8f971e55755aed9f16ee20d9b9c7c6c2b989d0abd14d45dec771ae0c601b2fd99787db6eb3e6f2ee4418f0eef063603df805befc60b91736c5496b5840ab5c55e71798a9c47a8da131c40b213425d2891af350723bb86e0cbdddf0763c720d14cbc429a56981f52466b5f6ab64b4b94944a09f3a6268eb75cdacf5044308991e9fe9d23ec6b9491415aa348c5b402da39faf2d6f101f77cca6d154bec16b79567ca1adcd693ed690a8f97d419b01fd5655ae3e56c641f119ac4f40cef56020332292ddd1849ba401e2ad68594cc105a44a362ba7460000719c269c30bdbd49821ed64677a1abc92940172f42e3ba3d03d09d62ecf99d7f74ea93df9abaa9a62b83ef172ef800e85184d2fdd5380e5f54f1471fa4c6d3c869333a0f132a158ba242173e3d4b073bfe898239c5a7352bfefa60213513bb7d7350a188dd93942e461caa40a1722aae76e77d135436f38f3e302a5936b53c3f3d94910b6e2c4ab2781fe91d05a760bfbfe8d3d6ab00b027425b24a3276df56e63b8093050a45b74c268b18188e41c98a767ecda60fc64446af9a0f3b1abe513e5f52daab9da98cfd4e66ec9703890189e9e5e991953602fa6fc51831d5dd3ecad5a118428848c6a16252f5a522893d467ad43eb56d092676dcb2cfe0d23afb7ba9f060e903ca6ad6d3925f36e86e0673d8308ff9429f260ba7336878227e819583e12628d02b96446ccc281fbf1c67c2e934e72e2063576fc9100c5c73bdcdd541668ecfbecd3ee10e74507af47b6d435168640bea4c6311f3b03e2d2aaf8ee05cc770eae57c4adcf68ff262189ad1d2169784f45e9a835fd8d9ad6208b2966a1fb914defe8e1d7774bc9071f05987e0d0ab49b81acd9aed97d20def968e32d1e16b444f7041bfad54dda345ab65062faa54ac401c3fb20fb0e4c5b76a5c31f098d771da807397f7903807004cdf8a3adcaff3ac3e806c9f9f1c414d582cc1d9f78b222a228f9eadf61593647266b1c4400ae34085bbe2dd14a4e4d9cec604b8a823347fb44e3528c91a1e30e90864cf5966e1458d34c79649f627e877e1f298378abd5e7cea6a077c885e4ce05ae1b1016b09bf7f0850bfec7fa91837c5bd84e7ffb1da5c34f761156a07a9ad30e62dfc2fcd8d48357904f380b292184c8228f6fdbab8da52f8206c0fdbe1e2bcab3831739808aac62da9baec68cb8fc7a650070ede309c6f7331b44f45b401b085e90e5e98c884e4c9cf16a88f529dcec208d311bb99085c3dbce40617067761bc95c4390b6c5657f34e9e45d9de5ca074474e60efc0f772646507400732630bb5d545a4d955efbfe674bc36aa7d19857d648aab7b38c5f3c5e388b35c6b3e69d40ccbb0d801c149fcfac7efc2d3feec65ca0a642e570cf4b2a9be86c0d7dbb9f98299b240b015ecbb6de996c1e2f595ba07a5f4c3ccc1bd31076963f40f39b5a4f16c1ccb17f757c1a7e429955bde41a751d9a09512d898943375e333eea4ff964e7c22aa83a469c910ace1e6ec40c07e8e5c904eef94efdd33edbb2fed81bb9f216fd4a30188661153ef4d448cfd7f1ec3789c850ced028927efbfe1dee7f095a2a144429a673730e5a0e44e1b37f0a208c376ed68a6507ae086b66c72028666467020e6de7f6019b265c30b297a3109bfca247db0d44d3ca675edbe8d95597daf052181ae3c2ec1b56f1b567d01514cdd933ec5c804e44e2d9d222ed473a6cb4625e6c2f892267f01f781c197df73845dff8ea02ba73b49b10830bcfaaacbb9cd630831d2c3bf1a0cb305c9f0617d33c383f9a3a6d104cc757a91672f3b07ac5a58e417cfd84a5f422848a2bf09ad0eb9fd18b5583072a5cbbe1bdb948483275828ccf80cb95268299a2eefaa07d8b14b85c49bba2fb5e6390cce29f314a2740a17687f3e29a0e9b8e295554d6717b8fcec48ca1128f5616ae069b59982cd4301b6ed14c87e0b6782ecf1e02154b2880c0840137e4ac7f2a2498bb45e384f7b6e4e70f751c227399b284ff1beaaff91b22cbec4918bf21324dc760ba47868c47222a60a8d5727238bfc9d5de95d188375723f5f865408c7b9ec9cdef1c34f6a96f50de99e51d2a10ef0048a35a755202e1c60664a0ca78109af1e803ae0ddd43aa2f9eecdbcfbd25f3b7b4de34b21648fd5c47a2eecf6ce105709ebc517e33fd4020bf5648efa8112105fe152ef30a6ef9db767f5eff1f3e2f0b910829fd15e3f9b2c6ef6d789fcb5b736ddec50e3d9800a173ce9c8a8dffd4e90b70bc280cd39fb2858cde8d33d174fd5d6f5207ebbc3a84c315e8018eb78b96b723da6706839c712e339877e3aa59d6fe2460ed04e907a1a081f873f6c24cb81694b9652ba7c245feedc397e8b4708e70e186100fb98076ff8fa9731b3c02455b88d1a9e0161a5015f777dc5c37f4a9a279c000c24fdb420ea1d289f7ddf6223afd9524c897c7d6669ab5be5fbd6a8ebe26a584a1a808c6764546267e22959720354d038c4078841d104a4859660d36d96e0199652d3a8704a1e564b6118b88d8d7da1b3be8bc6b23883778b889d8c79abf35a3d3cd91c971f63c95c4817e673ea9fe7f91217551b2a932daed5727aa11f3f2c2d2be3ab92bb7b1cdb0724542521a659915ce4e2a822e2ab7344519734d21056217802959573b8637c9ec81e767ac44e62457fb0aa60462f576948ddeea0d65344cf1511b7a41e43ca0d03bb24b72dfd4e1ac1203cd9d023a33bb370ba7abf9e7ea16760f4327200df17c7137ed14dfed965a62c21fd480047a0e9a44001ca8443e69bcefed0401419a8f8e9f381440b4980ec5452ef4698f96c474caf899dabaa2a5c77124d62dfdda37fa2d7f47c5e274c459f21bfe2b1720c14c534a316706e5d6fe85ce6fef516876bb591d983ddc2e779f7225dc6d2638b3ceaabb6c85d7a7e666ca0393ac01491094774f7ea9b126026fabdf40ff23cb495ac7ca24c1cc3b6d481502ea0c371f651123c6c9a5791fd97bc68fda4f21254cb542dd6cb64e73e92855cd4190b7a637f1e8dcaa0d470ad0ea105949aec1366279033230763aa4cc58728fc39e205994074f87b5a8a914ffa8754c824ec2e448543b238eb7d93f46e5e50051e89508fc3ed24d5a63279b46323852dc3c7b164316695bc859360296f18dfc8181f13b752122ad0797ff392e91f583cd4ace0379c5acaf61dbbbe4908371fbf5817d68dcd95d3b31a819d383a106382f3a868d9bbf794fad3bad0f365ef061bdafa431d45979d57579529a359bcf2461c86b9144eea662ff33ef2da5ea26511c16bb4955e24160381f00edab6c3a14e793053c07a0024e60dfdb6979ea5b0e20339558353f3dffba28a2525b83b3045e56c0260a6442d2e1800de8e37a871c4445460cadb3362a3ca23382fd8996b3fe4335bc6e558e1835eddddabb8add35c5050635e7052fb42c5fa23798ddf858b201535432a2d2d002fdf438af314592cb19454f05bab76b2ebb4121b75cc30295da4e100e7019594e244fbc33ac788e99c1e7937ead736eaa63420ef126ebc68259d5eda5c6c06f0c0bfc13405134b6aabe1e5e710d42ce51109a890c11f073da745dda61492b4b5a0b939c0e356b5a139f11361e26dbc736eb163c59de3686ea320d7ad59438f38f4c09a70ad9b90118696f2c7389572f552d79a0f4e7eeab6d7cdfffbbd14cb3038d86f5354206db99d1f85259e2236b8d5f70b9dd7a6725e2fdca29f5b02f7b711150c47c61c8eacc800e545b8fa6b4b7eb0cf51b873a4f637203cf4fe7779925dfa8d2a4d05d4c02c5b1feac72aad9bf0b8b4f572a23246d88167e16009ba2409835d274e319bf08a5318e80395d5eac820c361448ac9824eeb669fad6e8696f9db7613ee31861c8dd804d1405d4bb00e28a48ddd5ea29f8df859e8356f4ba5ad7357b9fcaa25ac1e5832c2dbead7b9e234a7e88dad9e75349a49e8d1dad957b1e85adf43b0b8799927743feb20ca11627493a1d1fbbc24f9d766915f0846a3e22df5dda017251917c2aafa86c9c10b2c2a27f25ab2a73cc49f6f9efe391107f30ca19a917a293d729a59bb7445334435316e96a53d3a4cda940c0bf97aacbf10df8df85e8de10392105f1a25d0215e13a199cff02712224795fdd9d4d0eedbede4af54022aa34dad939350947bb77a29a189f694b8432388fd6f6048e8a48da4d1826178dae967254e949a2a597554dacdf84ce20bcd92d5a5b8a4577c53446cac78c573925264050ab7238faac17e03d68f94893a26f2f2f7f23180bf44912aa03e0aa848358b5f4488327b7a518b6fc1572b08ede011017c958bf9bac26de2f0287663764ff16a48490c57a41542f6639ecee38796a0b04906ee8a2ecf4b734d7319d1ed5539dfa1f3f0cc7b964ce7d9b535037e42eb57d3c8a8a9ce3ca2b6bc7eba65e833a4a7d28f4ed20caca33887e350f1780a7e66021e26afc8b484e76481184fe24f3c569698f19ed88cdf377ae608c6e98849376abd759ddf89a31e45e872e915764c1145dc22b31536746d7ced3e232badf03cf4b23d3fd289eb625ac8e996161427d708580a8eabb817aa4aa46494c52df597e21e7030a9ca29c38c8767c8eb9ac0b5d423f85b1166d42e0617400dd4d29cb4f9fb3fe7c238e1a2ec81f5b8a7723bca3e9e8433c70a33d72e69adac95bb462cda75c6672e8046a1a29b279a3a1cf003aae027ccbacf2b296f356b358be469b7fa36bccba2dc974c2ffaaa4a4aadc3577d2b47a8479c48e2da2e1978d8e98b37639e1e009480a051f2e089c4be6b2557aeaad5be688fabca46596c0a2e76c85439ee7f7aedd05478e0e990ddfee271acfcca370d3df547330611a7514e541a25a8fd287cb5535e1679d9650a659e46867ff7b064db35bdd09fc81a526564b86e9fdc36fa18c24e960f1fcdec773b80f3d2587ff011e65c223d6a90abbe2b228f40c6200b28b178ec74cab21cd7bbf3d923ba4c7b1905a29f229fefe68a40e6ccddc05453ea0efd9219a5e548ec06ab559ccc9a5f3320e344ffd2e2c84f01dd02a0179cb2d4f1834902cc6e46871da91a651d9495f6831f0fa040e8659fba72a840ec65ab7866fd6f7afc22c7ab4f635dade5ba704627c3cc36c4cd23c1b3c4ab41d309e2863def89c4df1d7ca17ca87dbfd36701731aa577d8204c20cae993aa5ca893bd92d21f7ea6fdcd2ff67a5f5c7d638c3d01617467e69220406e0cbd65f54ce204c7010fe8b31c1004cedfe56f62de43bf297db22302e6c5fde7e1c29b5ee43fdbb99ab5274a9f890fb81bd2105f47ccb4750fc1a820e48febd60f9dc3d62f24700b3e3c50128e713e7592d3bb12806a3749063ff66ce3dfd35652b59dc2a58dbfeb6f2d2af72eceea9c4d42236a7012bd1a5624fe78c39e5b8c7584a11a0c449a24f41ea446171e7ca6974b535d12298e561e38c0169f95db6d982fb3286909fbe5727def68de5e00a0ec91040c1dd8fa5e9c7c34f7a47d1b331e8f2c4d9857ba657a2320c3fca69a59a41701f4dce1e2448eb87accfe6c2f138e4a1e7c680549991d96ad581e155e01c7507c78bf289185709fb2e418eae3d838a6226e7d51014adcce27e0cf608961ecc718ceed668923820437fac106989f214cfd510f3b7d124b1c13dedabf884f23cc34752751edd161e534a70459f47519afb1860bba78d2b60da73a9787d29378835dc082ef1bbe8fe9f84411a02a5c59aae3e584c111117b3cc00b06fb3f0bb1ecf9ddbd9fa3216b3e429c6dccf411f385e55cd0a5b4f469627ed38535404028044ffa23aa8e80e99a3e88fa1ffafbd21612d1c8d94e03db23ec10960a1efaae4bd38dcffb213c89df428c01661d9a8afa7141a4898ab9e4253fb01b74350187271f60399359b351c5f8604bfa72538856a56b669ae016577c6dfa1ed3f98388cb08f07e4c35caafe615f51bafd5b2719d7142700663e4de44c4752a485ee82e37ef80b6cd685012c31a95a9554d51235ec988d3bf95ee7f4514a79a769c69163b763c27357a0b40bbca746852c6bbb55770a43c920dfb996115bfcd96eb2d6ade1e52f58b69624630c6b08005072e4eb895efb4739b07b52033b4441cc09e7c1c9345e112adb5f431d17f1972ae49bd000bae015889316f92f8babe67f51e0348603f80c3a8794e8a241c29310b523e0f8000405a97453f6da63a4305a6c6394c7841be42e58d8905e69c5279df71e3537b4fa49430a282f519e6462c74e66e9a84c9517f9054f9337842df7cd101acb73da89daa1b4d17a3b463aeac289428cc4d37df838f40474c1c8630147fbf282aea0728ef38df8d6d99e07ec6789b18883fc6547592c49734ab55a93eaa7aa56802fbbc932834cb9fb4cccd81760780ff1a42c05feacf24954d62602cb0317dad27356753352a2d70561cceac35eedbd302226e79282b94152081b4436ef7eb57f58e0ff0773f1143b9d286b73b17a5db7f3b8f60ef1851f85860f6111a73eb4af11c907ca92e3bb221682c5dbfe2bd0bbfd4c1d989e97df038686fc7162a063ce007c706679bd05daef7b4a467879632e4d1bd7a8e5de98dcc19bee8618146fec92374e520e12c80fa4487aae4f3a63651b92503e857b512782fef9a67ac6f09201a190f13e8ab0cf9d7ceb5274a2112d64429ce0799417b8538ec708f5acde88da9b53a62c8ca16b229c79e97f745dcd7149cefd78fe8d2b87d74a94bb6d1b043c45f4e3f250a1855ffc959f6b853ed21c0bd3e95345059ad71e72d6013473690e93187e1794f95459bebd68fc5b180f7e23430b50a9887b05ba496938743d6a5d4534ab7e007f3c7a0041ba22c45fe65e7f3e9b64d6d3e97f65ed38497a1471b630fd8a6353a6d066e58cbd8a1597b3ce3fa0f033f616f22945453d0e4587e1208bdcb43f8326c224a1ae876772edcf0ac5a19936c97212670aa771c337a9e29455d4389aab0c7e0a917763eef691d50b50f6d37ef567cf79b7f2298b9460433e6e0c2ebe1654c31b062bbecf43d020e49bf202c5df6d24a7660957305a08c494594a6ad0f4c19f0a05f0880294319a53c393f53aa5b7bd9ec8663eee9be958ac902d88cdf7996406321f40660b8fe16d2ba84f32312d48196e2d1eaaf2eeea4183702b5b46cf612dfa89d66a90b3ef4ba34166d08ce2c42845fe6268ab62767815d262e0074b39d10e6261c7d1be9fa77c30b3228dc5b92a9cb3a88594247c89f757d5da15e4186a8222c74ae5c2ffdb040a8f0a034f64aa76284f901fa2ec2bfc70ae1c980333a9a1da2d4a3eedd437047e5313b54c5e16ffdc6e4ff511d4fd85d4af6f72547b5ef3e16eb92fe3ae110c06ecf40d29b8fb8bb2d157d29d81b503ee2c944763ee936b90f5be0d35ed77fcf972389615442102cbe40bae43f0c7ec82c69343a07104165805a510db9719eff4eedb39e932051ba7487eafbdfc8a43bdb99479f3da0bb0a929ecc68dc0aae1aa32ce74fcb3f56e93dbfc1edb308f4bdead719d1b069e891607415d7c512433476047a415ab1dfec9c4e7b9de6011cca21a64b1c3074078421d151f8b4d202b0fb86a8c4a726e2851816d05ba8b2c8ef69af31ba8c4d62bed2b8da61152c8d98d12805adb685cd4194198371fc5bc4a13cfd772d9fdac9040a5486a8619e04cddde3c91e0148231821702d0850c79b7c8ae6d335adf8ef6d4fa67d42900e52a680de3409558c10d24a4b9b10b396273698a8781fc635721a6a87dad6179cedf0c18c3b69ffd775bc233d95b97d20c593d09cb5a6eee99fd60759b5ea7c9e718c28b8bb70878a503612277c8903954c453fcc086e60738ba30be6a3eb8da3ce493d421499e6f864b78d774bc6170dd36fa88139224bfdd61ca4665c3e17c966071db13ddac8bb7565a7f9373773c71602abd1cea9c611cd622ff10e2089cab3e52c4d160949b24c904ec4947a5826fbda85b0b8c62b59af37d713cd91fd82701e9996a7462b22733536aae1a862627f0e8b777f5d8b4dfa2afad31bd3411db2b8922dd514371a16c83c7399809028803c5dbf8c6aa457b4ec75d4ed1258190df95a629f888535536f55bdbe803b08b0f09fcc38c86a662ef93b78c760265fd7c87070242cbd1d6d74d245cafd62694f18b9c159ae5b72122c420de10a53e5b6933e1fdec8454456231f035c81479b9163711762e89f3925f9342eb2d123b243e2d524a184dcf69005e74ae76e447aa5cce93e3530021c2c0f2967392d5349c9debb32fbfec4a0e6d3e289b1a917cb2b2f50233f70acb8d6b974e26959aad05f0c5ae310fe1d858bbb7e0d4e99aa631cb7bb2e1a014b9471ea1c71792ed142b82afae5ed13be926218ebecd611a268045402a68959dbce7a741cbfe50d4312c8fef87d70124036ff993c7c2c3f6b9b953b60f68f7f8ee9ac7c944de99a827aaf6fa6806d6afbfd9c1aea46ce7dd6d846ca2a12a0cddb63f0be934628c32117045a3ff4882366923377ee21736f5dc6058d524f4b0a8739477dedf25ca5e359ed8f2644ddc8f2217a3dd92f18acdc86de2ef7b7a30e8550ba49439dc92fd6c15f6f3d97b11918b4fef7b74179e865a1121d8dfb513e513505f0e4aa70c7b85af93d36373ad061b011bc2b86c8914b9975a3c94d710078545785e2cd88f5f57e09bcbfd0011a6cde259c46bb45f26ced12d778a1f266b310d8624f5ad5cc46a4febcc255b791b09f8e3467691a0535c96ef636461c9f2a95e60e8ff8391579100c1dbb5211f53f1a01a6123b6275a4c55b7d1f58792235167e14ba7912366ff959c5e73eff4b140db839f2eebb2bb1159af5061e6633f38328581f154b633ddb1ed3a4e3ef2c09037f7f134179bc19332de57c54905f859bb5433ed63159daa698a8b159dd3b3105427a31e9f90b3cc2d2c010f502d79ba37ec6150070aeccefdce79ac57806106c0191a4b39dd730f9e4e81320d0201b3c743c2d189002e4723871a12125150bb205e4887baef882bd266cf99ba405cfee3289f34c09685a975063d4abaf1245613b68bd3e7b0573f57df53a2e52922a2a2bb7e2a718c58099e55df0741f30873949b70c98b5ce7aec4b01542482d2a400bc66f3d81cb544f42225b38b1516b11e94adac412295c7115df74d088906b0c0055b80dc6e7a7132e6db4db4fe8c6a8c809188511e5b188070051aef8fd7a11d305a1be1b44170334e390b0fd9a97873ee71cc55dc053053d3b1e4b5d23a4de2b5593450f534c1961843467280c5cd8bc1a38616780e4ba581dfc0bc895fe0f281be5dc60ffb425c142a21a9df18ee705109cbcf5241c2ff85c3e9da4208dcbd583f23fdaadf9324cdd83f0934700a0c9909ede81f0cf0b6054533fcf908384939d28c8d20392be7d3987827a88243b18f7bf98317e5d8263f14cfaf189fb9842908e4a912e02af3f1af796fada95efdc3f81e49a474f4795d11663337e913a46a79128507df86397d75edbc4e752527068b6e8d418f72d74e668f07a5a5ca5c26946c00baa7c52b4d86a3608e7db1475a44b45030cb347d61cf112723c78779233e1cb1beee78ee15db3a645e34ad31dbc6a7fdf4bf68c91944784560f3801fd4b0bdf2d80532695aef9a4142932d8f383def77ec02aeba3d920ccb9ec0c69aa7fdd83c900ac96bd13c4b82c801791c24832a84d3be0b79a5ae97a0cf882fe6cb13c8ef2dc03bf9fa92f84f692a6bbbf7589c472b432b8cb91677898d1492f2a62498a76082a76d29d78dd3431c9bd0b91d92d1c73ffd7dbfebcb0970799ac528aa5b5697fd988e86a9747d11c52163e70d79036a74a29583c0616925853249d8a2ffe1a08bab726d18466b11affa9607</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Perception</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/Perception/</url>
    <content><![CDATA[<p>launch 目录的 <code>sensor_manager.launch.xml</code> 文件会加载该配置参数。需修改 <code>xxx_moveit_sensor_manager.launch.xml</code>，添加：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find xxx_moveit_config)/config/sensors.yaml&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>还需要配置 Octomap，在 <code>sensor_manager.launch</code> 中添加以下代码行:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;octomap_frame&quot;</span> <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;odom_combined&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;octomap_resolution&quot;</span> <span class="attr">type</span>=<span class="string">&quot;double&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.05&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;max_range&quot;</span> <span class="attr">type</span>=<span class="string">&quot;double&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5.0&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>



<h1 id="Obstacle-Avoidance"><a href="#Obstacle-Avoidance" class="headerlink" title="Obstacle Avoidance"></a><strong>Obstacle Avoidance</strong></h1><p>参考 moveit_tutorials 中的 <code>obstacle_avoidance_demo.launch</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/launch/demo.launch&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Play the rosbag that contains the pointcloud data --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;moveit_tutorials&quot;</span> <span class="attr">type</span>=<span class="string">&quot;bag_publisher_maintain_time&quot;</span> <span class="attr">name</span>=<span class="string">&quot;point_clouds&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- If needed, broadcast static tf for robot root --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;tf2_ros&quot;</span> <span class="attr">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> <span class="attr">name</span>=<span class="string">&quot;to_panda&quot;</span> <span class="attr">args</span>=<span class="string">&quot;0 0 0 0 0 0  world panda_link0&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;tf2_ros&quot;</span> <span class="attr">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> <span class="attr">name</span>=<span class="string">&quot;to_camera&quot;</span> <span class="attr">args</span>=<span class="string">&quot;0.115 0.427 0.570 0 0.2 1.92 camera_rgb_optical_frame world&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="检测并添加目标作为-Collision-目标"><a href="#检测并添加目标作为-Collision-目标" class="headerlink" title="检测并添加目标作为 Collision 目标"></a><strong>检测并添加目标作为 Collision 目标</strong></h2><p>演示从点云中提取圆柱体、计算相关值并将其作为碰撞对象添加到规划场景中的示例。</p>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/Perception/image-20240917194220440.png" class="" title="image-20240917194220440">

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch moveit_tutorials detect_and_add_cylinder_collision_object_demo.launch</span></span><br></pre></td></tr></table></figure>

<p><code>detect_and_add_cylinder_collision_object_demo.launch</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find moveit_tutorials)/doc/perception_pipeline/launch/obstacle_avoidance_demo.launch&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Run the detection and adding cylinder node --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;moveit_tutorials&quot;</span> <span class="attr">type</span>=<span class="string">&quot;cylinder_segment&quot;</span> <span class="attr">name</span>=<span class="string">&quot;point_cloud_preprocessor&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Subframes</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/Subframes/</url>
    <content><![CDATA[<p>Subframes 是在 CollisionObjects 上定义的帧。可以用来定义放置在场景中的物体上的兴趣点，比如瓶子的开口、螺丝刀的尖端或螺钉的头部。它们可以用于计划和编写机器人指令，如“拿起瓶子，然后移动水龙头壶嘴下的开口”，或“拿起螺丝刀，然后把它放在螺钉头部上方”。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Time Parameterization</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/Time%20Parameterization/</url>
    <content><![CDATA[<p>MoveIt! 目前主要是一个 <strong>kinematic motion planning</strong></p>
<p> <strong>framework</strong> - 规划关节或末端执行器的位置，而不是速度或加速度。然而，MoveIt! 会<strong>利用后处理来时间参数化运动轨迹的速度和加速度值</strong>。</p>
<h1 id="Speed-Control"><a href="#Speed-Control" class="headerlink" title="Speed Control"></a><strong>Speed Control</strong></h1><h2 id="From-File"><a href="#From-File" class="headerlink" title="From File"></a><strong>From File</strong></h2><p>默认情况下，MoveIt! 将关节轨迹的速度和加速度设置为机器人的 URDF 或 joint_limits.yaml 中允许的默认值。</p>
<p>joint_limits.yaml 由 setup assistant 生成，最初是 URDF 中值的副本。如果需要特殊约束，用户可以将这些值修改为小于原始 URDF 值。特定的关节属性可以通过 <em>max_position</em>、<em>min_position</em>、<em>max_velocity</em>、<em>max_acceleration</em> 来改变。关节限制可以通过 <em>has_velocity_limits</em>、<em>has_acceleration_limits</em> 键来打开或关闭。</p>
<h2 id="运行时"><a href="#运行时" class="headerlink" title="运行时"></a><strong>运行时</strong></h2><p>运动轨迹的速度也可以在运行时修改。要在每个运动规划的基础上改变速度，可以设置两个缩放因子，如 MotionPlanRequest.msg 中所述。在 MoveIt MotionPlanning RViz 插件中也可以使用 spinbox 来设置这两个因子</p>
<ul>
<li><strong>max_velocity_scaling_factor</strong>：</li>
<li><strong>max_acceleration_scaling_factor</strong>：</li>
</ul>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/Time%20Parameterization/image-20240917194940845.png" class="" title="image-20240917194940845">



<h1 id="Time-Parameterization-Algorithms"><a href="#Time-Parameterization-Algorithms" class="headerlink" title="Time Parameterization Algorithms"></a><strong>Time Parameterization Algorithms</strong></h1><p>MoveIt 支持多种运动学轨迹后处理算法，以添加时间戳和速度&#x2F;加速度值。目前在 MoveIt 中有三个默认可用的选项:</p>
<ul>
<li><a href="https://github.com/ros-planning/moveit/blob/melodic-devel/moveit_core/trajectory_processing/src/iterative_time_parameterization.cpp"><strong>Iterative Parabolic Time Parameterization</strong></a>：即 iptp，调用 <strong>AddTimeParameterization</strong></li>
<li><a href="https://github.com/ros-planning/moveit/blob/melodic-devel/moveit_core/trajectory_processing/src/iterative_spline_parameterization.cpp"><strong>Iterative Spline Parameterization</strong></a>：即 isp，调用 <strong>AddIterativeSplineParameterization</strong></li>
<li><a href="https://github.com/ros-planning/moveit/blob/melodic-devel/moveit_core/trajectory_processing/src/time_optimal_trajectory_generation.cpp"><strong>Time-optimal Trajectory Generation</strong></a>：即 totg，调用 <strong>AddTimeOptimalParameterization</strong>。注意，需 melodic 及以上版本</li>
</ul>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/Time%20Parameterization/image-20240917195006177.png" class="" title="image-20240917195006177">



<h2 id="Iterative-Parabolic-Time-Parameterization"><a href="#Iterative-Parabolic-Time-Parameterization" class="headerlink" title="Iterative Parabolic Time Parameterization"></a><strong>Iterative Parabolic Time Parameterization</strong></h2><p>IPTP - 迭代抛物线时间参数化算法默认在 motion planning pipeline 中作为 planning request adapter 使用。尽管 MoveIt 使用的迭代抛物线时间参数化算法多年来已经被数百个机器人使用，但它存在已知的 bug。</p>
<p>使用 <strong>五次样条曲线</strong> 插补。</p>
<ul>
<li>moveit 默认使用规划器，可以实现速度和加速度平滑，但无法避免加速度的抖动，详细参考 <a href="https://github.com/ros-planning/moveit/issues/160">Improve time parameterization</a>。</li>
<li>该规划器<strong>等间距</strong>插补，平滑速度和加速度，适合用在低速精确轨迹控制下。</li>
</ul>
<h2 id="Iterative-Spline-Parameterization"><a href="#Iterative-Spline-Parameterization" class="headerlink" title="Iterative Spline Parameterization"></a><strong>Iterative Spline Parameterization</strong></h2><p>迭代样条参数化算法与 <a href="https://github.com/ros-planning/moveit/pull/382">pr382</a> 合并为解决这些问题的。虽然初步的实验很有希望，但在完全替代迭代抛物时间参数化算法之前，正在等待来自社区的更多反馈。</p>
<p><strong>三次样条曲线</strong>。</p>
<p>原理参考 <a href="https://github.com/ros-planning/moveit/pull/382">Improved IPTP by fitting a cubic spline</a></p>
<h2 id="Time-optimal-Trajectory-Generation"><a href="#Time-optimal-Trajectory-Generation" class="headerlink" title="Time-optimal Trajectory Generation"></a><strong>Time-optimal Trajectory Generation</strong></h2><p>在 <a href="https://github.com/ros-planning/moveit/pull/809">pr#809</a> 和 <a href="https://github.com/ros-planning/moveit/pull/1365">pr#1365</a> 中引入的时间最优轨迹生成算法可以产生非常平滑和连续的速度 profiles 轨迹。该方法是在原始轨迹上拟合路径段，然后从优化后的路径上采样新的路径点。这与严格的时间参数化方法不同，因为生成的路点可能在一定的误差范围内偏离原始轨迹。因此，<strong>在使用此方法时，可能需要额外的碰撞检查</strong>。</p>
<p>算法原理参考 <a href="http://www.golems.org/projects/traj.html">Time-Optimal Path Following (July 2012)</a></p>
<ul>
<li>该规划器输出轨迹为<strong>等时间间距</strong>（其余为等距）</li>
<li>该规划器在小间距下规划的速度和加速度较其余两种优化算法更加合理与平滑，<strong>在较大间距下三种规划算法效果差距不大</strong>，良好的规划间距会因机械臂参数的不同而有所不同</li>
<li><strong>在过小间距下(0.001s)插补，会出现运动规划不恒定</strong>，规划速度不平滑的现象，经测试在0.005s（不同机械臂不一致，同时需要根据控制器输出频率等确定）的规划间距下可以有较为稳定和理想的规划效果。</li>
</ul>
<p>切换到 TOTG 方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">default_planner_request_adapters/AddTimeParameterization</span><br><span class="line"># 替换为</span><br><span class="line">default_planner_request_adapters/AddTimeOptimalParameterization.</span><br></pre></td></tr></table></figure>



<p>planning_request_adapter_plugins&#x2F;src&#x2F;add_time_parameterization.cpp</p>
<p>C++ 解决方案参考：</p>
<ul>
<li><a href="https://groups.google.com/forum/#!topic/moveit-users/x5FwalM5ruk">https://groups.google.com/forum/#!topic/moveit-users/x5FwalM5ruk</a></li>
<li><a href="https://groups.google.com/forum/#!topic/moveit-users/MOoFxy2exT4">https://groups.google.com/forum/#!topic/moveit-users/MOoFxy2exT4</a></li>
</ul>
<p>moveit_commander 解决方案：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">self</span>.robot= moveit_commander.RobotCommander()</span><br><span class="line"><span class="variable language_">self</span>.arm= <span class="variable language_">self</span>.robot.right_arm</span><br><span class="line">...</span><br><span class="line"><span class="variable language_">self</span>.arm.compute_cartesian_path(waypoints, <span class="number">0.01</span>, <span class="number">0.0</span>, <span class="literal">True</span>)</span><br><span class="line">plan= <span class="variable language_">self</span>.arm.retime_trajectory(<span class="variable language_">self</span>.robot.get_current_state(), plan, <span class="number">1.0</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>URDF及SRDF</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/URDF%E5%8F%8ASRDF/</url>
    <content><![CDATA[<h1 id="URDF"><a href="#URDF" class="headerlink" title="URDF"></a><strong>URDF</strong></h1><p>MoveIt 以 URDF(通用机器人描述格式)开始，这是 ROS 中描述机器人的原生格式。</p>
<p>介绍确保生成的 URDF 可以与 MoveIt 一起使用的技巧。</p>
<h2 id="Joint-名中的特殊字符"><a href="#Joint-名中的特殊字符" class="headerlink" title="Joint 名中的特殊字符"></a><strong>Joint 名中的特殊字符</strong></h2><p>Joint 名不能包含以下特殊字符: -，[，]，(，)，</p>
<h2 id="Safety-Limits"><a href="#Safety-Limits" class="headerlink" title="Safety Limits"></a><strong>Safety Limits</strong></h2><p>除了机器人的关节限制外，一些 urdf 还设置了安全限制。下面是一个为 Panda head pan 关节指定的安全控制器的例子:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">safety_controller</span> <span class="attr">k_position</span>=<span class="string">&quot;100&quot;</span> <span class="attr">k_velocity</span>=<span class="string">&quot;1.5&quot;</span>     <span class="attr">soft_lower_limit</span>=<span class="string">&quot;-2.857&quot;</span> <span class="attr">soft_upper_limit</span>=<span class="string">&quot;2.857&quot;</span>/&gt;</span>  </span><br></pre></td></tr></table></figure>

<p> soft_lower_limit 字段和 soft_upper_limit 字段指定该关节的关节位置限制。MoveIt 将把这些限制与 URDF 中指定的关节的硬限制进行比较，并选择更保守的限制。</p>
<p>注意：如果将 soft_lower_limit 和 soft_upper_limit 设置为 0.0，可能导致关节无法运动。</p>
<h2 id="碰撞检查"><a href="#碰撞检查" class="headerlink" title="碰撞检查"></a><strong>碰撞检查</strong></h2><p>MoveIt 使用 URDF 中指定的 mesh 进行碰撞检查。URDF 允许指定两组 mesh 分别用于可视化和碰撞检查。一般来说，<strong>可视化 mesh 可以很详细，但是 collision mesh 应该不那么详细</strong>。Mesh 中三角形的数量会影响机器人连接碰撞检查所需的时间。整个机器人的三角形数量应该在几千的数量级。</p>
<h1 id="SRDF-概述"><a href="#SRDF-概述" class="headerlink" title="SRDF 概述"></a><strong>SRDF 概述</strong></h1><p>Semantic Robot Description Format，描述机器人的语义信息。</p>
<p>这种格式的目的是表示 URDF 文件中没有的关于机器人的信息，但它对各种应用程序都很有用。其目的是包含具有语义方面的信息。</p>
<p><strong>SRDF 补充了 URDF</strong>，并指定了：</p>
<ul>
<li>joint groups</li>
<li>default robot configurations</li>
<li>additional collision checking information</li>
<li>additional transforms</li>
</ul>
<p>推荐使用 MoveIt! Setup Assistant 生成 SRDF 文件。</p>
<h2 id="Virtual-Joints"><a href="#Virtual-Joints" class="headerlink" title="Virtual Joints"></a><strong>Virtual Joints</strong></h2><p>URDF 中定义机器人上真实存在的关节信息，SRDF 中则可通过  添加虚拟关节。该功能常用语将机器人的 root joint 与 world 坐标系相关联。</p>
<h2 id="Passive-Joints"><a href="#Passive-Joints" class="headerlink" title="Passive Joints"></a><strong>Passive Joints</strong></h2><p>即：被动关节。指不受直接控制的关节。例如：差动机器人的从动轮。它们在 SRDF 中单独指定，以确保运动规划或 control pipelines 中的不同组件知道无法直接控制此关节。</p>
<h2 id="Groups"><a href="#Groups" class="headerlink" title="Groups"></a><strong>Groups</strong></h2><p>MoveIt! 的核心概念，MoveIt! 始终作用于特定 group。MoveIt! 中所有运动都是基于特定的 group 进行规划，每次规划只会控制该规划组包含的关节，而保持其余的关节不变。Group 是关节和 link 的集合。可以通过以下方式定义 group：</p>
<ul>
<li><p><strong>Collection of joints</strong>：通过一组 joints 来定义一个 group。每个 joint 的所有 <strong>child link</strong> 都自动包含在组中</p>
</li>
<li><p><strong>Collection of links</strong>：通过一组 links 来定义一个 group。所有 link 的 <strong>parent joint</strong> 都会被自动添加到 group 中</p>
</li>
<li><p><strong>Serial Chain</strong>：通过串联 link 来定义一个 group，用 base link 和 tip link 来指定 serial chain</p>
</li>
<li><ul>
<li>base link 是该 chain 中的第一个 joint 的 parent link</li>
<li>tip link 是该 chain 中最后一个 joint 的 child link</li>
</ul>
</li>
<li><p><strong>Collection of Sub-Groups</strong>：一个 group 也可以是多个其它 group 的集合。如：定义左臂规划组 left_arm、右臂规划组 right_arm，并在 arms 组中包含这两个 group，实现同时控制左右臂</p>
</li>
</ul>
<h2 id="End-Effectors"><a href="#End-Effectors" class="headerlink" title="End-Effectors"></a><strong>End-Effectors</strong></h2><p>末端执行器是一种特殊的 group，区分与一般的 group。</p>
<p><strong>定义末端执行器规划组时，要保证和与之关联的规划组没有共有的 link</strong>。</p>
<h2 id="Self-Collisions"><a href="#Self-Collisions" class="headerlink" title="Self-Collisions"></a><strong>Self-Collisions</strong></h2><p>默认自碰撞矩阵生成器（Setup Assistant 的一部分）搜索机器人上可以安全地从碰撞检查中禁用的 links 对，从而减少运动规划处理时间。当这些links 对处于以下状态时将被禁用：</p>
<ul>
<li><strong>Always</strong> in collision：始终处于碰撞中</li>
<li><strong>Never</strong> in collision：从不碰撞</li>
<li>in collision in the robot’s <strong>Default</strong> position</li>
<li><strong>Adjacent</strong> links：相邻 links</li>
</ul>
<p>MoveIt! Setup Assistant 中可以通过 Default Self-Collision Matrix Generator 来检测机器人的自碰撞。</p>
<p>采样密度指定了多少个随机的机器人位置来检查自碰撞。较高的密度需要更多的计算时间，而较低的密度有更大的可能性禁用不应该禁用的对。默认值是10000 个冲突检查。冲突检查是并行进行的，以减少处理时间。</p>
<h2 id="Robot-Poses"><a href="#Robot-Poses" class="headerlink" title="Robot Poses"></a><strong>Robot Poses</strong></h2><p>SRDF 中还可以存储机器人的固定位姿，并指定 id，方便程序中调用。例如：SRDF 的一个典型示例是定义机械手的 HOME 位置。</p>
<h1 id="SRDF-语法"><a href="#SRDF-语法" class="headerlink" title="SRDF 语法"></a><strong>SRDF 语法</strong></h1><p>SRDF 文件中的标签</p>
<ul>
<li><p>&lt;**robot**&gt;：</p>
</li>
<li><ul>
<li><p>Purpose：SRDF 文档的 根 标签。所有信息均包含在该标签内</p>
</li>
<li><p>Elements：</p>
</li>
<li><ul>
<li><code>&lt;group&gt;</code></li>
<li><code>&lt;end_effector&gt;</code></li>
<li><code>&lt;virtual_joint&gt;</code></li>
<li><code>&lt;group_state&gt;</code></li>
<li><code>&lt;disable_collisions&gt;</code></li>
</ul>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li><strong>name</strong>：<strong>robot 名字，需与对应的 URDF 文件中同名</strong></li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>&lt;group&gt;</code></strong></p>
</li>
<li><ul>
<li><p>Purpose：一组 joints 和 links 的表示。这可以用于指定规划的自由度，定义手臂，末端执行器等</p>
</li>
<li><p>Elements：</p>
</li>
<li><ul>
<li><code>&lt;link&gt;</code></li>
<li><code>&lt;joint&gt;</code></li>
<li><code>&lt;chain&gt;</code></li>
<li><code>&lt;group&gt;</code></li>
</ul>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li>name：group 名字</li>
</ul>
</li>
<li><p>注意：当一个组不包含任何其它 tags，只包含 name 属性时，被假定为具有该名称的组(在前面定义)的引用</p>
</li>
</ul>
</li>
<li><p>&lt;**group_state**&gt;</p>
</li>
<li><ul>
<li><p>Purpose：根据 joint value 为特定组定义命名状态。这对于定义像 “folded arms” 这样的状态很有用</p>
</li>
<li><p>Elements：<code>&lt;joint&gt;</code></p>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li>name：状态名</li>
<li>group：该状态对应的 group 名</li>
</ul>
</li>
<li><p>注意：为了使组状态有效，组中的所有 joint 都必须将其值指定为 group state 的一部分</p>
</li>
</ul>
</li>
<li><p>&lt;**link**&gt;</p>
</li>
<li><ul>
<li><p>Purpose：指定  中的 link</p>
</li>
<li><p>Elements：None</p>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li>name：必须与 URDF 中的 link 名一致</li>
</ul>
</li>
<li><p>注意：当一个 link 包含在一个组中时，相应的父关节(如果存在)也是如此</p>
</li>
</ul>
</li>
<li><p>&lt;**joint**&gt;</p>
</li>
<li><ul>
<li><p>Purpose：指定  中的 joint</p>
</li>
<li><p>Elements：None</p>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li><strong>name</strong>：<strong>必须与 URDF 中的 joint 名一致</strong></li>
<li>value：只出现在  中，浮点值。当一个 joint 包含多个自由度时，其 value 属性是一个由空格分隔的浮点值数组</li>
</ul>
</li>
<li><p>注意：当一个 joint 包含在一个组中时，相应的子 link 也应包含</p>
</li>
</ul>
</li>
<li><p>&lt;**chain**&gt;</p>
</li>
<li><ul>
<li><p>Purpose：表示机器人的 kinematic chain </p>
</li>
<li><p>Elements：None</p>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li>base_link：该 chain 的 root link</li>
<li>tip_link：该 chain 的最后一个 link</li>
</ul>
</li>
<li><p>注意：根据 chain 中的 links，隐式的定义了 chain 中的 joints。与 chain 对应的 joints 是 chain 中 links 的父关节</p>
</li>
</ul>
</li>
<li><p>&lt;**end_effector**&gt;</p>
</li>
<li><ul>
<li><p>Purpose：描述末端执行器的信息</p>
</li>
<li><p>Elements：None</p>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li>name：末端执行器的名字</li>
<li>group：包含组成末端执行器的 links(和 joints)的组名</li>
<li>parent_link：末端执行器连接到的 link 名</li>
<li>parent_group：是包含 parent_link 的关节组的名称。例如，如果有一个 arm group、一个 hand group 和一个包含手臂和手部关节的 arm_hand 组，那么手部末端执行器的 parent_group 将是 arm</li>
</ul>
</li>
<li><p>注意：根据 chain 中的 links，隐式的定义了 chain 中的 joints。与 chain 对应的 joints 是 chain 中 links 的父关节</p>
</li>
</ul>
</li>
<li><p>&lt;**virtual_joint**&gt;</p>
</li>
<li><ul>
<li><p>Purpose：添加非真实存在于机器人上的关节，定义机器人 link 与外部参照系(相对于机器人而言被认为是固定的)之间的虚关节。通常，会利用虚拟关节将机器人的根关节 root joint 和 world 坐标系关联起来</p>
</li>
<li><p>Elements：None</p>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li><p>name：虚拟关节的名字</p>
</li>
<li><p>child_link：连接机器人与环境的 link 的名称</p>
</li>
<li><p>parent_frame：虚拟关节的父 link</p>
</li>
<li><p>type：虚拟关节的类型。可以是</p>
</li>
<li><ul>
<li><strong>fixed</strong>(0 DOF)</li>
<li><strong>floating</strong>(all 6 DOF)</li>
<li><strong>planar</strong>(3 DOF: x,y,yaw)</li>
</ul>
</li>
</ul>
</li>
<li><p>注意：当  标签用于通过名称引用现有关节时，也可以使用已定义的虚拟关节的名称</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Define how the robot moves in its environment, </span></span><br><span class="line"><span class="comment">    i.e., connection to robot&#x27;s root link --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">virtual_joint</span> <span class="attr">name</span>=<span class="string">&quot;world_joint&quot;</span> <span class="attr">type</span>=<span class="string">&quot;planar&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">parent_frame</span>=<span class="string">&quot;some fixed frame&quot;</span> <span class="attr">child_link</span>=<span class="string">&quot;robot&#x27;s root link name&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>​    </p>
<ul>
<li><p>&lt;**disable_collisions**&gt;</p>
</li>
<li><ul>
<li><p>Purpose：默认情况下，假定机器人的任何 link 都可能与机器人中的任何其他 link 发生冲突。此标签禁用指定 link 对之间的冲突检查</p>
</li>
<li><p>Elements：None</p>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li><p>link1：</p>
</li>
<li><p>link2：</p>
</li>
<li><p>reason：可选。这两个 link 之间的冲突应该被禁用的原因</p>
</li>
<li><ul>
<li>Adjacent：相邻 link</li>
<li>Never：永远不会发送碰撞</li>
<li>Default：在默认位姿会产生碰撞</li>
<li>Always：总是碰撞</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>&lt;**passive_joint**&gt;</p>
</li>
<li><ul>
<li><p>Purpose：被动关节。默认情况下，假定由 URDF 指定的所有 joints 都处于活动状态，并且它们的状态可用于规划。如果某些关节不是这种情况，则可以使用此标签来指定。即：不受直接控制的关节，例如移动底盘的从动轮</p>
</li>
<li><p>Elements：None</p>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li>name：passive joint 的名字</li>
</ul>
</li>
</ul>
</li>
<li><p>&lt;**link_sphere_approximation**&gt;</p>
</li>
<li><ul>
<li><p>Purpose：此标记指定一组保守地近似 link 的球体。球体在与 URDF 中的碰撞几何体相同的坐标系中指定。该标签是可选的。如果 link 没有出现任何标记，则将使用包含 link 的碰撞几何图形的单个球体。如果标签出现并且仅包含半径为 0 的球体，则在进行基于球体的碰撞检测时将不考虑该链接</p>
</li>
<li><p>Elements：sphere</p>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li>link：近似为球体的 link</li>
</ul>
</li>
</ul>
</li>
<li><p>&lt;**sphere**&gt;</p>
</li>
<li><ul>
<li><p>Purpose：定义一个球体</p>
</li>
<li><p>Elements：None</p>
</li>
<li><p>Attributes：</p>
</li>
<li><ul>
<li>center：3个用空格分隔的浮点值，指定球体中心 x y z</li>
<li>radius：球体半径，浮点值</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>mesh filter</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/mesh%20filter/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="7948fe0c565b89ab8df05884a53706ed5596ecf6cd34d96789c81e3d638c2f7a">61a285bea0bd1a3904d1b9b9e1d94077ad6eccdab3555e9cfad13d6006adbf39b909e3676757dca3b00dfd7f016cd44ae9b35d774808611bc8f8196b73e0928c87467754ace5c9184cadbfc41c420c9120951c77bf232fe1775df73a0f45b0c03b2adcaf93b0974792760a3efe9395e2780f7a1ad94c89f4523faf63884424e6ba4cf63c3101c5e67d3c49b201fcbf585acf077c12774f7d8c8dbb49f37dfef90835fb81ca34e23e1b689ab0c5aa454ce4b93cba0d762f1a0a2b0acf0dba5101a4a54ccd06bd375b6643b1f41035bc0f9328962eb19d1c1c4ffc410e9979feddb4189931d9c5558519b6f5540912aafa7bd97af56d8004197f0b32e3a2291e5a5df6a1b483891eb7465d6033cd8f488a91171f683ef22fadca9d81dc0c745370c4904a0ce7f240b4eb185db35dc8d216f02915b483d55d902dd087195f11d90f4d11619194e37f90866d572bda4f2b0d28f24b7ed7d7d268219b1922846be95fde09384d58dd310cf4d71d72aaa2d70805a181f6799734478ee6d12cc29156a0b22e64d1640780539204cd1e1d0c9e4ee1e0c2bbd21c69a6c2f9c91c131f626a6e49ba76929ad721a96775b9471cc6508602c3c1659c1ee50df20c628aa4960c7741ab0593c900a07595f2be63872230f169a17922c493f4acb64b1c1a90a38283ca0355141accce18e463362ebcc56d373f944b4541a384b502e2f21476911e5de2aa6a6401a883e2d3baa161274e6bc1e2ca4b129b1cc867bbbd8204406eec06b8d5e403830e28857acf63ceeacf271d4210d15e48beb514e2892606f21f2024820dd99b78ed6e3d0b0563c9716eae562ac13fd72f717fe5e8cf765450678ee4a5f9f97e5e3ee82597b5c4430577feb7617de1a642a5300c7cdd4fae553ecf5ce7ff7f506e6b1cb2c2cf3b0c53a62740ad57886cb8f2ad443f735f4fd420e0e655c720d217dafdb277dbd2d60c9d5623c17c1cffbd55d4618605cb8c1d22e9252f8d0a5cadc1dcfb738d8627fdad845b3bbd364d4ac7e635a485f81b83042b035603e3c8a6876924d6eae20664a5b6</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>moveit-API</title>
    <url>/2024/09/01/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/moveit-API/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="11693948f493ca939bbcab5b2234ad73b951af9e102c4a705a3a135204f74462"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>moveit-Gazebo</title>
    <url>/2024/09/01/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/moveit-Gazebo/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="7ba0df48cdc18678c336989e291a25601ec1e8c2f7b7d4b247803a34122c10a2">61a285bea0bd1a3904d1b9b9e1d940779e900515c3470f5aff37523cf62826dc59084148aa9154737f82cdad7b8c2f04fd9fb3da6b4473128af4a46bad419288c03f1aec41c7e1cf85aa940acf9293bbfa9d9374ffc5df659c6843793483a1721e9c4cdc9e560a64aadd62d595070581a4fd2e88d1575b5896e4f2d78873645f4c51c1674e31513453fca2275d2ed5d882b6070db5adc620ce662c91fb7a39bbdd9087f230ad53af8a1f4645b99569bc00c73ae25eb091f7ddd5d13dc3f20b6c2c2c2a0a03ae6f8a50efd3ac3e387637bc057c36fbec0ed1bd8fad6a337a3fb9778c1d5f82f8d9ed9f1287b6e38a859271e42dbe6631f3d0aaa7bf4c70e6a881162b294a31d34026f9282bbc894f050c4f65c17b84f678733a80678cde38d5afa6da196fea38f8b85ca1aa2fc978c9dd7711c4d8d82b965070425d600843c9be41b2a2356fd2fd742a1098fde8a0bcbc05f6a7fb1b1f95d2a120d842db0f2286fa36d031ad3ff5f8461cf35344e04cd843c93896dbed419e40eba9573f7b8b1826f1b11e268f5b7bcdb43106f24ce18305ce71732f8ad946034221adbdb1899a56b9fdac134f41caca005ef6012c4626733361468362dbaf671b662387042baf1d67a007e861007e522bbad57b14eaba904effd0b6e2d426e0d35212cc9241ba2aeb7125747c34c3fed7b7edf477f083f3e2e4f07ab533d8c9fc53ef16dc61640de42d021c2e66be8006e2d17577d94776f970d5f8651bc9666d717f5faefa54cc52a871c28a5dcafb39cc7c3df52f00aae5b8a19abf7d9d977f5e83942b5d8693db3443e37527d29aa197d09646c22e182132e86363009fd3cdedc4db3a4fdaadf2e68c5f82ac76048b8b0fa5e60e7d05a555dec9fa27cb7687e93c9ce1e3b6b9a2b6d0083997f64e8c7bfef490af8c543a27173a4896b1b9db4fb410c3cb1cf87d9de64e7d725e2f5a6cf6057ff38512a78b58b3c0786f86a02b90d94782882508eb1cbe1c729d0e82ee1799e76a3ffd6c501dfbb8d1262627953150c229bf96eee72e2f28c7d40cbc19d6cab7d5d88b483a08babdf6187f7d7acbbbba4aa0d2c009a20e606821b1604380e2b64951f941f5162eeaaef7a1ed3d84c970e800492bd49a89b5126dbdf4d6f4afc095c6deca0a4ff8d6285f1a764a4e59c9dea070e6d5c016e40ad5eec675aacc3bd327f03547ad60f2252c69c6116f0a9c44d248af51ecc04529ec0fc7903f0d7c6e886da7cea7a2e60e0963e2e545a32b779ef42e602a40bd19df5cf3fdfc04fd2fbf0baa0735e89710f09c57723b34fe895a58044cebd7d01e6cfebf6ae566060dde10bf358ebe750aa625602beb630232bc614f1778228e52a108c976f434932e3ed576f18aedfd5f381436829c071cebeeb3c40f8bf023907f0cd3851c3d1c1133c7d89f697862d884424709d5c736ee857d98a972af9339ae48ddfc4c847e3d5800d12de226fa065107c42d8798552bb1df6ebc1df4484bfac6e611c66de663795c8d0000b7ea7e294e4bf22b954ea648498f745233a8aac4f5a741796a6a9f6acf0aa99c770e0177c3981d67c5fd742b48434f09542f92fee491fa33378626675c8f14eba44a97a0791862654c3531b457661f4b277dd55de17c2923a47ed3c90fe5bd064101d1656b4157cfd7db94883a841024e52a962c6d0bd1bfc7c985dcb8dd97b307ee246f441d50feaa7100f30f2415e9c689b396107f8445033634793d406126b917cfb6fad8bf89bc80188041c1c61c95edb5d5944263c91a25785cba9fb96592e7f5f4c162dc267690310e73f8c867c813c6865107a216fbf90295d57eac2ca0dbe759f07e6cb8a58d47e641faddfbc76043357bebfb9c89f373ac7bc1b5597a5331c797470ac3e7852ee14aa453e551d199d0da19d789036eab05e54ce2d39e59aa6b33fff284d2065be35ec02171ce6ad21eb2e7b2ba4deafb72b2cba80219822efac69ec7e37327e2873dc7b1774fa0e4fb533d1f46710c8fbc89673704d5a8c57d5e8cacd8365ac48301111071459a529b9eaec0dffaad8213d3722d40e19081283b508139e1d73b3583b29348527a643e56f905a9ed784b795b6f575314b5c5e00f893652cf548adc79e66d824d741a441e8da5bf5e8416259702d824e63b03e2186926820e543b3e84ae93062141ab01f72bab10a06d5afcdff13df6723711869cc68c44843cbe71504c589c1f7560df791bae34b687042eb674bae1f9caefb2ba0448ebc7f358530485979e2d0903e1c9b27a11795563ef0490f68ac6875fbe313474f4e45b8ec0b78924fd5dcaea8f5216bc045da34f6d45ac419262b30c649ef4f857e72c81a5ff7d2da72ae25bcbb523af1e26e1a8eb84097d1bcb6a462d95cefdd36e83157bba0fa88b2bdfc77103ff228f51aed1c4c7571300404635e49ba319a5385414e95ee6881a9181f74f758966566f321ad6aee0d093694a1b3ebebd7e9824a79f08b583331eaa0bdf3ac7a15a5b4927f106f5317dbdf6bf4f3bb702f2b605402545d3f23269a38204b0c4eef1d33a3cff4bc9258e06004e2e5f719e886ac572a0c7f3da285e385d4994097092776936bad46193dc19e6f33072d1c11c036a66ff54c1315729da99bfc3e14dcabb1a9fe43742394f399e825e56a030b1541ff16de4a99f374e3d6192bf79173ff05b8a70f581aaf4b0b41830ab6f7f6679a6315fc668b7102ba8e26e8173a1d4ad802c15f4f6aeab6084f984a662b71d53ab2d7bd2b3efde6eb5bcfe9b75a3953ffaee70b4c7052fa7d6fe016f0ba5f43d9a8c29339c02ef494e227777b288f40e86069d113db0245dd13eca97b7eab0364dc3201a200eff8abb48a4de005bc1773252698cda99da9c0e069419814fe825e265475d19402d3ab6db2b5b4834fb24886b65d8c85ed38697ac0dc1d9f4cf5d2b46f6d0b060aae2eb473a95014fd768745f228101680be962e656f4a763099dde5992c855f9c0211139766f8dd91d2e5790b6db7c9d26fecaa45f370d8df8e26f034899a49b53548833f2e407d919c73c3921e5ac65bd9b98fb905760f9d05fca835e3141bf6b8b4bfcb6f1f6a614cc681f58c07d17876e8627b40f9e9d30240ea464ea72779bb29a7d7e438ad1505ec0ada8d7bf38823315f7fdfcbb29af97bf6ca25c8ec49477a3fd39665b33e57550ac60387fa41ef281602a12c72d091a51d74c23d24832a119e49f41bc307f505e0f8bfcb09c4006432d3bae7e52d70a0a7d2f2cd46e61274566f51a9548745f9eadf8ce696af0c497f7c9b42b16621ccd5f5baefac15f41488e923b96671470a9b7031ef9d55c2fc5bf927b1893ee9f02bad44ac5cd4879f47e114521b1d9f9628acf395a6be714c14caba8976955f7776164f22a9d1a085acf85657dfb6d48800272f5769a6e2ccc5c9fd7b3bb4073365ba80bdb9939fdf73f04f758a894e64c3a2f564454f9b47f15bcf14ce7af91c331379d136fb521e0958ad8d94b000147ac19179f6cee0f14ece80dba279590ee5933b3e194e7249b7bb0723492207dcecd684aab5be6d3927f43666e262bf56e2506b180c84464ebf8e5d2faa83fe13b89a82555e3b30a89b5faea0a8e63226fc5ff9eec44eca707cfdd7dd2651aaaeeaa56961e4b57295f05377645f515dc7d90be9c418e20f0657dae2bbdbd575193858f3ca1b3f6f4d773a56ff46f2e32c12effbd26211dc006918ee57cddbfdba5162c992873b4499ea209ecfaacac8cdf9b4029b8c1baf6efd82bc103940e9a25b7f308f1a8a9eec2f48bfd2276902fc074521517ca931b3b01b003e743ecef68b7e5de24b2d9ce8862fc49b98c550462560881ddea73c1373f063b4981f63bea274c183bcbb8d9cb38669440cd5429008f8935cf55fda3668af4259a51859ba420bce9a763b7786848224e56d2fea17d7a5d648d983d1b0de5645f3597ac775103ab69753d9635094a29ec4dc7a759195966f9b62e143150aef7537c0863d3c2f4048fd44cb107c5583f15cf4906e65043bda70ca8b6696510936a6152694fa9b3a5455669cf080f3e97cf104685ded4e9c00e96f1a6db3088ecccb2dd5f121a570d9a4ac6b32bb0bc829ca299bd0642b9910dd7ff1a0b8bad2d5d69fae39ff903aee58c52a79212641279080fafd70344559d04dd0a30b818020a83677398326dfed20823d391b16e9fa68c3332ec76c2b35f57b2cf0272e2d2ad04a259a464259cbe5c21c86302772d9510551c1dddd865bea69d19031a827a6ae82644bae17ad0c761c1794eb3c56cd07e4be12f14dedf0cc452b19508a1b18cd7d65225eddf44706609297ed79c3885e735b08500d3f7353dcf5ad5cb8ee8e621e95d1b426a1b6138fc9d56a186866b52bb2645014ed19f993ada72fac27704b6954e1ffb2913a1c541cf090463d7a1aeeed03caecb54793793ec73132cc65ae4b085b830a76997f7e456a8e920ad872499be1837cb1ec220380b0c27763d0db471a307dfcb3b22b810c32db97f0ae145b7820e6b9c91dea7cbd10ebb12182dbe4bf5eba1e9692d211cc7e66c8e09419ce9b9456efe1ac238f29105e7c1335fdb3566d00544d8e2ab5fc0882a2ba696aa86028de9192ab56736cada520343a1e121811d65a5deb1085003d950a35be720852d99ea6abdee09b1cd1ecc4ee49d8f0eead6d2e186b6a0076ed61d2938e29532eb3c832bd7207e9aacbeef04895fa8a96b3463aab9d1c40602cfd795488c8e22eccce8848b6c4d574da1c1fb92f277d61631e4c4b4d38a161dafc5c3da3009554c04b96f5538ab58a97d456acd4860da993d1578af9c9ec35bf176b7010d5f68997f3fb1ffdbded6852956fb4661d895974c0880ab80448178148b7a6de1f69f7f33547290e8bb553a42972b2ad0e089dab781900b905588fcaaaf8499cdff806ed388797f0be475ff27fbea991d2f6f0ed423d2855473499f260bb734fdb418e07e29aca6e5c903f80190a26c1f19b50d3f4e1d5426ba81bcd938e6b56ea3c4983d0c6107750112b1df0e2aa07317f6d2d1f34dcfd294eebf1818a80942593044d1538e98a16a47646fbf70be42b527a7550a5c13d8773b0ed8eefdab132b61bb829379fc527c74ea756572457d927a41ada15611987b1cd86581848e58200b6d78ad24eab97ed2468c4c2b78190840029d47872dc0c6cf28f1862afcb1c82a1a0ed6a54006d2ded1a0b06f68d0cd034e2a9ed74fbe393461fcac0585cf240c9166bc8fb43052a4e602ca91f06172c69dfe6fe2b31d5545985d6b74aee4cbe2f6066059cccfb90c685e2e1b556473365fef67518283bfd7b3e08b0db8fed19f625008c9774e95ffdb64fa1844511f6f4bd228ee0f442e36aa94c198083059ad1e0ccfabafb7b9f08cbe096e6e01700cbe58317018e1612f2e7309f327f0dbe9291c456bb32cbd6b4ae2f5545cd4402eb8f258bf5639462925e2fa05538ed671c936c190e2614815d8e44222d05efd24563453b4a3e6fd796963a93b798c9d008e5658843064711687aebb8c776a0ed04fd9b0f408597235d0c9c171f9f1675818c8fa496355a0a6e59781b075046fc46e740548665b69757dddd4132841494609225f8600e0c3d2a2876f4ddeb1bcacada9f92628fb5fd7520e4014a21497a563c2e78b11984921d383152ae920d829b159a3208a8aa163727a1946d97f0307437c5806bf73ed2cb16e71d6081bb0c4f3364e4076977d2ba171a47ba1b52c4744bae84b42098a478804c8f41270c211657274a3f98e4614563cb49cf9043201a1e5e50b87412a2254d0ea91cdb81d9202ef13795f3a8bec51e142b9aeec90110c838c327c51e0f29cdedcd6ff3c66a986c8e6c5d44749843120bf07490be51072f2cb7d75f292effae4008116d7e5b3fa3a0a771c181228898d05ccb41e783ef3a89137670eaf68334abd7203a21c434282762e67dfd6133eddc695fda2aa04d27145d97cc28fc358a74397ccef071e5cf6b346e30b88e1a0b3bb223d76b7ff6fdbc96802c79bcea7955c1eca1fe90b672023833becb8ffef99c6a9531593ae5b112c461ed4210312acc62784bab678527de8620d8eb8e98d0d3c255749a3a556d0218b909eb4391de7ab99a321711bd5775933aec815541cc786406e8e9d839a3af5554876cb0e1b9f20ffa3642436edd58bd970045cd2835d4aba659a207bd607fbe2fdf7f30bd526c24c56ad39f33cb909b23d0837058e1e2b606d044a8c88f54cc9791a333690b923ba6c9a06037643d9562e6a2dbfe9c38005c7a610ef3950715d4595cefcb2800bbe5ff716d02776f3be96427bb2a11adaa4ac1e052fddf8c4af11d745b7ab9267ae9dd50edf9d9fce8db1c30c661ebadbf1822a9012ce521ad27b57da747d959a5a05078df852667d3830b5394860cf14b0b195add7cd69aedae31384e28ef1484b97a09038bbe09525d75a52d47f15c7f36a18599af7efaba169f781bc93be587c1919b77fd14816d8730a609fa779c9cbe6af23abc19d49d4e5d19f005370dd613fdea58d4ae32afc8c35c1dfd5b12b9130243de1827946e95981213c61c2483c078913bf74023b4f2a612399ca0d5afa089b68df9d152e103ede73d35549df923ee8c6b115c317113219c913458cab7745f5ae7a004ae76440529f3012d0fd995777b012377145a42236dc3fe71fd0af70d37761a983425675508dd92ab2ee2f28785126435dd926dc5bea00aab5f5f1140836181fac557db9bac06c505c029b429a87be1523b906193c365a269a71b853d9fdafe49c361f599c80f2c6d85762b567b53a53c56d67a0b56fed293f47c18a484621dc9fac5554d50094169b4000f36a601b0ad9c1ef3e9acc22e19ffabce9e4551fd3720153dd7313bafd50887e338e33390ad8f5597d065d0274d17b13e05cfa9111b249dad494bc076c0946989429e1c4a48399e1a6810cc5965813ce2adc439a0e8ab28a0390ca3cb63e587d5ab17136bc5a6b4c219177bc35053754632d02777482dd87af671d6069ef3120f5944afa7317ff2ece13b050bc25c9091c6e3803196998579e1d26b5497370e03b95cf5d318e6f019059c8c97371da80b0ae500d903d2ee2b82b1434a5376f83b09337a274cbf645d2d32f1c9c969166ea8d2ba3f13602dc2a08da6a3c096d58a707dfba801325aa80f719696fade4efa6895018664f51ff25f38ce960229b6ddfd08b44065f56f74b0a9a1cffad2faf63c42ab52005f573218492469c3ef2e0ac75262cd07f9a4ca617a35a97f8235c2c70cdfe6b03739a08876831f6bd453cc3b1daf1dca941952041005a0938a2f5eaa9fd54e19230525d3d620bff021006593f5b859cf4d86311c6b3cce74d2e6835f784deb6c02216dd0e88e6f47a409288e74f6d46121c76e971586e6a1b200a1a3c857075e1ab79892fcf03e316565d11ce7b0c5400a59e6dedadebac813231bdb6b3e5777f5d15966ed50b70e9adaa97723676759c212abfbcb5acf56b9b68cb4622833a0335a62cb0f514288592a71ff2281b6f5450077126b269c720803df8759f92aa24022103d0682aaecccf87de613f5a3a71a140d849e47c872fbe3e60c5fa4af627939f79d4c7cde6d9806b9a2be38936bff90c2231c4f0bd446a9d5dd802b5e51cb0b64263c3869509d0efe213a6e6b6d77c583fdb0652519d470c58f46afe9b6507267af147eddf0b46a6ef400bd21a1408c9db4476c4352a22b040b52c8405c8e62c4f23ccff84dccf3764bc784a4a81269f43d3f72726b198af017da761d20f4de20da3c5ec60434d477912ffe760b82e47ec786ffddb88b5696e9a873e58f057eb19b786d98abe44320af595163a8a96f251f13fc924deeb4b0a67ab53db4b6a956014ea9a87bf4ca3032606b7adf0c684c50404e8e8dc5f2ba7adce1e4d6b7d73955b2a3a71dc7dcd875a9e55be961bd2c908017ba36c610b6246b4d477d285dc1ab5a0ff91ddc56d6321a39d27297b02ba9a2a5c8df6c24d7c73524a132daf0ac2b7d43828ab30a859c931d09af17f9bc078cad57ccd342a3a59799e40b65a29d3399a827103a9e615f70d293ba62342371c76b9f6986e386685d05c1d4ab73d9de0e5268ec91deb5aecec44d981998f0fed604c87bb87e5a1896ec6018fea74b6e974f9db885078df5891c3e86e544aeab673e79a048fe96d64eed8428c3042b02e30b6be4e83ad2851d9a38ed002272b6d3b4a6a311c3b5f8264f8561461fa90b5996e0a53070776fa1e9424661dc4456db10098db271c7ac348db1af2a564d87cd8df4ed672eb6fa7c585700ee72cb0813de8f96f7031f18d898d6195686d277eb7655c12178806368884b8f404a698f501c85f54cef8a9f9e7ccf345e16914c0427d3414f515a090d83b815b371d85f11a05aad3ac02ead7d8f950f29a7e0f46be2b8b58f2ad091d1025f1e101fbf1e655d9c3994f3508bb6a815e5ce76a9082f422f332f5af8772e4dfeafb12b89364cc971973c97f5ecf75c79fb8d4a03a330e74afc5f224a2ce902c4771400fdf4271fa2bb99f794222f38d84d8bfcf577f6e7c21393e2d21d403df14944259f93e86cb16885ce95e2debf576ed6d0c3a443498f089734ffbb6889815a1b7660bb4f23e3c78371e519b5ba3a24b813c6541ab47feb2f19b3db18f14ee63124987cf16abfa5ce0d1771a5f9c02cfffdc42a48fcd0a5f0066a314718ae6485c7de11f2cf8e639bf37d9a8a03a489c5100efe1cf75773f86a0341451baf4e7aebcd05118601173d20c9238cb10a8bb16fcc14955d4f2b4ceff5292523c2cb33f92ba19e6d45a4e1824be571121269a90d6f62b6195152a083ff9282f2589cf67ef66350ed234190511cb047819723f13c30db4db0c5fe2ce79247a3c9df97195e23ec01c8f3ceb87c5f94db74321b1cfad0a56c7d0877839b36ef8e6b4c3d002195a70e9b08a8e1bb76e92ee8b9d156f8d4d8b53144003a83a89a0b9bfbd70f33be6567c471878210ce2e04dc1b8311ff32b8908cf8e03f6e4593feba913fd224a08dc73220d7764ff21f96af88ac7bfc29cf98398d28aba22ac4f927c9d504707356d6c761418832d7b5c94b0a067a0d6f49a18dec0dd907f944e9521f7c9fb8fc5584a0ab691af117e437819f0b13ea5a65573ccf4d152f3c3d030699920d204268ecb980ae97896cbb5b2838cfd1fb7b4001ac8a82ff3bbd7705a34299a5052222677971eb1168856c00e38713a901699ba581a7eea76379d568c616e0e162fed3db379acaa9b4fcfa446dcada57884c691458dbb1f1ed7fb371b6576552c5a8072eb27a935229b06b0a6c89c6b7524d3ad37dae12439f9cd9e97dda5d6e1ff468ba9ccce626dde9c6b1eeb23b59423ea80361e04277221b7807bab0b8b2a8d1828381fa36e1166818a9a5a85051ccdaccc1a0f4626f6e9158353150aebf107353dadb8cd5402074f3f6c53c1dbe49521ce6dcb0c7a7eb53ec6b5d85d691a80fa3e722c1fb4f33389c5987c52db8729e9e28d77aead9b81fcae06f44d64729b5ee858f6d56bf7de05ae8c34201109233fa7bfd5bccba52f635adf0a179b8f58837dd151bd646fa90dd6154d8a29656ddbb3fa269062ff35fd8bca3afda842409c089daf162949acfc62d10c948ebf598a03aa76ebde1dfebdc656ac3ee9186be71dc0379351ad9851a150c3f2fb8561695525ceb3a1afb86d3e426bccdb0e4a61f853663141aa4674694c0624acb4ec177a4db37463c5bb021269755d63931d708ab95ff580ee43e713efaa763cd810c1be0c171fdb1e565a2ac680d14f8247bfaa26752daed620e2da2b6b510cc3beaab9385ed3e3382052e8ae5808a94cb360a82582f75cb3e5a5b69b4c6777888ec2f8b88859db8a9c8782e0606eaeb64e860bafeee816470a94634a01073142e3e6cd7d4660a94f17b3fbe28cab8bab5ffaace0ea582c83a47030851f01bb532716abd0f7b9488513c67524a621b971f43219b7aa625f6354211d7d9eadf53fcfbe299a90c5cb582d72b1e362e1849ef0c58ada769aad5bd1a596decbc74a9b76b156db3186f6944c7f2abdb3e54e348bc61790380b8c6a8b1de8961afbda1f8259c4b67664a7f499bb39b05e01f51a6b989d683bd91ca489e1dc61ded49f93a4ebb445921f28e1ba35eff3a862a0985a0736b18814ac6e6fe83abaa5b23eb6f106e968571c75ef098ed86707f043ea891b0a30adbe5eab7f7eced0b50d59a508a9fc1473cc71fb7bce4a2a394661ab535af7f02f4b9895223bb771f39f7398c6ba2d19c91a8b34b2b7ad7e9773ac3341bdd0da970fe395623fb43e51b6e302efe824772c28a4ca022de940b31e8e5978dcfcd20d2df4884a6a0a055e6ad70c1cc10580de0a7f6429900ab2d5a122b229d4274f657277af646803c584fba9107c5e9ae4b98416b5b34451c3bb705fc54caf1e532c2cb45b061292f30bd5c0f1c7a35b4187c983975de38eb5a09c720381e7f59bd861372b0b243586e9b3b589dcc5104fbc2b6436ae8fa577ef8c8325a92e15807656057a7873deae31580438eb968ce4c4ab52d636417f5f67e0e0933bbb6fcb68a35288746cee24a1131c0fb04a53743f6680aea7c1fa827641017cefd6abaf102662ef1a51be749dc27460ae5f61c3e0e84e5fffde36885328f351458a512e683d08e33729a9af0f48a7be9bb6dd20c578f0fc9ce29985268e18344f82d3c91e71b237e9e28a8d882b3e903c8f79236c56dc413e0e271acea2f3ffd9dd119c4ee79417666ad499870b646c9f2f9a051b15c9e86f713eee4211cac5a017bcc4ff2a34690044bf5e839931b87dcfb7f6d8185ad2da06c1a1840072111122e4cf127bc3881579b36064c752c6d3288817f3e4d380cc13ec4ef377dc9b148248c9c6e2cca1087969c388dad3474800d205b46c37854c6eaaa7dcbef8228b59ff8a012606cfaa5a6dc10b951b6ccd7e8cc74a06ab39af3288d057bb8e25b8190474d3e9caf8ecb9b38d3db56d2a1d4a9ea2397a9899543a09711763021a5f0f92f12439844544a3324803eda8957fd2a12658ad7359a6b2240ade5531894ca5cb009d20425d13da04a8d3942b996174b32d9310bab667b9c593eb04eb796f9823a3fe8e6372c710430dd594c9e1d0f7b806a75c4ac2c54f145aef31d538cb3d7c5e23fec8edeec61ef2137e1a36bc69e8d0c6316065eefaa7b2cf1b32e492bf9ec7797d1a88c3886991e48ed3a13816fc075f1254ee8ed567c48399788470e632eac2bbb144f93873effc5be1caff66d90eec7efca0d69c6ce9e38d312c5b9a88be07791c78f2066bdf3e3ca2e3d1ba2d7d176e7bc7ed6f5183d383bec74f12e4b243ebee9758a1dbe28aea607f72554eaaa2af6d73763c1b3ca9fa32b74572d257319aafa4665b19b3d802fc27f7be66728aae44b633175b52bf15fd0a85e7622e5a3ab9d540ac0a8253c29882cab63e191436bddc8ac2831643acdefd537998139ae565bfae77c6b46ee1531adf976ab37c694a27950c671df039fba114a2586bd33771dbbca1b80d5bea4fc0fc69cb6b38a6dd04b02b501ff44f5923f50bdd1a8dcc884a763c23baa1e3161fba74f13e9b4bf195116db8ee5425dca9033bc1163245bc89d22a9243493b9f073c9eeb5ef55e674909a63e8c20374f50fe26c88b3419376e4717923135d5bf2e5a1600ea77ed71903d2da70f2bf7dec4f50fa529533e15424cbd5b66426ba970d43bc7ed7807b521cd7a03a099dd8c944f305f3af94bac3201d2421d4a11a744d74682e4d279f4213b1755dcdf8674c03a86899e5990c5517418173798ba70688950693d024e0de02ff6e5986be056c788bb2bd451aa460e54cf7a4eaf81f0cb674ed3c90dadab51cea63dddd90a451930d29d3ba70c4525efa4cb573e3ed99f63ede92c7bd7fc874c26926a5fd93a0c7ec426fd541364343fe49e66f9a5d73a7b1430aedd8e763a29bf80113d9995e798712670b29d25c009fa96be756dbf219f43c32ee5fd9a653eb3745448215955c59c52e44999582bb6245f84e8a377515dfa386f1cfe5d9a949df5d6d8988f22527ae007bae8d1b25f1c1cd07b7c5f42b1249817310c83081f54861030d96137f6c73e1308fb70bc9128542a9ad537599e77bb94b86cfe3f8fc7f593191ef362c6a1db158c0e151106ef370271ee3e6bf96e43368de03dee0b1b888405fcd2585bfaf7038f462c1a95cb2374b2a4a084b0d9c9278b2911b2e7c36bfd7937bc894adc07504fe44bbfd72f05af3feea9c492cbc0e56d392c1f18048b45b36cc89980e771ee91ab8b2fae9f18ccab2aae7a522ddbd8f7a9020259cce8febe085fd7e05d44c3420e38e3e6d7689f187c9f1abe37fa5754d1cca4d79c8f069539b9924fe668e1fa459f78c9f79546f6a06ceba3b7e873417787d0a706ab0f67061dd9aa027fbeb507a0a23a7bc67054836aab92549f20e41fa3fc05710e8d962d9ec257a923d27de5af290d16c2718b3bfa469f0334adf2750aafa77181055206c73b4e1b2f1a5eae0f0b82b699844e59adfdcb2dc2ca340338614c97d5fc0682aca6953ba41c4ee9087d0aaa6547951d5e7ba747bae02cfd88dc467f4713ea09d4751f0716c98b188996e9b862ddd326ff6e519feb01076881302c9e24df1ee8f36c38dde365aafe7ef7961380d3ca360102aa6dcae2787ed54ca4116fd18d33de79b3a3b91c1a403b979259011dd2db1345470af24c7c3ea789929d9cfb971dc56e4465834227f4eb801ee6943e901ccc76894847369223de221f9460604dbd9f777292202374805e5b4156c9190f1421da3541f0d7245b4e1094805c88282c46205e3ded952aa2aed36b10a601070bde7095fbe797b9508315f8969b46ee038d24925306ddc9da913f33117e0d732e219084ab6f32053d0504766f866d251156772ab5aeaa9b697e119e1cf56c889d637f00c5bce6e8361bbd36d3245f8e43aacdb41da79e7e40ff6858912808358c409e87cb47247da7595f154dab56edbeac3c7b3d06f7f927bfbd3c7efed16474542d108c7d8606ffad4d48b13a8171d133152855e66dcfd40bb4cc4dc8a8184cc652e92bc52782eeca75a60ded505c64df288d9dccfeace45070005e2a9de0f405a77edb538c809b1821ded0e4be517a7122ef585adbab7d1343e026f29e6433f07ceb90d17bf4cf70f9b554b3b278d7f2a03caaa6cde313b4817c75b0dc3a903d0d02502735afce1755fa0dc310905e40c2c416e03182eddb4e38175c1bb3d8564d9d3855f9a67ece3a0adfc4e938ff2f2d8c3fd7b270c55a089a54447944a28f7dd703dcc25ab223e9e35961267e7177a66734eb1d3461a335f232b8251d6b7c2e810160845dbb0f6dfeab0bad12ba1dc3dd0f54b9fecb8d1c4d6eecbbdde17978acf2c97367e25e49ee9232062460b2229718773cf9e1bbf93f50753a0b65621f55758172c42f08a6f336f26f7e9b68f4a8fe7e357fbde201917c59115a389f4a275939bae77123fc1577d8ece197ed1e56660f2800bca0a85c4f7621c096e4b7344a585058a0641ca187d7b0cafbfa882be9f5f46ab2151214461ba5b2885cb1289b916bde7dc4e617ee5520020007097bbed34c07c6b4dc7ec4f0096f95d2d09f6c3eeb1c5c5e4f47c415a986bf085c78c8fedfc1ce99a127debb52af8e87b6448cc1445d3fd27d53e15c9307c765748e3ffb65e42ebaa01fbf58e8b22c93be9cf9733876313b8dc1f3e7f20951122edf0a732770cc42a69c737b9ed574713a8eca1e22055353f9287567c3acf435a2f965b0e48f5268cb60fedbd945db4525c200da5ec243ad6b3e7228b2770bc240bf86c2637aaec953a4614431f845db9bfbc06b7db337788ec377083c9257f893c3bfe1260f6c99134bb3573d10615fe9376e7a092e771538d5827d132e2d0aeae2949753c1c322bea218e983290b8a0962e559635555fcdc3cd8f5aa190cdc1cc3acf55620f50ce683cf1f6eefc57cd15ef8d2e5fb3657f474b14742e1cbd5db860d2402d633adb5e7344db6722abd32942e3589ec32e9bc418352b259cee7f6223764973d4b6775625fe3c4799e71a5cf336099c4c6f3bb660ec9772eeb45cfef50c559f1d0430d6e4f1a6fc87a20c10a45ba4bcde717bad1b0fda653750f1b7daacbddb8cd85f6487cd48da6cbff8650d1e432602bf25d94928e5f328bd392880fa4e358daf9b867c57e557cfe65402712a83ba2d6dcf8612fc5b5daa031e48d952271b7c5ada7373f44dcb9d71950ea8f63c71104eec9b16a332f4a337ff543ab1d4924d415ed80f17ee4f3ef2c7196648b7823dc4483f15ffbf31112b8d52d514dc105a84b792b4357f8ce1ce6a2147cfd1dcb2fa0338f162d613715997a0f776959af810ab2ecfc0ca1a55a22e4a11f0148016c397adc8f2f8d4312cb54c6cc0c94e65d4870408ebd5597abd470760c8a973c4c5b48e85d85751b8085bb4cfd3a318623ae9e5c412a558bce11d2a5c9dfeb90043ec496fcd11bb9df68dbadd0e2330af7bbd10d949b992c11b28a6bcfe20b2e62c2c30ad20f1f1a5e4449adb349d3e646200db5e6f9bf1fbc2fd14b049f1fe6aa13b5058550be46e7cf60455b2512846229a774f32529292d997600cee3486ba4ee389a70ac51f9d8d2b93333d9cd52984b60ce3b5587c7186aca55e8e81ebda33ad416a021cacc9a8b4064d1201b4cd8ac930063defb9b80c233bf70e12f6ca16101bb904b7f24acc14ae49ee42e512a50503f202703f23cb768e83bc970938c7aeadf7409bc9af454d166ccbb47aac0bfa7b64c7438e8d263642a53e9fc59c15e575cb838f4687fb0480511a32ce53ca3b8e982ed615b875450ee997935d7ed0ef815c552dc909545b7762146c12e017c399494c2d08a3a49ba6be85db00934461238720d93ca841801b39bcaa18f44bc15b863ceb36c7224eeefba3f88d3ec15f8340e373087402378047a2886a3186701964075265d110a3bb186cc4aac32ab430c3efada9c56e22fa87efbfb505d0ed52bd569bd69f9eb0d0f8908a709ea53ae68e141163af997234c4ccec09f86a958bc8937fe969477e0df9eb4b88de389248eea13e4bb7c841420d943b76031da1ea9af586c09b97774eb58abf956049093fd559c37cd091bbf899063a555055f876e1517ce19c4dd61183e17d580e6db7866704bdfac0e87b2d154ecfa3b3f929f6456f92b09c39a33cc9680e7574cddcab90e6ce2e75dc8cfa4f5bbd1b82f9d4f9ddf1ff17b2282b7d60b3f29ef6af775b4fd28e79c10f82a9cf935aafe06c1d19eabcc77a1f78482ffccfbb6f7ded3d66d9624880feed39374d412a77f92bf2c5c724ab63efa993e0aa88cd1fa6e29930ec18a868457d72341e0f1fe9561ce09b6c56032589b70651009ea0a661c52b44345932910390cf66d3e2758a90e946e422ca2440f02bfa0402fd487348ad515a5016d462a083e948014b68f237da0dfa89535d26131bb4452778204992cd968525cf2fef182a73615fa9e7c42ca60c1cdca2c52f0d35842fe8450213ee79486136851c69ad4da1fa86aada214ee98982b9a1985620adc10b4e101f7a4a7e9df4e77489078ca1e489787ab8d88021b06bab7882a9d199f1480f85cc9424f658694542d904421914e17497cbbbbec801bf48eb5c02e1188873b3db210648e8f8645d3d68136e6a77c1f0258e8ced47a347ccac43a6cc5f1a064443dcba395ba9b81e553387d6de0d57a4615dec667f347d043680b6821fd4480d2de60882eea996fcc2a43d3d11add4aca06cdacb8be1e072a370437205eb0af04c832eb0d7bc86f301ffbdad182f8f578ed154e2a9f2cddcc80b6b2b376feebde20ad31fa23c6f527f56ec216203104524320a0f3bc33576cab1566da54d11dae0480d9bb7d24626211f648995dd1e46880fd7151ff8582815f517d748cbc938a51c32aa3edff8db794b8d316952a60dd88382be92470cdd84075a2ce8b9fac93039e05e458599504d0a2c96d9f256e139a1a1e9c5d65aabe7982aaa5fbc27df11b0baf66a87ef30da0ecbe47e0f6eccd70d0cf2ff26ece1e4a88b4ee96632410667ae342d1bb4bcf0a70ee889312112771ee90e2e90d819bc6d66f9852031bba5e72d6babb971e764161e3b889130eeea72435a9d3c60ccc8e2876e1253635e5d499ccf336cf24065b30c9086d1f9076714f34643221648e00159ee145b41a8dd4fd7e2e53e564c261d91cda9e529f699f04eee5a9c71852cab3d61689182f225e27b62dcb06aa4d0a5ef8b983f1589f13adb31477a3df5e0d6bb5500b8fc69d3c3286bf1ccebd44b79ef6ada1c443c7a99f637737b65afc08670208c71b0456968f99c5644c0d4bf10e397b1b3f4fdc9ac8511f33c93c5b8957a5c0ad082b25e1acdfe4c8e38fe968552bf4b47ea9b0aa460c58c1fdf5d53af3563d04bd0e9d76b22f2a0a199d7f2e7115d85bc2a9e47077810a00589088ec0d82b31534c50311edd6aabe9cfaa22eb31046ca9ead7d0053e2fca6585ba4461cf378d7d2c6b72ed1ca739375f032dee275c99c29dbcef95dcfd09564fe7b8f4df8e81f0a230c3c6766b4c84f22520666ae32f357c4887c1e24d82c76f7c5d326ee073cf4bc517937f6aa5d4f7ce274e7a7197fd82b5654e1ede6e6ba789087b37123e6a479ceef5e29802631a630ca6ca5f96dc9b79d9e251f85d1ecd6f33c9289fb30469da93b5c12ed94909982eb452927893c7f776bc31144bb777c6643d073ceb13fd13366f6e33933c41d0b950b3fa387e0531a0679c71959bb39f3da638e16956c37d6df158cb0f826b5bab7035a86194a6c508252e38291351e818d9b3be6e5669de231e98ebb8469d4b9edce7810c5f672c1f494519f801c16577974a8fbb0f60fae285457435a87d54610ed20c7b516bf250a0aad77df4a1b46e3b9dbca9e9c7664ce71fa6b78a7fc1a5d889d8259c4efbde48068a98d35b42e9d1bedc6f7722f582dcb4826eb59deb91a358e31d4f2c168ca16aba8688b366fc31150cfbe3ce8723db58fd67ca244a2f500655c1a5adc26c71fa9ecad524dcb3e9868740de654bb371fc1f37617b9306fdb4dcd006bcb09d857aa1de88f49e61d9e44a8ce09c6dbffd47a49db2c8903bf3479fadd3ffa683c7ce9123fb5b7a71ce6af57f437b2c5d01a9d88782dd58f01e64bd01fd3784dace25ee58b00258a762ce8e2c2d45bb8e2bbd1341b6fcdc52cdc19d4fe9abb7ac879a9a8bf3c7768d136bf89f2b96b2d2f68dbfa1728e0e71301318b7b48b54f8e1feb3b0f26acf7980a7be0cfe0cae0c336ef611b85ab01470d8ce29943da89181948651d1076c8f2af22feb76d50c00ab7acae4634a5df5952008d0c47bf5eb91433a7b5ed9fb096d9e8929b4dcbe090dc351f199bc6bc204c23e144d730ea4105d0806ebe180ca764be4412a386471438e90ff40bb2405ee71a132f3836959fe5e4c2afb84955948daa5f55df6b54449d73c7528de737c557ef5121469c80f153885d40e8eefe1867c5702a11cef2c9142d561aa651e8960a9adc79539f1acf672b2dd8908b82035cf78b37d38a89ac662f5f82b40102553b4b8aef1c824c9de3a66255560a122dba47a213a775bab2f6d13d2e1b8c9f41fbbc0a77e77d583f2f5024d1c284d9b7fc57098024ce63391a303774404b5618dddb19e9645ca7766a670901a809e4cc99d15550aa95403ec1b4b6ccd69fc2a3547ad1576b0b8acdc9be465c97f641ccf5eafba884f8cd8a3aba581e10c83e06b7694af9b5bff42bf2fee88779285d9571338b1f02cf1f0bcef363f5c9353afad54c63002af47c51b27e1b27877a6f6dcfede93c34ead848c52d08f12fc416ee4255532a27a2faaba61c17fc667339f1b7476446fb63f5c4cac7c939eaef8f34c97536f970e698794c02e43049d2af7af8569151912f656aa18e2b793e2c3bfdfb23c9067a086007f77f61168dc91cc751a1fd0341f2159f111339537a589c393afcb2d8d6bc6266c0615813a0d0bd3a972bee74e4f086be986632a3bc271514cd3034a8e9b88a935ac90d4b50de1568e62b11b60164f94dc44a333cd408499fd7fee046e2d222d29b844db5d077d88979f387251863c10f9192e4a50e182ea88330f471344a313fb411ab4517c11bc8d74f68b3c1524fcc60de27275534421cc6c39c29a54584174dbccf4bc346384916ab1353e3c0dec02ab02eea77747a4de5bd03028d8607e98b3ccb5e6be8fb51463229da5960a51fc70dc00ecab1eba1a8bf101078293f96edbd514e0ebfca5ce75f914c17af4ac2db1697d1fd227ee7e99596504f7fe9b0fdb7fa2bacce392e737be849537bc1e48da507005588a8f1317d4d82219dc3cfe60951243760dfa91053ac054552716a8b3ecce394294e04ebcb87915481b5edf4cd7006aae2f555dc55de499ba0d09990eb1d99ecf51c5b2a95a1923f3dbe20a2d5a19497b9e9df5380ef2798234e7201ab706dc25156258af37ff21441c3ea1423e3323e251ed505f90db5b135779201da6213e188b13dca397409316827f617122fb64b4ed5b98b1a9e1e424daa9d659c12a7716fc3d9f2c2fd66d5e3990f9f512df3b233986580241aa2301a93ba054bef61cc99e40c8a3f268ab439924a509bb0da4a3a6f2a4e5e24c938f14789c3eb69efb2a5e5747263457c758a137b2cfb2ee4338f554ad43e8fa8e5519f1611c227e08e2474aa878eebcb61f3f7d38e15ce2b75e0501d6b0f06919cad375c1f5d13f109f8c13e97b1f343296eed84e39d7638a7687e4cdea17763787326cac8eb41cd0f9fbf1ca77e62d62daadc59c502d079849a33f79e95db2bdc3368bbdd22615ef24d466464f586a697bfe32a1896536200ec82801a3288a46fb67db0aeae047badfcee3277768d6d5242cc2d33b65ff39bfe8798df168bb3d2f5f942e8107aa3e889b7563f9d04ffadd7576908f61361c1561b1885bf3234ad3ac0338c30e501788873df148b2775d6eb8dfb61aad1f71a1df35810ccb1af59d65369155e93cb92c39d3964b47acc1eff0cef1e658e4d1690c82c853b43869897686d56b73e0745b5f28efa244ec8d282760a15e9bdfd313f0ae141f45ef0b639bb69f4d82775d279fd4e3c85bc66731738313c819d431687a13ce030b14f6851fb133a25c076b9010080e1c60f92811201730f60ef9a3a3edde75128d4c64382b4ab89c07791f25a7061de4e5ee2f5cd3e8b3fc525017b31c7bdd23a23193db7ebb44aaf487d16c8dcfb1327e8c7564d922e58eb5aedc5c2df66ff602d6c56a295a4fffa7cf6150a217d75d92afabd173911e8ecf201a87f4bea1f3b76afe3be24e7056ed20b1f6bce446d02805f6c620b9d37f0b26521e9459fff6961abed4eb58cb33147f1bac36d03dbec6d7ac2723df27d3515d7295f3205a4638028562d7d795f79e3bdb6d99430d43462dbae488c95f42306bda92607fd6cbe4eae6fb6a2f5710da92efec3fe6a47bd2d3a404156b56ddd01b5099ab605175e32611e6cf3b790ae290db9ae52e715f00fcb12c2deb881050d35b07df38d980604df94d3868535381d7736985f7d7375171f0b996f6d7553591889d4293b6906940082ad61e247ad4c2a028f81e210b958e9e0fe95064e21569b3a2138d6baa73927659032eb9d67b7f92442e43ca321969139f9088fe0cdd67516939e97870f8e421a3d2cd97d8b35acfec2b74f7fb1ee41ef99ea31ad3184f8819fd837138d91825ea4c3c915f8d2890919cced4c4d9e937577c23bae46262692de9aa3bacb4fc8dcb2f84d7c3694b7622dc387c04d7138ed625c87cf0a81b6af639d7b9aa3670921f423de4c41b40d5dc0936d0b6163041817678b365b884e1e974be6c41269208080345dc8722dba17346319957bf2ea99ff4fc15c017a3e12ee092364ea769f5b9cc10d21789d3a799639837b755aab6bdccc93b3c0278efb5c086fa709f370539afbc260330110fc4edfa8d6d67e9293a7f4545b62023fad54b8664220ff3ad24cc4e0b11658ca0a02fd28b4f4c25457ed34b2127ecd5b8a395fd37d18f2b0f42b5d8b8fa7aefe50ad8bb7b39966315c1ed8394fc483fca94676a39162378b62abf622ee663eb4a9a89a74b1db1567bc42f5bc41ca8d248378c3c286d34e3c0cef6fcd8efb2ac91d609546e462d9f45b7dd5b0931a137ab437bc68c6aab27968e25889510e72ba0b310583a5d348ad9212b5758506d48388ef8a805e3c08cb0730ab9adeecc58616a06103ce82c32fd26aa1111c15533e4fdf1d31ee1c1a9c6a6eaa9a94cf30b768cc17d7986b730c44533c3a2d8c82bd9f62778ffeb3c269ce2938ed845971dcbc34a4185b8fdee09ad7a58922635da6e01608b6ae87de91aac16927be8a4c187d8e5e8f26bb52931fe2aa6372bda8ea59c5ce17c3b7e1b944447bcae3c1cbe89b9b208baa6a79c6f5b976777f8410b5dc7876eba90a695733a5ee2a67a72e2f10e50574e89c684a445dcde39669d28e46b54bf935ff13d0bcb243e1987855aa9df858130ab670b93e3c52a1d337caa0090a0ce511100ccdcc9fad590d41e980d346692e0bfb4e29f0d66c57ac2c9bd05f9a7862ea08df5c05fb0803ba3cd1f3d04ada3df9968b057d55fdff65314dd13c51183621d969fe4cd625bb0c92d0e5379238b2fd48d6d5e39e04f1d54e841570e12ab4b33ed1d9d814169da638c745b547608280e68372aebb8902ab5379473813b5a244fc9d6d89c4e5fadb1ea3d0cab4ff63e84167f7bd03d7be33211f542c77583b358cd2ce383d03cb6ea869a2cdb7a034c2cd09b43699b191edeaac41d9949f7df8c74d7869c1b69f89085ae9fc0cb4e631e283c7db8f9357cce7ba50090a9e8344017e6cd3678b082dc5512f3dc1dec060e0e3a1158cb88f736168cae87bb9c73b5c98bf9967ed41a0c8813a59241ffb7a17910261065ed942b841ec8b3f976616d879ab02227a110a233d03c0743b75f7a5cde624f197dbedf313ce6b23e650e0d052a0a2df074209bc4e21de489218b711c86ba1712a91041d32a808f08937a5db6275eaead1d37779e1a24b74e245a024b012eeb5662c33c1021a6e71061c525f9dfe0fdbf4f25af85a56812fcc8cb55f9c60a5bb61fa7bc6a3c3b17c624999731273a8e0823c1262357bb38c3270c00190e2eb2d40440756b948a9c220f4c44025dd0857fec9289ee89ff72e4478f59acb12ee2b26ba65d8cbb0871c912431b9d898ae3ebb2404616b68c995e1824ea5e31cd3183c121c25e1f0729ea01466026812e0defe54aeaf2dcea5017a7fbf5ac771faf0de07be0fdb940077cc6978f38f8a2af67c01c507af6c21dd5ce578102fd98bfb875221ef02fd8688c0ba6aec034188cd1d0d26bc04ffe9885e0d3bcc20bf9f98bf5c6daa43adf61d08c54581d1adbfde60f51aecd696a47683230192802ed557c5beda017e559285b05c641f5f74a5f14b99fba652a7766d481a9af025785161be0eadf09f2d9e69955baafc613af0683a0bd82d4931a3c7135749a4490f37ccbaa278515870d7ec365c01e4d73cb013e08eb9431bf3760d30aeef0ee51dd01ad4195198ebf5804f75db5bd75764d83476b425509bb57e314d7f7b9cd72b0976c03340a867e2c1545cf9f07c5c97bf5eaf73ccd6887b394a366f1c9d16890012e03edf8aaf8b9f89828fac69aea66457644223a1e9a2ba5f52aee2fd0469b35a5787089fa4b35312ddab0639c4c229fbb62b3c3598b5e8e7a18d72e89fc5945517ae023f1c00406bd7225e2001c3088547d5848d9ae2007f194d39b0b4f5ec4f10efa9c80027c33c699b4630d01c9f53dc7a85c4548e57168b2666b8edbb12b6fc793aba85475266625015bb7b88570d4cce563de192b11a4530d48afdc4d252bccd7a525724d146061dca0382c761678070d2575d4cfd027430117b1ccf6092b69d0472d4d1da224a1a60ef263d0bc63359c0805f93e56c2e6632ac5c42ec86851a04ce44bb37992356257a273897e1389548ed1e8d6a59ec8c555247f9f8e64d5b8543cb70fc35ef963d076632b8f75ff98af7931959e6b872c3f34297dea891090225025909b45e38482212a3bbf2384afdbc5c90b1a4382ee7aa995ac48cbbb0c01fd75cbf1cd1e91fca5e9e7a1e4fadbcdb22dd86bdf41031994fc912e3516cedf4f15e94e498d93ead234dcb7a5cc46003a6179beefc67e0a5aba8a72cfb970299beee05a49c947177581bc0722da2b435b2725111c573f692a48e07aa15656fe2a18128674729b4e012f1bc1112856dc43937b885caa41ae64eb0e7a83de16a77a8ac2104b98d9e3c467ad61301eebe1e32c42f71bb90bcbaebbac95528f4c88ad8d00b3048ec05eb2d9e19b31ab7bdbf8b7431b87b64d9d9f0d874f42b1f30e26e51579897447fd1b523f3e3458195e8da61c13121a48eb99d6ddb8966c2db43d46307e4c017800094bc56c17c0dfe5a2374fe3334cfaba0812d1943f4d2300b0d2d54308253940c112006c57c3f29b99b5469f2cc7bfbbf102eab6f3c98e7859057497f8b5168510d54aad94196eb653b1f1ed7b1698466cc7cf07f018f80f29e69f6575dfea16a4e6e4194e076ec25421f0cf08d5a506cd7074db7729b8467c625c684873189fe5188da42ba3f43237699423e05edcd5847ae2a500379f623f8786575a74731b3fb59e2083f03345d03fbd2c87cb077697650506ebfc798e821223a5c37167965d971dd217b8faad9f3caafe299fd7fe925c195d0dfad7c2d46e2fe384c187a1e17c1cd97b4e4b006ebac927d3739664efb8b684b4138d299dd565bcab710a49019f5db0fa8e9c5cb92c1cb42367576165612a23a87ceee4e1b29c92106a62542d8381311efea2765108f55f56a1db6bd7420f7d25784e49f1c0da63472d97a68d9ea99bce225d51812ac294c4b219fd00046b948c763d4cf79f8e56f9ca6fb797730fae02f64f74a791215fc8df9224470ef85e3c36d36af61ca777a8635eabf0b1e560657827b48cbc933216e27cc892ee939ddb80a5a204b149af85083bce480295f55e43550adfda10c042e98f14f8d2011620a1248a95f6709a3639d58fff0b5f937318e4fa5a7cb6f096160956aa51de60f2fab2a6b855596d2b2b16b55280756baa364245cf2d7e34749c741f019719e5dc4a02f25c0739b6615864ec5c9cfa14ce3cd30da96dcc8f79d43bf0d7ca7dad68e612a4f5de8805c642200f5c0771f6bc134421b96d25c9b3dbb9d6cf82d68a79f028dec852d5f68ec97dbcebea7b7e0d43c133faf5dbd83984e8c954aaa4e0cb7039fdcec53ab7a134fd0daae418737d22675a28440a4bd7d164894851ecd534ba0a0acad102bb5e064c6280fb39fe0ade056d56a7092f6a6d27e4ac1f342f2ad4f19542ce66a2721faa1beb422e3ed920fde86541080ca58eac3616ef0afc676281d32bd6e1717cb3cec644e716be000ad2cbb451e5f21ce42da117bf05bf8e7ef6cc17b08d2d45027589af3d6c9a4328af7eb0beb4ef1acb92aa52fc6c437a1db4c42953b970f6cab05f3430ea76ebe82c2e35ebfe8bb9385eb6b6246b0a9f9e546a0a7108f9c0d580bdfaa53a59fb540031f6f4a8740088d6c406edea876fa9c9226a8c4c3a644bb1ec4b1725ad67240e64c30ffd031d1a64ee8821f1028f1d31467623a02ab11f8a95327bd3dd0623928068b1dc71cacb6c9e656e33f53e596e35751032f95002dd19a7c26e4a89d4814cf5ba18a5571ea4f66aa6aa3f4ca560c9a3518c88420fdfa3ad73f40a37b309d3637abe10472f674b0218325f2505ac0705abe626c760b4fee687c10d95babadaa96dde68d850fc58b79c8cdb76f11ddef576e5654be5c2a08f4f1223667de5a8ec9a779d003bd872215cf2a6c9c203085f2f8ca5b1ab9e5f7e95ac1272f5e5b1a0c46b35ff56869edb2b33838fab9af2ba46e95a910dacd9b4908a80728d865cd53ccf0b2e85b1b24a2efb34948b20d6e261f4c8fcc635b835c1f0c1495109a441fa5de77f883830c67d73e9a2b08fbbb7ba639fbc0c5065bc7f819efb72dcc21c867c722fa6c8fb6fe8075552546a4231020eab63859c8e208565eecf9d95697d6d60526eb683574d548245e093730bc638180d8591b40ee03405ce58effe8868f146d2af193f53a3f16c6fb0315b61baa700c8be93ab7f60716229c474e593a56fb8b2dd3a8eaee41997ddbb720e880589eb820f4a4d9caa6f92d434fd8c3a989a81b0e54a7dc2b94ba510f22c2fbffdd67d88e45182b11768797df65bc6f13e062224ec68e5504293c28f6df4f525ade115060a548d770925931175c59e87aa67aa90b16b68fda1405af70eb92dabf70634834c539377ec8f49d49631c3eabbfc61a78a60ece16a4e6a602000961361c2405d5c7ed8982151c30e007465b3b03ea5a85c2a291fb8ea0e08ecf99fd2967ae97880bf9c23c95bcba29542908f7615933d467646030d77eff4b743e21757f19ce9f87b279ccae54d0700a124290cec4019318ed05e244fe3727fd5eb01689f9971c857b1028cd92fed413e47887115e7f19bc0b6cdfcdb7d149ee0cd5a090298089b85664f6c453fb86e0648d41fea9995159845165078aebc393d6893f67a839cbccd847eee77d5856a3d0b54469329b8d21f8afbc86f82eda7d4a1a430d0e6764aa00ffb17afa180c11383d8998f11b580138cb69f7f16a14f31a6e36d24e9782d5164a9705548c990374f5ec17228d75e9662c9b032dff39e0dbdcbfc5db53deaf2c955738b12e6081da7ff95d103190d031c4f406409ab88a205c387de2e23cc5dcbb151b18dfbfe472841c60900cd93a21c7e548a74ab531ab1f9834882fcb5e2455d9a89bfa14f394c62cc610584a369fc5578d53005d9b2cb32deb25f62827f1ac2862edebf115f425930281ce46ae80b751e9354f1d75d3890afd3490b7d3584514b676337c45b5adfee645b2ed4ef884d38488f9e1361602d91797472e525d7617b0a192047c90ca870b79e2666f7fe1f91580b8b462bda360bfd71666ce57a97c73523fa425fa1fa11925099c49a68a353bc14606085b960f59978763b8de076e76d5f5127915ee4c1ebd61f6eb7fb4b33bb356726b5b9145fa5a57cfb7ed7e288f9410f509284f8c0defa703ec573d5bb3bbfcef252ed00eec57eded9c64982ce2fb17ed3af00f23192421ba3920e6801ae1d5607a66fa8478e9cc542e7f02dbba2ede273462b9df24660e55d227e903b3c2775aca444c439830a92bdf094624bafdc6c7ca8bdbbf2b236a03237da11143ad30a41509e1d8461ac8c7873bbdf34544331176c49d6c84c01ddc9b9fb53c1c70461ddca6090f882244f4bc3653b5df608ab0bc081125e680db1d7036f7ec21a15eaac4a310a0d294995613749c9c61acff46e43af02a5dda2ad034f1f0dddc89e1fc771faccd750a058cc0d78fcab2a590f7bdf8e88b12b5fc4a0adcbda98d3d7986b26265d3c5832cd81fd37b5d04ae00ccbfa75a091206290eb1f75364fd767234fa60edd5c327f7bd510be81f9c6a050398bcdaf7e20802ddaaae7f1d97ba15736382c47d4b90dc468d0477ac0470d5dd26b6eb8d4ebe70740c6d57512310263604db3e3d5c302e1ffb781b145ab7efb531fd32cdb38434a769ff6fe36b7176a54da1855aa2ca245fcb1ae74571c643ceb90c0eaac62715049b9bae70b07f98da506868d0de3131cc02fd62d97512761a856414cbb35be2daa76a6e2a0e503d60a52adcb6e3ed2eff4703b01c5aeb5a240eed4bfe9cdf796665f90ee45042e3cd728a6fa32f16d45c8b8c452ffaf03e5b77b00aaea1264fe7dd16bdeed3ad662940317d35a8c1c08439c6f825fe98e255dda35179e717bf1eda39f2c80b6913175c51ec0d43601836db1f13a0eaeb6931bde0f0ba3d9ec5b4455b1be483211ab188e7bc722329f2f07dfcdb8d981486f5a1e609dc6fbf6c8177243e433140330bb84db97d98104f218586cfd7d8ae533fbf4bae653f331321abbb7e39b6e6683c5d9863f9ba1bc9b457d74c2452e8628d3717b83ed2598ae41790317a724a1f9fd87beadc7a4b5ef7f7ad0e27f54f82e93c96485cfb7d2dec282a50b6d72590f308d7501c28d35c7774eb7f6cb541e5d316f9338eda8ac1088d5a8278900a725d0947428f0a9660b133247d6869cc3f13f5f86883da4ac8284a9c0985be6d388581daa636d3d535f5378cb4abee7c18b94f905ca401745b71ef1d58fc78bd57bb04216ad25c3d5336b71bcf38c5569703981e165becb7a65304077601679282e684cb3e566c14ec7fcab2535db2e5490ac47c9bb9b6d88a30d920d38f1f11988a39970745ab93461ee4c9fce3e4e0207046af95ddc9a5f659ed0a9982162a770cff0df8a1dfa66c553143f7477647ad4547b3ac05b4706aeb3663dcee7a7b5d028fdd82a5644e5bf1fc9d35a46bcc2871d74e95c5b4b65209a3a5b4131c52d416ad667e0f924e914bb290b10fdebf3e90eb09f8c5328816082c4302adbf373c2ff256fa583104a5d971dfc01d9f23f5834c95287ad0d15d1dab8f970bb3a97c5f60c95d9abb599e39abcd2b07659dc79b5335d7d783b3055b655b8c065ae169c4d39b33d0b8c7e28560e8644bc94f693550679a6cd316827706b646e0a1e9f96be936a48cd6327e23a26fe0337557aa8aa7e25152744d0b9e945f304c852ad0074efb4bbc32d2bd7e28670cbf39814e3528bf2a2c3166931a261ca5f3ccc4833eebd5319b317087008963cb2b4eec6a066834ce8a8a7526ae835bb09d4c7cd9c51f58fc5f8e99a98aaf0f64877475498d4fa04e4404c718a50392190b9165d1e14a4a4a6d051c94efec0c75d451c6cb16c3ca5a9dedff42d1b9c162d12e5935f94366e8e7d1053c43f08c36366ce0ee41e0912e08c70db5643ba6b61c95dc8e052148b01938a201f6c3931762aae5ce3d67cf7dd9aad2b3f790ebe69f7fa2576e161433b91021e5eb3f5b62f3261d5227f6646d878ead42861c4d45b5bde6148116e415635b2b61e37ca209a0c6e3efb00f295b6af1ee254b84d5147c9caccf42eb34a42ad6c7ba217de8f7411723dd151eb6b180ae46ed7494e78f68df86be5f1b2677694099a5c755d1083bea7610a040b84918dd9e4cfc245c3251b3d71044b8fef291bb1310eb8926115763346c8ec36224cc72c3f3727e272f10c4950aaa8cf49c7178c8cb1db7475fdcaba742ef5536fc89d0f61429e1df70212de14e2fd2a82a9773156bbdf03105b5801ec86358e1cc735b289cbf6dd6f070afd858895bf909ccb102ae4326c91808b89d603f877febb9d7421d2a2967910ee45cdae07b70e278eaa7bee80c99008ea64f8b1552c77ea17da1c8d2635172a1f5711a3668b73842c7470a053503e1dba3b101ca16cb3f5824d190989ba35619b6cb1151afe54e59450c1faecfb17b69ebf7913b561716e100226f4a46fe65453e3d90382d5d253e689cbd403be2c76dfd89a3c320e960ee9e21bfc08a8523741f1e4fd3fbf3cbbc3da54e6c317648b12778ca898e4099ce6d5b84d3413f89edf770349390a7507a2d57d91c7dd4759e19690220503937cd435724aa6b8eabb02936ca2b189de9e85d58c6457d9bf01187cf3b2ddce343b86294c541040b3112b2690756e27acb6fad6c1807b7841380e7b2f890535e8d4db3434569b5567d8ac81cc886e9abc15e1803dbc868938c3e7e05c93efb5657c2954b79689587bfb2af0d7343f1e31fdfd15d7b1a9f31899900c4e74cb979110a10af6939f0ece467eab30898fbee722774ad20a4b37442067e993e943d112372f3cf1976db38897250fb2b725fafb89535776b307cfda931d6505f07ceaa042aff9d257388fbf9ee2ac4818e7be9cd0f53ad6582f5e09eab6064e035b15b77507a6d4af764f1da71dab69a8fca4c0f693960401838a4223e847d39f23eeaf90fbc3a0ab354940a078ff55404ba2e7cecc16a5e99f1611cee26fa70cdd4a08841491a34e683915ca0fd7ef6efe12bfb82c7f434fdecea43390089ff7d5fcd800b04613f4312860e54565cc34f1179578c4728e2f0bec1cd4f21691bae49b256ea26ad9ce281dfbda749b85c8df1b045584e6e38c450a9238be64b45f315f2f2672dc5ed222acb7c59d9a3ddfd1cd24f41c117408fd9be39c9890f5074ccc38ad094830fdf09894754efc5c789037763daba133bb24b8b7463404652fc8b3b0c4e85105dbd1f27744af3b3552c0da1b8492571ba05364fc68e6f9a048b87833d1714b7f8083b38e6aef91dca2b46486ab80757d1e054c774b7f551e1dcb9f3efd9c957eba54d90e565f73b5bf8ec711bd32eaba680c02e3d0a2030b1af6bd2324ad2aef30d5cf2d4dd69e8b51cac72a86cfc9c426836b3638a166cdc956658a16bcf33a780201f85866e7a73f5f115742acfd2de9140a4f0b7529f3687b8a15dfc5eb64f0f30c562a1c43dc0d4433d67344d66cfac56f0ec1364e601c2e00a0052d2b01dfe33d4d467ea0fb714f652442f46dd4afa5f4ab688e90c8cc93bfbffb40af3ee744a8351538cacb5c1c1492bfc06c7c0f4794e6150bc2f1c9c98be4bf076b0d877a108a82574bcaefa1a2a14f98b0a9fe9738cb0843ced22cb7a2427af9c0e46cc0ff50cb0a152bc3e0e27fbf04f7bc4c4e3aa0143e57a268cf32fe441f17814412bfdc335cb6810edff161971a6e9bdc3f7f1aa9a04c8ae24c27e4c4ef995b922c2a5146a90849b17e85afbb8c0d9fa36e020e7044b89dbed2e7d4653b8fdba4f2d8d337aabc7a647ba144a7a362583b0924fb93e07e55345d35ebcb074e27c1a8e9267a3c5cbc1c1a4c7c09a6579ebe10ac72c29fd1c6ce3fc4339718b8180a74fe98b91bcaf7836e64c64a9bcc63ddd0ac63da204702113c1109242951ef192454765bc109f2120d84fcccb765f83af853c7ab928dd5a153b6db47faef62b8bb0c53391143e2f1906b27ce81007b164c4cdf6e846dd327f53ac1f91bb59ecf53c9b3190e13d4eed5785504ba2fb4556d40e4e569358ce38f0416657ae93d5e0172c5bf78cc7a8b884b343c7b19f73703a6b30abd1deaa939330f8393e4619f8d82f1b8515dead27675960479ed077e771a39308ef8031e94ba8cf6a6d7378d57fae0e9921bb3019fedca890491b1c8c2b418eb0821ddb6b717a5a53ef03dfdd3ec5a61ace021f7a11ccec178762a60e45da8c7e2e181c25db0928a797b794621e2c99fba836e85b23df70485d96d950dc11c7ed404e12a7ac24cbf1559f7dbf1f8fab691e8e9b70681a06e77a4cf00010657934f937b98969582bda44c56a999202b8ef32668919941e81867e2d69c083356425959b4370ad074501917b756782da18ff0aa4169536ad4ea2567ef114e20f2f49ddf6e3924b09bac15a9fe2ffcf5edaca811c7fb5ff569337f48718a2868ea9b3f0d8c4f41b42be8408591560f57b9a3d87d2583fab54d331a6ac5bc2c9fef40c84c1c69bb8ee619a1e6402e7e0111cec3d44ffd082bab180ed0516b253883596d9460ddb715d72be64748e7e01511cfbb5aaadec01865e8821ba6dba18056695d59c972e80ad24ce2220f7b63cfcedcd3130132aee29efbe328639a0138ba4d43838703f83ce2082aa07acdfb17d667bb3cb912933b5348915a7b46eac0d3338e1089dcc79f315e5686adbcffb146a9ff114f3decfaecf87c4494c239e70e36961dc9da2e3622efea846855af52beb57c1c8ea4d2b7b7cf3326334d3de542b56a3cccbc4b92846d3d077e398cf54810cc67e4fb292daadcb5d03bf8f8b3df9ce9a958fa4802922cf6b0d95f8f4134ee38c61fea629c67f86a2cdddca4a557e8db1d5e66c6ba9233fba5a2fd15243ee15947c3d3cb267113d4c4caec8a0982cb8cda24a9cb04b67a6f6dd882398be92809989196ca2ced4312befd36c681b0e3471e2ac073b20b4aa2f9489da3b7f56350b8121ebab42478c35196ec59f21eb2d78012f7adcb29958c7a4a315c20cecfe14fecd02c96483dc4533687855ccf804a599b4ee6ce0c9ce6ca9da0b7805e5db4d695bd2e2698b63264210b473ec80146a2a4813a129e7684ac7a6a88ade39329b21b0060ebcee0ea3ce0ee1c6a1ae82c6ba2b472ff84d75f4c675936893cb9c778efce78ffda136d0d0963a15ae95eb4940a09e321e2d223839db24c6c6953942a8a2d194e21a6f55b3237b86a95ed40fccd7c2b527738c7ee50316f7190e14dd5a501fdd953f558b6f98177cefc48a11dd4b6eebfd732311d5f3c2cac6385caa1eec7a8d42bd06b0f8e883924ab8a5f1f2d0720ac7be9c9813acad8e291219e55b3b1bdf7bafcb0c67fb502356cb295034cbb7f4bd1d3ff13cef1639e5062399700985d98e6a421d0ade7bf368844433a178556871eef5a5f70e426343f6591917d739d6300c262c1eb36a33d889d7eb2312ba031f46119d6026ca4c6b21426dd7c5708b25e02978e3fd7706f6aa9028c067d17d23b7e8da35f2e363c528d87ca8f2c9ec1b148a6f11b5b3807fe8c1cdfd7190350c4d2886bfd07591a1ad39d7fcdee6fc695dc1e8a51194fdd5d7a225d60b7bc2d01ea0389a3d2f6ea13ddef3e9f9e6210f4844518e48a29ae9649b8e16a7f38485b68c96ece5f8d9e450c45ed890ebd49c77873fc607fa03c5a19e161c2636f5a1776e6b57dddf89b9345c6b7aad639916b04390def7bdccfc549a137506fdd11e9dd3047de83a19a36824daa696df91dfe66f64506b5593a48c2f7e59e65b065f080ec2cd696b57487b79555f9c7845e3073afd138810aeabb6278843bc27b815744411053e65da875e77a9140e8b26ded049b7aabb2a4f6fed79557e445f1a91ee81e879d27f4a85f1825903291e5bd1a6f36969a95499a0d186eeaf9ab2a8350a99710c79ca11821e6357c82f18b1ad8992512857d8e1dd441ff96018e2d0e877fcdc8d03503cbc21625b636a07a435f521b486508eeac9d4221c8d457c6d18043e243e6929810265a6a7a8d954d6d6217f928807c251513c05049267c34d06be29dae3846efac1b87b13436aff9d06a777ce85e227b7ae753bc0e781ce6cdd3fd1bda0a0c491419ee9e9391af15a5392e4b90d86c3a0e98c0edae3252b9040b9c8f40b60e0e39417f84184a30f89f99697d03eae566b3ffad27f9bc3152a8ee81dbf1ab9b480592c9df7e4589c535f77a4278c8a4b6a0c61bb53e497fb2d3897001a9de067f1965449e929cf70c584b7564bb838cbcd2d5d2e40641f902f5f8a5c4ec8e44c5e24ac15b4b00b3921c53593bc91854f01847a6f0b0c4636cd518a5e45a9fbade2cd5f07dd1c902d8f87d34658f2a3776490ac1c0f77972c4adad001ead90438fbd21ec44e71d92defcb0654b62ef3081d7e718a71c0980ebfac7b35ed45fd30adfbcd640dc81a4b0f0148c89447a2a84738797e98bd81d04bbfbbba24b29fce855d6059148edc9087b951f07edb5d6560119f091043214ce9ab3f4b5c385d0e5f513ea7cc0df0af321d05af2f435110bcc4a8cc11817c0062a1e7405954f01f117df5f7e6370d41eb916f5ed888bf230ec5fd74c50ecc84fab72feaff113f3f481a9e0d3ba853bd252f05d1d1fa379b8095544c38292842e021cb0368f98637bf18978d331210046e560add561d5d5689092f576e12d880eafe9a9f5acdb9bedee4bb185ad57933df3b5e22c6f367b7b5dc049f923da28d6c780d619b65a4515b0968ad980625434cb0f7dc08557c34d819ff1f319ed2cd089c064363b58de40db6f46a25c2d032978882dfb68f83798fbab5475900bb32e490f27ce6b52af6fcb4227e4b3c3ad207e498bc70e3af0d8e993b74dac3358c71806e6c1a3ddd434c53072926e37a5d966a018a0f5146d285f4586f87c0c3f99697b2d2d8f75e1ff775f9b68b2b0b48f06cc5558ede8ab71d33c8688668643f5c31d2968dba15f604951815770996dfe703ac68960e483e41281d857ac96fd600920e2185c708bcd6f42617b87dc4f5b2d05f615db6973b394266350de84c69f84a961757d485a47a632d97323319613aad1524fe3abd0a00c633cb416b2cab8a709d9821d8d7ab05127b8224feb573caa4aa616b84377b9eb96222fa65094e9cf01cb14fdb36dc013ab16a285c51ad37479905ac332452b2aeec6126a344c2bd061a5b0a3c48db472f08d63bc9079d00235165d615991ed92103354eb0d4a89398e08f40131e3cf43b520907673261f0615e8442c1d3f205eecc57aa592d2f379e0f81bdea1bb89d407d4836c15fa6f7c024f0a204df4552637a8b0065fdb86be2d4d8ec27d588f7bf4f19b926a3c9b73afb7b0cebd37273f8aa6b9fb998805ccacef455422f23e1df8ac5e43c98e9b6c8c72147011cddf785f9836c33447e5bce9807adc08d14d2233550689deac8b9de3381cc4b26b71c497afdb5084a75833849b3a8c2befe73b16a84dce67ec7387b4ef458bff91ff9b847c5bcbecd3cecfd072f39a955a3e7cf4a4b397a9a8a93a39da218d23df1bed2887b5b5163eecdd3c2ba518dbd25a2ee3d5dec7862bd5cefc92ba421f98d494ed7d92b7c6c6b386f0b446a5f5283375a7ef0623025209bb0da12d03b40c81581a7e2a6605efd39783b989127fe1ea82a4694a9b4909e6a4e6ecb65a34088398e4ff545286daa46421b3d4f07e9db9cd7ab6e38ee0fe45a1aa18ad1ee2b41ef3412a1b0fb97e30e2e6ece2733950c79c478fda75dd49c6ebf90eacc0112e8c820827d7123b4bde207c873a77790b426c72441a63b7d91ac2a2bac5933442877ef09748259bf7cfb9d63832515a6f39da5c1e75ff043f1f214c808e6bbbe2e111d82e57d72c163793e8a2c81535e520a9ccee6183ffcf90021712feb0e453ecdbc7e7b45e173aeb528953477056830cea7ecc0508da6f553b6637f104e246c0c34811d45ccc3fbdaf7e4acaaf4c7ef501dee3a82b3d73fb243dbe8ef5991b1332977ee0b5d71d132f7874173eca8ea56046c90801e4aef944f3b1abf0f685eec7001e99fd39c0891427efff1803cb3ff91c6ef452874860fc6e86edd524cb55d54eb09c1855d7a42e605e298347c8662c475cd90a249989ee98321367b9257bc0b8ef7aec3f0a57a282875a15f9a8ca48987dda280de8b4e49c0ae00fc6f58bedb14de5dd339e942b2efa4730721ab0f18a0b0ec08f4cae34b6d987fdc12cb6b153f98c1cee94f0982fcc9726ecc1515fa256b0036a639337284dcd4b414886ed6835878848e08321a313c2881abec3fdfa2595009828ad1a7e74bde0d0d8572ccb223a7d552c667a490e6806d084f5742f68e0a173558e3ca10ac9c44ecd6310426643accb4942a228afa7092ae3903229b60e9cd2c39cbfb6bcc9103916005854505a4ec4bb167c5dd8f9d80b409c0eeab31cdbd5e5155474ed26458ca007e6caf189048b20eb537a7f000ac182b52c2ba9a2fc6d8331a8902dce91cc1fb14878a0b753b02d19a022d0d24e45c46528ad4a417cc2e08c1360792e801b2b5dcd1fa0c27be628830052dad921b99264276ad24a91d6dead3702d25512bc24f80561b7fddee1d302d5c16882096c9f1390d15d5d51df58b41be44e3c66d05f51347a5b01efb900a5f90985e4d4866aad8a71151e2df6adb3203113d3043e74f66bb0fb785b9526a3140429e4a3b19a2c7d521dbdadb91e75731eaee7707af432b0cdff32fe5866b8df8257d6bfc427436d2ce86b7d44e80ef70fee651e6d155063c70b733a53d281766bef57525fae329e276d94c007143afb884b866883cf9b997bba604e423350c9725a8e278940e91aaf048e44aff4da3a25e2968e5ea047a58650d7297dc9839c4ec730f0b6ac77a7168e81e702b6b1b2f9a55ffb259bfd70fb3e079769c61bc6c950177a6d659428afcd0dc8a072826ca6d790e2a7e01596411713866b7761869d1a45bf99ad8b8004e232f9254cb4af587d1448d9d0036cffc9fbca6511a26cbdf5d0781a5ce9d7fc0ec04fc67c6ef97a12a94ca9f242c9cebbc988d74cfd8a4ae995a67cae06389cb39a60cf84b8d79e05f4daff4765c9fbfef07e3f8d44188fbf18dfe9833d2f20786720a5a2e2ba1ae7635664506bb382b90b42b764bfc3b6b529aee9bf4d306fa23c663a061a43bfb95d92a75a5ef38e7bf4ce4fb14aa7ae48acdd9f9734676664dacf070dd2893f973f29d46e5ed931b4c87b8d497e29931ede3d3df39ba2e85bb4e282ee02644580ca2bb73a66e639863c067f219053bbdfa9b7dfce758fc40e74ae282bdb8340b82d4eb60dd1200cecfe2aafc11ed160498bcc2817a7b6bb93db5d88c309ce832329dbce2b8fdf444091a7ceda0740fa1bf4369dfdd58e73710b2b5a066d55ccd3f3d4961737cc496dbe425874ca904b4dca15d1ab6c8393c2d130c895eb1480f79fdf352bad98b3444f9672aa22cf9c2978bca01e63f77964a69e7a753eeafe84a554eb03addecbf98f35c0579387b2f44a06c5437d30f257db5c518f9d90067ec8f9f748425d93f6d8e59cd3e1d148c63950ba6d9f1c61a2a7dd7bca7b3d91c4cb3a8929c7fca205492cd77fdd65d4fbf024d7e764d5607f85d430392f5c93df73bb92e3d77eaad80f43f9ee2475577c046e178e1322de7d9b03953e0c8e4926804390499b4648b80e0bbd846016dd903220b49147eb2fbbe2bfd13fe2b349b0d1f391abfd874403d86f490fb8294caaf21858cc43062b0d5331576edaa0845ae199d0254e9d117f7ce7eb2d04f3205cfc86295a16672fc5e6a73e589eb0b139471f70ee1a3b91d03e27b84172d9e13ae4ceff904b5d44089d517914c3c8c3e78232d147213efdf7f06c8016e0a92603df5f715b682fb16072969b31e809efc1ed078ff5474e5aea73711e32ab376ac71354f9a6b84abbd3e11f68f1d4657e2d8b16d9453d868609eb0ff9ea234bee0a380a015f7447412d70c6a5035a49da5aa50b600806a07e847216b9276f8636b2025cf1dcd7e5168554bbcffb05f338b271ccdfd1ee25ed506ece89b603b1b752b546fa838fb66fc0bda9b11f8c5b4136a660c58b9f68a32d2f21e7c6f01a10858ba9fff41ab9b56bbfb50a39bca1f88624450215f82c2b3d667e614700893f300555af00b1739af10e440e4ba3e2d66b0a87789282a88413cac822f0204aefbd8909c0e5f72a7d32adbd15e4526597c4786c619b99fbb681a132ae9dca92f91f04608656263bf662db922b07d171999543ef9f658830ddbf783195ef3c1337192a8879807c88936a701dfac62f53db7fbd88d33d80f5741b0a329ed8c93cb21098db444c8b03650b70f3772cd3e22b72ad8a4963195af80e65bc5ca83c57d7253e31c66659401bd9bfbc188627683f263672db7df2ebb3e7937a8c9fe35f03361735e40cbc676f7fa6f17b551e4c5c7798be668352f1f2f9fdfcf2d3389579ad72e19aa5e17bb8c4635a6e5cb3fcd8a7f32ea146f9073aa7bf8f1878bb8a697b2a6615e6a64e3b16747786d082b749de77947dc7216f19aa920027576f1ea7d851f1c6290c05eae913af945901558c7473822a3527cddfdcd1d4b331b44eba6d9f93f63551a8a7cfb044f65ca0cddf9f073f2afb5770a1e13bf6e1c0864c9ae47b799b61a3816256037270f3a2d9147608e586602966e0911c62bb28e7f5efbfc6862da2b522d38653e7dc00b38fe46ab5759114a1f82f436b726e2157fa571957d2801e4081464ae01130c8be822fc7a79ec443fd4ee3ffe0c4ca44a6622d7bc1ec7fcecc42483edae2a6fb7270a37de77e2e77a4e91bdbb3d539e38a2b0c1c79cc4e50437cf1d55260084c86bfc7d22e77728322bbbeed4debf11668f38e14551c9654420b00aead481ae64e8ac41c8fc5effb695c307d8fba9ab0ee53657f4ac5995b3e507042a7bf44cb5901079d44760a831b77cb3d026eca133b10ee39828285578d5165f12ad3700ce3a940a8874560ba895ddde179057cada226f77c656a7a8b57866c26fc902323550a0e40527b58ff73a91340af6f1f1fc07ab17ce088c7136532c6987387a92b8bb4d522d81eca1988a7b17c33bb6ae29acb652103e5144d7de79f8eba931625173e225f9b179fc266a2ba89be13fb2f27aa3b72a0769181cebc263cbf7a93aa0b5d2eface90a405ef49cd1af7395fa184db37f145a035e5d2620c64446ae3a04fbc30011de2961065e368c95540bc95272abfb1e768f65cbae7a077371badf01b8c19aa673a32fe48d1e184c59d2958e85848cb72e150f406905d34358968e55bf61a9bc078cd35128bdc79f21584a97767b673105c2e1c9bc903b9ed6ce95428f21d679b514c05eb2b824bb5f18a82b6d259941eda6491541e0d701efa15172ff6a4f0e1346bc837b4498fd48c051bcd07b640b8be17e58ad9e84256a055593facac3a06a745e679bab89308b49b5fd6646da9d2e781799791d8c51af3f5250c230bc8c814d461b91fbfcdc94a80e769ec132bafaaf99d5f8c449a095c52d6b621d0eb9f070366517c28c87b9f2788e91edc9853dc72c143cca10436c77e132d5f4f3f1b57c7f4d675bf0852320c201d14d778521c642ad5a582f1c2581e27b0c63abc05d1d8ff9dbcd444c40a2cf9e4a6fb0f06d1830a0e92361a1a7bcce9ee3d56cc1c3451c87c06cb2439eeb41f1fa873f81c0a1be08cd7b780a71c651c09a09cad3d35b32cb8026b83bbcf1ae0f0ede998bdfa1a279ff284cdb759a316907417f26ba5d3c8d67a1594756b3d473401d8e0505aa37d76c1c3572ccd2add06239b8242a18e5072e0999200bbd9dbab2d6788bd013dd0022ca5f0f724c7f4210edf0e84cc4af62bda696c226ff1bf2cad75f4e67bb62f51e0252adce3ed46e9e592b25869566008488230c02f4b8bfc7206028cb8c3ba7f75b1e3b540456706129fec62c9b371ec8e7cc11f68bada55d8332dbe979d82e44b92851bf34db3f4b5258d88cc3fe7e2082d3d172da5b647e8c3a29f3e614bfb226fef5dcded43478f1e8442f591deb1b14a060305a5e2c53562357a534f877799e4c09342053a20329a529faff70106d7ebb71682a0418b7e939b54b86f670118c13ba4077122fe22ba6e3978c687f9fcb155541dae9049df7a9f0e30d32c8bd605d3073ea1207146cceeee2bcb4716147413ccce03359cbcb47751aff1d7ed90744e16d1677d05560d9dc7af8fcadd5447ba95f1a43f9bb285b364e434f73cea2570cf9f789034ede95d300b1330fb69e5d2b8e3ed99c6faf0bdc7589d36586a477f09bd66dfa42dfbd86264447edd57bb4d01435066b45a53edf8d11790eef4db91088f09852717295f6f7d6d8fd2f2b3405ebd612ad836a3ca17228609adca3f877475075f7c918e2cc5011fe44461c5aa874191233b1ad9ad4e8d4568c7eb08592fe9d2ea3c8accd533006108c7db5a344aebb0a31b928c8b802555877527cd81d4a3604234a6440a81359b49642cd4224c0e3556226f1def835d31d61fa43747cbc0bb9556b653323c97394f5d96fe1969721429e95b880f4ffac59f0a1079c174ad7d09c70bbb50e82313f2b51cbfdd1eae3edfd4af610e0c96f070788ca10d552268850cfdc0322e98fd8654fc6ed11fc0b0eb8307b3b11130a11a24421580b31ce2ccef172b63fcdc1b30adebee626ad7abfb707a33294929390388963c8ab87278025b825c7acaad0bbb04dd2dca170825ad02ca6b41f4812ea163ceab30928300ab7a3e04265fa91350eed13af9796b6b81c875bd8a62fad77eb4867c6b8f6a60ebd65a4a87ca2d1c8ca5cdff3398c02248ab7f219f3e6fe6241827228a8d4867a6a971962f5dc34f63dad932820e948bc9f21e7c2ef30d025def9894b987daee3242eced09cf38399436d4238c2540d0f4909552c8ee4a837a92736343ac1b857b53c05f7840e5342728434d068ca6a5dfccc0896a8d2ca4566e351464231d38fd448f91d616a53507cd5c44db1b6e58ba66ecb41a5643b4d26fb01aa459b4b5a5101bfda10197c801d3c8192522c31728854bdeb621c21420d74a3760adb011f996b52f6a871c75609b75985f714db80c5ac6f923b2164df3c0e7745ef239c6b14489d12e06b04b3d92d4af39adfb4754a8bc90e746b335f6616e59005b2acefe47209fc267a940db86d013280ebff48b240e577d6affc73a3258bcc15d2187d12bb8c2b2cd02095f86fbffcd3441ce0d0b65befc275b909c748446f027bc911a7597553ab6da3c68eeb6f7a2e14de75e6259146000a79a98a25fd8476889c4fcaf19ff7361c9ab5176d851da0e5d346d3f0c1fe7e66c2b76bbb16e3b786c012abd72dd7cedc932c29aee49443670da3a12a4feaff7dfe253da56ff44b7cb5a38b06fb4807a3f2b6f69c4aa4d0e1e2c584d7a8854e68f08b88cfa8bba2de5df2fef19efce7f9b72e79a59a15d82c39e7b37b45b436c4de71fd231068ef3f33fa3fd3d4f6700dac33e45ec557fe9889a99e754b76470300d5d7cebe89af0429134b2b3545a9e249df26e95e27086cc114af6919c4acf5e07dfb5e6569026beb382aba8eb61e53270aba57eb7ef0fec0f401110855b3be130731b095d3d84bfb387e7cc99b98c7884705979998ebd6cdcb4d3f5acdec586ac107ee2effab5165fc5bf813a8bbdbeb2470684dd913e04ad7ff6cfed3254ae8d9f3db0b65830ee3ddbe98beda4c47bcef3f71f56731643e70f1d47b8654d1b40694cb59368f61466c2766db32ecb09e43f3fc8185c36f360736c339b09caea26ebbc75d25ca3e9711993dcdb04e39e7b090537cdf893c41f2b8f337a25fed05c0099d0b8310db6978dd3b6c25040efe580b26ae1824f89b34c2f9b2491b718a3de241d3196000dc5d694708fd1f375b80a8117e11cb0c4038ef52b1b3132ada065609cb55987865f9fb03e2e422cc12ffac98e042f37aa6cab04b5e34f85bd47f8879f12f88b4749261313ec5fcd577134efd9de1c09a98f2f09cab773809b032f5c56d79060f985ef271b0312e31b24401e749fce590b557a5b6a197353c68cf323e4022d1fbedf467c6d6fdb7e08e236ae05c151710d2bdcdff4df8817f9c5d78fe156c20e8e056c49e090579159b7c3ade9ff4c45202284cf9035031eddfe587ecc56617e8466e4662b8901f935009a2cc6ec671e09c1a071cb1dc1d12ae861b152a2f93cce72a1b299eaf213fcba60abeef2dbc26cf63973237f6aab703ae9df091521f5579fa8c99070b303f12fa5194b12310af7ab3562e10b27140c2d95db4030bd20f61d187eccc7ec76e78afdf5d8c2f675e74705b292683352737475d9bbdcfc81f171ce7d3f797324fb925d34035501a947ea9df38b2564ffb1dee0cf1faa97a631e1dbfd568a99de8bd6dc65fae2dbc541251ea42caf7682a872399a833f388917dbabb84376f16d0169eb55e55d79f02ad56ff902827e7d556b474469b5c0c6efb349eb49dc79fe86359790060adf98ceb81eeee3bb8ac61264a3b1070ed848d5443383c1a967ad410d039aecf4c30ce113b0087e9350f9a0ea4266c2d5b003b0a29c5cda472dedb276570f09df7fd6f2cec78815169cae08a3406fcd82831d31bce7589d3f8f054e73bdf5a2efea834be31ec1a33a040eb2b0bb681883c78197bfa9814db67b76a5da991ea562756d6a60c86d04e9864481b984c1b8291c0279165ce75832fc46825d7d114530ed126845cb26cd6d0d7171cc933b53b0e366288fc6502c6b8c7bcc54bcad35d7f788f943f7ab1b0adb6923121342cdcfcc179726404aefa7b6c05a490d953cfa56fba5325aa095d1e172f93d5498ba2f047ff364533dbe63870747f7e0677be8cffcbd5847fb9ddcca7a8824d5a224fb9df889de4cc007da6bf853cd2e1cc435529fc262fdae25d9055c5f6e84960e462371ebe85744fb4a4411dc05d5790b0d682788a016f7bcf0aa2e46ce2b3b88bcacc9e7577ad38ea79e9b53a80ab00c8f345cefe4549771e208aa565ff38e885b13e4173c497e275ebccb15ce1cb5f207ee3221a1e25d9c4702a554d1b5d1d80239e78b28fb50ce5cc68eea39c56b75bbdef8a7257451c298f8bbf859189fe729d2c60ea437e0021b58f32536f74c183ba3ef600ad4bac15aeeb982603d6b35a4b681f8d7cdd64352961df6eb38725db9639294cbcc4a64f35248ce0e4544752ca904a5577274a5ac3c9c9f555101809008faad5d55c638b9859d3f1a9fc2b651cd6f8e98f283f93d5ab940f55d996ba972aa996ddb6551b6ca1e52344e0cd19d26af25fc164c59ec8af6512c9d0513bc83c2a3c72d197d7c6a7551f54ebaa9e7ef4d3c5546b37d1aa9f2e4eca9ce6e1b3ffbfa006076f76ea7c5284436877ab267c2463f0a22e54b951968bf7355bedef43632c10c600dc4dfe9450a409e01dd96e65206a93c5dbadcc05f7c0790681b33384a03d90a6a27c10c6ad73cde1f4eec2551cb2007e335d7f340e7e6182712c80943210e1a23f32255eacc7b2dc60e24fab42703c1ac155c87639a46826e9856690e34770e623eb4c5b1fa1887daf479e96078eeb590a44f4c5cd070d17584721ed1523d1a1f005deb289ab1f59b45b6bc8619889b78f03896030646f0b9663d97edcf837133662cec5f29c314994b685543c838f57d9044ce11ecfc897a8fdbee370ca36103d8089532ac13c8bec56e8dc5d1db639027ca3216bcf0ec1b65343eb66c386838e6d7f1f3b46eb81914c372877088fbd6e9e1d9fb3011708aec3869e7b047b93cb24b4ef9f7cfeecaa017a65b60f23b82c70770b8b7c153df3c6021b48fa7224a1b955bf11707db99bedf28c9d57927d3b33166b87be769e425a26f8aa8fc66bb6923e04ed7a2a45be13bb867bad2c447dad7fbe6e86d0586793819d628e8470fe41f3094ef7d422ccf6c090aa6a3ae88c6f49b7988626ac4d649c2736fe334ffa18a6c663cbd58082d20fbb1fc60184c8696cccc4ab4534813dac0b842bb3af6125cb35c6aff556b59f0659e4660e2ad63d9ad84c382983af08ce57500e1e789716b7838bdc078bdebe3828640b3a34dfd9397b4d9b9db7ae481b66f0b77e149313385851b6c2507da76dbda3e7c3acb5772dce4c1e423e899c37dab271e15fdacfd06f8a1166383ef73dcffdd85e4e18f7249748cc2ad925979c1584d170bf3abf993e33d30b314990b03e6e9e92cbe1db2f7ad718837bb8d73a4db7fa14667eb64805d688eb1c89118b1458854e33b94065d2fc51cf5d55378c247e3c780449fdf21fa01c89112fd9c05c7ab3f25db102e198c4827ab6b58176a4f3329831ce292d8e27b4ac601db3c14b61beb0691f42e82250be379c78c597a1ea7b95a2ecf99111dd4eb54cee264c3798fd1eb9269f27db6571062300b0fa27a6221a88ff571091443f9dc69ef31f324f88659df0323c5cb8f0b414f4199a8417146eb83d93654fdb55a748b4c5548b28a90672eb51a13d9dd5d8b79b15915ceb3974a467a1ffaf6a756c1afc3ef932aace91056493af5b47e485b5778f3e414fbe76b5ef4b10bdc4f5b271d414e7055356f48ec01c6e5971026f66d18c64bcf61ab77c4ac9833c61ba20178f36dba57fb0226b500884ad50348a362ea9593c6db9ad7a300ef8968ef5f45d6c9842200f14653c5fb4fe4d5c0157853ba48ac9289c1878b9bf646bedd7a9260fec9fb9e89f4ded6394fe9a50f379fad368ee56335c9b10537fa26617564f82e9b23b2c29f52be61d074f6d43e4d967dad7850f253d496d176a575ebc39045d8d558117fcb857e5475e63713d951b8a67b0c7d6c26df6fb099926e522fe1a59d0731f53e401209203d11ca3df75d785d9d4bd7cfe62ab1f2f860d7e5d17a8007d3702ba0f065db529700e362cbee775142086a7505606fbdd7f99b26a0a13f387be6a5cd2703c5318808fa618f6aafcbd7f3e92aa62601c449b4f1ea2f66ca6404540662f00e1d261af7edc1fec0fa4aef0f39957cc2f606eb0cda1c060cf757c739b5406323738f1b4587460885b6023061b27a512aab908e4df46e53cec66180da7cf39e2f48629a6ba519c4b24e8fbdf82b6f8544100ce0765f765e520752af8e22f22db4d54709858292d726a5f49c4859348381a0f5312b9f8e84a5f0080dbf660c1597666b82fc1651ed34533302c19db59e7d3391206030b314c7abd537f61019a892ce967f1e29ed62ef23a1775116acb195a79fd73869c41eca7a092fec5c8a292485a658b1c4157595971abdda55c6a2234df0ae3fbf2a6535af62366aced0e108fada980f599d231d6b4bbf262392a00b279ebe7926bf68d868f1ac3b810b9c1be5c4792cb3345afdb2cd4119b8e8c52a426d56c0ef5dc28a4ef7b5dc53643b80e75b0ddc387256aa8e40978d916617448a7e3b0b82b4501b75c61a5200630590c87368673f1c9f1777425466dda192493d494a19a785d048cecaa25da0e3c13b73e4eb45dc1b7f7e0793c94ef24af72188431766b7d70ae6fb5e4cdffee66f317e0aa87e3cdedb9f8e9bd957ea09391af698e6920baaa173181808a2de827ab72f0ea84098d600a4bc4c1130b51f741f1ac76ef2b314153a1e54a450d63a170f9cbecceb150f1073a43b359e5f81646558846cad0e0c5653edb016112a524d7cd14dc466708e3e49310eb8b558c20902fbe73a96fdbe5c683630871278edd1ab38661eb4baeb08ac438ffac9ac806c8abebbcdbc514c57f447da6f47ffb19a587712160073cf0f7e28be9807553d2f9d71b8b7dd99c932db7a1d0526043649e438443602bc8794fd7eef28f0e5005a1e89634458c01788c9763f2792cde0a33d14655076d80f7efd0e0a5245c3b4079bd52c4c44ccd9bafe95108833d9af96bf5168a82559348cb1f88698e976f4fde2b95c8339d9433d3cb0e78872d3a9b9b6371fb7ff29892378d6c18b23dafc001e3451f0f47c81f9792ec6a696abe6ed9cd7a5748ebfae19663f2b6184ff9f9a38f617d47c97c4be16e2f78b7b536c88cd6e1dfed8f7e5815466a7b78c5a91b94c029bd2a007360e8109d3e31b6ea56c5cb290467e0259d4d22ad0f5932f2cbe7fdc1eb68895f37424aefa92a73e447db72a996cd1d9a81c2df4061402c8ea8f8d99a2af3776890a7fdc09461e349ea646404fbf978beaa2026fbf4f59827b5c508b6466caf1effca071f593533ea5ce441270708246570f0931fe249e1dd28466552edae5a1066eb685c9e4a9f9d667ed6a51ab46b13254cb67845798693a27f41eaf26035b11ee8732bf609da3061c2e86367c6117c91a4f0d1c6ac36f07f3dbc3d33fb419f96c82cb44265c32d3bdd5ee0677d0388df9495272c702c14d727255b94cf7b42fe7676736d836f17cc24d25c27bc86650fc33ef0942b3e46723153bcac0a6aa833c976a794cac28c613cb8dfe25d6aa7805cb49d78a0d43ae87330bba456bf40c21173c76430186b3ab0ec46045abf6f792f300ab58d3c999c1b4487252ffd2eed24c5ab228f803d7f65d17a4d1e99f662a595baa67b89d0ba2c9c6f4fb27d5657a61ef0a7316b8f97f5bdf4bcfbd908dfa7aa1cfdcca552d5f7e604b7e1f80d7ddec983522570945a464e0ee1eb730075fe9740d6a761eb78678b2e919174df0d83262e4a8ec61ae807035c847766877d8d99970e59bb5712964ef7d15dbf436f777a0b198238f1cccb9406bd18a4bf6b781c90557b72db6147fb3cbee91db3cd654248b9b8b7347f6f77fe7717cf04e45565558ff5556932158e991f9a9979cac4069e29b4691e5c7b063a3d88cc524df02230d2d25a048101f66dfc5ca381d75cc894a4b1b1d0030cf3654c369e8c62eaccc6cc3ee8637b42aa391c418db97f4a72fe7f4827025d48ddacec8c10aefdf71a097594b84cba0962f5a45bf8bebbb031efd13bfba2a8244944a13cc781d79acb5a4734d3377e7e42a0f027e906374bcd55cb431c811e0474df9c3789c33a75dd16c39cf20c0ee52fe3f34558416dae6528c65902d1e9dde948c7c6d98e4cdf6f8785fa9efbedc3413c67fd953bb158bd957bc744368dcc44c85c01412162cb54fac4dda0dcad5f4534282036f0e76c1cd1960b74eece4ce05448b1302aba423ce2602875a5a5a109555257e891fb7086ac77595b4e99fb7b5e64f175343663483e6d9188001b51fb78f8969cad10f11934a496fc863f5b0a6fe1d8c6d421ff7dc7a8bfaf39d7bcf5846d7796dd5bfe1b06de4d7213366973477faf37eb2eb323b2f908bb7e78b704e961ca869dfb385ad76d22dd69cd1e1c3606bc69941050c8d97de7e87cf891113ba1c83a548bc052101fa35e4b1e8eae6c5c02e0f2d75cc39c2f978c8078ebaf9a0929daf628fe47154b0e19d98f44ebc8eabd3bac2ee1ffe18751322a29957ee0976a50c1a53bfdfe06dd100cc643165963e10d5185f7e8357773de216da95abd1e64b6a2752e354bf56418ad5d521f1573d267a81d064ed722f337c045843e67e18b0677117d9257e9688a4c1e3d4254e3dcb3c919047d10bbb456c4353837feb939c129ba35b3c1376206e064a8ed2a88a36876e59221028bdd819c7e206506df7d7013cf1f12765ee278e1a11728dcece95ccce4a8331b6239946e2b15be27142725698f687c8debbe25d736830fd4090fd2a160da2f0672096241353e10bd159856dac2520b02b3dff8571d7f3fcf38e67e65cc42732d5b95468a57aa3a2424f10cb88dc7b0b9c6fa29d2749c389a1ff368ab1d4b1e2939884c6fb32b3d0f2985b70d798bef553dfe0e67028fd00d93eedf3f53507f17251e7538dcec270ab56de22360755c2791394fa386fd7f4bfaa65436ff5682062a40bbd6cf99d5efc192dd98f9d42db67ab8b4b964293ac6912abce6a41e7b5cb0a04a88f12230d2f20b4433ba8f196978f33997af9faa89a4012831739d95973fa2fcdfbe21285bfc61706c66934e55f2b9610b1c31e90269a72512b743fa2467a6908ee76838a7bb564d130fa8e00187b3264e92e3178048f8788651194cfb0ad8982f0a45f801be56f40312013e897a5bae56c528f1e4930ce961435a11e4ff5aaae605e4246b6e1ad8ff767605006cf9a413272d2312f2af25d95d9c14d9c03e48b9f663f547c1128e28f07eba2c2e7adbbe30986f1a64579072c7b422a789a9d083eaa8fbcc91c00a7bc13397a11172ae98d9ade8c23ec4603ba22cdcef153c2c6db795fa4331e03d71eaee61bcd3393f3a5275eb0d02bd892e10f21e71b6cbe711b70a649e84412556ec9c1c138fbf438aba6f6cdc57a2919d0c913ec3e6ba72768eb08f1d049ceee8b2561aa900a87faf5c3d8441c1c9af876f0e0102979984d3faa31f773598d9a95b19f965a6ad50fe7936a521da4a08c73dfdb3794ad50161aba07179ad541ca7949ef86cefef455d285252264ea87fef17d3727750541d56540d981a5af77cbe1de70b8d7bacde3bf96f39b647143a3a02a54aec2338544a029120a8c4ec5fd89b1bf384004e8b9c40836b2a289753c9bce8dfe897ece65e3c6630b3fbddc84f53b6eb93e88ba8f716939de69f7f319ca57349134826a711411d6848cb381408d63a0a84f7742b1c061f70334cd24acf0517cecb2f4a727aeccca65838367f5218499dde26504a1b2a0c1076ba9c123951f2144018482f5633bdb7e3f8bdba3f2838562dea487d16231bf817d44a36755b502e5b5a0bf23175f6843b4f17f85a528e15a6944c6580cb1321d93955215c490d84f4d5997f52246b20f992f649ab46a8dd3dc11f3d2db6d3eb25cec6eec49dd23c888e93a99f97df11b5fa3c5ee825ea3fb503b8ef99d2f16fc33dfd8f2025a07afd1a8a0b0c5327e9a80a5bdeea70c6f257826c358a0db13c6bda66f4f6e999dc701793a60d21f0d6f7014bb38fce8f54f34ef6a387e69cc3c78f8bb78c2650096b2f3b7aae2053d4dec733efa1464e3be9f393a25b80330bb0a0df7dd5837e1f98af26e51c0c620e25097720b9d9ed486f12c4f3a17573b8f59bde085c8da8537c1f32d98aafa0d3d155b9abab9ebe01be567e4a125390ca7907c2f85eb302f6720cf2e1c6dc310fa93521d5ce19b9a473f166fee3d1d3ffe4ab9afdc431866c3dae5221a09c309467469a67c33d42e20ff070e56db3b305b2cf3d4347fd77c77964846fcecf8a671ad09e2c1b13642b372822de6450c34e7f36a1d7f8e7410b65cf8b1f6fa3a9b365af57b4de72aa11af8f1d355bb90aba6bcae471bdcdcac586df3638322d6754ddf86a3774c054994f3a1fe898b70a49c62c061f86d3653a790671fe5a60d3f4ca23511158994ae665faddb77b82e742642a39fd625029813a70b7c6ffc46f6431238db3d03585025e2d9d539ea2130f84ac84d0471b248288667312663816a8ee775e8be547c3c9238538360981a5475ba70e7183c57f03a05abc36a2355c680b02f4c2fa35f7e75662e21ccbab17b7167c39d9d6425a9f2c0775b67772af9e06804b8e2683390cacdf4c27fb8e4b5ac9e155010d7e71527640949114347fe4bf1f551760c80162c4cd9493612a485a08de9e06c28690f8ab3f479dc5216d3458062d3091893308c43f89fc7288758a0a43c073319e794bd100dc8e4ffc95d1b85cfe767f73b6c1b099ca9b633be12be5c91be179c0b9c3d8b6c2128849f84bcb73f3de4978f4b780bf0a16d0433bc373654ddc49fe5669a8a25f81d63f36f7ffe8ce43460adbcedef1a297237e4b94244fa3d85498afa0a89083884d5a04e5bd0c97d4937dad45ca3d48f2a8194b504d1e1aa424f6b51a2bb6f32e96c323879b558da423f9cb497a247bec31d11e7f1909b702a717f9fb2d0e6337179c3cf17782984bc6fb8d1590c16a0f271beaa1bd51f751858e6191b5d033c3a4e04fff47ceb66b94e90d2e2918f6fe6d49045b5eca20e4c8e3637c47392dac6693a407ff2622a1083d156aa50730a2bdcaa6b85317ef6e3d3ae98452278ac1c1c5fcad3ccc7e37dac0a167431e1e5d294406c20f2388866d33c1398f495939d4c195134265456c437c50c6a01434c0efb79c7add6a2b80c79cef89a7144985f107432fd9f6d88be51dd385b19878c7ab0fae18e93353f0ed8d9c2d8aa2169317367f39fda0a19ef56dc3b56680656d906d8309a8c5b0a8c553b1a4dc7eec952ffd16bed9b40e07edaf11a77f435ceed3da230babf5978273e829fbd41b3b412be49cd9ad2417be494e618934f727f945ae8e3ce1c7f58483f0a92ce5a20082350f67266c29fba0cfde113ac677c3984a524dec9bc7361327aeaa182a29f1403122961b615b6a3972caafbcec39a9ba4cdf4639f7e7b735a2ba2d394e5415a47c4c0fb535b10ebb80a8c3388976f78e10bd8e6c68c45b1e47cffbde7835275627b0673b149a0edb45d5feb6f66540e4b8b4f566aeb4df40543e7fb634277e2e4070efcdead157fc11a2c4c1367a5f8e8f70466c7a22c03a42b005bc39d23f0881f6ef7cc0ab2edb087ac49621001a8e520550697ec3a38a7ce48a0f976e3a5958cbbaeaa53476bd30691b8141d06d072b552746d09447843cfd7b00ea7e9e8758d6104ae81aaa9c75b911c1098bc594c8f9c0fa712027cd8570303f08cb3ca39e5d5e44b6ea9bffb67128cf5987e243833a633263e76203a0fa5cba72a7bb1c86746ca196aceaba0152ce995d39f100441b1748e5358d85016bc6ef27c5b392526d81ca9e84</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>moveit-MoveGroup-Interface</title>
    <url>/2024/09/01/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/moveit-MoveGroup-Interface/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="1d02b99e70f79bd5d9881bbb258f8a713c6f1537f21e8e3b6c6a29875d6ba509">61a285bea0bd1a3904d1b9b9e1d94077830c9a9bffb9e93771be3c9af8e26839d99fb58c71d23b685828c21456ac695bf3428b4aa954222da82f9f2ac869e79105261966ff61dc3a6d8c330112c0ecdd618fa93ac80b6cb1259ace73b12a822e60c0f591ee1590a71b86af25f075cc592bf4cb94dc1b6ca02129e26059e2e3081149e9ea83f99aef6d8c795c29a5a5f29f36b14578eada90a46c2fd500fb03480c9089d39bdad00bee890dd8f201575a900c0a71930540b3aa694aadd06ad653e8ab8a8c429411e9577d6269b95b8d1443d10c73b484ac08d7049926092c8a96f8fde3c91d1b022fff891bf52e1f886120702cafe11ab2efe0b46330b65481b9d8f8592b15fc72c8f1638476e0c9f02b2fa70eb0641471c45164a05a7b3a45ec12746844594c7f541ea99aa1ad90459e4db2ff7f0f4e23b0303e03a0f1ca4d6ecf601957cea517fd3e32cf170c878b45ed46e6d1c3a849406b8cf628e869b1b0eaab579752b3d989ca5893a9f04e8780231e2cf8752feb7dc0f99bf2913811e5aac871342fa89abf45387b6ee9f1395343bfb89fd8ba5c87534b11cd677738d68ef23325d04744ad670c6d3af88fadfefd19832abba60e9807b4c2661154dc39fd083981b88ec54093cccf5fea63fec527bb119650b45cb0c549a630b249cf520506f322da9856896a08036842b650f620f5ebec2ad46f950a22ce511b8332c5d4bb777172dde364f3080cc9f172af842ebd550e5acfb3f51c4177c29b38cefa500b415fdd6d6a26efaa3851eb73874a0dfe3f1725c0b8c3f365e2ae4054bf9dac5118eb81aa7c0dcbbf01d8ab99b1e8df17093eab4cf5a3f3edeb5c6af2f02c3fad02a83e663c3e27179c962e55fe323a243ce325f741709fbe633a9e159160b038889b1b4020f0450f4c4fefd2df837fa8c6aa5cbf3b6ef07d1317025e7a3b43205e771fa6a081e894688403553e4a9f750b871b85992d5064b687f5a994fb077854e9f48972355f969eb456205c3011f14bcfacf30569f3c8fe969e2c847bbf6c572a6b07e848e8902cdddf5db179029f3926dffaa6bced9d1313133a67f3d9640682508273372b8aefbac77e39c08936c95f4218c08fd3bd6e24808d32038cde451fb1490b8dbd17869cfe0b936cab80958be374bae411ef48911243600e1060341187b39a7e21942f8be6404b328a6439171e0d19e03d0d43baa90000f4bb3c3f150ddb52fcf911830aa5d4915c98cfef23e5201852ba226e5702810382e6b3a1368f8925645739b2f3cdfeaf3c908dc81fc062e2cb098ff33fa98d39297371543e6d98ac0169b114200f5dcdbfa6dff8f71b3f9c20672ed0aac0546b3dc9cdd08fe1b9cc35a8b3f7d6984b67db91f6cf332f80fa501499324fbb2ec8e9cd95dc11aea982ada8b3969d251d374e6da2bcc8bb055f388b784afe67338d9f21c2e151f6b10ad25f664c7a0d62202c38d828fea906f453f076bd5de743dc67b6e1c7c8245e251720134ae29dff70188ff5a641f53497ee77a9359e0f17e200b7333674fe4044727ca4e88f49bd6034d36524eb0f50abd50b94b8a1b33d15eae32b78e69d2fdb5e50a25c02f19dc924d16de2e395054b6c0e46d2f1a270de628654874705799975da52f0d079979323f101e490f461e317a26c9e1f5c8553aded7c55277f879b8616e9625015e2a6dc9a666877dea4fbb660f431c83bc1c75410ba733d8ee0f831a70e4cc9a936593beaa77b023439b6dee66b2780672f7331f7e9962a11474172da5ddc644ed0628b48407ee3c13cd63e4a6638939e5d6a0159c7b0ca3cc14521ab2a17f2dca1b34d1cf792aaf27b4c2742801bc2e352c10abd22f3e3ed234e893795129b1ac22a1931aa64a2a7cdc4f015219120191962843c9ba5697e773ac588daa0b2ca701910f13fdaf18625e3321f9eed29f9c9ca0a22596cb6963347d925ff20fbb4e6ff9f91930cac47e53326a591f53e4bc357f0380d597ea3b57e0b8530d9aee9e6acb7edbd6467871881eb45eedc3d29a7c8b74bbff8ea754c30aa43b686140b2364de4a860e5ed260b6d7c70862d682766d252787f8297a52a72686eabacdaac95bb5f71cf323db968f1d3276d3f2b2d5e3dd9479e93f626152fbeddb91e060b28e09084ae24c9f50f198b2e53fd017bb0f88396c308f3a57855258fb97ebdf8335bffa81fd551b2f02aa7e80382d0a8067f36f7f3a81777cb0058fc2d6ee3c9fe615107662ce6f12508d03b32d220ae393cfa1cb80fd40b13fa1cf5670fc8c4e1055c222ed4cc240628292cae6567f430a9af1378cec1fc001318a4ce244eae38641374f2752ee4583b6b76070630b392a067a827bb6f7b49e3dcbb984ff4360c0cd07c7a39b1d17222fd5401ff240d4abea34697b8f4582bdeeb34ee16649476d29597f700113b986513824536827ebf80afdf95902eb6275524c756f45364bea7fe0cfd18ee3c11d8ec4d9d184e680f793196090d6b1cf361c07b9fd2f3c0f0a42f31a3534b6017cf63d4bb202b026c5cb800ba7667a0adb0400e65c61dec02d128e163c907ecf594506787a1bece1b6a63017d5353c96d78c1ae70811ec741d659419f8cb871cdf7cca13dfc91735681e8bff2beae9a7c719f05c44867792c7b642441fd439f2d8784718f8148963135a43cb3ccd6236fd09b23859e6d96ac2016c4210fc233ae1ef428748955448ef356d1d1a7cbf2f9376806c91310b2f0ac9624890fdcc8b3ccd662acb75db184a6bf03d9b4206a8f078647c6876189992f857e484e89f1f2fe49def8ae6a46619b1c9ce6ce9d46466d9a67fc9a8107741eec743ba8aed1dc280782f153cccedf0c71f96593b7c648c37f8a7e250ca6d705e265f99e48b95035f144802926534e7b0aa615ad292e905760a2d3579ce4bceec01f695aca6b3babcb28d5a5e6cabf38dd3db32e76843c97d0a6282583fb71432addf224dd2c2f813e8e9d8c948eb4d58f8f00b72bf93ad526e5d996969dbe3be91236c5a155f9b18a876decd1099a58296e0d99714ace00184abd7aaa5f3158bd3a2a9e42a5edd07738f0465ceb8d273e396b3f449679f734360f430ebffe516e564593493acfe9af698441ec9e8af35fa561f4d1177025ec021392fb6edcbc2a57cd3322486b18ceca826be8bf4cbe8ed239874d00b1dc5c732b1d83a6b92ba877e59b03743a87c11c3a9a4535ea539a5d5c26a903d1f03a4fc03b5ea1ec3f56f8ded8ac0d36a6da42b71e784c8e8dbc78a69f19e2703c1bc8de312e57eecc4d760542aa25f2eb789af767d801805b68fa61a4a3725bc1ff8d422f9a614b8d03815a34d6c407eb6e38a2f05c07a69071988b4f72b94132dc4ad14866199fbce8c0708f532a766925cc3e8bfddb0e017dfab2f8bbf787d80a6e1b75fef88bc21358df03e5ffcd70ff211bc7538bc054276a791edad1d016f03d087665dfdd7e51aecc0b380bd6e65c2e18903bd3a0cb64a214e53471808dc76e189d8db7676a1f3305aaa5136ddb00666c31cc4b654d27a801ae95ad46ec24a5aac20ca3dd125eac0d18593bbfbdfcb16c2106b0ec02bd4790ebe027374f161275aa41368bcc0d71fe1d7fb6a84f34eaa86a50724126db7fb3bcde30814899e46c2c2c044b85996d6bc4f1397f64d7d8d235dc3aa81c386d87951afaf3e3d9d4aa2943377625a154f1550c20a7c95f4084967956fa5414aa5cbb503f7928a967bfbd43261eefd795ca109d82c83e1b7b4112e4b17428872c5766e0754dda2fef73a63dad6475147ed00675882482f8f38d3a948809d64e104216e97b054cd9054a56b4b36495cd2e73b045cf36e3ab2edd4695a0a0a15de257d66b596fb912430211d8d4ecf0cdeeebb1146be02b3c7ce3db67d1c2c7155f19ee2de1c098ac37030463314fc6beec7c839ed82834d00445f2a50953d4370901038910781f3c3c87c44ae6be41ed02c94ef2de1be01de06cde9d219855bf627aa9659cab47b14e5ba161166e28721d7369bc879a38112fbcd79f92ed1801c05c270ed68ffe85e5580d06276c423fceb7574ceeebdcb42c0dcad03555cdb498dad24ff09ec22ad3950ee46d1001d99819ac85a132b72c00532176b508a801811973bd31c55a700df2c9f27e3b5f1ca4bf10ace186c88257114cc79160e99a5be530c5a059376b66ca2c77e4f79f8fb0a2de144661710b0da3b5b970b9baf62501986b1cb273a6bffaba52422534742626f94dcee5a3bd06cfc14b894994fc8577708755b7962cc7d5be058dfd245be6e9b9efc990e3da8b4bb9856e68f99cf8aa471e3fce6d0340ae4bf26d42d0513d5f5235f579c1f077b62cb0222dde36ceff121618ed0d5a635df3c2e577e3c25c6c30cc49e39e7a1d1b05f31256d4d54c3ff8ef990c4bfa333f21309a85a6dd0a718d01953ee88f1dfe47e4930b0944e6f67a7aa2d63eb5225b1997b07e93e3f6071c6ba7de0e924521d9b87c0c9d27abe621be8fef8d45c77499fb25f6d2a223ab27dc872651feb605a35bc55cb2af13366687c01a9705d4222f48ae7e5df6a03141ad34d60a761b4c350483ec2f3ae9b7f56ad1d29338bae9c3ce49010c6df1cf3a7bbb4bb61774299a6ecdf6c7e41bc8b3bef2b279e0cd840e4fefcde90b275e3abf3233566c17720050989985184230a4027cf779c7539954b8ca3f9426fb68888abcf10f7c882953216d5f3db6d5d70ed25c8bd8b823fcc1a18b5a520915d2eb2555fff1f71fa7bec9a2db6dbb177987b029caf1ab7999d183c93083867d089f26148fb249d4e5264f829fc28ccbf95e49170e6d3cff04fb332ac86b7dd348c688cdac25a598a6c679d5ee0fc5cc90ce957592bcb724432ddafce3661b36637de479e06ec7677701eaa9b480c3135103df27affe530551dcaa9e9d91f7fa9e9cd1f50e217a4a3128ea840c55add05690f0eab8278ed41b15a45e7b9becc33166f99ee14881fe448abc9439d6f1748cd1e240eca173f7c4fa0b40626f4205b15a1c2726f25c52f3949113afed319207ca15190057964cf2598bb983a15fca9bafc5a34633e719073e2b6e8f10c94c350e9ff274f0434406a68440aac19d31c6e78354fc3ce3902a74e088460c29b783a63041b6ed8109eee72ad31f693a411533cb2f5cc0ebf28a1cd94e4165bef57fb8572025a759634e9ac5faf06201bf86fc0e3e99300180c4110446a24da30e2235f2492ca1175a59d35e86c9f182eb609ffb044a279bb8f0b4b4bcb3cdc3a193bccc5b9b5c9829c86ab3244a7d2047f1f13b165c262bd31c7af04f86bd5b6e1f6120dc8e8ca4de545a830ae1da98b8a7b92af185ef2d7678d63d2307cc676d8a8a554428b808f6e2a5b9c1e6727f37622ff77dd1aa354fd2a2b9d9303e7c045c5acbdcfc2dec53614023bb15bd1a63b491ee3157e541e961cc36e03ad0bc04696da386137e28996c858993e604e0364de66aa6cee5a56007d794978aba39ff1737bdfbaefd65b0642bc1e3aedf276a89d727ccaa7a7919b5cc318984c42161eb630208c12ca777d62cd7a9073bcfec847b1df198e7a4d5ff2f9b25ba5a25476df67bfc2901318656854a6c58499fd892859168bc3a423126689794464c831c9ad03470e5fef53426bc0009836616ef2eceea6219ea6b41ea95385beea27c6835b711a54cc0e0ddb06ecc761c332c6339db5ee202e184e734b9791d25e330f8d334a12a68745769ee3a2245cf527bc489d229737575c466d168a7e7e4995bc335ce10e5af0d93f1c7fb37efe74e257260d24ac99c20e8d15f973adb3c4ccb998668fb0ba37517cfc5cd034b1ad236e7af729aeae390ba8ad488fea1132288b202bc1e0ad32961a3fa00aacb8be0e9e3ad74861b900c37818edd7d4d77b1c91d3e5799fb4f5bdfc24481f71d76465565b4e895756bc7aefc13f838dff281f82f3a44370ef3416d968da83aa35d32e8f0485cfe4b2d2eaccdde86b67822d55f45ec30dc6a95e70ee0b2e18d33d8c1e2db36ca9a4763f7cba59b3fbd5090503fc4d3ccf006f876bebff3c37a78f59df975d34a79a7c010f3251427c317170c23e00e3f80a11cc6232c95f8d8c432903853b43d2119a8af4f6642827c9bbe5bf6dfe512c044d39edd52d32fbcd12b3aa6dd9cbd531cc40a6e661c9797225ed7ae1e321a5a60d385533ba5d7b24bfab29b75e7e57ce387fbe2437a36b2bb8c5a35ab590a16d2b1b662f842564554b956e2b128cae8c4b1bf412566625f77515207c27d61ecdf815ff75fc219ee73292003095e2c8e2fd1a1638e1a171e2cae60a8fc9f12137f970073d849c3b78dba033c7f7bcaa8c28ca547607894946024395fdc618f8bc547498bfab0c85cadfe3113ec7f631a8cd70cb2206f58ba4d8c737ad6b3e3ef04e49314a523e8db5219abddf1727a08bcaecd6a56f045165754e2ce2c9717dad1035033c4477dab36330abfa513df9e29870b9984548d486c0215615cf0e6d146361f3fb9fcd1138298d53f42697a844566187397a3981c0592a848f8c1507e2ea0da6b54880f0bf0c4503ef4b7bce6990f3bba63f3a10d056b8d125ef599370d8639be367b1c59350813b2294250458aad1e0dbecee535e06779c73c15ce115f6e5e5e7c340628cfb2bbd7832ef55109c1305d7e2813cb957bebf03fe5c620d91fc50646b0ab091d599a27984c203b50dfb75fccebe5de15010abcc4149ebb9552e916a47bf89215d46e5d0c06932750e72ab850c43fd2109770032d22e5feff4970fd783fc615cce91c2a225f0be9a7c8026db429ee52afed644efdcb3d89b3b07f7f3941feaa917ce14f47234dd17e9bfdad68fb579b3dcc07a2c428dc055657dc9a57a3d392359f4047d15cb94b6f720fbade33b08dcc1e0d7ce421bdb90dc33a65ce9df7feda0cd7887a0e09ef717cb15437c9cd4d227857d8fa6ee851926dc3c3eafce2ef7900ebaa0f6b403e01543bf791577b7d2d52e9b789791b69858469126bccf99292225a7ab34cfc531af146062195fc431cbe88ec8033dafd16e5126ce434fe62a07b92c7f3d65632acc1daf604f081df3e8ec1ea529a7b9790eea4aac46fbe08dd4c1899210f2120821979f065e35054b0e27047d2bf89789f5f8df7167b70e81d13ed11579b41acd9f7a9a5912af7007f0a635f8613b25b603ebf5f967cca93ac6cd97cda63c0381ab5fdeedb6d643a70ce2859ca743619c386a12d01b14f3963ed8a01c00500418e3a1040c4e08501834762e38a8dffd197acd91243c087aed62aeb6e024433e43014943fb3120d1908e53e9a7f11f9b1f0424748058fc9a2fb65a152b5f1b7923c66baa4f23a1814b5aa16657df0fda445a5871c9e27fc7ecf8c795c553756ec68f43f322690d3d21eaebf38cbe18c6d57448ba4d6d6a84f55cab5d99f93af97b9ff17eee3567a6577a75a8b54f20ea47268696efa95cd15713bdbed0cc1335b8fbbe00d70c5cf28da32144af4093a4fe0bfff68f6ad232b67bbc7ef2b126182ff9aed20c21fbc575f9f20ec2a3a60abb2f80e1d30d2434a8e302be41187dd065842c1629b828d5c3ead0221cf68c575b2a74800643f7a95d1424948417b04d2c6b6f7c6b00ab50fa3adfe3b097738e35ab963a8b626bc3d47fe312ca2daa06f24f608d33f7cedc2c5cce98309ceed6e5dd54a699f6e03292df9182015ce66b38a6a6fd00b67c185988550bbe88aeceb93130b74857dda9b6cd01ce29e8427a6128f154f428bd3c9d8a206a09a56df5a5f614c5d1ad97711e4e6421fb887e63b53159d6f02b1d0331511c19db0c6fdf03814592266770ffdd281b539c932e0ba4299cbf4554b9a876bf73e898bf34620c713141ca2b8326eaeb69b560e21253969b9028677263528ec884e179a61ce3ff350d9925c5fe604ad0e63418ba078dcc9b6e2d94487b1d885b05e30e0b94200a31af2f00a6254141c36c7e323ba348cc37858374e6a8206efa67c8bd4cc457eed286d6b73866481246eb5486b4d885865f1dbdb6d4b58c4deaa2887db84621f748363039bfd547ceed67a50ac773656c3e627ccef4d1c0d2e39836409f0cdcc521d4acebf295919ff6e41012bb29e29014cacfee21a9774c13b283f7e2b6d214897da9306682c5df896cdf4af051e1006ea0fa72dfee4ebd56a5ca5b8abeafad84b36d3e91907a0c99b4ad15ef7b35f379b962da89de266fb45ac370cd9022d69edfaf642c36e7668447e51f95c5b32a76abe14db4027f94156291cb78c50599c9c57f9616071673aa6285c33972de027dd15607350cc12f282be52138fdee0504efe4a79c3d2a980addf00296eaf652a9df83cb9be8d388127c7ff46733bbced2862ae4169d5f08780a52c584431227523118266b9b97bdb9deb188a44993931523f8ddcfe6b2860acbd99a6996ee1bc89329bab5071f6bbd37288c73c9218616f203c4d1204b26db6cca7dd9ce741fd6da7562efa0d8088a6b4fc645d571e6c7aea108d64ca25bab57cb8cb7ce21fa458a93541ccb8127c0106476610900fcbaca6a08b69400971137caea9a854cab494a2f9058ec461bbb6ac9625a1719e414ac060a641c90860308d5b0b323b7528abf097fe5992effadb08460e43701f285200213681bdc207fac64564a0f689c0826c77ea8f98a16992eceff89a7124f10b9f2e9a61c703b9e7736522a8e8afaf87cdd64465cf26172cbb9c93c213346df655768a9e3ba04f226576245372adf348b0ad7d4fd3d7af0146eac9962ba9007fce9017851173a136fc7891d09fa0c8e1a3627afbea5362a7a67a81329e43c3cd1a233d94ce7da2f2f84788b8d010e9418ca0f75fe4a9630a1d6bffaf921e6f6c54514269a41f256a22bf1cce877a5dee4782a1a99f486b7307a269df8d04ec85e2cd5f0b319bd560dd8203f8567a4e9f94cf148837f78066ca53ecb1850299253b00079bcf3a0796644750c71f976dd0853f04d6b99f90cc0698efc82474090b55b9521c2840c3b0f93b56b34e5e836e8662eac6cb15b8e2cc22e391e706dea55d6eca5a861fc4261ec676fc0c1335c4c2ae689754f1b8ff742f8203244ef0570a3cd68a144a66ce1dea7d4cd83f3ac11cc98bed466bc981af08dfa7dab71ab7890449c2a57550c3be4b0db01e5c2cdcb7581ad9244a18fe19fbf8cf18b2be1988b8807bda500996f42db6eb131bb64da382e5d74cb0d456f1fa858e93533646d6e02bacd2fbf7cb70a09c36d81fce78cce39cbd3d0e2059cc8c2a3cda88ec0c8b1c49cde23f8235657e533e37de498036daf63236407e8f1cad6ff9e152db44bfa7aaf6cac368e461662a0bfc17a34ae7df42c42d306a99d482fbaf621b0ca6e228654eeeae65e3bc900f710c934b2e96caa21baca2bf20e037ff648766436b3f184c81c7bd892071094867f031e9da57f2a360ff6fe6cc6aa936b281e5a5f7f3b4a5287f9380ae273b597f8b9dd67afe43e6efb1099b2d2aad4c55d8e0a7dd8ba7463127df03fbb10cb5363d00e4a1e842767a3de1c19eae21ed2cc95ec9412362dc7296b38946e33364bb690b26305c365280a1e889c05deceedb4731699914cb20449dd1bb06cc98c50e34a159448825ff52d69f1b0dd502f46d366b5af31653b243226d69b00c1b5701cb0b50a33153c3dbc8a0206cc72bca8806e413534d2222cec936c1723b20821f707a6f97fa1dede85c69b6734c96c15e98fb3a3b5ee921ff3d4efb79ce48c1f89dcabf51b9332867ea505efe1d43b9c612f106a71785f06499e1b1f7f85f17503a6598c342c1f2816efec7c5782d47133f6c04eabee87df82ce3ca084cf50fc14960257012c13b76b53055880c9664bd0c181207d18927d7556887921f53a490bbb4e7ccbd3030f1c97df706edd945edd7d3309f5086946692a358eea94b84e9cb847c565e4e60b08e2cb8c960942ca24c59b071309c57604b6b621f1315938447cd014fcb1419a4a56d1448ebe14cd85a2f14ccc3c763124573044f49576f88ec6d4e8efefdf17ca9690a8da8af50ab859cdbeca2ef8042bd3d185ca567d8d7fe96d0100c67addb6db1ef1f688f6e0cece5102ed02e3b5baecce7876018694bd5e18a1c069c47fe6f098bc8a460061bf63eacdb2b1d4fb58b6b51f6b39b6ef0ec71c72c14e2bb981cb331f89229da788e38812fffd25df45b18076b3dfbc092a80b889ef49e05e7e509b54011ebfa49f1c0ecc64441c687c73d530321ac89fdbfd20706384df0783875138f3f608324db47c2b51b5d082f7fc314081b1bf1b0d778fd746fa26c5e7dfc0da113fdefd99b9e38dfc92a397c23a1d858c7f6c0d99644df8c33c5d38568b11ec7c7d5acf0d3e9ac801ea16bd96deb93f15552707cd5d23c10e36f401bfa8eed461bb314634619ca159f20c08748687b4849582541cb5cbb5915b83866d6b53eb268f7d35f52a75dc13efc6c15ee774f4fb3d354ad0af4bc301ee6bdaeb072b7afae0f636d351e26cbcce657dc748031f5a97fea80a3dfee4f2a822f46fa73ee9c4a89fea11aee932104f82c163ec86f14f884a4a0352bf7e9e08c87d11dc3bcfd82d9bbf7323d6e5a6e4e5648a99b2ea4f400986dca2f21dd9cf51e7831c08fff2deeaed8e0b524ade413bc9648a3599c71cdada686a4d24819786276e57933574da89123f9657219bb6c14dd5b7cc6ed1dd5a8c0e0392fd3e5a3c002a36219278f36e6789837df31ab0576ed95ae8ed330339abfeea30117876708f9524543c74c4e476356849e28d8ed94d25cfff5e384def2b5af606453900aa03c2eb4091841dbdcf406151b8c2f781a31233c0884e31440950ba335fbfee930899e2a93312c1c127d00d8f398335c8c6dd5fb581097ac509ae41846de274ae1382af80fff98f22f5348753937b8493308de1e9d0aec222838589063b29b6c48c5766423a27cc1483456a1572dd98d53480e31d829a2c2297146278171e8bd44abbe37577cb1c328a38f8f33c15274ab84adababbf99eb2c8043942b0603926440cf5664020ea8f3107cdb204b27d6732c13097e55b812451789d233509a97a43909d7d4ac9394ae9a5b810fa549ad6b2badb1f06ba651b1468703d2644864dd9f0abd04cb93d36836bdb216206dd70b3c6a61211abfe5e1c96c6a4e14e06babc032ff9a294b87dc48915a1dc6298d61bd3c8be0d47236783b52bc6bf895e58ef581842bdc262a5a039b590adb1e2a89122f888344b3a46954f02217b3edaf675ff7a56dd95a1e250138694366cf0a3c553ca4f815178fcc3cddb56ea4f788fdff7f90397f2822443e391c4c803b106663ec3591b77e1a046f4ac97c23a21224b4ad454e5dd8f7cdaef9f76c93e5dd53a8c1b5a016da8f26628359bd828b63dc799f311c3ec87710a77d901aed2fd5ec07ce503a9adef1a37c303f95685ade4eea6c59b00cae8fcf4f7dcca029c4a923db636c0aab6888fef87efb3d6373202aadce2cd6ed0b803c66bffa8d4890e3dd101ac741d4378e465c88046a0b005bbc9fd515b8c67d19c0d3dc22d3e3c0a367cd2f48934e631e5e1944bfbac6e41b9f997d58d85c30b42b247a79d81cec1248bbc1bbcdadd5d2e1ac3df2ca3eecf01cf1240a458726ed906e69122da4b5182566e22c0e5a729cb48bb4ce318b2baaf85e2636503d21fbbe070e6a6bbc97c99d886531966ec35a469ba9f7d8520aab2045c9e11018211a76bc356fbafb83878889aca3972fe591c406b6ae666d0c456b37afc3e80c5a9e9e63068ad45959fc6a10701a2dd60bd953f7d0bc3b286f23e3ce7013619ff5e726e064078a4cf560c3d704b32124537e8468e0b53f099c8b0a2bd5d5f2de80b098c28be4fa53c46942948ffddd1685bca4013c1b0e1858ead55bd3b7916ec49c3ef4c90ade1aec2bc51e64bf6d1cf9254771798fd48dd091fc7ffb8381e5928b5ef7ce2f3f70effc4bf2112c4cc6231525acf38d95440a37c8d51617654ccbbb455e218b1f862eddc5ecf8fd3d1277cd7fe9d21c989989f0bfaa1374f3289061edafc3f7d17932a80a1acc819d75cc8b0b93547c06b11cf18636ca3936ecf1cbb5d8322fe0534a9c5579ed46607cc341227fb9fa5b044652ed96f2cc2e31d8aeaebbce8f4ebf67f0f024b074c981db8889ccffbb1f8f65f4c662ab71146d94d78af498413a05208e7f035dc895ddbef3994e7ac2d3ce10eb1db08485b09158dc84e9c0d8444324b2c369011c8b06137b6434bd1224a69eac07ca79856aeeba72c83a81a96bc9b1fe1f2593e4389c87a80c30968e119b80887da27c6afc2bb57dee118ad0ad694570fd630ebd3612d3f1e97f3b0b539cebbac409ac4e46b9db8d69d9298426eb6f2af5549988851d25000aff7f566e1f198db2cc95bf8469f7102d542f76b72b5a70e5278cbb28123c45409b6a1aaec974c8d2a256da22645c1bee230041b94a169197a088fefe07168e5c0f02fd803741f3a077c4aebe14545d9f910baff3f515b5c0ace0b19adce096e8d3512fc42fd2eda0976d67c9006252066dfe3804802466089f4a162301c0ea09c67ddb99001b14ea16aed1a8d8f0e333f89e987792f8d06e352c9d8b06743b051fc14cceb1efbb79e94d40334814f89bed0b639da2ee2282e1fd8930d495eb05d762ac7721648100a973a80b95ccfa99909f8b746781831eb9f4b5063039a1cfc27e2c7e474a1c4cc2d2f4a538693a2be1f74214464023c515b7802adf229200f7e0b32590d910c3af16b940864ce3fb9b2d5d4f26050f42168742b3ec580691131b2fc5a283be72b2c06301e1a1bad4c736944cebd0df22a09186b9807faa1539ca15981fe006e83622aa58bbe2d425c536f17610666c209ed5bbab8f0db8f96fb192665dd3fd4175acf695a2383607f5a098cba8340ec2fd611e3269b15be67feac86f66e1d56164d2540feeeb74b85b23513978f2428c0269b4582114ed7f0e04b0ee7b669e8ce5b4d7fbe4c78f095eb13903e456ea59913b524ee464b32a51f655e3317e0efa94a437de86f16590afa1cb1eab00db76824247198f8fb81e2f61918aac4bd3f1e1bf25dc323b34f11c224428fcce98677fdac5a006d6e9e24b20c9369e5c4112e246cfc3407a05e0675a823a5a90e854acc282a11c9211918697dcb53098a43dcf2c58243997f25e1689e04c29e2c8f81e9dda6a3baa6be9e1c5436ea79671ee6f65f14ea7be6be814851c3e3fb670cf624d0b911ab75ff97af1a9162e1ef151768f0ae84b746a21019b916dd64abf946f81c9a4835a91d624634a9768a4a5d602289f183bcbdb1421dfdb5505abb7702b3806455046cc52c7fb955695d7282cfd5ee5fa375ec3f19aa1c85b610950dec1f15173843996ec566fb27116053797b4938bc5906512f643c8a64c719d58c3d72e7ca6dddf892eb58f2c15541fd6034e5ac15dcca8539c1374e3a34d35319b379ea4ee909a9b8f4718547293bf8d7c3f5bd5db3c152eec43df97a8a5af29a34ae3e42e8d04b3df658892b91262f9e3a17c4ebfbb1dcb0e1ca6b230f38e57e3430347603c0c3b94a5341fc7f37e0f048f50e2e62054eb46f3513d88bd43415ab626d0dbefd6b3b98bc6c69b6709fdb371b72da6426bbf53014569080c03f7b6c94dba624899dd4bde3dcd8d214c58d51a0a094940567ed7e047a0da15d0cc41d9834f1a54f7abcca56bfbcadb4c2081523b16900be927f1e3d9e98634e45c0e021962c2a564e806cc2cd09634aab0b3c8898c78f97f055311212a073f1459b3cfd265a34ef464e877a077f36fb21edea8d900e13bcccb6237a8e6e74b12a2655ea83d7a7cadc2c9e161ba7852638b6611c9ee4b31b221ba3c505cfb8890f0f9298503aee011cb177eea126a1deda62ec92e0344b1ab95c9624a06f83a89f8f4ac50ed9635bba3e62431750b704c9c939a5b4e3cf38b42f24e609fe8e3cdbc8edfb548d27c6f3b32154de47dd728643b351fd0b99a4595273002f3b480d8b177226436685a0ccfbb328f516bf9e6a7e2ef6c20302ea6215c63f8d8fc59184a8cbb6864a50b241fee2f8566bec272e9a9d8aca4d281daed83a8739a9b8d3377ca007b0a2206e0c160d86a846b1a78c5bdb303123463c7428ce7be2b2231216dd233c8376dad7641df114f03418610a038cb29a45b374dbca2b46ba8b4df3e98f78a9aabc0259ac386382885b533eb1f6e11bb547f6dff3ec4f466b19e8e95573a322599a132ce31ac66b022d4feeedb71e99eb7ab540e4f4fed34606e6bd4766557f0ee716ffee0584946d732f81c35a6215845decb899e530941a307d829059a41cc3f059f361ae4badaed47425c4c631204b288a58d899a18d26544090fc1716050ad4b50c9e9f894a0543c07035ea1ad66a6b0c263882f483ea8b4aa55858d70e22067673fdfcacdcbc35cd8f3329b6909ef96cf7216ca4b5cfdc501a941e1fc32a6d5d94eec6336afa5e76551c41ade1466e074a5e04c51bca822df37ff6cdc6cfd0893715bc8b0d05fc941278f266ddea55ff225a45b765fc3638b7b186f6f6e2cf2eee270df5a06bca14d1311f7c1dda7e566ed033c612ec475ad119c4787d420060ddc0f37a6ba21f0bf821890321c42594fe282fcec9cb0fbb03be9c7eb111b6cf416135c0ce25c84a38ddab78ce71981418fbe09173987ba5732a89d82946265df1ba8ca188ecd11bdf1cee82f15bf916f9af350eabf06a63abc18b94b1a92c870b8cc29090ac645e62417d94e00b23e5c23af753de61a0eb11fa544f7734a7e3eed9dc762e287c7932dfa73f97b558df1d66acc1d4833bc72276c6442ebbe4af721df09a9ed28b79d101c9d093159fae2859c3d47377b9fd767ef7089b1eb41b0baf8cf73672ad6be1d5900bb18157fd907adefa7be1e46ee880fb8e99fbe9ef5ebf7580a891a449048d05b1e6df1d2a6577a07f8e99677aa84d08b251d086e111e07c51854812c67dc8557405e0a666f492b2e0b2549d7d0abbbca0e61f5e8a0ae8f132793946c0e7c03f2b088c44ce614ff026249fbe1bc38b8c280bc3d15a7f326e20de90c43dc67c3a778c0418381e08f7ba04fd64c6d104ab6e13b4bd33d9b1c7504a19e1393aa8b8adda3824bf7e7c99f5afad351cc9ef8d86ca2802f7dc97d12c63753103e29014b239a1eb53eff3f3d82a2e5a4e2b899f8c8917214450037bfcbd66d64db3515d8b7ebe56efa2b03330dce31f8724e47433a95cc6847fe7a441e12661ed24064dbf67477464583ad3ccf108832a7b0bcd8e8a5319bfc38dd151ed4499f0a928af58db18618121942dc7e3a5f4d30d1f2b772a68e2822841e19172e79dd8229cb570933fca4b93f8d777063b1ac2e3140c69ab73ae0c19ce634b3ce2c11e9743772ebbc995c84768d4080cc0abbfbb22c40f0c38c2a2fd045b69e2bda6d1ef79ccbd98a8e3454cd4fad224481719d12e8a6595ab0310e34e9ae3f1b3ca33efa6b156d8cf773b40ad4ccff5b16807b5cef0203e72286644719efc61d20c64ede9087f1fc10d9453055dd0baf8e9707fb080454cb387f3415b0e0b2c6b3a6c8b9a95fc481b281cc5ed6b666075a59c8c00507def60033b245a1808a6c71ae6cc38d7a8ea2dea1db07df889478c6f159b492a144fc0bf212db89cb419370abb40838e5b69666a594d747c3069cd9db48a71aa4ed3e5b3ad8c96f2ef36c74bdd61b68698308e263179a0b86f2fd5153ac62ff5e74ca17e69ea65d1732ed437434c5c4627530982ba9f97b1848ece14b92cae3f442a8f94e36a567f6f08690861accc3438618a93b20ea074292ef11708b7e5c048f3f675eacbe359745a8bd40093511474d60c980f1ab5cf6bf1d250abd9dd1ab22716226e439d8e294d3d190e583b1b27b8953fd720c488f6977d6d73f1e3ea5d858530d98663f0ef96f9d519f79e46fec95a9b8e81e84e070a04bc308a6b31265b25434c8fcf510e9eb97b2986c3feee36a0c39aaeab7170b3ae576961304c2f6768d42d72ca5e50f710a25f1acd1b256308f103c6da8188a473cede6711a761dbc84af5621736fd581909228eee7159e15428e290e88e529b78866a493d7a9143a2f71fb25b3fc521b87b7daef8e34dfe8bc01732f87c65c519800e6fca95ad632d15fa26d84ad1ed0bb4f1f74220b03f126b50296dfcedfcc16d76ef9b04ef466b7a88e0ac66fdb6d7ce6ab81470685b6525fa8bcb305cbcac47cefcae73f0ab7ea8d32209be8102857c80e0bdfc593001a0d3582f0fb5b94519511b5117beccb423bdc95e481e4ff38035d7b1d7bba8bfd924651ddf6a8201f7420ae9dc9b91a419622dfcc6c3552ad295cac05efe5586200384eb1f4e51925b3b62cdfb9254f48e8539661116de3803fa27d93fa9fe391729018533f240babf8d53f298dd5f0c3138153e4f81c3132c8e3245aebb251b6b4937200bd0ef52b586d014f44ec2066a9be7d49d807a276298ed44d90d2958a30e6bec98e391de2335e4aa10ca0a06709a45de647152740bad38dfedbafd2f1bde28f52e1c204074e18ba971de1c15bb930dbe3522613c95791f1b2acbfd148baf807f95c15122a22bfd7a9f34b65b39d54efe84d93f39c6365ee174da5fcb1e3d883ecca9d6ce7157a8d4a05a73843efdf571631043a241c80907ab981d5715ec658feb3f89f41c413644e6c5aef71371847b8bf3d61c92b6415ca0b0c6a64faee12c311c281cf9d814316678c1f93bb8b9ef83558e17c56246818340723c70c0cf3d823d5a735845989e5b5e25e551cb4bbaa72ad7a21f3887e64d56df2d6796dc13ff18217a570da5feeb1fb62f8383891f0e98d287ec540cb8fd354c0af982884506e88755bd56c653084c6d9e3aa55860b7c366bd2d80edc75cf1a915d9e0f9fbf0044e6feb26d43265a73ac58e1d385a333cc34173f1742773ff3e619323d915b32008826b4310e5f25df79e2b086a332a3756d039896ecd40bad018bd74d0eee644d1395c18e0da2638f4037b554f412672eeb82143461e5b64bf10d1844fd4b1e79feda922182fbe18950e9f36a7596935d7a7cbf75a578697463f499883110fc300a27f321e1dda02c5cf9a2699391f20cd94940e22a8b395108998f464e355f3e9a277b25828b1dde376a6c3aaa6f7bc82f25dda5ce42435198168d4b3954c056f1ecec9a8ed4de4e759fae22e57212dd355ec4aead6afdc38f4207379200447a3a8b3f300c31a347b351a95706b28c8ea8b30e0b42b0609e40dde26bd2be93de7770420d9d070cab20670d1cb5fd78a53c4f05782f3b4ae8dbdca03b980058a5889f772da7e9d8e95940df915cfa79c216c226968c64126c3816dce5bf6119d0640445d9bc55e48a3206c2784aa806f977f7f845eb385f015358e43f86e5b09ebeea181dc2333f8be1520dfc08d5f2524412ef0c91f6a3e65a9389258b47a5ab5c271a2a8c66e484c9c56ab3936a0b9e50ac81f8641b6aee5da0580a3f73530fee61e537f5e31be07c4635c744bda5bee47b1496b6695ce8ded675d91fee22efd7f0aa3323abf6d166cab48b70c3b2f6217a78c5bcb367629dcc90a98b57d8f29a590458e7ac06a12071fc34884548b061c455564d06e9878c1bb99ea6c3d0d469857888f954e103e6b9a478bc6e80d67b064ad888cd7bfd11c449b9810e78c2097016722efc9f123bcf948c19fa19f9a28f7a222c9cf5fe2b5bbf9d6b7a0b2327cbbd4b414aae8968e14e3c80c3a2dc637ac47fefd6b9b3fd6b70d2f4712f5514d6eaa47364ae996d5e5e7791210658ad101114245514e30b4347295e569da1891b51c5ceec2dd80fe2cb217eebd2986ce9544c7025ff7c6e79fdd3dac6a574c74069c1ed74349eba73630f2431fb158c3e5a14a85c967843975935581a2d10f47fc625616c209db5c4cb8461cc19cb4d9331049b911a26deff5b8e48b317b05e82a9f64219ff735d3ddc4e618319db862a226e71021c7ae5d36f814eebb1d235afcd0da882b7d1badafb8fa479268ff535a057dd992202e1234254f12b4688ee2e2037c8e433861f7f96e5e0da802070f4feee879d3995a3721cd9aaae0fc8383cd9fd0c9b9ac63dee22ac25157f8be9f614e70678a39d712b9f3e788295da171b556b497c827dc0064ee5ab2a913bdb2ad15a1e856a931042ac1861d37fb13d38558e23b4f1cbc7dbc7e02250af2109852ca190c3e7c252483fe06a92d17e94fda448b4bb7e54bdcc3b0ed838a883a866e5eec6403e74a367c2c2b2eb60a9cffd03905a3cd1886b1177112e1bc4ee8b26b94f741b9d127510cf100b476201bdaec256c6a8027d447872719176b9ffe55d25d02a4d1e48fe48091dc6d218894aef4ba16bebf3ea4bf70263ad95fc3ea58c10d46f97337029260fe21e25f1e1e7eca4a5a4d338ba8eae1a6c1f30f6f4b2347ac6a0c171a8efde6c0b28f91cff9e7a15ba403652f81671b252f6e6c6393fbe5f8d9665234132b78402674d9e6ecf2a2adc0eeb0409b16ea6d967b23b27f767c8500dd7275002da25b28b6f6d105ae271b38596d71cb497c557f1c50aa7edccb2f6d96d955ead436dca67d9ed2e6158ca1176f5ea59ad890fa4212c4dd0e741375a46e37c1e39a61add304c3268889012e03bdf9acadcd613df420a63c26c1bf83365541f6b5e274e4304c370f259521e62b579427f602c277161d64cd512a260c7ce4937c8c4ffc279fd9eec30cbccd742badfe022eba25c739f890a2732bcd0ad2aa8cf9cf73f2ca8fcd1758003377e636d3ceda8402b9418ffeb568e068f57d6d837c3db667a1f7d3dbd12687cb21338aee8c771af5d98421fe71c17f7d66e6d76cb94f10e8028cfdaf798cdce1b866909b21fcf2b4440c1ca59d26c1e653354f8c7ed5918efab022e1bfe65ee533fcf4afe89220576232384066e82c5dac6223ebfb8d29e3b06cd757184f8213fd6aa1722ede74c5616e9b6d050eb25dbf75ce3a0a08c0a9e5e1ba0ac0749d7bdcf11ee1aaf9d6a6a28e97697ff8a80ecf9d3f045e5fc90d800f798522dfac309770ca5ec82c7397b5349af58e2f8503df7872f331062d390e91e510fd13c31cf294f5067fc8e8948a63c7a83614e5959033d100cb10f84f9b820fe6e889265d02e5a50ed8133cf78773050be4ad2c95ef88eca41408b27ac013950cbdd08982d5251c196d2571aba4901ac1af8e813fd27fb2ebb60156784c8a4a732aa3263169154fc883543a20cba741e12389dc3281eaff4e87e09005bd47ce141f7e63011c6d52cc81992855b2ad4cc74cbc192fe736a204890e7d10dc772685935b25af70a661221afc2d25bdcb1d08eb3f9b05c6324e57930900649fd061edeb3d7ab84419678701cc9a6e71e1d7ef7845b85fad9300a5834815efec691b7dbc8b02fc70a8c0e65276bdf6e51ea540e0e8ba464cbaec8bfa595f6d2630766492ba7bb0e366c6eb0fa9b18e3e95233c13bd98d0a8c320b5c8d8f935469dcb02bc01872b4827060998217fbd326dabd15d3248dc2c6bdf3c15739c03b55ef36b30a7fd7af5b8e0dabc0b477a3d2ef078198e390969af067b7b08ea16f14f2a8e3c1ec20a5020096cc6446e63462db8bdd96fc98960ca5cd3261ef74c26e0d19bcb0f8fdcb1ade01fad532ab0744be4cf511be4ab36a47c35b49b7e00ca2aadffade7547f46d4d905215c7d313534b829656ed65dc1c059904f5f389b7b699de38a5e6534389a53caa9e99734ab3adb65346f8836e41716d76042aa46a5078f5be88421f4d1b5201d2d68fdf02e14eaaf237ed36a2c842308fe2c3e136e2da4a0abca3170d5674f985e15b6b7b19bf0229af8834e4fa511ae6a26a8364cfdb8fb8d99108cc3ce824a936be8b147cf274bbf9a20c4b2b7886df91579476ea19a42877ecf3d41673f6cf1602c8d4fb1f315acaf0adb3bc0492bf13b055eca94d5a812db3d5357a4f195ac260c8704538cfb014ce1849eaebed5fbbd533eb741be5a5b1e5838bd6bd9564f1b99a0db11f9d5c03054f15c843b286993c3f4074858d47c69e94aab6ec9eae267937b96c9ccaa7cbbeb5737ab3750a8ac7be3e5d7e33e0409ac02b40235ad68573246e64ddcbd1e5eabf57697ee583ec3393fc2dd7f529263b2dc9c223d62563e65bea8824bf52567eb2a68263a307d5ad751cb86a44f58dc8cbbceecb36276c8c0d26720959ab1a022ce0d6f16d792599e06c44d65379d477090a229c931adfeb9178bcf0b47422f917febe897a54025a417b4a6fc315ca961da9b72eec76bf5daf27323937cb31d43246dd920f8bbbfadf9799f28d77517d5b4cbbc1f88a4a9754e0424d3e8e0b1c6b39546e57f6469d5332d02d6a8e0a5ed79da53aa84d6a8c765ad1eafdbcef29f83e277dc6651eebf7d5c25a4f19fe5df12dd0c8e448ce1cf405a11b3dc293a40e6a022e9abf9fd6a39d6acdf69c69a01c864db734b3986d79007b8a2013020498ed1eb483839caeb01e94a16fb01b6c34444add8fa418897810a085cb7185d1951f4680902c3c0b733222eb0edf3fe50232c3b65afcc47e7870aca15e1b0e1e2021198aa6760ef604bac07ac4a7a6526901d090ac23cc0ef38e58dfbb988a9dc8a4ce0dcdd2610cdc75f339f9e7086690bf168a84d3793a3eda5d1b5215a4e1096ee4f00a32b6e7d6c215a19501dd82262da43f23bb92ab3a8bae952cd6755d471a0ba48127cb41588485ce62d1af3f3a17ef6623a64ca609567764aca1334d57b50796b15fc83378c3ea8aa70ba34b793048813aa2a5b7e0c36d26b3ed64576abc796332ecd8ad149fcbb4ecd89ad703d3e502d4ee55512b088dad04fcdc0abd3944bf6c1449cad60177883aedd304b355bf6271131a45cad9cbcb15dd07dacedf9e5112abc2cc5669dd31d80093caf2631389c0c5c5716cf731a092ef0f527ede4b73be8b8b241cfa70fe0556b358e9d2d4a4d5637fdbd3082ee50aeeeced4353d46442460d7687b8cbe76e7aa168eec094094dcfdb271e03345ff404d1f74536644de14a5afc98ac209f7573f3f78a8559616f9d6c5dfaa5cbc51beeb5933e1e32b20d404c5f7ab9a7338a2a564f5f55b02695548d563bbadfaf0dfe37ee358ee61259621df87fe5374b36219047860e93c21bea2f15266fa0166507a1cabdd687931214a0b738fab05d84840001a92cf3719ce3373e8131aa527f97a6f7b5b89d761d2d2fee2ecdc391fd829bea0aec0567d458a5765bf504d10bde8a78351ede9a48546d6c643c9d3d42aa6c13abab8c6b23c6c2ee2edba4bff6f2792df34055449f18b7852f676850fe04ef7525d5b0ff5f455dcde8da2d304c5c6a2db716de387521a2caa467dc46610c36021890ecc9b0ffaba31b6db4b5edffdf2ae0f211e03a0e7df83c1a51bc76b17b73f2d30b53ffd07b62a2a7932be5af53a5bb77a6825f0a7ad458f81895fefd6feb96d0721146449e7b1afa85a09fac104c7df47d44b089867778f5d04ce96e9cbaa2c3562e43438d7657221c7fb491504f9284b0aee60875ec378ddea65de0c420c25018d7942c4f5587c685c3996cdfc52de3cdc5c45276943fd5b0e78d981449036dc848992534af7f7115674f0aa55338e61018d207843bc869bc68ffeab92c8cc6472dee98dd793c45d02a0a307b233aa0adf40991ccd8ef211ff395d102b814cd382236f44863c2392c694bd97aa8a4fae035110c86799cef807187126780b35981acc6d241db9f52dd0f8a788a99cbd0d5ff0c6e7ca2333bd2755b746e952a1b1d78e7e0b032bc8477b4910c1ed37cb4dd831a05b7c43ae53a61a9346a37de719f8f8e7b227431f736e5ad58e26ce8ba31ead94ea9028ee5203c1bd1961375cb02e3934613f6056f2d7dd8bb63c3dae1bd3b29853d43b9937d02f73b817dce3a85416f2492291433d7af0919b8d41ce54cde888b0fc598809c56115e1bfb2b9bb2abc94ca615e6b33f1b391031bf52525e9e866f8f6da35a02c1b2de02c1419d9bf61fcf3a49b2a903c9ebeb4b190f2230c4d536db7d6cbe26c1b59e7553f0b08ffa327b25331b3fa4e451878c7ce3159e17cc6c58529aedbf0b5c00611988be713448fc1c2a8e3bc6f947d07e85ca9d66205e0e64f522cdac40381544413a5141dfda2291d15dc2982eadbe4762db917772d6a782505f38ce4a089585788a73ed6ee83fc3229888e980230a471ecef74fdd56067077ddfbeb66665c1a36b89cf5fe02648ef67f51910116acdbc60cad631569eb02a764461e1dda27fae185ba241972df16ccd9c1c17755e92e9ae769e24526685b19087bae815b5bb7aabc8b2aee0c7bd2ce8ee9b9441baf2a020969e8dcf33a8f8d37b08ea8c3e9d663516a023dd558b4f19ad8032eff9a074ab5edabbb5eebc8d68fd4b8e4258f41acac5fa8920b7c195e2ead8bcbe59bec4cc51b1de25f59b6c90d1ac78856fc89b90cfc237b396b3fee7c8e89133758bc6d83096c272d558aa72fd042dac686e9320baf07a963afdb2528044f0d2bb33c861d4e77f934f33ca92ad694a438001118095ab56a89e87e739d0f9a187c7b9d217af891d7f4bbd30815456e31d6d4c563d6fe25380f965e4d8668561c883b8a0d08215472dab7427a13fdad181d0062fbd821f3e098880d1050ce2faff2e617ae7d1cbb3fdcf2c846d5f963fe7e7da71c5220bc75f83d1c37cf3be8987a767d4c409bf01b98d74ec0b3bb4f1e501308f9a1ab745e1bf526035fba8604e4810e5ad49b21239c92359c60f3ee35d2c6c2edc1de3123d799e3acff791f4c8e1c90816ef964e76b835face33c38a4cf6edcaa80a99419ff2359d2fe381973c98478e043a8c00ef846a95e955f5336ad6afcf86f424e0935c01e94be08c858e9b4e796e58500366dd8f522a1e3a72619ee8640f212c36c5992d8dc3a21d60de84015fa12ee919869c79b367de27243594d985efce51799da389f42eb5a795a67561a0cf6bc4a865133396dcb96ceecc924acdaef83f44d5e01d19c298943e955933abbfc940f87bd144af03fb461bdab8b010397adac7344da8dbc1923ee57197e046cee435ab0e81fb8460a96ca6a575b2518709cba4c6db23d90c592819532dd17cc66344efc5320c231c148c801bce17ac0c8e5714df8b23ebd63809399bfc445caebe4b508f98568e2cbcef27832e626bf41cc696ce51e7d040ecc9b87515287e050f560275e2466af2311e4af457835e275aa1c8c8ab201cee466e63a550f479b3f9461e78a12499e26fd59b83d1d7d4ab7e9fde2047ab46c547cc31c733e47b13e879cd7f430784e0ec6ab13c0e077975af58e9a7196bb251082a017ed2e2fb7f1362f4d16dd3e473895d619d08be8655329b17756c8d6a0c69c99f4df4522980fab1405a2a7823054b60cfeecf87bb5d298c3ea3525c54765c3501a2e9e8d5a14cf76bb2d2c1948269c844825194c024c9d99445f85021316984bb918d6a63ed231f90114474cf8a6b2d56ac46477cd2d0fdf37bbee38ff85ccc5de6f865538a233f9713ecaf4de8af30c6f0e10075dc18521de9e7f10cfd251c6c17473232c6c91afb4da1c126c0d83fb0cd69bf0bb7467e51ad4a4445c94293efc10a173f141757b65424da66940031d94e7a84c6f4321160268dc67e16c93e3216aba16e2bfe02869d2f1044a2990892b4b243427569209ebf8714ff570c7e6e0642b505db0c897037f796b26ebbe3411b3ce81ce725c74b131cc43a065718d029438ef0ad87af79fad1b42dd2e4dff38bd8da1f5197b017734cc7a9453102a97c8517d548a5abe7d717aca2a31e3da33b3b7ab53cd051de1cac693dc81b61211ae742b04862d3de3ae8c48699e2e124b39bc7631095a3f73958c28b8ffd83073df83fc5eb3854bb74b7a8606975a5f35020aa444bc1deed0f5af5f18e568adadeb4382be69e095237148d1705e62949dcffe6ac9be0b39da159c0a79e4c832479119a92dee4efcb028f43dc54914e05b484d477b04aace673a328325c23050065a19e5f8c1cc93b368221a7ec156c7c8e9d3175b62f7e3677fc11c979dd3fc32163ef873ea2db6316727cc66a4f7e847fbd8f1ac6adb5913902ae377a30d7aac4bcd5754fa6aead1f80c0cdc646dd05ba05a7d0a94ff13c48b07a875161e3c075fe28fbb377eb79b572d0da839f4de4a997036cfadc5ad3046c60bd3c89303ec64bd0ac12130f47c18bf09b87996cbebc109196e1259e5cf747d466bfdd8eeb39d836f5cc65b1845c2bd4e79c04e8581ae214f05eaf5541c70c17bedc2e4319953f974e06414032aefd6f788893d5601bc02758e74a3605c177d2adbf23a8384bbad1048ca7c0cca03e34d70cff435af8f0f8aec05b91d8c5f12db61e8d266fdfab2119b35d97fbe9772f7ac23ce69b79686f6f4ec6c918c1a894958d0af8c5568b755f50291d5a95de4c2f25898ff8baa37c31c647bc4954303b6b27587aaa121d33ca18dd0e4d14585d4aff8b3f30cb8afeb3e88684f14d1f01d780cb04f054822fdaa5759241a30715f6bf2b64546878f2e6c4af312c8bd6d1cd28bc056cd5523a8a0fbc42b8756fb4812d14452c53c4ad5f5270ab67106cdd1d9346ca83347863aa4bf60fd459b52430ef5aeccf4ce2162ca00520357ba6ef10d041423d506bdde942dfc346f605c52d81599b9b4f7a4a00a21ef79b6b0ad3fea9e105e5a70976a111e22e4fd761efff0550757f43307b8e2fd643812499f054c255ca9ecab358150a7e36aeda2602e8f513cc1b0dfb42aeb36673b2e09331f625d762f7e9aba3b7cb9b05451713d52f01b9e36319b84635d24408c1d7b6c98cd4965b275e97483a4effd898788cf1f12462aaba91394ea8696e09b2cf0bae977c1a97522f915f58e45cdfe5d93482975c3f8a66e1f40f82e84d1fe20fbc8e5e7048f52a316f548706a29a18bf588033ae73388c501af008a6aaa7de810f09aba03d0a454cc0500c4ee5f2c6052e62804ddfb91aedad7b94b0f8123f2b7478bfb05576e46c74e4eed4c49168e7512d29bdd3de950efe60350b54cd3dda93d4d45fd723a353778cbf7134a3e25f5f7ac51a194465652592afa9c69b8ccb264c924cb96dd6e742d75bff6e21d781768cd4f2e8906c41bc9521ede701f46147327c36cca30d1dddcfacff03f71b8747a40e1373cd61a3b4f75095dbdd64826ca3d6174b9f0a3479bd7db01cc8fe7415bf6dd16469f4fcce49be0f364aaae6d24244dd9e88769d03357bbb07c8c8ea533c68cfaeb67d496fe9a950a8c5511c2aff150d74852c552d3d4ddf8387615aacf4ed01938800041661ceef4a4272b5a21e68856b139d72e6ecae355c66c14022378fe73f872578b8a91837684d94c8041c5f231911352266770014c6990bba2cf2c997b8bff96217b089c3f7d4fc1c5407b8ef762047058ae7eb7dc166eb8d002f802236036d8a212036161a97d06ce3f398ca541a204ae50569920a86bf8c22199284fb58eff2654a476711213b03a97e57bc719dd43d66dbcb857c63b10d549804919368533b63ee16aa933d51084007ead6ff42456089d067961160b53c622a591a51ab3d6479c5c45e0160b9a32878aeff138a6c03643cfe9dc995bbf73a9ddf71aef307db0a2b80017b12a90f0363cd71dcdaa3382ca8e5335631790fd5f3656d96e18e231df7fd1fec3685d196985645611c7a92cb9cd86678ea8f4a437c9cd63f9426c78f065ad4ae7edd415f977447a3c0133122fbecad76316ec172ff91e57026f87dd566bc10a4d81670779acabbbd1261488cce4d327b12cf806e007b7ee6c95ab854ff36b8ca35899132fb7442d0defe96266fc227f5f15d99895c11116d2b4effc4c864b7305bab535b6b7bfe380f85ce20f45fe9ea19b649792ab048e86af349ae72802d906d216afa3f030aec08e1a6c9cc80613356854c8a453c4ff3679d63886f89cab8b3a30ce620d1d88ebacdd7f272a43f93ddf9ed67d495cf052731bd5c4c90c791838cc0b4c87fea0a93094f82f5693f550b64a698bcc9d00dfe5079ded6a2b4c93d777ae487cd3b3034c625caad00862d957a4b6f2630714e6038c0293622670e0a93b624f98f8e0977d411405223244a00f45c711866186ee82fcbf437bfaad0d3eb1c0476a0a11bdc384471e38c27899349a791846dbce082dc3ca14ab906feba41ed6b252171af19f561de587e3929ff8213a621bd2ec4ecb0be77761f3c0e1439fd5c9e073ef6ca431a59ee02194297b96f6cea9812e9065f4d7f4379232994ad50359e031a1630f8b9084334c187e2fcb9d429451cbca2ccf78f339f92ec873e5b7ca7c7b7c24a8a2dd94c6ffe01234bf0c6fc7691bf857507e1af0ae6f0120bbadaf72ab777808b7ecb94665486a11a2c69d78897f37d732cae7ee1a83dc2e87c75fb321fd5f8a78783214249e3c58ec7942fdd719d7bc46fc2e11e9cb1e5d33f49ba2f92af7b2312234359f170ebf6d6355e2419f1d7087d12f717ffedef7950249c0c3daf4b0e18293fe1908c8d65a29b76740d6f3ff433f32c90089f9bebcab7a43d509e6817c8c4d2e3c656c366e61bf7aec83811f5b2eac256c90df25f99f7bdae40813bda25bd9ecc2bdfdca0f643995b55fb0c7befed750b6e3e4b175ce8502b7fa197a100608fdd76d6768d6230ae41db167c8add77d305efb2fd9fb0c73f86e1a857dcc3686b59527c8e3e8108cdc4f8b9686a01c6477dcc6781f3026aafa5cb4c3e66be8c5bbc9d5a1474054c895e8de5c586fb36bd5654de7e35ea24c83082936833f27ccd0e6724223ba3db2bc0b83de93c971e219dfd6646a9ad962b109c3b9013a33cd2be82fce288346309b621858511e85930fe7bc818a6522a24c15c7affae217e581da66e24da6cf2064cae48f035119ad78b1a6f0e34ffa8af1b52db8385d167f871e59029be2932b2bb406c750f26b436e141a6838c39346f07b855aecea3dcccca7175045ff13500db9b1481fd8c02de83ce4b6dfbf70e4014a06d825a4caceaec1d05be61026c2eaf01d6d81a18d172c3fbf698873e653adf663a6ee04e12e6b8e8d10a257306c84e0355acaba8b3121bdc56b60a423f40eef66b5ecd91b04679d5506749d5c1995860da06b565ffc952657dca80bdea5c77a7f13ec7a43991c41a634a1345f00f9d8b5a13a0e1e49abea53ad92c742b8e9c9706ff8421b095f172494837be40df123a59383dbbd2418cfeea1b42ad64439f340bbb5cbaece8c799fda7094d9ffced8ba334219f6bfca41a685932abf0a155e8183c39116154ea4c74e1eb9b7f828066da916ef8c1d5f4ab1cb306534c810069713cd66d49c5ebe9808836c688b5e480feb5134aba686431e9dfe82cb25061e74847a31cf266a08675579da45d52c904bb295c1fe9377665a5904562f3b5a638627eba0f90aac6a3253658dd5e45460b6733e6f852a6d85a94a41fdd54396a10dd851221775487af3efe3830d2f48d1072a59674fccefb65e6860f522ad17131ac69fa31ab325325a6749020a60f265a435ac187e263e559fdb49432631f983766849ad51459d0f44450b25e47b59c62c7bcaf3381b8b7c05057b236d008c4a87adc16191af0fe70f97cf056e35e02dd55b0a038323e4a997348ea22cff4dcd501e21adcf6564b9f4ff255df270d96fee622ee0a48bedbeb8c8b910124a4d39998c97dd8d992997f0ad46585d8395509a5eef978124cfc92af6f5d670d1576070ba9fe3f48ac3242cc3ccd01facc1e91469ac3e637b64c7e7a2ce989316cba62faede0b9f220cb58fe8f02cedda037efc5230602f866f02c0a9e17effbce2593a724fc86dfbc54408c3825acaa8167e7eb49c5e109dc2b65c0e983d917896772ff71ec9591632870483333362d8de4cbad5b5080335418de8f18df61ac712d4a608282bd2243e6dd1d65c3081d19a571bd194b5713c51305f23ac1151b759a9c6947e7daba881fe37d42189ae76a3fd965d2795e3b94dc6acc3683325d96150fcd0a59aa29b6bd8908618d7ffd71c33f6286de08653186e6a1e981a304087de8d732a15ca8d8d5065ce498041bbc463185bfa15a35cd219b9cc9a6c20e315c056229fecb20b247047be31f4b44e9a22d32433ea23d9a7a58b39b219059ea88b25d8fa62dd80cdcc70d87ca60716b9c87eaad4b57786018862e60219e8c426c57c2f9797266b750e0c0de83328fed9bcd0b8fb0c206a1476abe86fe1557a5e588c44342426453a2a75754ffbc30960f6ce67d1a94e4fa8f97463d42bd66245832d298c87ad8a2161d43bb2c791636673aa5a18b04e45c8b03a069cc10c53ebbc49541fc2e4bea09fc2698cc4eda0b79cd1c0d6ba730e3df894d8a0f254a4fee31c39d0a449efed4d3e53ca29a702981e7af042989c0792b032e98341767ac7d34203529b6599cb0eceb46673bf1004ea4a4201554c658ba5db8de897364d11bb70ddb5ecc1221d6abb857d871e21ed42fbbe8fba03212e06c79991c4c0ad3cfe9cc4e8efea3f3db1a95ca6b84994e4d098e4f532e5b49bda23a0f2045557f85e9874483e4178fd3041616120cfd0356baf4ca04a1de680b309616a53aa79aad4327313ff7773d5c8f0d4e9fcbf46d3454fe93215fe82bc3f3a9ea61b1d0924f5c2a95729abf5edd8f6e7fdece5042474461f4fb285bd1e503e69fa8c8a011c91cae7286b23b3254b41cb248a3bd63330e7580e969b2d79269742d48b785ffddce8673932f27160da5b768dad142c01dbb364d7206b88a87a928ff1e2f45dae542d1dc74f080daad57b169fcb070a2bc0f6920dd1e2e92c701fcf9be6624b07109db68c5217150221aacd69da96e0de4f3d2eb0a0ce177abc87033d46ad1be4d2eb10e34267c49ce733a0e97c4acd60bb1146c1a5204a4eb3c159bb2aa7b9353cf206d71e5d2a88db9ab14199d69805353e3d4e9c81ec64a02420054f2e99bde976f3d25c36a9a159bb0b1a3daa0ea9c49684be49ca7153a19a52f1efd4731b057acf47b79e6f0696ba36eaba9e11c9ed51dc239cdb0fd0087fe56a00a76d57e896dedadd27a4f6f02cce1548d268fec55bf49b32964308365de679bdb0ea14024e3700e88c520056a4f563a8b69626c175cb535c4b14b04cac875ee9fbf76fb1a0a132f8f2d87a7665d2d1b7c295a4b07055e49014c08b6ae7b2d0c9e608a4b9bd7726dd9ea26f2089568a265c320fff679baa659f51c195d9e9b5989b61d5b3b68f70fb1e47f398ab66adbf867a41f16b42fc8eb67b7c435a6bc396900f77aa167c15895e341eb6db861512aae5112330743d4932586e69742ac9a708333babd9525cb461523b1f42ebc066acb2470f5dd61363ee43301c0f3cad586841df57060e8af40c76bdfb714e3e20aefea68b6594533e818f5dfee58ceccf38b53e222e35646ba706a3513c7cdcad7f6f99e6bf8b94eabddb3a63acc036905a74fb526d99837df62b091d23a30fb4c4456cbd52c3be59f9c407298130c0e601844e6ce31216dff4e0af6735f01a3b2e8ccfe9133d928f751af17023abd4b30eb4c11c08d99a79e7f3fce03fb3642b983f9507fe23db54ab0a1eee1f27f342488bbfa73eb849953a49691d66150c3a5ed0c0b597f0004c2bdfdeabec86d65c88ecfd37e345b191c0f890507346f8a888af5d6b6c8b20f6c1df118f8a211c9a8bb84857a411820e8cb9c3f54dd63af5f2a580829a6c06845b2bdf7757bd25700b11a1fc581943c30a1b049e9c00a850b91785d69903924f5c10606f430b384d1814e4554da0459f0672a6decd719524a603c9581b893bc7f431080af33688f314bcef29bdf9d3fac8ee56094f1692ce128bc94ec5a75ddea56b953a0cf94d813208bd60939616bd8dc6aadd11f0d7a82c799b28b3e3b7b361d6335ae9c9f6250d29a0178d1f5d1f1a66f0b1324afc29ef843802e719250ea96813145026bccf980cd7620dfe9a1327b1889962f24bf5cd7dea175aac97773e34942ed6f5b5cc8de7512bb903a44026e60dbe92671ec00a9df1eedfd72f4960e009cccffb446f21b3bb6c8eb1555e38c4eb41f64006d99e00f5d0796620fccf9268e8cd0e51a66e550d3c285cd77d2223283b7798acc83a7fd32d81e8a0def40a1b2749352b07d3842bab87054a5d7de85a2a2933f68bcb730ce267db4e86144dbb59ade335980cd45f9d736a1eac2f2fe06b54b192aa6b0b569cb93eb684df356ea5f226d9396ddfeadce14452d279e535a72f891197a0f2ad845731f620ba4e518aef47dd47ace1bac7943d11070de7e8b843fd3bf2a1151c8bf13914b8c210dae8c2889e47540058760a1201d63ead66e972578ff90f6ca4f32817240188551864e4dcfac3e0f763fbdd1825c28804b7ce466eef8bc625264b21f5eab0a71191f3754fed061e4eefc4d57c550c1badcb295539f437eeafbf0c393c3ff347c5620bcd700d526c9d6db8231564b5537d87a7df00d0dfee4fb7fcbf03d8a3d5f2ef4e3ceb2369fd06e8a442263e674125ac9ec3052fde6f59f8bbb1fef5fb9f553b7d62f31b781ebe4c7a826b23128d946f6069f709353095d0596bdfdaeee2f8bca595024d6d3e9a106171e40e95cd5343c60aa8d227628a47b09c7d3a1da1675830277b82b6d55609bf7642f96e0d3a363ef0708f33c0b1d676aa5a35f5fd6a9945aa93dda5975864a4235348a1df479dce7b1cdb534bd9958fb7667380922717e85a6c010fc89ed0cf88a74f6b12697300ab502cd64cab5a666b91cf612852bf7bd1d429af5b2b6739f8926b2e22a4cb13c04a7177ef4242b56acf64556dbc6e2ba85a1875cc3d77d655951fb593a41cfbfa4c8bc86f24b55a8cfe4c6dd65027eabd5a0861f1d127520eaa179a0fcb9954b0955c94d89059ba8e231f2d245d1b5a067b59dc53cdfdec7f2841e99934cf56ad9c23b9ef802d494b0a00a68c3715d0b80db68f9703b422c2849ed2cdaf13af0797fee70b86723a92cdd1c5a7239a6a9c851a52fc84ca9604696cdc5ffa43771b89826f074e5daabf6441becbfa44d49e7b0cb5a59f8b72e78ac84ab335baee02d2deb888125e6cf362d39274b18c8b6f0000b675a5c8021bfc8f22bc9f46e51e0d8983a35c180b852dcc20794d54ae0036258b08a4eaf2b751a29b99c40e570c4e7ef625f1ffef524eb22de4b609b60af32dedb00e248352732479f429bb61bf74ecc27e38ea026fcfd05381c1bd8fdc68b4c4ce412d582a143f15b2db918dca71326b9c4f3fc60fd9369158cac8d24d05dd242456a5631f7745cef2e3c5c15034a392c0012d1375b2d78a167c95301c73ab55ae6be655ba70a0bc40a1d511b50133c79fcd3ab50fba1230b41d9e6048c050d0003573ef3a5ef0863ec64e6333c4d2fe3e4431a385bd0b1c878b15f7cacc09993665be81c9e17748dc2d7aa69abda058ad83bb174d38d6cb1ae466867f7970b47dbcc3469fc79acde959f9cc099a58a509fd3a07409f4abe386053981dd79e05c967d7da7de9565ee22ee792310ae501e8ce15d4caf7a19ae9b2a4aa35df6dd18b853aeb90494530720ea74ac8264d3451a372b3e5990b95e1cb8bc06bb01fd57c7dbd29cfb8e017f51007335804a2a3e5049fb7df2a492d80666b2c766acc4914f63b392fae6b2c02008d23acc604dfe05feae47bcacf755a5757869229e8a5d406bca4fbc4b226e5a3c2320f4644229cddf0115ba9bc6b5ded11fc2276dcdcdd259a41535c509c74d3cac5b6865fb23e4c022f8d87d03239fe42f70c9193eacb1c39a3e522f183688bbb461976f67d7948eaa0657805ab263a5c3d5dabf26ef9a1dc67e47c475456769c336b79c570691034d0a09efffcd6495792f013f1eb755a541436ea7d4531fac24fcad2b3ad997d017eb1937fd899e0d0b34ad0327c5a13d05ee5e0ad6c9fc0f27f9c6658e38efff11dc40c6993b0af3169cc6db37e148439495eba347499b04140fee64de7757da3aa6d965fb1d71648a4852e3ee5507f73240d2a490fbfc94ded52de7bf7a8da8f16d9a0614bdabddc90ee615dacd09a96993bf3c00871a11af16f72227a0f10c309c9f9677d22187c25af6f0ac589bb053a5afddc1975a32d3c1e5c5629df2d1e0efab77507c534dce9bfc40ac7a58bbc2f7f26bb46fd8a62cdea97b4f4e664df73371f5e95f4daf58877dac453f88b31d72a8a41c27654a60d89cb6a274a38d8b7c17d9da349b24e826ff0fbd62f305c63ade62f537400fde87f556b1e816a2afb1388aa4e11ef100a2ed08a83c05d755c1ace6b3894110131c645ca06532b3e96347b65a3867734a027dcd7f504b237956c02a10173b2232c2ae13cab50962c11dedde601dc64b12717608706af20186cb45f110aecc6bd9d41cf2ac41f1927e64dc18ef4971e7cf76e85592c47a16c06d789937de814781360556394e6e36efe9896b2bb9170ab1e72a1c2295912eaf9cfe8429f61ff16b8a4e0991280d085a2e8c4ec9444a834d39d614414dd56c2245af3965dda5f4e6100c5c5f43e21c74a710a82be0cf4aefc24cabfa706ba9f86e712b08a9b1b3cf04a04ffbb1d85451b717f0274b323838ef08e150542ff05b1f061864e62e29ad539e1bc61f78c530744265ea5d54f0c6a49f1d9e20773db3b31d029fc8fef5018ef7ad9c321e298fef6dfea6807e80aa0ca2205da962195eb624bd1ff53b29f6978f8bedb7aa81ad935c5ea30a5157b6befcd174690662745ce036d810b2217b09c5b831e7d75ba5754b5915870bdb681c90f85843d82a2356534d0f12f22e2929ddd7b5f5a61171edd260b506296a7b4a95839ee19afc35efa0c27acbec88d861cf521bd327d53802c94fbe7dc45038ad45604489963061a08a258950d7b17cd2632ad17c9b49b3fd6c28416ae5a34f777b6ca9fa2bccb947899c4372ced9af818e003b1119252f7d47fb4447be8cd715c32c18f128231295b5132e7dec4aaa5a2b16ae712aea4dabe224e057364c2435db5dd2e0a7b0381b891e9844f295956f0417b2999161e52a3880776bce847792ed35c624ff61a338535544eeaaaa6585f6b7137171201ab25d6db2396d4b532acd2a56c0d4627ea8867d1a5003206fcf15f54124c8f1841862b62a6ba6dd42b287bbc49a0cdde86e44146bbb8b971a406f378348bcef427f131c3cf5cc897c259b8d9ae77e39526d69fa8dd940947fa449bebcbb210904807fd4259f986c34829e00f600133de1a45f2abeeac202b0d98ed5fa6c6ace1b88cf274697bf65e8d7000c9e306d62d4933afe945a8f29659ef02b6b6a84e06febf4d4fb19acf8d6a2d97a07f9f176e82f75a181839c678b3622f4e11ecf7219cf09ac74f59fb8b84c606e40be2fc991840363dcad77a4233f97fcf2c349ca3515c14e61a086b7379e1d28a53d10c9ca10a908618000b0097613b29fdf4b0a89859cb6fb274ff555a8066b3c68ba33aeabb6ab1c72e87798e45233ac63920c0f9127e1ffff8596a8eb74b026d957a5791b0eb9dd5eb0232ca6c4a033a8d3d6427482a04acceb49e7bf1dd0aa08d421dbb379698da26694fff483207acb34e7cb65cc376a3cd8e15ca1b95d56938ed39bde152bacfc46e22eb08452f5b62c49acc7fb508a5163095b1e628bde37a6208e64ff7ff217f3620af87f9b213d77bd02597219c882584eafe561176abdace34f59a0f79d3e063b02288271cc4465fc8d14c284e64056bd7f8eeb0acc30d59c10aa86f9c56b944a15e753d07fbc0dbe3269c186def1bd05195f86205e2c5535f9984d606dcf92e532ec931c4b4d3670532112880b8ed11e8723eaa5928e0de97998e48872b0663676daf4167feb0c3776373e420152af20933c19eb4c0f61d8691f014544e1a636ff04c0926db7ea79275af22d5d66fdd423daa11c7610785f5b80235913f9b0814622e28acf2c9ceac0f3319290dbf2bc1848cb19fcd38434d9153716a76c2e910ee25064d09be71314b8ce17f940e2af7d76596ed243228eed9c698f79cc6c83d9dab8b572e860ea448ba359d28ca7e9382d0b96209095862034efcef769b16400356e38c4c490a462ad7ce06f5b23918c731b60acccc30b010fe31c2a8cc0d3651f4bdbbc442c0f6143a84fe067d47effe3dbe050ba7861057669ebfa1a2dce60f87fbf2400e6cbb7da44b740934de81d2bcbdc3ca8960dca610261460ba4501bd04d50c37d39de5d213efa6c8684981aad2302dacb8b85838e8d14840fef9030fbb6e15723bebcab17b46c5f805d18871a4507d09018abedf620edb2afc569bf7078718ab7a393819e65e9a52cd138593ae796f2e2e0d11265268aceb7f6576709c211c97f19fff7f53eb6703a476a4e65052ddb2dfcf8811cec7f930e86a08021dbc8f4a1d5b72fd29ead16b84f2b42fe43647f349a7574988e858ee8550986a536fb02b6b61d567c5b8e990ece1c2e0730b252370f517edf1c20c857aafc66e9dd24645a3ebf147e88236cbb56b846e816999e156d06b237980beb51d1f28aad90aa9f045572f7f035fb6696334b6cb0d15192f32c848c2dd618fdf3a1f35445683405ea73fa1d5eaa19e4fd2f9a6ace47386970efe0f8b9c0bd4197c2ec75935efd984d6c71a921c724c3a01615a074751b11864809276588b00bdbe9502059ece74b93034491c2975bb11b11277bd161ab12c3d1be172be977d43e59f48dfa697321941244878cf64f59fe2b51a17ca7f79765030754a97739443a1a91d3808f19260fd06a8a707f442f1f72fc3338b190c3c0fb33bad55cab81f9d43d5d119d09dd53bbce7875f93a952ec18b843c611bb0aa498405ea053154bc014774c093180acbb236e0737e020250a6aa4acf96f7558d82106c361323df6492614c7aab3dde5a488750d49a7adc02c80fa2c335396531f998f79fc563821a44bafe4a1b70aa888f6dcb05f3ba293b996eac583167d7e370b59a0914a98eba8440be7334bb8b43005d3412e74732f04e35f2f34840e7b358c545a175cfe4ba2095cc08c2ac9c2ba4433a25c6f4976fbeaf5abec171cf6d280b1f9e16620c76055a94da704e7991e6fe109b44f1c29b53f47379f8fd075ec15ef4f18bc926bc003e110e2366f845702c250c6d1598e516d6f40a9c39f630a7886b0f320f61cb50b7dea8712376c939a45e5e84dbf62e7d71801134a5a0c6092d59dca2cea579826f6265b11bfa310cd6120945314c2ffce1bd69c358f0685f4f465280c7f8140e4515e89bc4ddbc93850c07ef5a0003e3bd658335968b82862fe506ea38b25f5de39664ff343661e231c3f10c2127c18c2bae3eeeef0b2ed00238a01a7ee9cf0636b1971352240228fd8b97f64d03e074e96ebf6e5de2c8fe4c53d58bd2d713044a059677a711c87987670273e71f51cc1d542aad8f74084b76472f5703832f64495629d324a02b049d0bb7be8f50ac5bac884fdf93e76b27f3b89b77116b7a864d8e0f76d3f6a5d168391f68c25dc30a72572b603c2dbdc46ad916aa2425eb1efdad00ef7be848687d47f5256d995746093ebdea3bcb509276e52f3a4a0b4a0fd8d0636142790928850db09223acbd9ecba45af7114751b3c9fd670dd0c7446a3d344816507dcf5c697418f338820916cd9a60f5b9aab4b66e652229b0d523d05ff83edfe2faac577cd0cbab9d5390de693d149998a6f352b0fa0664ac691c5f520e260a034b0901f1842fd49b57a926aa27cacdeb20291b0884f3eb5ce99db4bda34518fbb6f28ce0a0b032de7ac76cf410dc414a34d995a8ec487b713c5f9867eb031aebbf789cb5ced7db428790327e4a278daceca5e799f921b18ca1fb52eeaa33044b63158f34b58edf9c36a134592c5035910b0ab31dde72508de687e9483e2fa556170270a34b743380ac4374d8023ff2584965d9d1898d4c5f0538802e60b3198c515cc69715d4404f3167443abeff183d064e211500f3ab9fb1349415c4259bf4c5cf3b950d32e82ac84f07234cdcfa3a56fb744cd4b940a534db80604e037d048877f5f6e107f0b86d3fdf7047d7d8f046eae0ca7a453fd7341edb38580e1e4cdeba71d5df4193abafd8506a660c7888640c68f6646ddcdc69367309257f5b5044bee910d8915f383e8a8ddfeadcf993c779ce61cf46aaed879b50a77ed2f1587c3bb55d34b19671325950c79095b6d6305b2f1a5d521a9a5b582d8df1fad99cbc473594f8bafcd655f10791b8f340ed98016a7844ec971b6e130a1a175fc0622812fbff7215aff9099675826f9c8b252c5c41e364d63095c30d960e4c10ff3d0ae71cf710b80539b004a100212630042ebb07939863c3c82044b5b118bb17cc4a12f245c3442470b984d92dbfb49f4e7d9f5727c910d0817aa8f3be845e05d2c2aa47a99d8f2063c3e5c8fd42d22e2b200b4c576ee72638ab1f1d3c2921fc5215b7eff9559437c5e50b756875cfa380ee64889f7a03e4c98c92abd8e728e45764c23bd2357a7cdf097dae6cb4fa554bc5b077df19a99714c62bd2d6decf64c74a003d87994984eb1d45d0df22e8f813b9a48fc1fb4e379ba0c0d6e897018ddfb0983ed0eac106f6eeed65a2678c295d1790f4d35af0b05b718f185d0ff801866bae25d133da53ec216f47cbf9d67774a05d76aa26f6f6491e886e6a752d55f6ae36bdb04695a8a74e046a66230338c564d5eed2ea6d1925746371a95547acdc6cd24fe504c2113565a900704ba7fc4e0506f293cc9a95fd959772c137972f586a53dd314152a8196affe7b5f04a104eee813efdfc1e35fafab7644715b65013af2358f0322dfa70c4399235234aa15beeb0d632fdedf303007ebd5ec365e2f599dc60d4ce73f4c9292e07e28722e00443acfe107d67c2f3b12fa52f76449b34a126f1698e06f374ea0f2dd5bff48b714c8a1459efa9400b8be7373fcbb2751427a35dca2c01fe7f06c4586dfeb2e5064e7f9e4be65eebcceb17dcaacadef0c2e3e8400f851d5ce5020ed34c056a4954f2a2a6fd588b9b14be85da0979f957aaca77bf33d35f7844d2c861dada3cd28251ba863bc18dc38873409850ea1a25a827c28a37d73f69362d96e467f1b857b8ed97d2d64717846cf5e490d32b016dbcabe9394098be8a24983e3cc470bc2e462820454c12842ef9b8cfe8b3eae0942595d4a5fc4656c683a0d6835206abb6e998147108365e72478975d6689c3f74f7192f760b0df29fa0b6035320d4711a8f35006cc34d594335054cdda65dd13535b7d3c0d091a41d68af256c1299793d367fbf972aba7c10cc24b9a70aef246d815592569e3cfc2accc7261dc842eaf57f6e9fd9c488dbcd55c9b258b880f834cf7daf96d4e3242931288ae5a92371143a28782b3c5f987f1ec69268aadd6899ed8db952a1ef40526cbabc4b1bc4e15631a0d2e2f45a11d395898b3191fc4a9a658ac0dadfe963274ce29931c77ec137d715a8faef359d3ffdc4a7fd5b9393e23ada3ee64897c2f083618fe1a3685302413d73867cdf7f24bac8a451678e66ecac25cdff4e1698e322fbee628ff43e65f6a0afdbf407b54bbea7b334910fd1bd37b5ca65e69242d32f359855d7028d48c92b0d5135155867076d938743d1f60b082257033f921b4c50a16193c0934dc82bc97a9a50262277badc017804db8eb8c7d9a9600af986f3ebfc18177e849a25fba3a070d3bc6cb73125be11411495ae38dc194620028df932f747dd219f339fedb93fb054be291f309c8a6af17ebb421bfdd9fc5d602bf7150d8d840e69b6967d19f6f60df192d14959c6d4fb438f1fc93abcd6fe51c880e32ae01a50afda59cff598b9326a3ca565a9beedde9e6f0bcc0714c442b5b1eee25cfbd55554fac98163c31851e7cf01ad0f3bd2f2436a384e0bb7bfc449209be3c651c8067be94ef3a369e03f574c360938523403e79ce1bfaa68d4e6f99bbc672ce581ba75ff3d824c6721ac07c431c949e2a4b31dc47a1222b39ceed6396029ca30977ebc7ca22846ddf99445327f09134c9f56bd1b01e21cc93634bb4c1a0c8e35f6483471c8503d99373b0e7c3f32918bf26a2a398928247fac628f0a84491f79ed951abc5b2297889f6dc39c0c319db2c6043dd0f137477207c413de72ba2aa89d041919a384bf41cdacef6689639119464e7da533ccef230c4713be3869c233bae5ae65669a2c181186eba5d42f3dc0ec46dc917a7c9e2e2d24b552e3f8522e8321a24499ea75867e4c8fa3c62e6b035e7192340edb4e10b7a4176976166ab64215ba0e1084e5484ecd97ebee83866da092ab05c7e84f6b40162da3854d010c2d5ea3822eb70524ff7f1685a06abba302948d68fcd836b6013c0c1f5044557014b61696e04c4eac5e2695b0863d86eb193f9f0995ab808e9efecf2d8c24f87a649f541945f0ed46e3b5836d3480199c7ef1db30bd5657419ef6c0096bb46e454e64063ca89b902d04756e6463b4858b28814c4985a6625e02a5e4c30cb1fdc6f6de0c37d03fa71f944021b9f5292f3113949d5693873cc5f80986b73205ad473900c8f650c33e3a7a4f9fb9dcb6684f92cb9cfc8ad1066488ba5e3b194fc9e6b5300ed2b30e0415bae08396fbd9b1487b7128331a4394c97a28c3a22ae254bb15756f546c7c80505be93e567f61d7f02d249ca0206e78e6a28eeae4a801b0e1d6c468a86f9e5060b321beba2fbfda75d46a78b781bc24eec15b4fe0e8ab47a07ddde0157307dc18a100669c0ca7c84c4079bfdca543d47f23e1c902ffc1d4f1e46c20921e428fbc7bf02a69b5c7a6887f54da7f8ec49aa578796f794271c903e6ce174854bad07d9e1d8bb3797cd9364dd9d862697cd1fadc7d157505d84f3bda2c22e5d695673db32de847ca35c8f0bd6f81e7fd8c41f53bc5603453adfe5013d98041fd07098cd52dee893427516a6912662e92c62667d4843a754283fb4c38d6aaccc91d0922579e130d7b33db230d29720ab472ea8bd2fe6d412be29ad0f72cbf4100df052812cf02121681b688a64015a10c835ddbd5e540cbba99a4ce0b6eb3c55878e7f16661c0c31a7264091bab2a2c9361ddb9f62579b6625503104422915bd2124385704c009f07be858e42e9c1039d45a0089e42144906dabff3f2c10ae8107ebb7a256f9781d94170b3ab9a4f19ad8e9a58cd3f77bdcece5002f50af55209e8e87a25b7065c4ce7f369e4698734d4ba9ae3234ca7cea0cfd56516b88e1200914c3fafebd07c4d8c654216736e3653fd9933f73547ac07c9f3b11b803ccf4d1be43806798025d7a8fd15d8548cbc4b3739d0452ba7d401cc72247454d61a3fc5552f4b2c7df127377295e2d5569496235fe773a6445cf6880328445008c6c756b4f802aecc51f5c0fdef40f1b967b5140d03873fc8f19bbe772827b4dc352892f70add3bdfe43f7cf4885f2f28a181cca9a8066ce034d7ecad4924e3e220fa8c33f98e7d92a2eb3dbc6dcbe747b588bcdd7e9d8338df519c09747ea6c105e9de1161e31f51503c24a4dab6035d19f023887dbec69204b6d3da76a30cc42a0ebbb19575bdb774d6040149e8969ebfa6f14ed98e2ac6414350ebb2ad6807398755c4ef10be657c774b2f8e9f97236a992e3f567456935f3f631a06c6c03db8955fb2733b9d44168203ede0ff452c367c777256c2018caf21fccd0b7b7689d44ae6c3a70ae0ab623cd2c98e30e7a5eb64d32dcd3b2c62b43f0c5fb5696092e3c106dfc8fc9626d0a4a3f71fb4fed3c862779a0ea5092bc0ea743bbe3c6f6e0fcb02c38a20d65ba53aaf19f20fd6b3377bd8edd7000bf9aaca711cc21d015e575af8e03f0c83bc7fda8a4b030024923e249bd195ce7728be6edee96d46f29d4cb0add7486b15d171be41c140c8ea59c4206f7e854e235dd097598e53e4dd3e1a39d51cc47a6726806645505c78d170ac050da7aadf2328016415e740e9313e0f9835fa37ddb055fcf15328cb57b59cbbfdd910e76b55f2800485242b7d96bebbdecb6a5557b19c30b43e4037e3959260774e4ca882b15dc6976c244aa5202d384a865ef970eccdb52143399757c02214bff3610deea5ab2f5cbcbf9c53ec5a95de8c13d83642ad034bccace884fc32887f7f3a18b0381344f39bd8a3d7a3a5d935f31a5d11ad47e2ce6774abc1f2e4892b2d9e6fdc2e2cc09e6409b3779a680831bf474e644587bb117e5c7a589d8206a0fa4d575826a159821bfad141945e03ab668a0c83ce5c1ed8aa1b0c59e42cca3617a1bd51993b2a339e66366544d44afa0ce1e7cec1ccbb426f5fa169a2ce42700cdc7d45b2551ce7197c2d84cb87acf00d66b1f49cc11a1514355796b51c6897e1089e54b69f4f2a7e5680cab2d9cd6be30a4bb7b7ef748df9d8285f47027f16001b100885f34baaeecc73a844f8d17217710dc2b7c12f9f3ab42f0bb7b1828d69da59cf1ef44a022788421efb8e4da1715117bac2b922651c7386d37cb7b58e2d7b019682f2179d02e12a22ad679d3b3a4e9860828bf98d4a14ef0a2fbd855cdfea7af04243ab3f9c06d1a1ea4e10ef95dba100de8bd1a79a9447f33c91f40253590c0aeeb3ea37fd1f29c425637569f2bead9dea4b9d27c2afbba0aecc9d09fad2c726851204c73f07f26af0bbe89a981a19109b627089bfad7394b9c532879989c07facf5de78e97bb0eac45d834eed2cfa49f806effc756bed3244692b061fa6233388101d97bfbc20e9b43bd6ff01145d7ca372cff0097e4a3011b30c7f91f31ee9d3f1db54cef6cad5067d239e9d8981781459fcb8bce005e5bdd34ad828c3172e5de891eb49b4a6ddea3c8954ca25d053656ee78f3469d7660c5ce6b7f737c1746d8631ac15c201d4e32b0eb035d1694e2044a349c493dcd9524f499b21cb0dad7a30d8f3c8186255b9fac3d756bcd1e1010363effacbd56743f39d3bf44f19ba84e8443291ee9fc83c820d1fa2cf06bec9e245cceea7d1c4f47e065e484431f87c8b48a923fff5e5a7fff94e678c6a23e35d2b5f41c7ba3137265867611df380987e502ddefa0a3a3ddf46837ec5e978f85443296c7f9ccb51c76ad7354079929d529245d1a5771733f159b259a419fd737cc8d707a3072535fc77cc39301cc2d9f2f57169a7c4481f621076123a915364b187bb8a5ed7347f185063c1adb489af656cbbad1cf48e102ebfe246beeaa5053d203f778e141342ed737f79d8535cd10ff60dfe8f235cb8fdbf5b8f5d1204d9b68d1d19af8884e0f344bf2719b0fcd02410d344bedae0ba861bda32c01c15b14785cb0afb0009ba401f0980393e28d7f930dc2d3199f3a8fc22d72c877f95cb33e98799915c3a29e6bf6cc53ceff712a58d7668f1d3638aad8c794c095cdd034ed42932bf10a1e3fbbac0c551770cf84de76c20aa15884bd726239e86f197c53561b0841b2192f2d0f78545437915d780489d8c325b653180be961cdb45fb3393c7c1723720f5add28300874aba0b0dd25e47e807e61094cebaac0da47057d97d56bcde4a5e1534f45a9c6573b6e380efd05f128bb5cd467723b2ae84efd1a64f87cfe8b367fa2172b460c864e45fbfa271114f07fca82b9399080dd3a43a7a49c759e54b32b22cc61315f828452113ef4bcc73f9447a46935368bcca57014fba1b41569cd55eb2cbde4b71d436a484c4506ead0cfa203568480784ff4d75d081a037654f7e3744de78c9b76f94f6aa6bee815f949e5d8b49a6ca349e8915982411d77e15d7c72617ece05fc37e87e7e6e15ed25176916e8a6bf86f0e9d33f396d517d45ed32706bc15cb3d95a0d555b6a182fdbc739ea93b4616626c34d2d3192fde8d6a26c633526258985fe7d634cd8a016c62d32d80635bd1827e27a1a19025759bf618726645b240362c5563d4535de636c339d8a48decc31d74ea82101ff7d14547960615ebfeafec8effbb4672ed92257f44ea2c9574afe35bf3d4090c3dd10e9162ac5c6c7ecf6388b648da226ebbb8090270a00a4f51dfa1480ec7cafe50a39e6cc927b8f32cc4ebfc99c64d45fdc15687d57dc6c4caa5410c3a4be7b81f3944f8ce573863f7a695300304b24e7ffb988437a262628af9e84f468e8ae47895079ca0adfe02129daeb5e26ce2cc81fae258ab1b69237848fe77ddf6f5357e2a5d1d082e89e11b5cc09a67238f08527a8ca802620f9d5b3aeb368cb93c5b9d313c5aad71da30b46d6995d8067cf3f1cc86b5a66acbeba68277203de93cb9000d8014db632d70000cdcecc505929c66b2153942d9154c43c527cf623324e697fd6af7ff0b1f9ec5ff3ff7340da0e7bd04a47b3c2b0d4c72f1d3e1f39cd460a726d293207ffbc767f8e71a8767c49b5a2b88767cda7895d063c81f12e3105531bca86efe8ed559843fe30cd53f89ca55fcb7fbd3f9d28039232b44e30c6d22b1c8cd5c98606d09145224bf577f5fe9282c2cb93cd334aaa7015e7fb8c87dc351820387b3acedabf716c138fb0f0a98a4b9bc2de677cb772bb8fb432ba01d5be52b971a5880a818a8a6290540616ff169ff31015016ba5bfc4386b39031805519fb03ecc263282c7cf4fcf9052006821b42d7aec31e57420aca3283cd2b9a0d89ddefbd8108619be48d219715d61a245158b00bad5c780c87a946c1deac854de7cc2a9f0df4a2edbcf69a689ac2ac14de214cd89d7ee171bb26d3f3b1c32cfe1fbc30440c033961ab5d6fda48966c5dcc9af33f1a368aa4d97a31dc22b72711077ab322bce7920d4933e93439942d8f40e2c8a5f1bc30ea1967338b11099fa29251cf9d81102b040cce662b0b81479b52c51e1668c110a72aa870b0ccfe81b2cf107a36c24e2d8b8f7f3e81226bfe0590b9453b8d1c87cef0a91d0fa08efcc5a508cf24a34b0dc639dbabbf3fc49bc97a854caecb6e0fdce19324f8ea42a3d15c0764c9c517cde0598f02472d8329211601aabff5b4949490e62f3ebe29910def5993bfdec857f5b2da3ef491bd26c7cb70e39a89755ded84f980c7d2fd0b1303eb7a2d31bead94a6f7a99975033b10d8f9c6b5c8bfef8a9797389698e6dd68cf2554fe1caeb00ac981b6d0ba924e5e2ea6abaa1051de1ebce22b1418e843f96f927671388f46a4cfad821202af06013a36c9e77da9290803184b0f010a3b596c382f67446a5f5421033e45a59e54074d9141d208664db7cb02ac249866ba3803c626e816285dabb099befea50557b7378f4ebf65094561899209fbc43f93fd3fcd6655ddec9a68dc0a91324e6af919c1d8fef03b42efba78757ee5976ce609da25279070dd5324c3bb45b0f77b7f7ee324b9e040510e1a91dc8216776fc77072d36802dc7afe4a9a8d05754c08ab618da0b67eaa47b5e59687067b858b951f441bafe46d18560627e3964c6b6e97e01fed200561f04a78aadc50d9493a0961d91b2cdaf04bc9f56cdfc6ba1aa348ee2d8017e69d1810b1ac69a2eea51475a4db024aeb5bed25f3fc6d7a4cade36813421622e0785bab2f0c0b34061516c6dbf0ef9771e52cbbdc34e08634eba9c9bb436d322267e6df7903361ed778c332221877b796c07fc293e207fda53d3878cc7042acd2031e4579bd1eb825b52df1a5b50114feb51d0f157adc04a8ecc18f2cf82fd60a14eecddfd37516408c891d6d538945c95e27b3b486ad876af30d840d04527a02a76cfd3af80f23c1bbed95105945c8f0e07d37adb01821b8b83633516fcaa65e8b96962be47d8b56b61189629e82d727619e3c7c81679efbff02e4668809a5ac4ffcacab2c936aed718a3dba9f9469760902d1ad913ba9d9ab99aeb0e578fa13430137bb7adc266c310c8de151fadcfb3705972fc630fb9ba2b0866198cce8d0155971763e9e8fe1a69c1682851d1cb9181ce3c63dccf22a9095616017f6b6b1e8df77c3a4c37c39f1fef85ab65d1b6896bc0e2a16173ee8ad80f996f46179bb977f0d277b12ac3f5e791665dafa38de1a3310502a2eb5bf1deee2c3edd96623b080dc555a867ad88e5459c900892d24ba10220b3b53b08c802af3ac496c6979829ae0ac78c70f7ebd8b46c695c9dbb1ee34aa56145535bcee7675ab69148d0b4f8a9530496cb767b31725294c940bc1eebb8f87b7947fa4c63827ec21dda60312930e0f6d1c31f41bacc26b9483cdb7d44d6079044342fa553b4aa45337a40d33f02e0bf8cfc41ff35ea183177f69be39ed9973cb857d05252b7afd535582e5ef04ab4462c36bbdee5fe2a06aa6d0ba9d94ca6cabdafe588cf04b4b0abb4844df30a86b56466077191eae556e601633843e3824984ec279af2f13ce6b9140a9d5dde56053c901f71a442aafe3043d6f5fbb7fb8bec64ffc89567e9053eb0300086c651db689ff1233d9cf91faf3c78d11d6e195a76cb580c77a24ebd1c9d8f3f5d500ffe947e1814a873ef61e1ae7e62085378ea0092467dc50a89ecc47385073cb86fa5a452d5992c41c62198d44fbbd59e19b9d69ea8e89fcf4e315ca4091d998c93c50ca36403f02dd25cc160cde3c1329398c832aabaff959f269bbc7fc08a1181951474d5e49305e032600fbb29e773d113015aba67a2094b280689745b5fefb476b95de10db24a5c85c11099c0d552c9fa4f8b647e0119ae9325a9e0c4f62222884ccc78b278746f1c047bdbd4a5d5d8f38ca5173dec9cb9c0595dec1f5e926755be9ecfe0a22d10007d0442dcea951f80514199ce970076de572e1c752fac7461154afd445c19f3f220c25e3150b0890f5ec17ec588b538172e734d5e3f04dcfd3799d1bfc895c97ea8629905878532193fde233b1bf3df9fc5165154dd20254e0f390f652eecc3ee8cfd9aea1b92648976f9f0bfe886fdc49e5f6847b08291551b48f7b2795aac049d0addd4867055c9cc42d0c4a483bc355b957ea27d52150b1f5f31eeee27e2c9d4169eade299321085b472c66ce37980bae2a2fc157195bea2ef1c23b778a5c9c3dbf3daef71e6e0c99b63d28d36b44c9c8cfff66837661a3dce706cf4df72f5c2555051cf602abeb76811a37ba83b526482517f164c03d6b65a301bf989629302c27c59c6af6a84ca16d3b6b30c80f991dcd9bb24861df593ded1f8b8e65a78f0a89bea377b01d607d1931a49c2c6372090e90d7d5ae78d88b39907feb6805c0253e2d71fbeeaba50125f5d07bc765327429426b70823ea57d83d4a09797cb7284103f2fab2facf1defff1fe0f4cbc74c1ba47a1a55e085c0e5733b489fffaa6d2181ebf35bc1cf6f91a9449155ed06943ee561213ffa24c1156925a7cefae95a4eff8d727a7bbe06c9323a65a9b0b51365e00ab174d32c14acd5a8491badb1f4b0fc7015c974a9d63d9fe9cc7c4b0f934895ab8fcc4e150d3eb883e427e556530c5ee1a552ab652a8c271f1658494b275baf50173b328dcca0aa9959fe906384a85386ae49ae0fd24968c6de2bd6564a5dad2d17b40bbabafd8d1ef8feba690056039b2d2da4a02d03c735d2cc44de01f131ac11572c7cbd09c0bf3381c2a08d6614697e98f2ce38f62b5becee8e6822fd75b134b0b8f89f73a77b346f21139cac5dea448fd2d2ae9d72509d343351686cc1f1b8e6361eb5287a93f18666732f9969361cff945083242d53886875d6c0ecc41873e585b0ae3b239ea37b34da6c80b2616531d9e9bb30e6b20ea67835b2b21b22f2a3617112953f3a5b2822b1170c933f59b9ba67c3fdd27401ef52f18014fca8acf47b4e6d4a471003f1b74c3b1e054d6192fc9e7ee388c9db80bede525c5009fd10779651010b11fec9b4c2c03e224f4f3b9713b33f4c2478940288c711e58f347b84ef4a9cade5820c14a6ebe2f6e2a1756401cb42158b0dc0998d7b41f4baa5b92f9d17abfc3bb6801596adac524166478170d727370426c3464866e93dcc8c6405b0c55dccfb3b9b8ddfa080681da14c344db1d0ffae83d14700c1220bba252d6d6107b6f3f2c9ba5b274fa04df7a2daee80aa5f1925b11e924c89d767113a61a320a3c9ede486f0fed18c0c677e13b6a891551c401e22f45d963fd838b9009e05622b93d21bcbb03afeb70f1193359f06da3e228a89d13aebcea32c0fca2125d76b488b59af364eb27a4dc73cb80135cc40e0ea814a0ff53ab224736fb42b14ca3b00b8cd1c2ec9673226ad4aa28e5e65584c522346c10045a90227272ec7b251f2702b3b28ba81facab4883d3ca7751952ad56a633abd2554c25c6894ecc4934370a2d6d258ee37f91e18d286b7b993fe578a99a488a02b8b75c30bd2dab4b9861c00e39535114c39364d3182f0c6e3e04a603ccf95fe244a3d819f1fbf3021a5380d497b96415421dc09123d94633928d555741e22feb3c9ad18afcb825b19a1303125ea1841127ab4333538b2ef75143347aa2630b54c1e5dae5df99693711811c4ba42a74448d3e854109c14b67b62381d4ef806b81c8ce27180fda65b2a9c5733b40c8e14c56ee677580fb4f59a39056c0a634eef9b1964932fc3e85d4fd8030edf6e83faa222f62e0be88546ea5e28ee892ded3f7013555e65159c32bccfa1ec4ca9792ca7b12e3f34fe089d9e5e67823b9204dfbaae72b6faadaadf985f248ab87619e108d6760a7c6b4eaaccda3a6e8b7363c5a94f5877f21dcb69ec039a280a1b53943c45c2b823c0e9f29ddec96ccf66690858ad8a7fce9760ebcf6f9202e4a820450dd1233c40ad9c65bfd5bdc3be37048add4b1549866e0c4577d7f7ff0f5fb50d5084da880401e142a04d7b6331e256dcafb885da8fee547ee7349e31d365e0a8a1ee9ce66db8a21e326c670fbd34345c20efef3af72bd3e4e7bd6e459fe94106fe22e4d751ac6a08159aea283bc38411af6d6739e273fb9ea898ebea5757ba745f3a99499f8b53ccbd15286f43241e23f7a8e77ed7de54c0b44875aff198783f18273cc36028255a5c6ef249f04837643fe5258f9b2e1ce4476123b90d6cb7afa5f038df8d3296cfff7dd489464a8966c9c0a16a6b458407fb03fb4e3f821d43bb0b46ad38e826d97259d85aa84e687e08d4f1e7f303c990e899a1334edc96944e551b7347f75a7d49c30d23ea9dfab3d5888c068b33bb5b4bc756782efdab09afeb4f9731bd89a1a49caf8990eb4210603ad51384dd8c5ecb52662ea83cf16ff0c98d80f0d7694e47e1ebead9fa52635bce2b91179662c2f1e0b74ffb91451f65fd4665e241f742250d6ed0c9aa30bca12d745dccee07b184f7910bf1ac55d31a0256e8d4bf6730874176c2f371630a597b106bbd09a296f37b9d1acd88dcc4d93117f10601ae9706988c210b3e00d3ed1b036b6da5b787439c31b05fb477c6429c5f770e301199550ccb0de3b5f4bc365cde53427e54ce3788c8ff63eec12dcbb4ebac6e71fb6c8cfbd947160ca8c1cd5b9bcfa5af66f8f66bd4936212a6e7993422954e646624552d22c966f6b0fb0b9f47a67472737ca99af7b0d0380aea71b3675b53cc7972e63fcbab9eaa394658de253f7af803493d86616f5b282e73f3b6e8f8a3a5e3b8fb00bf8560ba70f00ed37e8f3f2e0ec55b58be6bc7ec5be83082240610a1e9354cf65213f605b1392697bea57d8e5218ff998fa83c03cb0dbf87d2987f0c30f7b3cb719485698e35e402bf7ba4411f3a9a49f2c20ba16964ac43ee097bfe7fad432cf79a25d35a618f348f7f1cca3a5d5dca3f44d439ffdeee6e0d0e4d52048b0687b1e7680e5109774ec112920d584169c14f510c7111f69ab4d57b6cfd4de4cc40400ea5cb154645d42e47fff5577219979741470fc53b70b0767eaaf40f517fe1f08fcd108e86807c108e7ffbf13ac51c6299378e9bdf3b5e558520256bda0ef6dc0d0201c68e93bc6132ec2c6061d287dec6c57d4dae691ff1b318b7f364b3c4e6cedd065f0210b3d49d005886f163a05ddbfd6541d26076ace22c6b662c479f3843f1d48cbe04494a266c8d2263ed2ea50e3069d35885648fef7100c293e1d1bb23eb297d92ead02216f4b7818dcd1da5c45f1c0afbd4c93d40b8cf7381599b001baa25581c8ea4fb0ba43177a46cf96db1317c899b5e4cc383da529450b05c1bddb7223ab1b3ce78ddbb6f6b70ae069b62ddffc4e9b3e951097e2ef6c5d1914d6e39194f8510e52a216980c59bb92a77e71464d2edf1a4efa95db057255a0828e8ce74395617403df604e01802efc19797adb5b61960822fff00926204da80a79882f8821406e662395766aa0b9783c3b8429808717811a98300c06373bbeb594840fe67aaed24230b09b08bd05254b807c934d4cb90bdb247112b98186852ae151c03adce4e8705159fccf1aa2c4737c3308a1cf7eb60f62135ee4a4cdf6e944611d606108659680cd8a5ed9420f9f4f55172b815c60e4a3b1ea3d6468d72306a1e3d096d7057d4c402e5ed4db2d4355ed8b700bfb6b67d54caa560033d7d71cce30237730b71726efda809318f97223467efea37818504c5874b09b78907ba2d27a7aec96ec1decd1c3e5142fbdac9f4d7167311899760ce8727f969843cdcd383dcd091dcb8baca16dd3f7342f7511e5e4e0986f8c02055ae1f417c5da3d04cb5879fae35bf7dd7931daa65baba987882e861fcc62c54ac049df1ccb8fa0daab8894b9bb13ac5eb75d5e8b35996d4be73ee08e937474ef1469b9279ba345ab8f6b339ace305fbd2f32f8fb2376ab40f06db30e374a3b37ff26d65195d570edbe8c052c43c6ac808f67cef7c27a583a957c390a34c7f59b5640da6dbfd8d953b58c1de5646ea4b7f1e71c51853b8e013566e1b2dcc54bdd73d03a26277a98644f7607eb0bc1140596b60bac90fd65bf267c59d16eb3d655c53b5372ef0cb2ea3c46262b987ec9ffde5755b09dbc4e72069f74b547c3fa2c17dc21914ab082e147dc411f6e6327f60b802d26a5e2ef4ab91eaaf65edfc233e369801e69e6fac5655ab11e5c8813e5098d37512666ef6cd7f2434c7f587a10f7c71764e754ad98a0d632bda3f7b6fd69f34a5570afea6348d79f2080e1753cc3f5c75f7611788f344c73b08416d552ed06cd4414194e350ad813ef0af804b7fb96a0214aca116b0954391ffbfe7432de85524efe881e4000661adf4bfd9625e5e7d11e70e30138b09cd9f249caad3c0217c582df1c0fa1d5cfb823918f64220eb36cc2ddb4545e54eb61ba0ffc913bf7d0d67abf07c7ea1f60177eb982152b5834507aa8e8d041d2d2c4bd10e1557416406520df1079be511bbffa7e57c9ce68c150a5c0e30078dc94628c5f0cc7de4b61e814005d0bb279aa4b7a80646a28796ea0508d0b025716935f064fbe681b973dd7562c0eeafb0ad0be46adb3152d42107bb283dd8d1e8b6b95cececc00fc7e83dda74d197fe95f15ae66632f3b36d110965036987864cbda407612111691283e1f607e83ebb91ce61cabd921dd8433409057dda8f19df50d8dfacb5b82f72dc87644a3219ac4b0b9c54dd58aa8b23357556aabe976b7ced657dbe9411ad518a00eea449e95a76d868755a7ef2aa2a828e1190ac7103cc79dcdecaa46e10e50944c94caf6675f25b0b4fa59af696f5a4f79b5db32c2127374b9b8a7a76273be3379beb33d48992d1ac03c7078bfd8d656ec68bfac2d86b96a8741c532436e8fd56df834ba74831193b888e93bde9643111a5b3a8afb6c1907cae1bb0dfd565eca98c843d5d7b72376f5b8000f1a046503f0941d6b47861834aca1cbde25f6879154eddf428d5fbf880632197833f70bd3242e54728fbed89c8a686aff5dd9d8d5d39cb1678b9f09e83a4c90cfda128586ff4cea854b0d68357509ca47792a61bcf41f15b06468e3ea0978b23e589d32caaf259fe052db135e919cc1a5f2fde560300b69a58e3c3264b9d62b2f3a6d00ff5ec27e1ba3fdb4cc53d94c64d44e1e495541ca90113400f8b7eb125346f1d093b6d5a36898566ffeddce999596e92dd8bb81d613e774d48b51e76850213fc92d99a249c61965c7d956dad625baba0d9e5777a9e4a046055f619c16021622f51988922c3baabe6d8e141a8046261a44702b6218b87bd1746b5e14b90ea6f1dff174f129d88d94ea80dd5c19a819dd0ad2034b82e587c71c69d706746febacd715016fc9fc6372c4a3bc6b700080d6725b479d6bd92a33a5e5b6b8923da102ce22f0dbc4745efb7fddc9bec4be1888f17b31c82749be586953fc2b692deeab5d1c3d99d26e6c72fca230da892309ed44ec1cfa3971ad48c587f8a552afdac866b647ef3e1b99c69469d21e06f5bb644fe97c6c0018dd23a9ffda6d66416b1d6e35114232262362fd95a250881b5227d7912400538ed4f2d6e0f0f6b5b67b3f0e6f2f73cc69e8d3fa28eeaa5b4c02b68cf18e748a9db50a5f98eca70037a50ed2148ebb808d94d1eaf6cad77595aef1363787d4ed945497df182f474207cf3fd0124d5d3057dab51ec9cec947f9edb245478e3471e4cf6784ed5f8e90e6383101fbd979403d3b89399bbb1612498433fbfef49a6b213aa7998ea3bb942f93d3d99904a51ba6d2ea0d466c068041cc28c7bccf1405ba31e21154fc572fb7f5cd9792661aa6ec717e60384ffc9c4c5307caebb9aef39e0b37309ab1809159c72182cf4eb36bd62942940e16f5a9f045285fec0aff809ae976364b0001e62088c113aaa7db113d394cd1cfce254c821a26c6f34aa6b33195e2667e2cdca44565610fa8ce9be8e3d08b4a334971e3584d8c41bf359efa0e2c455d9d60a27af2fda43939b72937b409b7516f871d4536352a77ab2bdce3afa437036e20581b0bfaf891b2b050ed4504b36655a6c2476f8bfa82b9564a3a3f5e33b7ad58eefc1d3cf6d0dfdbfb1fa5810aef2f46191e7c1b8e9fb06ac8fdb33ab11c7dbd00b7f1b30f776fbdd82ddf82f49fd7c2a0f29ab7810fdc00867f5b180ff6a8b7a2353f279b9acd55e7d07ca52d6ce65a725e1b46e6a821db3a59449d13c487367e29108e614280c96d6e64d7db3b0a07be11adafee38d09889acc5f0c3037142ab38cbc77ff721f4156ea57f39fbb7a98c0cf04f50d8b562da81568c9e1f4b99957c34f14da7881056ceb693d871b90d1a4a85a0c4f2a0cbb8b7ea488e4f0446f6b2a64b5358a760d8ba206bfdfdc433ba88619ba3359b271a1f9ce54f2ebaf7b2f1b02c670df1faf326fe986d486706f4b09282306d040dd94df52e2ba705133070de8f0a7faf881b8d0ca13263c020bd708b27b9131b8186dead0867ca50f8cc895b7080ab4e170e2a6b6f0ba2f4c959fbac6be3678406917bfba8a92adb3cd42c7e0e2e0146246d7c711f429c5cf028e8808acbe2235f486b173b32bf414d74e014e1b434a12b15bfcda6d1090f11fca318c483c72105261977fbc84963eaa23da96ab561ced8b44a344c1c032cabf753d1c228db10b2a37d4421c0228519040c79f2f72593144b78d07e1096ad597ef556b1e5428786b0dcb5da50e26872ff2b3d9076e45f00cec7af560511ec68b181489bb43e2dc19f22073fe06eaa78bc87234030ed50820d00d7d8089aed40af137088e5e9da62e5b097efb07f067a59fce9c1a9f2cc862b715afed162737329be67117d09af0203a921bb35f237c3effb8b4ad4f86b6de63509160c9ed92f89121ea7249d7b78db0c841cef37c99d07772bd5aaa162da88caae95e41c6618137ceaa865f621227f37cd3848188e77c8d3368361639491fa780e0557229ae55a8a9f6ae4a5bf33192f0dbe6f17cbf0898b225a1d7bff74fcb838b71e13396ae54083fe4868b6491eb92ac5c00021c70672f8f4af98f504be5f9205b755d8e15210783c5c503f187d9d11e3e90cc871ffb7bc9198c2d5993ed466c9bc4b76601f3a28c6561c5f59199790982cc5dfb77e262619c5f2c464151ccd6097cb2f9dede7615a05faca1092bea23c29230a5556e9fee49a60eb9d03f59d3adc9b389713c0576021f4147ac6d58ddc8dc2d7f388a3b24aef4082b2ace536b17bc84c38b8e22242dc55d9931979c022033a2e0c65c91abcd36f05bb266260e14cb262b4162f808b86a4869a4dbe15ed71aab218680400000eca4e7e473739d378e9c6e8f1d4bd2e0b244b34bcb0deed68cc46ae5f67262f9879336c46238f58546d77c8fc6032a15ebbb0a0e7235a677176f3d9581fd4845eddabac8f5fd11eb2e82b63a63e4a30ea148ada2c1ad8ccc32a487423fd7c347c95f221b2527b055c6fe6158d6d7b995e03a5626f6c4166ef36054741174dbc457c8a9449360be5a4dfc6002e4b82e779057c54306878b945dfd9b22189165f35343947d252472aa6f265459fc41e510167aa7dfba3976078319a84ee4b34950c40d73b5926610cef093737e4b9bce9a9aecbd84c129f98e86f126db178b553ab85b6de99e738d076680090f0edf8d9c21be0aa4e0c3421c96f74c7a7ea5062e5bfa40f0ad774edcc080e10a91491936293d2eef7ef253c6a9034f5dc541c68f92c90dc161e4e03a49dc61801bde59039bba1010a237ea15557ce7abdd46bce89e9c5d989d514790161f82d4f881e3f12470b6e542b89b4b7bbc84314e9f45cc8483df9075332d21953ed218b95212ce4d7bb8c8374924cd45584167b0253138c1ce0f21c35e9d7f19c80daf7e027d5f4f1ad3696c57869ee60377aedaaa7dd62454eca9af78e28fdc40338e150c9d35a9ba79b44b1ccad6a7acd0456d66dd1722c5bbe71a5c74763307af83126ba718fc7247204d929eb2706a715e73e4df374a5ae8a8cfaa6477080d1b3e2ca7f9cec5c1f640805208d74702628dc460bf9d0e611473802ec4f18e8acac1b04dddf1a076d30b4c19485e2b0cc55bef18908c451599150f6405a4702219793f82531481fe3ce75513db14f8d0500a62329d9320981f0ec8214a229107b25d08be0db50ab13c52383be98cea3bb867976afe8788104653e70aa38e055458622b67e1feda2459522fc05c860008047240c11b757caac442f2978aa08391dfeda8f237bef5d8c23d9911e8c72c6b74e154509d369b0f6be034c47e4b937d99311ffa57a9fa48bcf1cf1b5451a4bee74de6629188becbba9d97a1cef5422b6bbb6622530a0c0a23de70682e882c5047feeca7ca5d65935441f132cd165eb0b9932dd77026d93988135e36a99025bffa324fc8a778cde29ea47e1d081f26e62b03757c02551837621927dbc296af9cc1ae564fabecd322a5f2f3b6937c118ad6a915855c7cc52505559089d1727c4cc1ee1d5953c5a20969178586b96f48616620aa1cded509290a063f9a75d892b6ed74107e4e24c534726d8aef02ea2a47e6fc7d2d40edb0043dd92921b49e19d73651632e30f0bd3cc80eb7aae859a6560f81665fc67bfdfb9240bc9ca894141eff60f9c27d41b2b5918ba104c2d17a9e578a85c9ce4a1add0bcae5d158f72d2d1a312471da0e92119562debcdae62ee4e95ded2cd46d8765d3c6550dbc69ca9fcb97e1f5cfece0bac1cb1fabbe05092dabc12683241b102c9c75d108cd076fe830ad94f1f34f171c3282835cb2706857b5e2a28e9aea5f41787d16cf3c816c9bfb61a223f8856bc718310d43528c45925682869d045610968dc3cccbe1e4c1a9220ac295de1390b1ace664ea96261c8b798caed90a09e730a0c31217c63d6c85c8427dd973d63d613addfee250b709033fa6fa9583124b432e42d14e097839144a8399418c168d21762571caf418402e5a5bef47b3fd6934b3ba702c5b1d61dfb2b2b4af3b86f49912a46d67c5d9473b01fb91f17d41ca34215592ea2aeec7ba222b9944d62c3c7d1f469907297fb1d51f111cceac07b740223d0d659548d000f0b2b8d1669f6a1029b612f30bfdd17bdd3ee106a4b4db3816cba786bedef3ad30853b6064a41cfad04e783df7eaa7b9ab8071c3a2dd9fa8fa7894bcc5ce91ad8e256b3a8618bdb93433445d282004ac74f11c908b55011fbf3979e8ed3892394d8e7fcc7c82d213fd49195e3266b5afd09cce606ce19ef78879b57e96347b071f5057b28af9447eef37b90b30ff03c28a1d3f7d38b39bdd951dc7fcfaecbe579f1b288d39ce63c8873987d2936c4c28623eda2a342e43ace2a060d1ed0fb4365cd4174709c2c2fb6bf0f94b8c6648b9ff339b3708b720d64477621e8eb5e4e391c7d6eee5157e7c7ca8aef65c534c2a24fe67b301c3a9cf14445b15a6e8fe471063f5ee41ea4151c5092bc772191086597da0d862dd952f9c8c8e6fd013c50026bb9040e402b5fbbd70df819b65488f79886b1c132c099877abac46ad4ba02e8f399b256c69e57596656626c055a65b0c2a9bdedeffab6945640e9e36e69d0c890a69d77902b3d79129f5b88e908bfd6176e9fa4954bd24aca1b0dc07886244b4327f09a5a0ac8e7ddc57c85f95a98c3768ccbd3e0164b83b03d7243503b1efa8e085ee6041c5c857d1ad92c1d0d24e812fb7deffdfe88562e6bbb0a558cb7e41b0f299801350d7e14b5e2ac0c324191ed1a10895c0e40868dc12ac3ca528ed9f5ec69e36bc80b53c2b6bbfd5194961a34cefc870ac5139d82b1a54968753e60320aa5a786141a031716f91854b68930bed7568de3f1e886cf5b13b482efed6d38b86b9d80283a79952219bdf2936a0edc155b93458504a3da64783a65ea5d627db67ce9e43a3d07c01c53eeed78d3d447193d23b500e078bafc8754fd1ee9a7d9acace75d990c2ff6fe1d2fbb350f1e4c27a8accc1b3a49e468a0f78f8cdc66d2867a1e319d2414892da3efcd965ffa386069ecf4572dfc88047b42f11590ffdf6bb7a45c9472db36a517cff5f968d5e16151557bf2c4846344ba4ffac522384bd1dcb46c6ff420ff05ec47b8da9b9f7761ecf3514ec57a0bc573d08bae0598e8080cfe85d4c9c9e9e488fd937807e89e46ba378d9c8416a5789a4b3dc6ac3ee87c130e8f31823809e97ec10e03d866b11f678e9c7c69199932eb48fb52123ee3c3efede3f7434afa5b113de5295463bbd671c92e35cd8f7edd4139fb16497cd49a6d867290850a26b81931177e3f0ae35afb7ceb1eae18c86b7cd4e0f11fbbf78789f679a3d26e8579134e44cd09a2a77ec4580b82268e265742737cb2987bc1b4eefc03fb8c198a10d509cb9db277af760dc3dc06bfd237e08dd96c13ccf6e262490804ad59c2f29990cfee3026a5eba63bdddc236f6e113944b70e65f1458326c10d152e1c0552e122aa05199756aec101636d1618c4d366c2d521954cd13ca7287f615854334a7a16e42b57020cf75bfa66e2e19f9b29fec28e6e923a76022b407bff31c588075d13c73dc359c63dd060b43bb678ca7bf2e2acbb62cc755997d954babc987863c9a68c70d8c6360ffba834f7f4dfb0fa0aea6779857e493875da341656688d5421d8b573dcc13ee3b926dbe5e97105171412e1d6031370268ab14ecbbbbbfa676b36b54249bd7f5301832cd2392ae7e07e33b4b042874d423fbbe6c8b2cb715aafe09455cab2368e03a75e77ee11f9f856cf30dcddb53419c6350eba91a7f19b0f3045169994301c56ccceb85f97f430e945158c787433db23188f692dddaf2084cd67b9667e8fc18c7b2937d0f40b83ce0f75a84d7bad7cab0179553f021b98fb1ab9e6acd994743423a5e7170c40b63e6afdb22c5ea30de3e0e83df12ae8e109deb7f0c8ca3f5646955568bcd8f1169f8a47652039ce6910968d1daa5bc07769bc4ca6526e386b35a6aef3febbe994311962b63eac1eea66878eb668c71b8b55613ffa089ed41e055c9722984ba49c6027d6affa46b736458fb03af8313c68e07f5bf1eec45fc5894a97efde15738d2fff04fb94794bea819686f37cdadaaf7aed716ef405f8c5aa760a0db9da226a8692ea19657dcec8653a6af170878d788697624a358dba3c26a1c6658955ced98c09e3f85656eaedd744b8009f48b76405d18c762fdd21de478780c4ca643b63f742bea0e59049d0488d3cc9c2e848bde884ad07f6aee3f1a4ef9dc6e00c339afbfa3e3fdb0dff7d873f29de515866cdf9a88ecd4a6f20ed71a3314a34000cdf8d8e24b1b456bc7ab320d0fef95fb013e303ba8b7048ff20764aa812d81b053f1dedc8b262fccb8ebfec6cea1e98b34dfdb62d890dc9f9f196f64cb6fc026e0b8625acbf9ea5782b619c83d11ac502ce7b25c09ae51af777e581879e09f65b3e97e06f2dfb1f8a7715d80b6507a9874ca2d50c5cef30a6ad6b1381c019b61ff6f9927ccd5d61fe8a827a3b1610a01c55ac91a61a1a15556875ae178a6abad67785e07147ad871903d01ae3ed42c4c014a20fb531f42c7f003de20762f74fe1664af89da2eb63c1aa3201eec46060e5b798c474ba52f873325298ababcefb6d482edaec17ceb602496aeaf2a9302691f74ed34b15a2a45a47d22215f279123ae4bbcaabd4bcf4d2f53074e6d88d7ffc0f5cf79572adc4ec31e68262e3856f8b00f7b3a28acc24cb7b281e6e0bc254ea8ea92b04b11b84be3b099c94d5ef60fb698c1448a6c638c7242e01c9f7d0abfa351564218a3ebff4e21f6f2c03c320631b2cb92b6abb15da9460683bf8747573909282298a817cdf1b42198fefb6611043d707214a4be0381508fcf01c757a058cfb01581d72cb93e185279e975270e0b5b21a2193f30b4a99b55ca5c9403e16804e0d0d6d4195f29212e283957cd9e33ee189af87315e3ed22950f0e8b3108c338d3eb384d9b715d8e31568cff50987891d149e4bdfc86cb62e1f17d7d294747189125874b643cf74f95eb4e56dd208a4d823c65a0605085ce9aeca7bd6e3ed1f59fdb873a8d17f52c20b6ff2e2e093aea29c7769da1d58632ce1035a0553cedacb4beb76d6ab8211f2e969475e46b6a4cffc1db8282aabedfbff3590a69bc92a7cfa110fdcfdb953d0a623b309e2ac0b2da64f873acf89eb804142a11de627ccc05bf89597bf70be8e4898cb2df8def6dc02bc91662341b2e27869cf56fdf98ed17c2cb3b0558cbe43062940c68472040f02c26829f60a5b2c101be555175b067752a91f2d709a05181b635e2b4c90d57fe2b52f7ba3e96ec2077b02df9016e8557bcc9c0f4e792cc95d3e3f9d6358f65a8eda86bb3bdc9703b434dfc2438d3621e32e368688bf22b46c25cc3b79ed671e316c58126df5f9ae51fa698972a52e3bbf365de95efa8e0d6f4374412befb71c5f016af3b03fd1b9ee9f0e0240a1468182972d7ae9ee759b6736533c7ba7edf0603cf87bafe019607279f01127ca7f945344d378e91a485cd8fb8ac3aa2e6c9478bf1222cea76a4eb1ed63a5753d2ea88d20d6271a30be700281d31da9ab73638134548e9c35fa5ba510c06db038c24acac6e788dda393af539e58eb9f6f197faaec2e550f71df255143190d7ea1dcdda3a983810caf91d0228cd2a6b33fe484570b146f66f932369de90004d2fcd88b5d3f842c7e5cef8206590f93bd16ec0a2f70d1c5b41940992ee7d1f24072ca56e47b277ef4f1f98c9fb27284a399a77e78856e1b9598e17645471ea3c60814aa9ac9ace85b9e5172c05d4fa47c7e2007a55b241a4082f53f2379a12bd9c1baaaff738d891855b79263e5880a002da70ad6b04ad828b75f3096c07083d3e578d64814f939d9093046eaa237e755cea0bdbd89399dd6865ff6eee0d51aa4df8e8e99119386f27739b91cf624bdf445df8ca85de154b5b8a97848cdcdd7f12a4bb232c2a55e27d8c57261dce0314f8a62dfcdbd46e02f686181ef75ce82a450b9852e20f4ca272a5dd76bfc9ce2917c59a4ed52faafbd5cfb14ccdafd8f9075cb50281fd143db2916c6b17626d41836b05843e37955669e76fd6ee7efece55de89ea9e0e9e3375396e29edae1c78d0fc6d7001feb4832be46912c6018404b1c4c5781390b7b58a2f031645dda4e460bf87c2efe5c16ab4d1061bb0df47acabba2555d00fce78cd62a3ff9dc41f8243ebf37a6db4972150651d986cd55ffc74fa200e9f2f1f6eb8b713407df8ea5725d6038e9c2e092ea62d15463420ca7bfdaada51d4993e06b57e2cba82bd8913946a2af59d7d174061c9bc6fa931058e5e333b0f5bfdb69521c1d2791b3955d4b6b79e0291ddc289202213d86ea0a5d6829ed83e0bf71d31d9198e16bb8c22a729d6a44e62157b8b512cf1c6e467da73427aafdb7933d5b774224b9f98bec034c255c427cca22e7dc31401c1be86633cfb6327678e406c1f2a266c8a7a4bb9d8f0ea7a964c896d4803370ab9d0a8a6ee748ae37182c3994473ecfb1d1a88edffd6c109efdb47a3882985af1d0fefe4603c8e8876817a8ead4306cce8b1da494201afeda777acbcfc92bbaf11bd63022536f8c905d36d8dd9e5dc8de12f4e0ee84be8633a8056fdfd2f211de53e65abaee1ea84138ba7d32853608fcfddcd09311a17000352d518cbec612b1a754e4a21ba36bbd24579ec7fb78b6a9c5e5e31160c4ba1963ac3b501d4031dac27daec1c7971c81e31887e3d93875c595432d9a41ec63165c6dc0e8e756b332807c4178561c374854b991e61a665e07d3d6d1dece425e223a892386a5e87d6b7fd2c72b4b5682e24d250d185625b2d9741c2ed523149f8b89dcbf7688832481fd2d06a51b3b256a376503e5dabb983e7f85495fd85f767196fe692570147f91b9e2de8dcb77b1a13054653e08487a4c56de371fc2284ff014dfdf191c661dd71a7503799cfa6ee5d16b27fbdbb77fd46de62910679e6d310f5b4a00b8abd358a9cc86826838526384584172472aa51748f745b85aac700a5fc773a61b19907cc4fe3fc9a4c4a959b767a785e149d1c54c124a1f390793d03b0c6036403d9322e5a64354da9c11ee20521c5c0bd5165203ac585683da3efe81a722b24fa4d41c15cd52823ce53368e6b9a1f7ae68a6db7bcb7c4dca1f19e34adc103dd331420e8c12b695915060d792329fa41a7042ee8896a4bfdb61ede083a28ca563952b4d87732f68e4ee8da8ac23f8ced5e28e2845db21a756ac9f8a0fd2af7ab17a87e88725d552dbfd21b82ca3e768413da4d2926432c92c7d219c51f6e6def78a83a43f17a1c9f78f1e90b23a72c02aa9072e7c0780d424acd5208587fa6506cf80f28691b5592da88d2f975844936433702049f8e29ca7002e53a763953ebe2341d87329ac56afba7c0eb73e40b510c9804bab4ea1e64014ec2d011fbc9bb312fe28c04987ec72f4377ba6f422d37524b123266e170bfb2a2fa1d811fd3811239b93787d04fe6a1a3b00573b90be6a121ee2176e8086a6b040d60c7ec500227970f0082ff93b08a2cf73adc1602a88902752118189faaf7922c3f561d300191beb5d234bc96b6c7b1875d67a5a6bab0a055ae4c9caf57d63696122e498e7c42f61145d4ffd07dbfe88355d0b6f9fa5cfe2ead0eb8eef908d656a9e78684a7fd2cce716e0e63cd3ee41ddf340c0ed1a50415c8f5e1ed923cb8f6b3916fe04f77ea6c08ef984eb1e7ec883b0cf1864cd26f4a9cddb5d6dd3a12079710fdc62d874bd29880d0b1c38a8d4e56503a26a6082eb34428d56ca01af77c3612bd2f474dbf65adfbf47d02c19620858ab8126566192c7df816c2e79612ad7b11e67272e10b23ce07f0c85d0d6c418880d250edb2970e340ccf5df58851d307afa9a915c2c9ccfc66c0e2e04f83595b93b50eca5c5dc807bb141e60662e926fe5ca99a061b598827eded277c50472c074e3b0883d826a552840c3f6126bacef6436ea88920716b65de1976f6e4b3fe51fc1d2d82303baf4d7a6631890d32ec5594fa1b974db85541501feeabf8f47d9639f199cdbb65d15fce51721160c9eb4631b1f1e6271bd02399fe72e49a294a6a90b36a49fce43eb771f884cf8fbcd422bac144ffe4c2e666c11b2b29835816eded0dc572ad9340e26421c1f1b37c9db91b5e5c927d9f160f2c063b8eb1f787efbb8faa8a0129e8c9cd566da1132b35dad41c3c108d7e7a964fae6a7d69eafce4a914f54c34ab48d31f44b6dbda24aa3be1702098c03204f4dc3959f6d6cbcaca89558030f14b3268c4d04decc8b0cae05f035f9cff20ab96e164406531ba0ab06358ff7d394545af85d66f02fe039406eeeb281cfe9ba94b07237e40d5ab76d0e5e409d8df5d391a581cc319b569daa4a441f587514736762e42e1ceea1514ebdba347ddc5912408b0c36630ca9fc3f9f0897689604860549cda664f28faf4f15dc34397f0ffeb9e3a1b592eff16428e0c9da582aed684fb9d27589bccbd15451f5a22dace28a455b8ff55cca623922be298cbd6f2f9ceb9e4304311c890209171b27ee080e8cdb8bd44e66d3b448bca3c467eae169d685b8b6d1af9a58d84fd654fe975d8c347561bcf785cb01c0c19a7bdec46e19432937743c6ee867babc7f876f64e63a59684aa1b277be14e1fe4d581aab1bdf84a7105e1149350c1fe17e7e086739519ea1263e00ec3d08d182f8c56ead50c68c0bba2f5962edbf7db4bbb16643d9e1ae50335f20cb32c9115ec7f9cf494ebe445aadd165aaf17c0a3d344720fd88fb83617b49e15bac2601661869dafcaef515b52f6e6c2867c00593e21ddf1fe229bd95531a54640c7b1ae745d5120706739d0582dafbaae3db3af27578ab07dbec303ec59c04ee1fd20362b88a01f1ca8e8bcf4305b0ade25d2ddd49b54e20c3f83e463882ee41f281ff864374c0ec67434f8c2cb851b6ee1cfdb659e9eece66ba94a40347b3c53871973b4c5ce5b271ec1af307205b04e6a0e4499b206f71dbed7ba1d9cd9b34e11f5019807b4615895487bada8ecbfa294cdd0ad4c94d2ccab38635fbe27c5487a77d1c8e92589e020ad96c0c23a0b40ab3e9dd8cc2c5d8b65783506d8815e192c6ddeb0861cb84511027ca9cbfb600ddd697e1662a10024c66bbbb45208173080d5c087f62b6627add98368773abe7c6635d8d6fa40197ec76e85404587f50a78c7b93d88b26238a6135c87a456a1adcbf2392f9652b546b96f8983f080548b4f9105a8a678d623ded4f5de2d45084c42aa2d28498837f13cec72b920f4129c685724e0330d976e913e5c76ccae68924c11ba16dd77bba499d0492022cc2a3ed838104814f2b6ea0bdb910c171f4da87a4cb8ee92ef3cd8d874767b50ee073153b9e63232680b4c8c1418fb163167501eed4b042e084695086a980ace8b356c781ce513de7f92a7736c5159072768433cd9d3cb419158d073f23ecb7d3fd23db9b77e348ebf2ebd4fc88c36edd4075cf9066fcecda8d8fff7ad1e92c94a3c5f304a2beb374c293c591fcf0fd80e2f122e7ffb37436a004a5b5977552ab6c755ab2c2ce60e84c5b80289e4c4855d28db253982f4df7117d25c43848839d36f2d4c6b17bb32ed8855e577e6b361c81bdca32763e2093d7639ab9bace7d18551dd76bd25155843382be18dc0b6093bee8120006654602a16570f3dcbb89343e4e6725c6c5732276b8e386a0465cdf7f0e04b04448ef86c06bd59c0f0ab1246be3ffcdc06b13368fd6a1e07307e5581d860ca819f7864c140dc64eb0bf987d7ab870d44b78a7d1251b339a4f65507e5e7f93c4a061c7b529f2d87f7473e407b1e032ea3f3d6a648d43ffb95bc5b5e408c71975d0f4133ced8f4d9378930959204c4c8107f19d77032af62679fcc3c4989f9d6034e353045f1cd17dda73d49a0dcf7bc74a71375ffa217685a652cfb742130b6c5c94d7ab59fe896b49445e5039252c45d277aed84f5f43a4cadbaedd78cfae1fd98b3ac890d11ac4bb5a0f12c1e3cc59a82e483d43b133c63615c2b22a9f5ce7af70d98eb318450a047a37f4cb4541248eec4645120855049f8973bfbfecb1c53a710491594925ef33a17ff2d2e88cd12f333b0f9e64a9cd3b9dc0acee4f5f636daf34faf9bd16bceb4a58cf057741baf25806bf817b9f125f2dfdc25bd2a8218879ae8756f1c0868e0447c92e916d5b47d50b22a88ff9c1a3ea81182772cf1b544099dbd9dda90851ef7ed4a1cb865a638409393d519ad9e6dc163f90b7eb64991cbb5329e2b3bd95b84d409b67df585d8807dadf7dc6afd2f5be6be7751ae7125dd628acfc40159d02f9648d7a4e86d90e2637a36b0b9e6f95049336dfbd9bf958fb16df9af5704037ce68782d21e1a7fb01cc356b7488ee6c1783a1d7d7c38ecb705796d911db191e271746944e1b984d9b795baf4171c17d70a085be25f72802cfefc9c49160126994471c1fe4e62b751262da622ba275b6ea3abd7dba14b4f815db7ca2f8a91dde272c01feae4d119ee71806120e7315a0b420a3b432a19a951bbfc301ad87626ca46b7d5961679daa6928513e6274ec532ca7f8ea119970690c35404061c9d5f636d1351c213413f7a5bb9f9bd87d834ac534944b0783c12c4d81bd320faa2ae9a61df4d8041ddada5ae0dd508656192ee765d14b849d5e31d7019623b3f2d495892e558505be8b5c93ecbcef63690f3dec433d2ce926061e503cb51c66c0e62e74a05bca133a8e4332cefddc2d69943ce24f5800731a58b77fc63fa817f1669428dc00b8450158636f8d6afc7102a36e4ea2997feaa218757481eb0156fb885ddbf387389eb6d33ec2b5da21623c1fa84cce4fb2d19f08a8d4139d5bbd16280ca33bac743c332f74bf3876fc439e04d57365e2acaf0561e0122abaf3750a6727b28524b976d934fe865c83192a100ba86a3776021ae9bcb4367a71901b065dd30f8d006318b0ed5026fe20f6b17a3bbd5c00333d6eb55fefaa26b7140303f5ef174ce4539c04d86706c4a1a0d6ed5eb9375b1cb3ba5eb57d15b1e669f52bb4600b9607b63bbaaafd68a2dfebfd64fc67137416a19f873efe6cf222dad64c2168d32265135090525e223b78b619d447055b3a9cc39759906e95ec270d8e632322b143cdaec8c03d75ba2474c6153ea8cc7d75c312136d346ad8db5a1767ddd98e3ca17217c9852ed730eaf7f3727055f34650c8d60585f8012a9e6c40c333e0d6c452f699cedff2c50aa11452a27635843c6b5ca9b6669f6c55563b183d08ef4344c4834150cbcb181596d3ae7be33df24cbaf969f082766a676dc91017a7bcdfb5ae90770c8906e87621eaad6b75457a9bb5e8abd65cd8fd9157becf1922fe83b0ba64c59a6bce67e129fdab468acbe37411218ca27817d6053ab350d6919714556aec03d88cd4bfd0abd194dd9f43c3c29a891ae523854978a527ef92d9d69cc2153520fb3ffea308595fd7be45126923eb8af980c93a094436873ebd4fa4eeb531534db4b57d6f2b25bdb1f3c5c43812e6d2f3b36d42f81cf8837d15fc10a95c7571b4aa8fcb30b0ac6270ec70a082682346f5f356670194e6e492e7d373c8b06157916446a197caf171901f5c41bf46ada9d096964b64e49827756b4d7f07798110565411c212ed225ff8c187f9ef803925d03ae2b87d835c4281c3c38f1dcce7a9b77d2ac8af96f09ac22b7b1c9d0db074cd7c22c8d43d9f4650e9d87a4ba14c22a417c443d1c5ae7a7a77054d9404e2bb819980abbebf12b2109e9c267043d847a5583df48eb1f3038d349839ea7a11299fa4df355b458cb41db3ada1f6fdd7d3471ba924939f4637e4beafeac2c1268913c221fa5b55ad8529ff041ac8efef5c8e467a1615091241d4f309ea87a1d02649ce5b4c0f7535482ca5b4b4f2012bf0180318679ad81ceaa56507835066397ed070ddccdba98562f80bc5a61bde0aae2e60945baba911fa25f8ad68dac50d56a2bd80cfc19c05618cc4ed8d7fdf7f2b0a1c14219cc7470e3c89e72f51da85ee1380f158fa1867be9a05473f2a80d1404f89614cd7fc9832d726ab44a446cdfd6c450ff76d654aa30c3c8b2506fc45ce299ed697424833ea6ed3ec57c7d26c9b41274abc1ce66cc2cad23f8daa65739948ab1263d9870e493061470c7e6d0d44831cf51dc7b5d87387b67b2cbd0b2a4605248c137944f4481eb3745b9fb907bb475eec2cea26064eb5f28aaf33f768e337454b590260a9b28e02ccf67ad850eaea4edb0283a0b4dc1142ec68cd1adedba930bf92a268fc192ef7ec52b0ff4d0bb703fb7173a37e9d3f0522acf1c1e68fd191492108209688c61356c24e31a9d9a9bfb034</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Servoing</title>
    <url>/2024/09/01/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/moveit-Realtime%20Arm%20Servoing/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="8f3722564da0932959dc7aca3790fe5bb8c312d45b8f6891d4d30021541670f1">61a285bea0bd1a3904d1b9b9e1d940771274f00cb38bb27d3708ed932c2448e3b0b5f72866772a20c0ae6dddd79b308f7dd297d04e0903ed1846485242b70b7a2eb5ee1c3dbc623e3909cf77381eff070f15e7070b276e460f63c558fda55184ccc18997bd1c1bcac2e2b02d0d61307e191adbc1fef535dd84e287f583cad6cbfeb9469c6769b02f1caf0949a4be8f06a80db9abeb5bfc4b21e8d7390d6fdd1ce4c53dc652f3003580137ce223750c40b64acc39801a3c6ccf0f2a2b5fbe9637218fb62b03aa285afbea6ac52922d3ee63b5b77d46e1c160eeb0aaaa5f36f86ba7a232ad56402eb658c704700a8f1fa21dc342f3a750086aa1bb77077ab35913efd9eb8525b7549eb4a5c2757fdbebb45632406e45dfd776d8e14d46e7cbbbbf143009548e6383cb7598948e879fce2148334ecde3e7b1d52c112ce26efaf1945d95cec4254d8582fcb1ab31c164077e045985971b44a022c7e5c87da640a7da7306baace835a9aee052555df6cfae665acb03b7b13e59fdabfdea4ac53a2cd97d0f2bbf1c57825516bafdadf49fb43214a3a4b95f9d34ee184a1886bf3593c3c4a9b7d1da132a191eb2e976c3d578db560e1e798f8954cb3f626008966db1b2fd5d1517acf7f758f1d81b4e70c6bff1e6115edc72de6aabf04720be710eadd1d4ddd74dda357b2284ce8c0eafaafde2fd80922f6f1517a0b8a29029e9d852fd5f2e8a5c4b342846590ee89413bcc8548e4c240c226b17307373808755b7ff856f9ffe12180fea36115b8548e5b4db332076bc41ce4b623c16d12da93c363479c2a9296275a6eec6599e140002ef0dbb8138d3a86a6510e8949542cbc8040785a5008113673e89e002bf3aa08ab25ddd1db44b69fe1cd7b30fa0221ffb8c9d3158b27786a13e5fd0ee5cad044a91c3060d0a8ed6db9ad20c53abe90e65588b5b3147f57f2df2b2c8807b87d74c7d7764fd111d9c1cf7fccbc3e7d27067eb8ca78fd6e47b5f7589ea33934b6dda6af79f8ccbf082793f768ad6328c7e9548137556bd533d6b84859873de2288eb42192c34de577184cd5e617acb50c9180eae225de9c9929f054ff9ac2e6252d3b0016dd762fb8a999e77b9edb2a624511ef9b99f54fa09c5f2afe0f3ae589afee2f7a4662cff848673a93b6ca98f530226971bcb4805f4c47d780172dfa869f0c02052fc816250550821af6090745d4104d1a57e5a12c723f01e425c0722a8b0cfa96c93d1af3be9d36fc23173d8e2a48d7efca4b1a1103bd15b06b240bd3379320c6ce24ea8162bf3be3651f1d30fc028f94341433519041c600dde311fac5bb15b320a2b0d75b6621eddde26146e82ac8d7d4439c07900aeff972ace353323fefcb3d2aaa3fa7c669ff1290eba7177d5b6caef1641b48a2f91e4d03dfc1c5155ed0d1fc56b867959aac7e1b778e0af464598434e76e7247d017b88a19cf13979e1d936150b27dfbec91d6dd8caaedba0c621513b9f446e94e800497178e23898d49257c7c3f5ffe6b03fecec3789a4385497218dc9595faa01a65aa18137c97090f1d8d74fff7f302ac3bf83cf906eab610bf47c9799eadcc14826371d6af8fc9f99ca8267e887cbf2dc36f1e41ab05ba3a61222f54d6ee5fd6b011af3c7cf0d56d77db555313e520153ab71991d8c9c047e100a575c2082284ea0a766ec84ba142f5170f7637e002507b6926c98e8a2b984201fb951e8b82c5dc1629fd4f769e6ddca81cf8222e8a71970e3dc6af182dbd2f2763b5189aae0c0ea24bfc05103fae71864f99e58056cb97ff834884037fd4ee404b705dd08fe9018a5eab537b69d051c6de02a4dabcfafaf6a0d7a0854fd30e8ef3069896d341e9a1b0213f58d221c1ce79dc655f5ffb42fb4ab7fba428d649fb088be1cde3ec9c9a0ca9b27194c99896887e67cc2e47a2e7764c7d8f0d9fa369a44e24abde2cf72d87e00d418571a270742e2f19515f69b7d2f82ce8c4d75e74f4b8efcbb3d62c2664d33ae2e83b3d3b9624eff65200f29c2fdbd71285a7671d87f88d6eda6647b5d13b51ebbc98757369d136b6ac1c25a9a785befc81e1742a3b7568a5ef875be34e52a22be064283218790301462e03e6f9c8fa7043c5bf1d452f227f44af5834a2343da59fdaa8b73ef510de27c135584c6b209129b6be6aae3eed1a572f0975265dbdbe90cbd3026f13b1a140a688bff6dfac1269ffcff28ecaf6f99b94282dea2506c608732948ecb0de8ded4c7beb0a6da576129c06efa52f8c94ffb5a6a4fa5634d84f8ea5d41b71c836f40dc1824c853593c815d8a2f4cc35a5a202235b442926943e888e3de4071ff73393e05c39112b1e5faa0cfa06571e55d29e3cea2adddfd9c67945baec07ce1b700ecb49a62573d001faaa3b15a0d0652a64623bf6222c64ec3dfc2d80240070fd9a28f47e37567f6cb1ec02b713e1eddeed5f82a4c2243defe6585c897848de2d66dc32eb2849cb26adbeb1ac5895125f04a780b558b86f07807251ac1682304cec7e03e1643422de56d1a0cddec1315326df7484202e54ab7bd2a80a19bc7c8f8797d67b8822ed04b7b2ca9245abd70914a7a9a82e9377afd609a59b4fbaa0336557a91868accd3ce884e91c0e37ebca9c80e9a5f14a40454fd368d95c87812d72971a1de76f9b5d0a170d24f2210b09ba4ccc2ffc0563bea33d5c7cc0738f20903930f772e923b0c85031547866d5da422e768f4c2333565c1152a84410c9f86e329bda41871dbdbe14076866bf879439973850076cf953c15bef28cf7108e5cffe8f862ee0a2451699e799ddddd8f63f2fef574a7f0d432cb1bccf3511d852c98260dc814c651c73fad178399221284b1d0546edfc265ff3777891aa74851619374b115847d8167a95328005f62f05803e4a022d501865b95b96ee6800d6a306183533446a79feb6e8dd56e2ac017f7e89cfe6a075bbf872b7e8fa3d8a312e009f211e855e3bf422dff23d50bb2ca494718a178ceea7c9814c37ce49e7854034783418360c45c477b75f2f78bb5e13e655178b4f055c9064837d952ac6d44574f0e14622ca0f43a2a209c716842f1e497f47302c73e80525020743d2e02ba37385763d23fb25f2bbac8f3677d53bde89ba57cbfcb1d48cd53277e628d7c32e6e46e19cabda7e88bbd9ded5e7a3de5bee29b69cac16cded506b41ff85aae7b42dede0ffaaa692919ff72b8c23e25a640012514e1ec91c538ef6e0a3f8b5f94aaddd33cadc25af469d194b240bbc2259327958de111e41bca6d</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>moveit-使用</title>
    <url>/2024/09/01/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/moveit-%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="05cf45774d47a19bc6d41c890f521b86f5aaf6c1954723dad98e63c9f682ad5e"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>moveit-问题记录</title>
    <url>/2024/09/01/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/moveit-%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="948f5d76d22bcf675f1e94bf9cc555cef90e23c8272c6a83886d8c0dac7d3ed1"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>moveit</title>
    <url>/2024/09/01/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/moveit/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="b594c811ae84124519929192a9b8d32c8e18182173e6e179beaa67097fc3b42c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>moveit消息体</title>
    <url>/2024/09/01/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/moveit%E6%B6%88%E6%81%AF%E4%BD%93/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="11821d1ae87ac2edb0219e91007bd9e4e694b19f71ce5b373bfed1d0d168d5ac"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>warehouse</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/warehouse/</url>
    <content><![CDATA[<p>RViz的 MotionPlanning 插件提供了持久保存完整规划场景和机器人状态的可能性。目前有两个存储插件(基于 warehouse_ros)可用:</p>
<ul>
<li><a href="https://github.com/ros-planning/warehouse_ros_mongo">warehouse_ros_mongo</a>：使用 MongoDB</li>
<li><a href="https://github.com/ros-planning/warehouse_ros_sqlite">warehouse_ros_sqlite</a>：使用 SQLite</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get install mongodb-server</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get install ros-noetic-warehouse-ros-mongo</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudoapt-get install ros-noetic-warehouse-ros-sqlite</span></span><br></pre></td></tr></table></figure>

<p>warehouse 插件和设置必须在 MoveIt 配置的启动文件中指定。如果不希望使用MongoDB 插件，则应该调整 warehouse_settings.launch.xml 和 warehouse.launch。存储插件由参数 warehouse_plugin 决定。有效选项为 MongoDB 的 warehouse_ros_mongo::MongoDatabaseConnection 和 SQLite 的 warehouse_ros_sqlite::DatabaseConnection。</p>
<p>此外，参数 warehouse_host 和 warehouse_port 配置连接细节。对于 SQLite 插件，warehouse_host 包含数据库文件的路径，而 warehouse_port 未使用。</p>
<p>warehouse_ros_sqlite 的参数</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;moveit_warehouse_host&quot;</span> <span class="attr">default</span>=<span class="string">&quot;/path/to/your/file.sqlite&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;moveit_warehouse_port&quot;</span> <span class="attr">default</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;warehouse_plugin&quot;</span> <span class="attr">value</span>=<span class="string">&quot;warehouse_ros_sqlite::DatabaseConnection&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>



<p>warehouse_ros_mongodb 的参数</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;moveit_warehouse_port&quot;</span> <span class="attr">default</span>=<span class="string">&quot;33829&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;moveit_warehouse_host&quot;</span> <span class="attr">default</span>=<span class="string">&quot;localhost&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;warehouse_plugin&quot;</span> <span class="attr">value</span>=<span class="string">&quot;warehouse_ros_mongo::MongoDatabaseConnection&quot;</span> /&gt;</span> </span><br></pre></td></tr></table></figure>



<p>可选地，启动 MongoDB 服务器(在warehouse.launch中注释&#x2F;取消注释以下内容)</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;node name=&quot;$(anon mongo_wrapper_ros)&quot; cwd=&quot;ROS_HOME&quot; type=&quot;mongo_wrapper_ros.py&quot; pkg=&quot;warehouse_ros_mongo&quot;&gt;</span></span><br><span class="line"><span class="comment">  &lt;param name=&quot;overwrite&quot; value=&quot;false&quot;/&gt;</span></span><br><span class="line"><span class="comment">  &lt;param name=&quot;database_path&quot; value=&quot;$(arg moveit_warehouse_database_path)&quot; /&gt;</span></span><br><span class="line"><span class="comment">&lt;/node&gt; --&gt;</span></span><br></pre></td></tr></table></figure>



<p>连接数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch moveit_resources_panda_moveit_config demo.launch db:=<span class="literal">true</span></span></span><br></pre></td></tr></table></figure>

<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/warehouse/image-20240917201017262.png" class="" title="image-20240917201017262">

<p>点击 connect 按钮</p>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/warehouse/image-20240917201033909.png" class="" title="image-20240917201033909">
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>多段序列</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E5%A4%9A%E6%AE%B5%E5%BA%8F%E5%88%97/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="70728db77a6acd581eb662b4a35c2d7b5a1a43e722aaa1f653fa91a6358eb3a6">61a285bea0bd1a3904d1b9b9e1d9407789a31a25f928e8557d4c50ab88beb6ac115aa44a077f9c73e630c904d8bf09d97e787edcd096337fa06722a8d95aec7e71a2f76d29e08f7deae377789597098190352752a4d9ea4ed41d2ea5aa846d42a1df2a7697023a2f30a5a18e2b9ae3c1fcd459d338dcb8f2fab21f957d50e5207bb46d88815cee1f666b18764bcf9e1bee0cbac4807edede6bc7b4afaf15d70fc416f2bc783db1c412c1206637d3db2070338420d7208b2a7f3057890191ed778568a520257bc1f670d96d3452e45261c6b6aa6a7a717bc2ffc4a1c697475ce9113ac94b86afdfb25857199f36342c25b10974136aea6f407597c9e168920770a4f69c9d0529d7f95f7be51690149fbda9c32bba5ad31688a875ac87157c1c9671c6ed38bba26103a381024b04ed078cc223391382cc5080a13126003c927014f55cca2219bd0e55e380be07531aa5f2d0702d9e0688cdd8c9b86eb5d53fdcd02ad60aa2d3f711a377328eb2d4d253270e4e5a33799733006b9b765ac86ea8695975fd6b0402b108e32851a9fdb658d5d8e269e08b72dbf03c3fcbeddde880c0823931de126bcb6ef7d6ecfd98bbf6af3edb702810f70a02a876bc71916fe43f65abe3c4a5bff35f712265daf2a092d35894776234fcf7ddc2576cbae04b10abb7ebf066455b600cdcbd0987f7f1eee21c13a10ccf57f5c29e13c32de6f829b8812a276f154ebd454a4ae06f5846b89b7e4c40a7abfafffb15503db9995c282c83a140194fbf20d3f8d720572e810ab33d2665d7595452c67746d9904ffef18bbe145b633c35580af2afc44156bb947c76a998eb66fd21e3af44af10c739f39051bc5df0ca32516108ec3b1dcf88d5167d4fe6de3f32add01eccb593678b625df588a32f12750d05932961fd1d07f9fa6e0e9b5d2236023202cc7327865aaf41769b4fdf64f17eade3f50e5204a3c9c7e3cce6e1339f71e13142de8bcb6aea9593b101073272ba140832279637d5042aca5e08f7691c59c06790a984561da3b4bb1cb14d8c4bae916992fcfa62c1760d8829300e6b18e991006c179585690e0e85dd2ba236aa1c320fa88a9babaa76f8d311e5a9766e352f12c950bd61c0bc7cec1c059ecfe475e25445797080b94ae30f263b7a507679395cdd736e6b18d06de02f5c25ea0da9b23d7616129aa54631240d6c4e42c526c40276f42c43011dd7aae686a90676a6286e3481d91f2608058a349eb23b28bf4f83ee434a79853756cc8db63d589156c60a2c84e89d2af9f6fe4fbc5f079e1c285f05f5174f7591396a80b669601e756f96ad7daddc3d5206c647e8d7055f7713c1e2245f98993b85f0e2fadc51a033e77457482b89f13331695304af729e8b8567a41e03be7d4edc5f58c30643b0a523d57a66722caa5f476901ca09ecc07dde92047560d85122e3c83cc4996f0ee7946709b13c92e7ff62fc52cdccd1cac2825af7fd0defd9c8bc2831549bb748d7adbed9e6380bd102a09c7efb7382ec911b0e348dc79ae904e7127ad9cf7492a66e4b1fedfd3c71a84a5e5ac952aed384d7976afb22b67f7323b0d55bef2bb7730a5351901a238d5ec66c2343f71d9a4e4b166c96451c47253235c5eccffb012b03b3bc89ffa1a8b091c2031007c30489d4bff0d5b881e6190a019d3105956a8dd6bc921563a16066566098a5d7eaa36224dca2e40f150377f75634fb033355e47409f11e2084d3c53996e41037813d0b97938bc3186c3c7caf0f89a5bfb81079533fb10723db48a3b00c31aa90f32a2a5361df74823e3c72374167d08bc71d4e9a812e9e6e1585fc2abe510fcc14f944932a1347ae76b5c042fd4fdaf5acb10088aa9edfacfb24b95e5bed58bed99dd3604add61f9075132df47962f65fb7efb72b3538e164985047d962ad7f9303540f18c39bd5a761414dbcb0004a3923a666059c7f7673d40c66eacdde453a10cb03fc8d27cc57a2931677ae4c51ef6459a0a3dac25c19f81c9f36af38cb24d62290d5c57bfc869f5a9c4f39375df412c1b2111c626dd50240dc98d3e2adc36b255e7013e99097a71d61f2855c83219d4304a6bae7ff65c94314dc2862e2e2370f4eebb1c07362673b9a6c8a95d1b70e4d93fd8763c982c2b1ebef23fb279ba40e1cb1451117273e8d4573f75effeeaa7b1fbfbf45c167d2c4d531b66a463ac0e21a8dfb9e329c4690ed722d470852a1f4da664d6efccfcf994c6e3731dcaf902a22b24f8b78156c4ff5fbacb29fa35cbfecf615bebc31bcec54ae5c773968415074e52adad27dcd53a55</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>catkin</title>
    <url>/2024/09/16/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/catkin/catkin/</url>
    <content><![CDATA[<h1 id="编译指令"><a href="#编译指令" class="headerlink" title="编译指令"></a>编译指令</h1><h2 id="编译为release版本"><a href="#编译为release版本" class="headerlink" title="编译为release版本"></a>编译为release版本</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make --cmake-args -DCMAKE_BUILD_TYPE=Release</span>              </span><br></pre></td></tr></table></figure>



<p><strong>CMAKE_BUILD_TYPE</strong> 可以的取值是:</p>
<ul>
<li><code>Debug</code> - 调试信息多，没优化</li>
<li><code>Release</code> - 没有多余的调试信息，发布时使用</li>
<li><code>RelWithDebInfo</code> - 优化过的带有有调试信息的版本</li>
<li><code>MinSizeRel</code></li>
</ul>
<h2 id="编译指定包"><a href="#编译指定包" class="headerlink" title="编译指定包"></a>编译指定包</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make --pkg &lt;package_name&gt;  <span class="comment"># 临时生效</span></span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make --only-pkg-with-msgs=&lt;message_package_name&gt; <span class="comment"># 只编译 .msg 文件</span></span></span><br></pre></td></tr></table></figure>



<p>白名单：**<code>-DCATKIN_WHITELIST_PACKAGES</code>**</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make -DCATKIN_WHITELIST_PACKAGES=<span class="string">&quot;package1;package2&quot;</span></span> </span><br></pre></td></tr></table></figure>

<p>恢复编译所有的包（如不执行该指令，则后续都只会编译上述指定的包）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make -DCATKIN_WHITELIST_PACKAGES=<span class="string">&quot;&quot;</span></span>   </span><br></pre></td></tr></table></figure>



<p> 黑名单: <strong><code>-DCATKIN_BLACKLIST_PACKAGES</code></strong></p>
<h2 id="将指定包编译为release版本"><a href="#将指定包编译为release版本" class="headerlink" title="将指定包编译为release版本"></a>将指定包编译为release版本</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make --pkg=rbx1_bringup --cmake-args -DCMAKE_BUILD_TYPE=Release</span></span><br></pre></td></tr></table></figure>

<p><strong>可使用多个</strong> <strong>–pkg</strong> <strong>参数指定多个包</strong></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make install</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make install --pkg rbx1_bringup <span class="comment"># 安装指定包</span></span>              </span><br></pre></td></tr></table></figure>



<p>若未编译，则先编译（Debug），再安装。默认安装在当前目录，若要指定安装目录，可使用-DCMAKE_INSTALL_PREFIX参数，例如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make -DCMAKE_INSTALL_PREFIX=/home/ros/catkin_ws/test install --pkg rbx1_bringup</span></span><br></pre></td></tr></table></figure>

<p>​              </p>
<h2 id="编译为release，并安装在指定目录"><a href="#编译为release，并安装在指定目录" class="headerlink" title="编译为release，并安装在指定目录"></a>编译为release，并安装在指定目录</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make -DCMAKE_INSTALL_PREFIX=/home/ros/catkin_ws/test install --pkg=rbx1_bringup --cmake-args -DCMAKE_BUILD_TYPE=Release</span>              </span><br></pre></td></tr></table></figure>

<h2 id="自动初始化工作空间"><a href="#自动初始化工作空间" class="headerlink" title="自动初始化工作空间"></a>自动初始化工作空间</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin build rovio --cmake-args -DCMAKE_BUILD_TYPE=Release -DMAKE_SCENE=ON</span></span><br></pre></td></tr></table></figure>

<p>编译rovio包。如果工作空间未初始化，可以自动完成工作空间初始化 。</p>
<h2 id="catkin-init-workspace"><a href="#catkin-init-workspace" class="headerlink" title="catkin_init_workspace"></a>catkin_init_workspace</h2><p>将当前目录初始化为一个 ROS 工作空间（通常不需要运行该指令，除非想将某个目录指定为 ROS 工作空间）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Creating symlink &quot;/home/ros/catkin_test/src/CMakeLists.txt&quot; pointing to &quot;/opt/ros/kinetic/share/catkin/cmake/toplevel.cmake&quot;</span><br></pre></td></tr></table></figure>

<p>会在当前目录生成一个 CMakeLists.txt 文件，该文件为 &#x2F;opt&#x2F;ros&#x2F;kinetic&#x2F;share&#x2F;catkin&#x2F;cmake&#x2F;toplevel.cmake 的软链接。</p>
<h2 id="catkin-make-CMakeLists-txt-常用变量"><a href="#catkin-make-CMakeLists-txt-常用变量" class="headerlink" title="catkin_make CMakeLists.txt 常用变量"></a>catkin_make CMakeLists.txt 常用变量</h2><p>install 相关变量：</p>
<p><strong>- CATKIN_PACKAGE_BIN_DESTINATION</strong></p>
<p><strong>- CATKIN_PACKAGE_ETC_DESTINATION</strong></p>
<p><strong>- CATKIN_PACKAGE_INCLUDE_DESTINATION</strong></p>
<p><strong>- CATKIN_PACKAGE_LIB_DESTINATION</strong></p>
<p><strong>- CATKIN_PACKAGE_PYTHON_DESTINATION</strong></p>
<p><strong>-</strong> <strong>CATKIN_PACKAGE_SHARE_DESTINATION</strong>: 被设置为 ${CATKIN_GLOBAL_SHARE_DESTINATION}&#x2F;${PROJECT_NAME}</p>
<p><strong>- CATKIN_GLOBAL_BIN_DESTINATION：</strong>通常值用于ROS核心执行程序</p>
<p><strong>- CATKIN_GLOBAL_ETC_DESTINATION</strong></p>
<p><strong>- CATKIN_GLOBAL_INCLUDE_DESTINATION</strong></p>
<p><strong>- CATKIN_GLOBAL_LIB_DESTINATION</strong></p>
<p><strong>- CATKIN_GLOBAL_LIBEXEC_DESTINATION</strong></p>
<p><strong>- CATKIN_GLOBAL_PYTHON_DESTINATION</strong></p>
<p><strong>- CATKIN_GLOBAL_SHARE_DESTINATION</strong></p>
<h1 id="catkin-make-isolated"><a href="#catkin-make-isolated" class="headerlink" title="catkin_make_isolated"></a>catkin_make_isolated</h1><p>当一个工作空间中包含不同环境的独立的项目时，可以使用该指令进行编译。为纯粹由 catkin 包构成的工作区提供调试，并允许用户构建包含 <strong>catkin</strong> 和 **非catkin **包的工作区。</p>
<p>非catkin包：编译脚本中不使用 Catkin cmake，而是简单的 CMake 或者其它的工具的程序包。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make_isolated --install-space ./cartographer-packages --install</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make -DCMAKE_INSTALL_PREFIX=xxxx install --pkg=</span></span><br></pre></td></tr></table></figure>



<h1 id="catkin-build"><a href="#catkin-build" class="headerlink" title="catkin build"></a>catkin build</h1><p>主要区别在于 catkin build 获取的 isolated 环境。catkin build 使得整个 build configuration 更加独立，并且对配置文件的修改(添加&#x2F;删除程序包，修改 cmake 变量等)更加健壮。</p>
<ul>
<li><strong><code>catkin build</code> 并行编译相互独立的包</strong>，因此速度更快</li>
<li><code>catkin build</code> 可在 workspace 的任何目录下执行，**<code>catkin_make</code> 只能在顶层目录下执行**</li>
<li>编译指定包更加方便。<code>catkin build</code> ，或者，在要编译的包目录下执行 <code>catkin build --this</code></li>
<li><code>catkin build</code> 输出的日志更易读</li>
<li>使用 <code>catkin build</code>，还可以获得许多其它有用的 <code>catkin</code> 子命令，例如: <ul>
<li>catkin clean - 清除 build devel 及 install 目录</li>
<li>catkin list</li>
<li>catkin locate</li>
<li>catkin profile</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>编译工具</category>
        <category>catkin</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>catkin</tag>
      </tags>
  </entry>
  <entry>
    <title>接口规范</title>
    <url>/2024/09/28/%E6%9C%BA%E6%A2%B0%E8%87%82/ROS-I/%E6%8E%A5%E5%8F%A3%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<p>提供一些关于 ROS 工业机器人应提供哪些特定 ROS 接口的指南，以确保最大的兼容性。</p>
<h1 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h1><p>参考：<a href="https://github.com/ros-industrial/rep/blob/master/rep-I0006.rst">https://github.com/ros-industrial/rep/blob/master/rep-I0006.rst</a></p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>关于初始化：</p>
<ul>
<li><p>ROS node 需自动初始化与机器人控制器的所有连接</p>
<ul>
<li>不应该出现需手动连接的需求</li>
</ul>
</li>
<li><p>机械臂端代码最好在控制器启动时自动运行</p>
</li>
</ul>
<p>关于通信：</p>
<ul>
<li>机械臂和 ROS 节点都需要处理通信断连情况<ul>
<li>ROS 节点端：<ul>
<li>以固定频率（如 1Hz）重连</li>
<li>断连后停止发送大部分消息</li>
<li>继续发送 state 消息，其中 <code>connected=false</code></li>
</ul>
</li>
<li>机械臂端：<ul>
<li>停止运动，并将驱动断电</li>
<li>重新初始化所有连接，等待新的连接请求</li>
</ul>
</li>
<li>如果接口不能直接检测到通信中断，则需要在机器人&#x2F;ROS双方之间实现心跳消息</li>
</ul>
</li>
</ul>
<h1 id="ROS-API"><a href="#ROS-API" class="headerlink" title="ROS API"></a>ROS API</h1><p>定义机器人应该提供的 ROS 接口。</p>
<h2 id="通用参数"><a href="#通用参数" class="headerlink" title="通用参数"></a>通用参数</h2><ul>
<li><code>robot_ip_address</code></li>
<li><code>robot_description</code>：URDF</li>
</ul>
<h2 id="State-Feedback"><a href="#State-Feedback" class="headerlink" title="State Feedback"></a>State Feedback</h2><p>通过 Topics 发布状态信息</p>
<ul>
<li><code>feedback_states</code><ul>
<li>ROS-I <a href="https://github.com/ros-industrial/industrial_core/blob/groovy-devel/industrial_robot_client/src/joint_trajectory_action.cpp">joint_trajectory_action</a> 订阅该主题数据来监测正在执行的运动</li>
</ul>
</li>
<li><code>joint_state</code>：关节位姿信息（及 速度&#x2F;力）</li>
<li><code>robot_status</code>：<a href="https://docs.ros.org/en/groovy/api/industrial_msgs/html/msg/RobotStatus.html">industrial_msgs&#x2F;RobotStatus</a> 类型</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">std_msgs/Header header</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * UNKNOWN: -1</span></span><br><span class="line"><span class="comment"> * MANUAL: 1 # 手动控制</span></span><br><span class="line"><span class="comment"> * AUTO: 2</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line">industrial_msgs/RobotMode mode</span><br><span class="line">industrial_msgs/TriState e_stopped</span><br><span class="line">industrial_msgs/TriState drives_powered</span><br><span class="line">industrial_msgs/TriState motion_possible</span><br><span class="line">industrial_msgs/TriState in_motion</span><br><span class="line">industrial_msgs/TriState in_error</span><br><span class="line">int32 error_code</span><br></pre></td></tr></table></figure>





<h2 id="运动控制"><a href="#运动控制" class="headerlink" title="运动控制"></a>运动控制</h2><h3 id="订阅主题"><a href="#订阅主题" class="headerlink" title="订阅主题"></a>订阅主题</h3><ul>
<li><p><code>joint_path_command</code> </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// trajectory_msgs/JointTrajectory 类型</span></span><br><span class="line"></span><br><span class="line">std_msgs/Header header</span><br><span class="line"><span class="comment">// 关节列表</span></span><br><span class="line">string[] joint_names </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 轨迹点链表。每个轨迹点包含：</span></span><br><span class="line"><span class="comment"> * 	float64[] positions # 该轨迹点时各关节的位姿</span></span><br><span class="line"><span class="comment"> * 	float64[] velocities # 该轨迹点上各关节的速度</span></span><br><span class="line"><span class="comment"> * 	float64[] accelerations # 该轨迹点上各关节的加速度</span></span><br><span class="line"><span class="comment"> *	float64[] effort # 该轨迹点上各关节的力</span></span><br><span class="line"><span class="comment"> *  duration time_from_start # 该轨迹点与轨迹起点间隔（即：多久运行到该轨迹点）</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *  time_from_stat 可替代速度参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">trajectory_msgs/JointTrajectoryPoint[] points</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>joint_command</code> ：消息类型为 <a href="http://docs.ros.org/en/api/trajectory_msgs/html/msg/JointTrajectoryPoint.html">trajectory_msgs&#x2F;JointTrajectoryPoint</a> 。流式下路径点</p>
</li>
</ul>
<h3 id="Services"><a href="#Services" class="headerlink" title="Services"></a>Services</h3><ul>
<li><p><code>stop_motion</code>：停止当前运动</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">industrial_msgs/ServiceReturnCode code</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>joint_path_command</code>：执行运动轨迹，与 <code>joint_path_command</code> 主题功能相同</p>
</li>
</ul>
<h3 id="Kinematics"><a href="#Kinematics" class="headerlink" title="Kinematics"></a>Kinematics</h3><p>为了实现实时运动规划和避撞，节点应该提供机器人特定的逆运动学求解器。ROS 提供了一个通用求解器，但它的运行速度太慢，无法进行避障路径规划。</p>
<p>这类求解器应该作为插件而不是服务与 ROS 集成，以避免昂贵的通信相关开销（可使用共享内存解决通信开销问题）。</p>
<h3 id="路径精度"><a href="#路径精度" class="headerlink" title="路径精度"></a>路径精度</h3><p>上面提到的运动接口没有指定遵循特定轨迹所需的精度。实现的路径精度水平将取决于特定机器人、控制器和 ROS 接口驱动程序的限制。</p>
<p>ROS 路径规划器和碰撞检查器使用<strong>高阶平滑</strong>路径点之间的轨迹。由机器人控制器执行的最终轨迹将遵循类似的“平滑”轨迹，“但可能与“理想的”计划轨迹不完全匹配”。出于这个原因，ROS 路径规划器在机器人模型中添加了一定数量的 padding，以考虑规划路径与实际路径之间的差异。这将导致无碰撞运动的概率非常高。增加 padding 的级别可以减少碰撞的概率。</p>
<p>路径规划器和机器人控制器之间的紧密集成将减少路径执行误差和碰撞填充要求。然而，这种集成水平超出了当前 ROS-Industrial 努力的范围，可能需要机器人特定的解决方案。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>ROS-Industrial</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>ROS-Industrial</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS-Industrial</title>
    <url>/2024/09/28/%E6%9C%BA%E6%A2%B0%E8%87%82/ROS-I/ROS-Industrial/</url>
    <content><![CDATA[<img src="/2024/09/28/%E6%9C%BA%E6%A2%B0%E8%87%82/ROS-I/ROS-Industrial/ros_industrial_architecture.png" class="" title="ROS-Industrial Architecture">



<p>将不同供应商的机器人的控制与通用 ROS 框架集成，实现不同供应商的机器人之间的互操作性。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>ROS-Industrial</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>ROS-Industrial</tag>
      </tags>
  </entry>
  <entry>
    <title>behavior_tree</title>
    <url>/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/</url>
    <content><![CDATA[<p><a href="note://WEB40cf9dd13ecdc0427d94e4994089fcca">nav2 behavior tree</a></p>
<h1 id="BT-概述"><a href="#BT-概述" class="headerlink" title="BT 概述"></a><strong>BT 概述</strong></h1><p>behaviac tree（BT） 即行为树。是 computer science、robotics、控制系统及视频游戏中使用的按计划执行的数学模型。以模块化的方式描述有限数量任务之间的切换。其优势在于他们创建<strong>由一系列简单任务组成非常复杂的任务的能力</strong>，而不必担心简单任务是如何实现的。 BT与分层状态机(HFSM)存在一些相似之处，其关键区别在于行为的主要构建块是任务而不是状态。易于人类理解。</p>
<h1 id="BT-与-FSM"><a href="#BT-与-FSM" class="headerlink" title="BT 与 FSM"></a><strong>BT 与 FSM</strong></h1><p>FSM 的每个节点表示一个状态，而 BT 的每个节点表示一个行为。FSM 是事件机制，而 BT 则属于轮询机制。</p>
<p>BT 相对于 FSM 的主要优势：</p>
<ul>
<li>BT 的主要优势在于其模块化，提升可读性与复用性</li>
<li>BT 本质上是分层的，意味着可以由简单的行为自由组合成复杂的 behavior，包括整个树作为更大的树的子分支。例如：”获取啤酒”可以重用 “抓取对象” 节点</li>
<li>BT 的图形具有语义含义。因此，BT 更容易理解，而 FSM 中的状态转换在文本和图形表示中都难以理解</li>
<li>BT 更具表现力</li>
</ul>
<h1 id="BT-nodes"><a href="#BT-nodes" class="headerlink" title="BT nodes"></a><strong>BT nodes</strong></h1><p>BT 由多个不同类型节点组成，每个节点的执行都会返回一个结果：</p>
<ul>
<li><strong>running</strong>：运行中</li>
<li><strong>success</strong>：成功</li>
<li><strong>failure</strong>：失败</li>
</ul>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/image-20240907160521358.png" class="" title="image-20240907160521358">

<table>
<thead>
<tr>
<th>节点类型</th>
<th>子节点数量</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ControlNode</td>
<td>1~N</td>
<td>通常，根据其兄弟姐妹的结果或&#x2F;和自己的状态标记子进程</td>
</tr>
<tr>
<td>DecoratorNode</td>
<td>1</td>
<td>除其他事项外，它可以改变其子的结果或多次勾选它</td>
</tr>
<tr>
<td>ConditionNode</td>
<td>0</td>
<td>不应该改变系统。不得返回 RUNNING</td>
</tr>
<tr>
<td>ActionNode</td>
<td>0</td>
<td>执行节点</td>
</tr>
</tbody></table>
<p>BT 中，内部节点称为 <strong>control flow nodes</strong>，叶子节点称为 <strong>execution nodes</strong>。存在四类 control flow nodes（sequence、fallback、parallel 及 decorator）和两类 execution nodes（action 及 condition）</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/image-20240905212924594.png" class="" title="image-20240905212924594">

<p>来源：<a href="https://docs.ros.org/en/noetic/api/behaviortree_cpp/html/classBT_1_1TreeNode.html">behaviortree_cpp_v4: BT::TreeNode Class Reference (ros.org)</a></p>
<h2 id="control-flow-nodes"><a href="#control-flow-nodes" class="headerlink" title="control flow nodes"></a><strong>control flow nodes</strong></h2><ul>
<li><p><strong>Fallback</strong> - 用于**查找并执行未失败的第一个子节点(若一个节点返回 FAILURE，则继续执行下一个节点)**。当其中一个子节点返回 success 或 running 时，Fallback节点将立即返回状态代码 success 或 running；若所有节点返回 FAILURE，则返回 FAILURE。 即：selector node</p>
</li>
<li><p><strong>Sequence</strong> - 从左往右依次执行所有节点，<strong>直到有节点返回 failure 或列表执行完</strong>。只有当所有节点都返回 success 时，才向父节点返回 success</p>
</li>
<li><p><strong>Parallel</strong> - 并行节点，包含N个节点，直到任意一个节点返回 fail，或者全部返回 success 为止。(并行节点可自定义退出条件，例如：当全部节点都返回成功时退出；当某个节点成功时退出；全部节点都返回成功&#x2F;失败时退出 等)</p>
</li>
<li><p><strong>Decorator</strong> - 装饰节点，与组合节点不同，<strong>装饰节点只能有一个子节点</strong>。装饰节点又可分为：</p>
</li>
<li><ul>
<li><strong>inverter node</strong>：逆变节点，反置&#x2F;否定子节点的结果</li>
<li><strong>succeeder node</strong>：不管其子节点向其返回的结果是什么，总是返回 success</li>
<li><strong>repeater node</strong>：在子节点返回结果后继续执行其子节点</li>
<li><strong>repeat until fail node</strong>：重复直至执行失败</li>
</ul>
</li>
</ul>
<h2 id="execution-nodes"><a href="#execution-nodes" class="headerlink" title="execution nodes"></a><strong>execution nodes</strong></h2><ul>
<li><strong>Action</strong> - </li>
<li><strong>Condition</strong> -</li>
</ul>
<p>执行节点是叶子节点。</p>
<h2 id="其它节点"><a href="#其它节点" class="headerlink" title="其它节点"></a><strong>其它节点</strong></h2><ul>
<li><strong>iterator node</strong>：与 sequence node 类似，不同的是：忽略 failure</li>
<li><strong>random sequence node</strong>：</li>
<li><strong>random selector node</strong>：</li>
<li><strong>condition node</strong>：执行条件判断，返回判断结果</li>
<li><strong>composite nodes</strong>：组合节点</li>
</ul>
<h1 id="节点描述符"><a href="#节点描述符" class="headerlink" title="节点描述符"></a><strong>节点描述符</strong></h1><p>各节点描述符：  </p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/nodes.png" class="" title="nodes">

<p>Node with memory：允许设计者实现<strong>不重复执行的节点</strong>。节点符号加上 “*****” 即表示 Node with memory。  </p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/node_with_memory.png" class="" title="node_with_memory">

<p>部分 BT 实现中，节点不包含 Running 状态，而是通过阻塞直到 action 直接结束，再返回 success 或 failure。这类 BT 实现是 <strong>no-reactive</strong> 的。no-reactive BT 可以看做是只包含 memory node 的 BT。</p>
<h1 id="节点图形"><a href="#节点图形" class="headerlink" title="节点图形"></a><strong>节点图形</strong></h1><h2 id="选择器节点"><a href="#选择器节点" class="headerlink" title="选择器节点"></a><strong>选择器节点</strong></h2><img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/selector_node.png" class="" title="selector_node">

<h2 id="sequence-node"><a href="#sequence-node" class="headerlink" title="sequence node"></a><strong>sequence node</strong></h2><img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/sequence_node.png" class="" title="sequence_node">

<h2 id="parallel-node"><a href="#parallel-node" class="headerlink" title="parallel node"></a><strong>parallel node</strong></h2><img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/parallel_node.png" class="" title="parallel_node">

<h2 id="action-node"><a href="#action-node" class="headerlink" title="action node"></a><strong>action node</strong></h2><img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/action_node.png" class="" title="action_node">

<p>该图包含一个 selector node、一个 sequence node、一个 condition node(黄色)、两个 action node。</p>
<p>当 C1 返回 Success 是才会执行 A1; 只有当 C1 或 A1 返回 Failure 时，才会执行 A2。</p>
<h1 id="BT-设计规则"><a href="#BT-设计规则" class="headerlink" title="BT 设计规则"></a><strong>BT 设计规则</strong></h1><h2 id="使用明确的-Success-Conditions-提升可读性"><a href="#使用明确的-Success-Conditions-提升可读性" class="headerlink" title="使用明确的 Success Conditions 提升可读性"></a><strong>使用明确的 Success Conditions 提升可读性</strong></h2><p>BT 的一个优势是可以用图形来表示树的切换结构。但是，actions 节点何时返回 Success 和 Failure 的详细信息并未显示在图形中。</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/image-20240907173345832.png" class="" title="image-20240907173345832">

<p>该 BT 树中，执行 Unlock Door 时，如果门已经是关着的了，那此时 Unlock Door 操作的返回值取决于内部的具体实现，从 BT 图上是无法看出的。此时可按如下进行修改：</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/image-20240907173345834.png" class="" title="image-20240907173345834">

<p>相比原来的 BT 图，增加了明确的 success conditions。这些条件通过 Fallback 下成对出现的节点表示。此时，若门是锁着的，则 Door Unlocked 直接返回 Success，该 action(Unlock Door) 对应的 Fallback 返回 Success。</p>
<h2 id="使用-Implicit-Sequence-提升-reactiving"><a href="#使用-Implicit-Sequence-提升-reactiving" class="headerlink" title="使用 Implicit Sequence 提升 reactiving"></a><strong>使用 Implicit Sequence 提升 reactiving</strong></h2><p>假设人通过之后，门关闭了，则此时， BT 会再次 Unlock Door、Open Door，再到 Agent Has Passed 条件判断处返回 Success。此时可按如下进一步优化：</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/behavior_tree/implicit_sequence.png" class="" title="implicit_sequence">

<p>此例中，提高 reactiving 所需的关键观察是要意识到目标通过门，其它所有 action 都只是为了达成该目标。</p>
<p>在需要撤销自身的某些 action 时，implicit sequence 的使用尤为重要。创建 implicit sequence 的系统方法是使用反向链接。</p>
<h2 id="使用-Decision-Tree-结构处理不同场景"><a href="#使用-Decision-Tree-结构处理不同场景" class="headerlink" title="使用 Decision Tree 结构处理不同场景"></a><strong>使用 Decision Tree 结构处理不同场景</strong></h2><h2 id="使用-sequence-提高安全性"><a href="#使用-sequence-提高安全性" class="headerlink" title="使用 sequence 提高安全性"></a><strong>使用 sequence 提高安全性</strong></h2><h2 id="使用反向链接-Backchaining-创建-Deliberative-BT"><a href="#使用反向链接-Backchaining-创建-Deliberative-BT" class="headerlink" title="使用反向链接(Backchaining)创建 Deliberative BT"></a><strong>使用反向链接(Backchaining)创建 Deliberative BT</strong></h2><h2 id="使用-memory-node-创建-un-reactive-BT"><a href="#使用-memory-node-创建-un-reactive-BT" class="headerlink" title="使用 memory node 创建 un-reactive BT"></a><strong>使用 memory node 创建 un-reactive BT</strong></h2>]]></content>
      <categories>
        <category>行为树</category>
      </categories>
      <tags>
        <tag>行为树</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
  <entry>
    <title>nav2_behavior_tree</title>
    <url>/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/</url>
    <content><![CDATA[<h1 id="Nav2-Behavior-Tree-概述"><a href="#Nav2-Behavior-Tree-概述" class="headerlink" title="Nav2 Behavior Tree 概述"></a>Nav2 Behavior Tree 概述</h1><p>Nav2 允许用户设置许多不同的插件类型，包括：行为树、核心算法、状态检查器等等。</p>
<p>例如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">main_tree_to_execute</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">PipelineSequence</span> <span class="attr">name</span>=<span class="string">&quot;NavigateWithReplanning&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">DistanceController</span> <span class="attr">distance</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ComputePathToPose</span> <span class="attr">goal</span>=<span class="string">&quot;&#123;goal&#125;&quot;</span> <span class="attr">path</span>=<span class="string">&quot;&#123;path&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">DistanceController</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">FollowPath</span> <span class="attr">path</span>=<span class="string">&quot;&#123;path&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">PipelineSequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此行为树使用 <code>ComputePathToPose</code>，然后每隔一米 (由 DistanceController 设定) 简单规划一条通往 goal 的新路径。如果在 path blackboard 变量上计算了一个新路径， FollowPath 将采用这个 path ，并使用服务器的默认算法来跟随它。</p>
<p>该示例包含：</p>
<ul>
<li>No recovery methods</li>
<li>No retries on failure</li>
<li>No selected planner or controller algorithms</li>
<li>No nodes to contextually change settings for optimal performance</li>
<li>No integration with automatic door, elevator, or other APIs</li>
<li>No user provided custom BT nodes</li>
<li>No subtrees for other behaviors like docking, following, etc.</li>
</ul>
<h1 id="Nav2-特定节点"><a href="#Nav2-特定节点" class="headerlink" title="Nav2 特定节点"></a>Nav2 特定节点</h1><p>有相当多的自定义 Nav2 BT 节点被提供给 Nav2 使用。自定义 Nav2 BT 节点的完整列表可以在 <a href="https://github.com/ros-planning/navigation2/tree/main/nav2_behavior_tree/plugins">nav2_behavior_tree plugins folder</a> 中找到。也可参考 <a href="https://navigation.ros.org/configuration/packages/configuring-bt-xml.html">configuration guide</a>。</p>
<h2 id="Action-Nodes"><a href="#Action-Nodes" class="headerlink" title="Action Nodes"></a>Action Nodes</h2><ul>
<li><code>ComputePathToPose</code>: ComputePathToPose Action Server Client (Planner Interface)</li>
<li><code>FollowPath</code>: FollowPath Action Server Client (Controller Interface)</li>
<li><code>Spin</code>, <code>Wait</code>, <code>Backup</code>: Behaviors Action Server Client</li>
<li><code>ClearCostmapService</code>: ClearCostmapService Server Clients</li>
</ul>
<p>此类节点完成后，如果操作服务器认为操作已正确完成，这些操作节点将返回 SUCCESS ，如果仍在运行，则返回 RUNNING ，否则返回 FAILURE 。请注意，在上面的列表中， <code>ClearCostmapService</code> 操作节点不是操作服务器客户端，而是服务客户端。</p>
<h2 id="Condition-Nodes"><a href="#Condition-Nodes" class="headerlink" title="Condition Nodes"></a>Condition Nodes</h2><ul>
<li><code>GoalUpdated</code>: Checks if the goal on the goal topic has been updated</li>
<li><code>GoalReached</code>: Checks if the goal has been reached</li>
<li><code>InitialPoseReceived</code>: Checks to see if a pose on the intial_pose topic has been received</li>
<li><code>isBatteryLow</code>: Checks to see if the battery is low by listening on the battery topic</li>
</ul>
<p>上面的条件节点列表可用于探测系统的特定方面。通常，如果条件为真，它们将返回SUCCESS，否则返回FAILURE。默认的 Nav2 BT 中使用的关键条件是 <code>GoalUpdated</code>，它在特定子树中异步检查。这个条件节点允许描述为“如果目标已经更新，那么必须重新计划”的行为。条件节点通常与 <code>ReactiveFallback</code> 节点配对。</p>
<h2 id="Decorator-Nodes"><a href="#Decorator-Nodes" class="headerlink" title="Decorator Nodes"></a>Decorator Nodes</h2><p>即：装饰节点</p>
<ul>
<li><code>Distance Controller</code>: Will tick children nodes every time the robot has traveled a certain distance</li>
<li><code>Rate Controller</code>: Controls the ticking of its child node at a constant frequency. The tick rate is an exposed port</li>
<li><code>Goal Updater</code>: Will update the goal of children nodes via ports on the BT</li>
<li><code>Single Trigger</code>: Will only tick its child node once, and will return FAILURE for all subsequent ticks</li>
<li><code>Speed Controller</code>: Controls the ticking of its child node at a rate proportional to the robot’s speed</li>
</ul>
<h2 id="Control-PipelineSequence"><a href="#Control-PipelineSequence" class="headerlink" title="Control: PipelineSequence"></a>Control: PipelineSequence</h2><p>当一个子节点返回 “RUNNING” 时， <code>PipelineSequence</code> 控制节点会重新标记之前的子节点。该节点类似于 Sequence 节点，具有重新标记 “current” 之前的子节点的附加特性。如果任一子节点返回 FAILURE ，所有子节点都将停止，父节点也将返回 FAILURE。若序列中最后一个子节点 SUCCESS，该节点将停止并返回 SUCCESS 。</p>
<p>例如：</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/control_pipelineSequence-1726567119152-1.png" class="" title="control_pipelineSequence.png">

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">main_tree_to_execute</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">PipelineSequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Action_A</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Action_B</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Action_C</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">PipelineSequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>初始时，Action_A、Action_B、Action_C 均为 IDLE</li>
<li>当父类 <code>PipelineSequence</code> 第一次被 ticked 时，假设 Action_A 返回 RUNNING，父节点也将返回 RUNNING。主节点继续 tick 也不会调用 Action_B 和Action_C，直到 Action_A 返回 success，才调用 Action_B</li>
<li>当 Action_B 返回 running 时，下一个 tick 会继续调用 Action_A，此时无论 Action_A 返回 running 还是 success，都会继续调用 Action_B</li>
</ul>
<blockquote>
<p>若任一子节点执行失败，则终止所有子节点动作，父节点返回 failture</p>
</blockquote>
<h2 id="Control-Recovery"><a href="#Control-Recovery" class="headerlink" title="Control: Recovery"></a>Control: Recovery</h2><p>Recovery 控制节点只有两个子节点， <strong>当且仅当第一个子节点返回 SUCCESS 时返回SUCCESS。如果第一个子节点返回FAILURE，第二个子节点将被 ticked</strong>。这个循环将持续到:</p>
<ul>
<li>第一个子节点返回 SUCCESS</li>
<li>第二个子节点返回 FAILTURE</li>
<li>重试次数超过 number_of_retries 参数指定值</li>
</ul>
<p>该节点通常用于将 action 和 recovery action 链接在一起。第一个 action 通常是“主要”行为，第二个 action 是在主要行为失败的情况下执行的操作。通常，第二个子动作的 ticking 会提高第一个动作成功的几率。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">root main_tree_to_execute=&quot;MainTree&quot;&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RecoveryNode</span> <span class="attr">number_of_retries</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ComputePathToPose</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ClearLocalCostmap</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RecoveryNode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Control-RoundRobin"><a href="#Control-RoundRobin" class="headerlink" title="Control: RoundRobin"></a>Control: RoundRobin</h2><p>轮循控制节点以轮循的方式 ticks 它的子节点，直到子节点返回 SUCCESS 为止，其父节点也将返回 SUCCESS。如果所有子节点都返回 FAILURE，那么父节点也会返回 FAILURE。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">main_tree_to_execute</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RoundRobin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Action_A</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Action_B</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Action_C</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RoundRobin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>初始时，所有节点均为 IDLE</li>
<li>tick 父节点后，第一个子节点(Action_A)被 ticked。假设在 tick 时子节点返回 RUNNING。此时，不会有其他子节点被 ticked，并且父节点也返回 RUNNING</li>
</ul>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/control_round_robin_RUNNING_IDLE_IDLE-1726567206096-3.png" class="" title="control_round_robin_RUNNING_IDLE_IDLE.png">

<ul>
<li>假设 Action_A 返回 FAILTURE，则在下一次 tick，Action_B 将被 ticked，此时 Action_C 仍保持 unticked。假设此时，Action_B 返回 running，则父节点也会返回 running</li>
</ul>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/control_round_robin_FAILURE_RUNNING_IDLE-1726567226834-5.png" class="" title="control_round_robin_FAILURE_RUNNING_IDLE.png">

<ul>
<li>假设 Action_B 返回 SUCCESS，则 RoundRobin 将停止所有子节点，并返回 SUCCESS。父节点保留此状态信息，并在下一个 tick 上 tick Action_C，而不是像步骤2那样从 Action_A 开始</li>
</ul>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/control_round_robin_FAILURE_SUCCESS_IDLE-1726567316831-11.png" class="" title="control_round_robin_FAILURE_SUCCESS_IDLE.png">

<ul>
<li>在下一个 tick，假设 Action_C 返回 RUNNING，则父节点 RoundRobin 也返回 RUNNING。不会 tick 其它节点</li>
</ul>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/control_round_robin_FAILURE_SUCCESS_RUNNING-1726567328533-13.png" class="" title="control_round_robin_FAILURE_SUCCESS_RUNNING.png">

<ul>
<li>最后一次 tick，假设 Action_C 返回 FAILTURE，则父节点将循环并 tick Action_A。Action_A 返回 RUNNING，则父节点也返回 RUNNING。此模式将无限期地持续下去，除非所有子节点都返回FAILURE</li>
</ul>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/control_round_robin_RUNNING_IDLE_FAILURE-1726567335983-15.png" class="" title="control_round_robin_RUNNING_IDLE_FAILURE.png">

<h1 id="Nav2-Behavior-Tree-示例"><a href="#Nav2-Behavior-Tree-示例" class="headerlink" title="Nav2 Behavior Tree 示例"></a>Nav2 Behavior Tree 示例</h1><p>以 <code>nav2_bt_navigator/behavior_trees/navigate_to_pose_w_replanning_and_recovery.xml</code> 为例。该行为树以 1hz 的频率周期性地重新规划全局路径，也有恢复动作。</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/overall_bt-1726567399622-17.png" class="" title="overall_bt.png">

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">main_tree_to_execute</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RecoveryNode</span> <span class="attr">number_of_retries</span>=<span class="string">&quot;6&quot;</span> <span class="attr">name</span>=<span class="string">&quot;NavigateRecovery&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PipelineSequence</span> <span class="attr">name</span>=<span class="string">&quot;NavigateWithReplanning&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">RateController</span> <span class="attr">hz</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RecoveryNode</span> <span class="attr">number_of_retries</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ComputePathToPose&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ComputePathToPose</span> <span class="attr">goal</span>=<span class="string">&quot;&#123;goal&#125;&quot;</span> <span class="attr">path</span>=<span class="string">&quot;&#123;path&#125;&quot;</span> <span class="attr">planner_id</span>=<span class="string">&quot;GridBased&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ReactiveFallback</span> <span class="attr">name</span>=<span class="string">&quot;ComputePathToPoseRecoveryFallback&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">GoalUpdated</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">ClearEntireCostmap</span> <span class="attr">name</span>=<span class="string">&quot;ClearGlobalCostmap-Context&quot;</span> <span class="attr">service_name</span>=<span class="string">&quot;global_costmap/clear_entirely_global_costmap&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">ReactiveFallback</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">RecoveryNode</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">RateController</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">RecoveryNode</span> <span class="attr">number_of_retries</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;FollowPath&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">FollowPath</span> <span class="attr">path</span>=<span class="string">&quot;&#123;path&#125;&quot;</span> <span class="attr">controller_id</span>=<span class="string">&quot;FollowPath&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ReactiveFallback</span> <span class="attr">name</span>=<span class="string">&quot;FollowPathRecoveryFallback&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">GoalUpdated</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ClearEntireCostmap</span> <span class="attr">name</span>=<span class="string">&quot;ClearLocalCostmap-Context&quot;</span> <span class="attr">service_name</span>=<span class="string">&quot;local_costmap/clear_entirely_local_costmap&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ReactiveFallback</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">RecoveryNode</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">PipelineSequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ReactiveFallback</span> <span class="attr">name</span>=<span class="string">&quot;RecoveryFallback&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">GoalUpdated</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">RoundRobin</span> <span class="attr">name</span>=<span class="string">&quot;RecoveryActions&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Sequence</span> <span class="attr">name</span>=<span class="string">&quot;ClearingActions&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ClearEntireCostmap</span> <span class="attr">name</span>=<span class="string">&quot;ClearLocalCostmap-Subtree&quot;</span> <span class="attr">service_name</span>=<span class="string">&quot;local_costmap/clear_entirely_local_costmap&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ClearEntireCostmap</span> <span class="attr">name</span>=<span class="string">&quot;ClearGlobalCostmap-Subtree&quot;</span> <span class="attr">service_name</span>=<span class="string">&quot;global_costmap/clear_entirely_global_costmap&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Spin</span> <span class="attr">spin_dist</span>=<span class="string">&quot;1.57&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Wait</span> <span class="attr">wait_duration</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">BackUp</span> <span class="attr">backup_dist</span>=<span class="string">&quot;0.15&quot;</span> <span class="attr">backup_speed</span>=<span class="string">&quot;0.025&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">RoundRobin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ReactiveFallback</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RecoveryNode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>该行为树包含两个子树， <code>NavigateWithReplanning</code> 子树将被称为 Navigation 子树， <code>RecoveryFallback</code> 子树将被称为 Recovery 子树。</p>
<p>Navigation 子树主要涉及实际的导航行为:</p>
<ul>
<li>计算路径</li>
<li>路径跟随</li>
<li>上述每个主要导航行为的 contextual recovery 行为</li>
</ul>
<p>Recovery 子树包括系统级故障或不容易在内部处理的项目的行为。</p>
<p>整个 BT 将花费大部分时间在导航子树中。如果 Navigation 子树中的两个主要行为中的任何一个失败(路径计算或路径跟踪)，将尝试 contextual recovery。</p>
<p>如果 contextual recovery 仍然不行，Navigation 子树将返回 FAILURE。系统将转到 recovery 子树，尝试清除任何系统级导航失败。</p>
<h2 id="Navigation-subtree"><a href="#Navigation-subtree" class="headerlink" title="Navigation subtree"></a>Navigation subtree</h2><img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/navigation_subtree-1726568324305-19.png" class="" title="navigation_subtree.png">

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">PipelineSequence</span> <span class="attr">name</span>=<span class="string">&quot;NavigateWithReplanning&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RateController</span> <span class="attr">hz</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RecoveryNode</span> <span class="attr">number_of_retries</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ComputePathToPose&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ComputePathToPose</span> <span class="attr">goal</span>=<span class="string">&quot;&#123;goal&#125;&quot;</span> <span class="attr">path</span>=<span class="string">&quot;&#123;path&#125;&quot;</span> <span class="attr">planner_id</span>=<span class="string">&quot;GridBased&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ReactiveFallback</span> <span class="attr">name</span>=<span class="string">&quot;ComputePathToPoseRecoveryFallback&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">GoalUpdated</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ClearEntireCostmap</span> <span class="attr">name</span>=<span class="string">&quot;ClearGlobalCostmap-Context&quot;</span> <span class="attr">service_name</span>=<span class="string">&quot;global_costmap/clear_entirely_global_costmap&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ReactiveFallback</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RecoveryNode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RateController</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RecoveryNode</span> <span class="attr">number_of_retries</span>=<span class="string">&quot;1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;FollowPath&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">FollowPath</span> <span class="attr">path</span>=<span class="string">&quot;&#123;path&#125;&quot;</span> <span class="attr">controller_id</span>=<span class="string">&quot;FollowPath&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ReactiveFallback</span> <span class="attr">name</span>=<span class="string">&quot;FollowPathRecoveryFallback&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">GoalUpdated</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ClearEntireCostmap</span> <span class="attr">name</span>=<span class="string">&quot;ClearLocalCostmap-Context&quot;</span> <span class="attr">service_name</span>=<span class="string">&quot;local_costmap/clear_entirely_local_costmap&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ReactiveFallback</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RecoveryNode</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">PipelineSequence</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>包含两个主要 actions：</p>
<ul>
<li><code>ComputePathToPose</code></li>
<li><code>FollowPath</code></li>
</ul>
<p>父节点 <code>PipelineSequence</code> 允许 <code>ComputePathToPose</code> 被 ticked，若 <code>ComputePathToPose</code> 执行成功，则会 tick <code>FollowPath</code>。 <strong>在 tick <code>FollowPath</code> 子树的同时， <code>ComputePathToPose</code> 子树也将被 ticked。这允许在机器人移动时重新计算路径</strong>。</p>
<p><code>RateController</code> 节点控制以 1Hz 的速度 tick navigation 子树。</p>
<p><code>ComputePathToPose</code> 子树：</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/contextual_recoveries-1726568336695-21.png" class="" title="contextual_recoveries.png">

<h2 id="Recovery-subtree"><a href="#Recovery-subtree" class="headerlink" title="Recovery subtree"></a>Recovery subtree</h2><img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/recovery_subtree-1726568371198-23.png" class="" title="recovery_subtree.png">

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ReactiveFallback</span> <span class="attr">name</span>=<span class="string">&quot;RecoveryFallback&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">GoalUpdated</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RoundRobin</span> <span class="attr">name</span>=<span class="string">&quot;RecoveryActions&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Sequence</span> <span class="attr">name</span>=<span class="string">&quot;ClearingActions&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ClearEntireCostmap</span> <span class="attr">name</span>=<span class="string">&quot;ClearLocalCostmap-Subtree&quot;</span> <span class="attr">service_name</span>=<span class="string">&quot;local_costmap/clear_entirely_local_costmap&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ClearEntireCostmap</span> <span class="attr">name</span>=<span class="string">&quot;ClearGlobalCostmap-Subtree&quot;</span> <span class="attr">service_name</span>=<span class="string">&quot;global_costmap/clear_entirely_global_costmap&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Spin</span> <span class="attr">spin_dist</span>=<span class="string">&quot;1.57&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Wait</span> <span class="attr">wait_duration</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">BackUp</span> <span class="attr">backup_dist</span>=<span class="string">&quot;0.15&quot;</span> <span class="attr">backup_speed</span>=<span class="string">&quot;0.025&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">RoundRobin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ReactiveFallback</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>最上层的父级 <code>ReactiveFallback</code> 控制系统范围内其余恢复之间的流，并异步检查是否已接收到新目标。如果目标在任何时候被更新，这个子树将停止所有子树并返回SUCCESS。这允许对新目标做出快速反应，并抢占当前执行的恢复。</p>
<p>如果目标从未更新，行为树将继续到 <code>RoundRobin</code> 节点。BT中默认的四种系统级恢复是:</p>
<ul>
<li>A sequence that clears both costmaps (local, and global)</li>
<li><code>Spin</code> Action</li>
<li><code>Wait</code> action</li>
<li><code>BackUp</code> action</li>
</ul>
<p>当 <code>RoundRobin</code> 的四个子节点中的任何一个成功时，机器人将尝试在导航子树中重新导航。如果这个导航不成功，round bin的下一个子节点将被选中。</p>
<p>例如，假设机器人卡住了，Navigation 子树返回 FAILURE:(本例中，假设 goal 从未更新过)</p>
<ul>
<li>尝试恢复子树中的 Costmap 清除序列，并返回 SUCCESS。机器人现在再次移动到导航子树</li>
<li>假设清除两个 costmap 是不够的，并且 Navigation 子树再次返回 FAILURE。机器人现在 tick 了恢复子树</li>
<li>在恢复子树中，旋转(<code>Spin</code>)动作将被 ticked。如果返回 SUCCESS，那么机器人将返回到主导航子树，但是假设 <code>Spin</code> 动作返回FAILURE。在这种情况下，树将保留在 Recovery 子树中</li>
<li>假设 Recovery 子树中 <code>Wait</code> 返回 SUCCESS，则机器人将再次返回 Navigation 子树中</li>
<li>假设 Navigation 子树又一次返回 FAILTURE，(清除 Costmap、尝试 <code>Spin</code> 和 <code>Wait</code> 仍然不足以恢复系统)。机器人将移动到恢复子树并尝试 <code> BackUp</code> 操作。假设机器人尝试执行 <code>BackUp</code> 操作，并且能够成功完成该操作。 <code>BackUp</code> 操作节点返回SUCCESS，因此现在再次转到 Navigation 子树</li>
<li>在这个假设的场景中，假设 <code>BackUp</code> 操作允许机器人成功地在 Navigation 子树中导航，并且机器人到达了目标。在这种情况下，整个 BT 仍将返回 SUCCESS</li>
</ul>
<p>如果 <code>BackUp</code> 操作不足以让机器人摆脱卡住，则上述逻辑将无限期地继续下去，直到超过导航子树和恢复子树的父树中的 <code>number_of_retries</code>，或者恢复子树中的所有系统级恢复返回 FAILURE。</p>
<h2 id="Navigate-to-pose"><a href="#Navigate-to-pose" class="headerlink" title="Navigate to pose"></a>Navigate to pose</h2><p>该行为树实现了一个导航行为，从一个起点，导航到指定的目标点。</p>
<h2 id="Navigate-through-poses"><a href="#Navigate-through-poses" class="headerlink" title="Navigate through poses"></a>Navigate through poses</h2><p>该行为树实现了一个导航行为，从一个起点，通过许多中间硬姿态约束，到达自由空间中的最终目标。它既包含在特定子上下文中用于恢复的自定义行为，也包含用于系统级故障的全局恢复子树。它还为用户提供了在返回失败状态之前多次重试任务的机会。</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/navigate_through_poses-1726568419725-25.png" class="" title="navigate_through_poses.png">

<h2 id="Navigate-to-pose-and-Pause-near-goal-obstacle"><a href="#Navigate-to-pose-and-Pause-near-goal-obstacle" class="headerlink" title="Navigate to pose and Pause near goal-obstacle"></a>Navigate to pose and Pause near goal-obstacle</h2><p>该行为树是 navigate to pose 的软扩展。除了 navigate to pose 的功能外，该行为树允许机器人通过暂停机器人的导航并等待用户指定的时间来检查障碍物是否已清除，从而有效地处理靠近目标的障碍物(例如叉车，人或其他临时障碍物)。如果在等待时间内障碍物已经移动，机器人将选择较短的路径继续到达目标。如果障碍物在等待时间内没有移动或等待时间结束，则机器人将使用更长的路径到达最终目标位置。最终，对于给定的任务，这种行为树有助于解决周期时间长的问题，这是由于在目标位置附近存在临时障碍物而产生的长路径所导致的。</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/patience_and_recovery-1726568430871-27.png" class="" title="patience_and_recovery.png">

<p>从图中，可以看到导航子树中有一个额外的分支，称为 <code>MonitorAndFollowPath</code>。该分支的目的是让用户执行他们的机器人应该显示的任何类型的监视行为。在这种特殊的 BT 中， <code>PathLongerOnApproach</code> BT 节点专门利用 monitor 分支来检查全局规划器是否决定在接近用户指定的目标接近度时为机器人规划一条明显更长的路径。如果没有明显较长的路径，则监视节点进入 FollowPath 恢复节点，然后该节点生成必要的控制命令。</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/nav2_patience_near_goal_and_go_around-1726568443235-29.gif" class="" title="nav2_patience_near_goal_and_go_around.gif"><img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/nav2_bt/nav2_patience_near_goal_and_clear_obstacle-1726568460021-31.gif" class="" title="nav2_patience_near_goal_and_clear_obstacle.gif">

<h2 id="Navigate-to-pose-路径无效时重新规划"><a href="#Navigate-to-pose-路径无效时重新规划" class="headerlink" title="Navigate to pose(路径无效时重新规划)"></a>Navigate to pose(路径无效时重新规划)</h2><p>从起始点导航到自由空间中的单点目标。它既包含在特定子上下文中使用自定义恢复，也包含针对系统级故障的全局恢复子树。它还为用户提供了在返回失败状态之前多次重试任务的机会。</p>
<h2 id="Follow-Dynamic-Point"><a href="#Follow-Dynamic-Point" class="headerlink" title="Follow Dynamic Point"></a>Follow Dynamic Point</h2><p>此行为树从一个起点实现导航行为，试图随时间跟随一个动态点。这个“动态点”可以是一个人，另一个机器人，一个虚拟的胡萝卜，任何东西。唯一的要求是想要遵循的姿态被发布到 <code>GoalUpdater</code> BT节点中概述的主题。</p>
<h2 id="Odometry-Calibration"><a href="#Odometry-Calibration" class="headerlink" title="Odometry Calibration"></a>Odometry Calibration</h2><p>该行为树使用 <code>DriveOnHeading</code> 和 <code>Spin</code> 行为驱动机器人在 CCW 正方形中运行三次。机器人将以 0.2m&#x2F;s 的速度遍行广场的每边 2 米，然后进行 90 度转弯。这是测量里程计精度的原始实验，可以使用和重复调整与里程计相关的参数以提高质量。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">main_tree_to_execute</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Repeat</span> <span class="attr">num_cycles</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Sequence</span> <span class="attr">name</span>=<span class="string">&quot;Drive in a square&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DriveOnHeading</span> <span class="attr">dist_to_travel</span>=<span class="string">&quot;2.0&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">time_allowance</span>=<span class="string">&quot;12&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Spin</span> <span class="attr">spin_dist</span>=<span class="string">&quot;1.570796&quot;</span> <span class="attr">is_recovery</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DriveOnHeading</span> <span class="attr">dist_to_travel</span>=<span class="string">&quot;2.0&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">time_allowance</span>=<span class="string">&quot;12&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Spin</span> <span class="attr">spin_dist</span>=<span class="string">&quot;1.570796&quot;</span> <span class="attr">is_recovery</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DriveOnHeading</span> <span class="attr">dist_to_travel</span>=<span class="string">&quot;2.0&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">time_allowance</span>=<span class="string">&quot;12&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Spin</span> <span class="attr">spin_dist</span>=<span class="string">&quot;1.570796&quot;</span> <span class="attr">is_recovery</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DriveOnHeading</span> <span class="attr">dist_to_travel</span>=<span class="string">&quot;2.0&quot;</span> <span class="attr">speed</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">time_allowance</span>=<span class="string">&quot;12&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Spin</span> <span class="attr">spin_dist</span>=<span class="string">&quot;1.570796&quot;</span> <span class="attr">is_recovery</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Repeat</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>行为树</category>
      </categories>
      <tags>
        <tag>行为树</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
  <entry>
    <title>BT 示例代码</title>
    <url>/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> ACTION_CLIENT_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ACTION_CLIENT_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> bt_tutorials</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">ActionT</span>&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ActionClient</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> BaseClass  = RosActionNode&lt;ActionT&gt;;</span><br><span class="line">    <span class="keyword">using</span> ActionClientType = actionlib::SimpleActionClient&lt;ActionT&gt;;</span><br><span class="line">    <span class="keyword">using</span> ActionType = ActionT;</span><br><span class="line">    <span class="keyword">using</span> GoalType   = <span class="keyword">typename</span> ActionT::_action_goal_type::_goal_type;</span><br><span class="line">    <span class="keyword">using</span> ResultType = <span class="keyword">typename</span> ActionT::_action_result_type::_result_type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">ActionClient</span>(<span class="type">const</span> std::string&amp; name)</span><br><span class="line">        : <span class="built_in">action_client_</span>(name, <span class="literal">true</span>), <span class="built_in">action_name_</span>(name) <span class="comment">// 实例化 action client</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">ActionClient</span>()</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">sendGoal</span><span class="params">(cost GoalType&amp; goal)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// if server not running, fail after 20ms</span></span><br><span class="line">        <span class="keyword">if</span> (!action_client_.<span class="built_in">waitForServer</span>(<span class="built_in">rosDuration</span>(<span class="number">0.02</span>))) &#123;</span><br><span class="line">            <span class="built_in">ROS_ERROR</span>(<span class="string">&quot;%s not running.&quot;</span>, action_name_.<span class="built_in">c_str</span>());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        action_client_.<span class="built_in">sendGoal</span>(goal);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">actionlib::SimpleClientGoalState <span class="title">getState</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> action_client_.<span class="built_in">getState</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">ResultType <span class="title">getResult</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="comment">// waitForResult();</span></span><br><span class="line">        <span class="keyword">return</span> action_client_.<span class="built_in">getResult</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">cancelGoal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        action_client_.<span class="built_in">cancelAllGoal</span>(); <span class="comment">// or cancelGoal()</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    ActionClientType action_client_;</span><br><span class="line">    std::string action_name_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>



<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> ASYNC_ACTION_INTERFACE_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  ASYNC_ACTION_INTERFACE_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> ACTION_INTERFACE_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ACTION_INTERFACE_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;behaviortree_cpp/action_node.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;behaviortree_cpp/bt_factory.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;actionlib/client/simple_action_client.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> BT;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> narwal_behavior_tree</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">ActionT</span>&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AsyncActionInterfaceNode</span>: <span class="keyword">public</span> AsyncActionNode</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">using</span> BaseClass  = RosActionNode&lt;ActionT&gt;;</span><br><span class="line">    <span class="keyword">using</span> ActionClientType = actionlib::SimpleActionClient&lt;ActionT&gt;;</span><br><span class="line">    <span class="keyword">using</span> ActionType = ActionT;</span><br><span class="line">    <span class="keyword">using</span> GoalType   = <span class="keyword">typename</span> ActionT::_action_goal_type::_goal_type;</span><br><span class="line">    <span class="keyword">using</span> ResultType = <span class="keyword">typename</span> ActionT::_action_result_type::_result_type;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">AsyncActionInterface</span>(ros::NodeHandle&amp; nh, <span class="type">const</span> std::string&amp; name, <span class="type">const</span> BT::NodeConfiguration&amp; config)</span><br><span class="line">        : <span class="built_in">AsyncActionNode</span>(name, config), <span class="built_in">node_</span>(nh)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">const</span> std::string server_name = <span class="built_in">getInput</span>&lt;std::string&gt;(<span class="string">&quot;server_name&quot;</span>).<span class="built_in">value</span>();</span><br><span class="line">        action_client_ = std::<span class="built_in">make_shared</span>&lt;ActionClientType&gt;(node_, server_name, <span class="literal">true</span> ); <span class="comment">// 实例化 action client</span></span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">AsyncActionInterface</span>() &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">static</span> BT::PortsList <span class="title">providedPorts</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123; BT::<span class="built_in">InputPort</span>&lt;Pose2D&gt;(<span class="string">&quot;goal&quot;</span>) &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">// 异步行为，会创建线程执行，不会阻塞主流程，执行过程中该行为返回 RUNNING 状态</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BT::NodeStatus <span class="title">tick</span><span class="params">()</span> <span class="keyword">override</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!action_client_-&gt;<span class="built_in">waitForServer</span>(ros::<span class="built_in">Duration</span>(<span class="number">2.0</span>))) &#123;</span><br><span class="line">            <span class="built_in">ROS_ERROR</span>(<span class="string">&quot;Server not running.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> BT::NodeStatus::FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Pose2D goal;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">getInput</span>&lt;Pose2D&gt;(<span class="string">&quot;goal&quot;</span>, goal)) &#123;</span><br><span class="line">            <span class="comment">// if I can&#x27;t get this, there is something wrong with your BT.</span></span><br><span class="line">            <span class="comment">// For this reason throw an exception instead of returning FAILURE</span></span><br><span class="line">            <span class="keyword">throw</span> BT::<span class="built_in">RuntimeError</span>(<span class="string">&quot;missing required input [goal]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        aborted_ = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Send goal...&quot;</span>);</span><br><span class="line">        <span class="comment">// GoalType msg;</span></span><br><span class="line">        action_client_-&gt;<span class="built_in">sendGoal</span>(msg);</span><br><span class="line">        <span class="keyword">while</span> (!aborted_ &amp;&amp; !action_client_.<span class="built_in">waitForResult</span>(ros::<span class="built_in">Duration</span>(<span class="number">0.02</span>))) &#123;</span><br><span class="line">            <span class="comment">// 等待结果</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (aborted_) &#123;</span><br><span class="line">            <span class="built_in">ROS_ERROR</span>(<span class="string">&quot;Goal aborted&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> BT::NodeStatus::FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (action_client_-&gt;<span class="built_in">getState</span>() != actionlib::SimpleClientGoalState::SUCCEEDED) &#123;</span><br><span class="line">            <span class="built_in">ROS_ERROR</span>(<span class="string">&quot;Action Server failed.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> BT::NodeStatus::FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Goal reached.&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> BT::NodeStatus::SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">halt</span><span class="params">()</span> <span class="keyword">override</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        aborted_ = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    std::shared_ptr&lt;ActionClientType&gt; action_client_;</span><br><span class="line">    ros::NodeHandle node_;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> aborted_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>



<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MOVE_BASE_CLIENT_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MOVE_BASE_CLIENT_H_</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Pose2D</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> x, y, quaternion_z, quaternion_w;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> BT</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">template</span> &lt;&gt; <span class="function"><span class="keyword">inline</span></span></span><br><span class="line"><span class="function">Pose2D <span class="title">convertFromString</span><span class="params">(StringView key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// three real numbers separated by semicolons</span></span><br><span class="line">    <span class="keyword">auto</span> parts = BT::<span class="built_in">splitString</span>(key, <span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (parts.<span class="built_in">size</span>() != <span class="number">4</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> BT::<span class="built_in">RuntimeError</span>(<span class="string">&quot;invalid input)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Pose2D output;</span><br><span class="line">        output.x     = <span class="built_in">convertFromString</span>&lt;<span class="type">double</span>&gt;(parts[<span class="number">0</span>]);</span><br><span class="line">        output.y     = <span class="built_in">convertFromString</span>&lt;<span class="type">double</span>&gt;(parts[<span class="number">1</span>]);</span><br><span class="line">        output.quaternion_z = <span class="built_in">convertFromString</span>&lt;<span class="type">double</span>&gt;(parts[<span class="number">2</span>]);</span><br><span class="line">        output.quaternion_w = <span class="built_in">convertFromString</span>&lt;<span class="type">double</span>&gt;(parts[<span class="number">3</span>]);</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">// end namespace BT</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> bt_tutorials</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MoveBaseClient</span>: <span class="keyword">public</span> ActionClient, BT::AsyncActionNode</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/* data */</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MoveBaseClient</span>(<span class="type">const</span> std::string&amp; action_name, <span class="type">const</span> std::string&amp; node_name,</span><br><span class="line">                    <span class="type">const</span> BT::NodeConfiguration&amp; config)</span><br><span class="line">        : <span class="built_in">ActionClient</span>(<span class="string">&quot;move_base&quot;</span>), <span class="built_in">AsyncActionNode</span>(node_name, config)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">MoveBaseClient</span>()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">static</span> BT::PortsList <span class="title">providedPorts</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123; BT::<span class="built_in">InputPort</span>&lt;Pose2D&gt;(<span class="string">&quot;goal&quot;</span>) &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BT::NodeStatus <span class="title">tick</span><span class="params">()</span> <span class="keyword">override</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Pose2D goal;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">getInput</span>&lt;Pose2D&gt;(<span class="string">&quot;goal&quot;</span>, goal)) &#123;</span><br><span class="line">            <span class="comment">// 读取不到目标点参数，则抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> BT::<span class="built_in">RuntimeError</span>(<span class="string">&quot;missing required input [goal]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        aborted_ = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">sendGoal</span>(goal)) &#123;</span><br><span class="line">            <span class="built_in">ROS_ERROR</span>(<span class="string">&quot;Maybe action server not running.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> BT::NodeStatus::FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(!aborted_ &amp;&amp; !<span class="built_in">waitForResult</span>(ros::<span class="built_in">Duration</span>(<span class="number">0.02</span>))) &#123; <span class="comment">// timeout: 20ms</span></span><br><span class="line"></span><br><span class="line">        &#125;       </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (aborted_) &#123;</span><br><span class="line">            <span class="built_in">ROS_ERROR</span>(<span class="string">&quot;MoveBase aborted&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> BT::NodeStatus::FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">getState</span>() != actionlib::SimpleClientGoalState::SUCCEEDED) &#123;</span><br><span class="line">            <span class="built_in">ROS_ERROR</span>(<span class="string">&quot;MoveBase failed&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> BT::NodeStatus::FAILURE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Goal reached&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> BT::NodeStatus::SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">halt</span><span class="params">()</span> <span class="keyword">override</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        aborted_ = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">bool</span> aborted_;</span><br><span class="line">&#125;;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="comment">// namespace bt_tutorials</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>



<p>这些方法都是一个 Action 类对应一个行为。若需要在一个类中定义多个异步行为，例如：机械臂控制类中定义移动到指定位置和移动到预定义位姿两类行为，而两类行为通过同一个 action client 进行通信时，可使用依赖注入方式。</p>
]]></content>
      <categories>
        <category>行为树</category>
      </categories>
      <tags>
        <tag>行为树</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2024/09/21/Robot/Map/cartographer/BBS/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Real-Time Correlative Scan Matching</title>
    <url>/2024/09/21/Robot/Map/cartographer/Real-Time%20Correlative%20Scan%20Matching/</url>
    <content><![CDATA[<p>介绍了三种几率概率网格的 2D scan matching 算法：Brute Force、Computing 2D Slices、Multi-Level Resolution。</p>
<p><a href="https://www.cnblogs.com/mafuqiang/p/10885616.html">cartographer 3D scan matching 理解</a></p>
]]></content>
  </entry>
  <entry>
    <title>SPA</title>
    <url>/2024/09/21/Robot/Map/cartographer/SPA/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>cartographer (一)</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%20(%E4%B8%80)/</url>
    <content><![CDATA[<p>cartographer加了后端做闭环，大范围的回环也可以实现，但是对开阔的场景并不适用。</p>
<p>单纯看二维slam的话，没有里程计数据，没有imu数据，只有单独的scan matching.</p>
<p><strong>cartographer内部并未直接使用 sensor_msgs&#x2F;Imu 中的角度数据(即:四元数)，而是使用角加速度和线加速度</strong>。  </p>
<h2 id="bag包检测"><a href="#bag包检测" class="headerlink" title="bag包检测"></a>bag包检测</h2><p>Cartographer ROS 中提供了 cartographer_rosbag_validate 来自动分析bag 包中的数据。 该工具可发现 bag 包中常见的错误，例如：如果检测到 sensor_msgs&#x2F;Imu 主题，则将确保 Imu 中包含重力矢量(gravity vector)，因为 cartographer 使用重力范数(gravity norm)来确定地面的方向。</p>
<p>该工具还可以提供如何提高数据质量的提示。例如，对于 Velodyne 激光雷达，该工具会建议传感器发出的UDP包使用一个 sensor_msgs&#x2F;PointCloud2 消息，而不是每转一圈发布一个消息。 凭借这种消息粒度，Cartographer可以解除由机器人运动引起的点云变形，从而实现更好的重建。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rosrun cartographer_ros cartographer_rosbag_validate -bag_filename your_bag.bag</span><br></pre></td></tr></table></figure>

<p><img src="/../images/cartographer_rosbag_validate.png" alt="cartographer_rosbag_validate">  </p>
<p>使用bag包重建地图时，既可以使用 bag 包中的tf，也可以在 .urdf 中定义机器人模型。 但是，如果机器人与 IMU link 或 Lidar link 之间存在偏移，则可能导致不一致的重建效果，cartographer可以纠正小的位姿错误，但不能纠正所有。   </p>
<h2 id="cartographer-算法架构"><a href="#cartographer-算法架构" class="headerlink" title="cartographer 算法架构"></a>cartographer 算法架构</h2><p><img src="/../images/cartographer_system.png" alt="cartographer_system"><br>cartographer 可分为两个独立但相关的子系统：<code>Local SLAM</code> 和 <code>Global SLAM</code>。  </p>
<p>**Local SLAM 有时也称为 frontend(前端) 或 本地轨迹生成器(local trajectory builder)**。 其工作是构建一系列 submap。 每个 submap 都是本地一致的，但是 local SLAM 随着时间的推移而漂移。</p>
<p>**Global SLAM 也称为 后端(backend)**。 运行在后台线程中，主要工作是找到 <code>loop closure constraints</code>。 通过 scans 与 submap 匹配来实现。 它还结合了其他传感器数据，以获得更高级别的视图，并确定最一致的全局解决方案。 在3D中，它还试图找到重力方向。  </p>
<p>总的来说，Local SLAM 主要是构建更好的 submaps; Global SLAM 主要是将这些 submaps 更好的结合起来。  </p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>测距传感器(例如: Lidars)提供多个方向的深度信息。但是并不是所有信息都是有用的。 例如：传感器表面有灰尘或者扫描到机器人自身，类似这些测量值可以视为 SLAM 的噪声。 cartographer 首先使用<strong>带通滤波器(bandpass filter)</strong>, 过滤(TRAJECTORY_BUILDER_nD.<strong>min_range</strong>,TRAJECTORY_BUILDER_nD.<strong>max_range</strong>) 范围外的数据。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_nD.min_range</span><br><span class="line"># 对于大于max_range的激光点，将用TRAJECTORY_BUILDER_2D.missing_data_ray_length 来替代它的距离，</span><br><span class="line"># 这样的做法是为了不让建图时因点探测过远出现近距离数据丢失的问题</span><br><span class="line">TRAJECTORY_BUILDER_nD.max_range</span><br></pre></td></tr></table></figure>

<p>距离是在一段时间内测量的(激光扫描一圈需要一定的时间)，而机器人实际上正在移动。 但是，距离是由大型 ROS 消息中的“批量”传感器提供的。 <strong>cartographer 可以独立考虑每个消息的时间戳，以考虑机器人运动引起的变形</strong>。 cartographer 获取到的测量数据的频率越高，就越好地将测量结果组合成一个可以立即捕获的单个相干扫描。 因此，强烈建议尽可能多的提供 scan 数据（ROS消息）。  </p>
<p><strong>使用 laserscan 获取数据时，近处的物体被扫描到并提供更多的点，而远处的物体，则通常不能被扫描到或者被扫描到但是提供很少的点</strong>。因此，为了减少点处理的计算权重，通常需要对点云进行降采样。 然而，简单的随机抽样将从已经具有低密度的测量区域移除点，而高密度区域仍将具有比所需的更多的点。 为了解决这个密度问题，可以使用一个体素过滤器(<strong>voxel filter</strong>)，将原始点降采样为一个恒定大小的立方体，并且只保留每个立方体的质心。<br>voxel 越小，数据越密集，需要的计算量也就越大；voxel 越大，则可能会导致数据丢失，但计算会越快。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_nD.voxel_filter_size # 默认为 0.025</span><br></pre></td></tr></table></figure>

<p>cartographer 不仅提供了固定大小的 voxel filter，也提供了 <strong>adaptive(自适应) voxel filter</strong>。 该过滤器尝试确定最佳 voxel 大小（在 TRAJECTORY_BUILDER_nD.*adaptive_voxel_filter.max_length 下）以获取期望的点数。 在3D中，两个自适应 voxel filter 用于生成高分辨率和低分辨率点云。 相关参数：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_nD.*adaptive_voxel_filter.max_length # 采样最大间隔</span><br><span class="line">TRAJECTORY_BUILDER_nD.*adaptive_voxel_filter.min_num_points # 采样后最小点云数量</span><br></pre></td></tr></table></figure>

<h2 id="Local-SLAM"><a href="#Local-SLAM" class="headerlink" title="Local SLAM"></a>Local SLAM</h2><p>一旦scan数据经过合并及过滤之后，就可以用于 local SLAM 算法。 <strong>Local SLAM 使用来自 pose extrapolator 的初始猜测，通过 scan matching 将新的 scan 数据插入当前的 submap</strong>。 pose extrapolator 的背后思想是：使用除测距传感器之外的其它传感器的数据来预测下一次扫描应该插入 submap 的位置。  </p>
<h2 id="Scan-Matching"><a href="#Scan-Matching" class="headerlink" title="Scan Matching"></a>Scan Matching</h2><p>有两种 scan matching 策略：  </p>
<h4 id="CeresScanMatcher"><a href="#CeresScanMatcher" class="headerlink" title="CeresScanMatcher"></a>CeresScanMatcher</h4><p>将初始猜测作为先验，并找到 scan 与 submap 匹配的最佳位置。它通过插入子图和 sub-pixel 对齐扫描来实现。速度很快，但<strong>无法修复明显大于 submap 分辨率的错误</strong>。如果传感器设置和时序合理，那么仅使用 CeresScanMatcher 通常是最佳选择。    </p>
<p>CeresScanMatcher 的名字来源于 google 的 Ceres Solver 库，该库用于解决非线性最小二乘(non-linear least squares)问题。 scan match 被建模为非线性最小二乘问题，其中两个扫描数据 scan 之间的运动(即:变换矩阵)是待确定的参数。Ceres使用下降算法(descent algorithm)针对给定的迭代次数优化运动。 Ceres可以根据需要调整收敛速度。 例如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_nD.ceres_scan_matcher.ceres_solver_options.use_nonmonotonic_steps # 默认 false</span><br><span class="line">TRAJECTORY_BUILDER_nD.ceres_scan_matcher.ceres_solver_options.max_num_iterations # 默认 20</span><br><span class="line">TRAJECTORY_BUILDER_nD.ceres_scan_matcher.ceres_solver_options.num_threads # 默认 1</span><br></pre></td></tr></table></figure>

<p><code>CeresScanMatcher</code> 可以为每个输入配置为为每个输入源配置一个权重。 权重是衡量对数据的信任度，可以将其视为静态协方差。 权重参数的单位是无量纲的数量，不能在彼此之间进行比较。 数据源的权重越大，cartographer 在进行 scan match 时就会越强调这个数据源。 数据来源包括占用空间（扫描点）以及 来自 pose extrapolator（RealTimeCorrelativeScanMatcher）的平移和旋转 等。 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_nD.ceres_scan_matcher.translation_weight # 默认 10.</span><br><span class="line">TRAJECTORY_BUILDER_nD.ceres_scan_matcher.rotation_weight # 默认 40.</span><br><span class="line">TRAJECTORY_BUILDER_nD.ceres_scan_matcher.occupied_space_weight # 默认1.</span><br><span class="line">TRAJECTORY_BUILDER_3D.ceres_scan_matcher.occupied_space_weight_0</span><br><span class="line">TRAJECTORY_BUILDER_3D.ceres_scan_matcher.occupied_space_weight_1</span><br></pre></td></tr></table></figure>

<h4 id="RealTimeCorrelativeScanMatcher"><a href="#RealTimeCorrelativeScanMatcher" class="headerlink" title="RealTimeCorrelativeScanMatcher"></a>RealTimeCorrelativeScanMatcher</h4><p><strong>如果没有其它传感器，或者不信任其它传感器的数据时</strong>，则可以使用 RealTimeCorrelativeScanMatcher。 它使用的方法类似于在循环闭包中将扫描与 submaps 匹配的方式(即与循环闭包中的每个 submap 进行匹配)，不同的是它与当前 submap 匹配。 <strong>然后将最佳匹配用作 <code>CeresScanMatcher</code> 的先验</strong>。 这种 <code>scan matcher</code> 非常耗费资源，并且基本上会覆盖来自除了测距传感器的其它传感器的数据，但它在特征丰富的环境中非常强大。<br>其工作原理是：在指定的<strong>搜索窗口</strong>中搜索类似的 scans ，<strong>搜索窗口由最大距离半径和最大角度半径定义</strong>。 当与该窗口中找到的 scans 进行 scan matching 时，可以为平移和旋转组件选择不同的权重。 例如，如果知道机器人不会旋转很多，则可以改变对应的权重值。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_nD.use_online_correlative_scan_matching # 默认 false</span><br><span class="line">TRAJECTORY_BUILDER_nD.real_time_correlative_scan_matcher.linear_search_window # 默认 0.1</span><br><span class="line">TRAJECTORY_BUILDER_nD.real_time_correlative_scan_matcher.angular_search_window # 默认 math.rad(20.)</span><br><span class="line">TRAJECTORY_BUILDER_nD.real_time_correlative_scan_matcher.translation_delta_cost_weight # 默认 1e-1</span><br><span class="line">TRAJECTORY_BUILDER_nD.real_time_correlative_scan_matcher.rotation_delta_cost_weight # 默认 1e-1</span><br></pre></td></tr></table></figure>

<h3 id="motion-filter"><a href="#motion-filter" class="headerlink" title="motion filter"></a>motion filter</h3><p>为避免每个子图插入太多 scans，一旦 scan matcher 找到两次扫描之间的运动(即：匹配成功)，就会通过 motion filter 进行过滤。 如果得到的运动不够明显，则丢弃该 scan 。 <strong>仅当扫描的运动高于特定距离、角度或时间的阈值时，才会将扫描插入到当前 submap 中</strong>。对应参数为：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_nD.motion_filter.max_time_seconds # 默认 5.0s</span><br><span class="line">TRAJECTORY_BUILDER_nD.motion_filter.max_distance_meters # 默认 0.2m</span><br><span class="line">TRAJECTORY_BUILDER_nD.motion_filter.max_angle_radians # 默认 math.rad(1.0)</span><br></pre></td></tr></table></figure>

<h3 id="Submap"><a href="#Submap" class="headerlink" title="Submap"></a>Submap</h3><p>Local SLAM 接收到指定数量(TRAJECTORY_BUILDER_nD.submaps.num_range_data)的测距数据之后，才认为一个 submap 构建完成。随着时间的推移，Local SLAM 会出现漂移，Global SLAM 就是用于解决该漂移问题。<strong>一方面，submaps 必须足够小，以使其内部漂移低于分辨率，确保局部基本正确；另一方面，submaps 又应该足够大，以使回环能够正常工作</strong>。<br>submap 可以将其 scan 数据存储在几种不同的数据结构中：使用最多的是 <code>probability grids</code>。但是在 2D 建图中，还可以选用 <code>TSDF(Truncated Signed Distance Fields)</code>。对应参数为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_2D.submaps.grid_options_2d.grid_type</span><br></pre></td></tr></table></figure>

<p><code>Probability grids</code> 将空间划分为 2D 或 3D 网格，每个单元格大小固定，且包含占用概率。根据 <code>hits</code> 和 <code>misses</code>（传感器与测量点之间的自由空间）更新占用率(odds - 也即赔率)。 在占用率计算中，<code>hits</code> 和 <code>misses</code> 可以具有不同的权重。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_2D.submaps.range_data_inserter.probability_grid_range_data_inserter.hit_probability</span><br><span class="line">TRAJECTORY_BUILDER_2D.submaps.range_data_inserter.probability_grid_range_data_inserter.miss_probability</span><br><span class="line">TRAJECTORY_BUILDER_3D.submaps.range_data_inserter.hit_probability</span><br><span class="line">TRAJECTORY_BUILDER_3D.submaps.range_data_inserter.miss_probability</span><br></pre></td></tr></table></figure>

<p>2D 地图中，每个 submap 只需存储一个 probability grid。而在 3D 地图中，出于扫描匹配性能的原因，使用了两个混合概率网格(hybrid probability grids):   </p>
<ul>
<li>一个针对较远测量的低分辨率的 hybrid grid</li>
<li>一个针对较近测量的高分辨率的 hybrid grid</li>
</ul>
<p>scan match 首先将较远测量点云与低分辨率的 hybrid grid 对齐，然后通过较近测量点云与高分辨率 hybrid grid 对齐来细化 pose。</p>
<h2 id="Global-SLAM"><a href="#Global-SLAM" class="headerlink" title="Global SLAM"></a>Global SLAM</h2><p>Local SLAM 构建连续的 submaps 的同时，全局优化（通常称为 <code>the optimization problem</code> 或 <code>sparse pose adjustment-稀疏位姿调整</code>）任务在后台运行。 它的作用是重新排列相邻的 submaps，以形成一个连贯的 global map。  </p>
<p><strong>一旦插入了一定数量的轨迹节点，就会分批运行优化</strong>。 可根据运行优化的频率来调整这个批次的数量。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POSE_GRAPH.optimize_every_n_nodes</span><br></pre></td></tr></table></figure>

<p>将该参数设置为 0 就意味着关闭 Global SLAM。 (在调试 cartographer 时，通常会先关闭 Global SLAM，先集中研究 Local SLAM)  </p>
<p>Global SLAM 采用的是<strong>图优化</strong>的方式。 本质上是一种 <code>pose graph optimization</code>，它<strong>通过在轨迹节点和 submaps 之间构建约束，然后优化结果约束图来工作</strong>。 <code>Sparse pose adjustment</code> 的结果称为：<code>pose graph</code>。 约束也可在 RViz 中显示，因此，调试 global SLAM 也很方便。还可以切换 <code>POSE_GRAPH.constraint_builder.log_matches</code> 以获取格式化为直方图的约束生成器的常规报告。  </p>
<h3 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h3><p>约束分为：<strong>非全局约束</strong>和<strong>全局约束</strong>。  </p>
<ul>
<li><p>1）非全局约束<br>也即：<code>inter submaps constraints</code>(submaps间的约束)。 在轨迹上的相邻节点之间自动构建。直观地说，那些“非全局性的绳索”使轨迹的局部结构保持连贯。  </p>
</li>
<li><p>2）全局约束<br>通常也称为：<code>loop closure constraints</code> 或者 <code>intra submaps constraints</code>。 在新的 submap 和空间中被认为”足够近”的 previous nodes 以及 strong fit(良好匹配) 之间定期搜索全局约束。直观地说，那些“全局绳索”在结构中引入了结，并牢牢地使两股更接近。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POSE_GRAPH.constraint_builder.max_constraint_distance</span><br><span class="line">POSE_GRAPH.fast_correlative_scan_matcher.linear_search_window</span><br><span class="line">POSE_GRAPH.fast_correlative_scan_matcher_3d.linear_xy_search_window</span><br><span class="line">POSE_GRAPH.fast_correlative_scan_matcher_3d.linear_z_search_window</span><br><span class="line">POSE_GRAPH.fast_correlative_scan_matcher*.angular_search_window</span><br></pre></td></tr></table></figure></li>
</ul>
<p>为了限制约束的数量(及计算量)。cartographer 对这些节点进行了下采样.通过 <code>POSE_GRAPH.constraint_builder.sampling_ratio</code> 参数控制。采样结果过少的话会导致可能错过约束而使得闭环检测失效；过多的话会导致全局 SLAM 的运行效率过低而达不到实时的闭环检测.  </p>
<h3 id="FastCorrelativeScanMatcher"><a href="#FastCorrelativeScanMatcher" class="headerlink" title="FastCorrelativeScanMatcher"></a>FastCorrelativeScanMatcher</h3><p><strong>用于构建 node 和 submap 之间的约束</strong>。该扫描匹配器专为 Cartographer 设计，可实现实时 loop closures 扫描匹配。依靠 <code>Branch and bound</code> 机制,使得其可以在不同分辨率的栅格上进行工作,并且可以有效的消除误匹配.这个机制适用于深度可控的搜索树。相关参数有：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POSE_GRAPH.constraint_builder.fast_correlative_scan_matcher.branch_and_bound_depth</span><br><span class="line">POSE_GRAPH.constraint_builder.fast_correlative_scan_matcher_3d.branch_and_bound_depth</span><br><span class="line">POSE_GRAPH.constraint_builder.fast_correlative_scan_matcher_3d.full_resolution_depth</span><br></pre></td></tr></table></figure>

<p>一旦 FastCorrelativeScanMatcher 的分数大于设定的<code>POSE_GRAPH.constraint_builder.min_score</code>，就会被送入 <code>Ceres Scan Matcher</code> 以优化位姿。相关参数：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POSE_GRAPH.constraint_builder.min_score</span><br><span class="line">POSE_GRAPH.constraint_builder.ceres_scan_matcher_3d</span><br><span class="line">POSE_GRAPH.constraint_builder.ceres_scan_matcher</span><br></pre></td></tr></table></figure>

<p>当 Cartographer 运行优化问题时，Ceres 用于根据多个残差(residual)重新排列 submaps。 残差使用加权成本函数计算。 全局优化具有考虑大量数据源的成本函数：全局（loop closure）约束，非全局（matcher）约束，IMU加速和旋转量，局部SLAM粗略姿态估计，测距源或 fixed frame（如GPS系统）。 可以按照 Local SLAM 部分中的说明配置权重和Ceres选项。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POSE_GRAPH.constraint_builder.loop_closure_translation_weight</span><br><span class="line">POSE_GRAPH.constraint_builder.loop_closure_rotation_weight</span><br><span class="line">POSE_GRAPH.matcher_translation_weight</span><br><span class="line">POSE_GRAPH.matcher_rotation_weight</span><br><span class="line">POSE_GRAPH.optimization_problem.*_weight</span><br><span class="line">POSE_GRAPH.optimization_problem.ceres_solver_options</span><br></pre></td></tr></table></figure>

<p>通过 <code>POSE_GRAPH.max_num_final_iterations</code> 参数可获得残差的信息</p>
<h3 id="全局优化时对-IMU-数据的处理"><a href="#全局优化时对-IMU-数据的处理" class="headerlink" title="全局优化时对 IMU 数据的处理"></a>全局优化时对 IMU 数据的处理</h3><p>Global optimization 对 imu 的 pose 信息提供了更多的灵活性.默认的 Ceres 会优化 IMU 和 tracking frame 之间的 <code>extrinsic calibration</code>。如果你不信任你的 imu 的数据的话, Ceres’ global optimization 的结果可以被 logged 来用来优化它俩之间的 <code>extrinsic calibration</code>(外部校准)。 如果不信任 IMU 位姿，可以记录 Ceres 全局优化的结果并用于改进 <code>extrinsic calibration</code>。 如果 Ceres 没有正确优化你的 IMU 姿态并且你完全相信你的<code>extrinsic calibration</code>，则可以使此位姿保持不变。   </p>
<p>在 residuals 中，异常值的影响被 <code>Huber loss function</code> 所处理, huber loss function 受参数 huber_scale 所影响。<strong>huber_scale 越大,(潜在)异常值的影响就越大</strong>。<br><code>POSE_GRAPH.optimization_problem.huber_scale</code></p>
<p>一旦轨迹完成，cartographer 经常会运行一个新的全局优化，迭代次数通常比之前的要多得多。这样做的原因是：尽可能的去优化最终的建图效果，并且，如果没有实时性的要求的话，尽量设置一个大的迭代次数。<code>POSE_GRAPH.max_num_final_iterations</code>  </p>
<h2 id="cartographer-调优"><a href="#cartographer-调优" class="headerlink" title="cartographer 调优"></a><a href="https://google-cartographer-ros.readthedocs.io/en/latest/tuning.html">cartographer 调优</a></h2><h2 id="cartographer利用-pbstream-文件离线生成的地图"><a href="#cartographer利用-pbstream-文件离线生成的地图" class="headerlink" title="cartographer利用 pbstream 文件离线生成的地图"></a>cartographer利用 pbstream 文件离线生成的地图</h2><p>随着传感器数据的传入，诸如 cartographer 之类的 SLAM 算法的状态发展为保存机器人轨迹和周围环境的当前最佳估计。 因此，cartographer 可以提供的最精确的定位和mapping是在算法完成时获得的(cartographer在结束时，例如通过ctrl+c停止时，仍会继续执行全局优化直到结束)。 cartographer 可以将其内部状态序列化并存储在 .pbstream 文件中，该文件本质上是一个压缩的 protobuf 文件，包含 cartographer 内部使用的数据结构的快照。<br>为了实时有效的运行，cartographer 会丢弃大部分传感器数据，只使用其中的一小部分，内部使用的 mapping (并保存在 pbstream 文件中)非常粗糙。 然而，当算法完成并生成了最佳轨迹时，可以将其与完整的传感器数据后验的重新组合以创建高分辨率地图。  </p>
<p>cartographer 使用 cartographer_assets_writer 来进行这种重组。 参考： <a href="https://github.com/WH-0501/Notes/blob/master/Robot/Map/cartographer/cartographer%20-%20assets%20writer.md">cartographer - assets writer</a></p>
<h2 id="主题及服务"><a href="#主题及服务" class="headerlink" title="主题及服务"></a>主题及服务</h2><h3 id="订阅主题"><a href="#订阅主题" class="headerlink" title="订阅主题"></a>订阅主题</h3><p>cartographer必须提供如下数据源之一：  </p>
<ul>
<li>scan (sensor_msgs&#x2F;LaserScan)</li>
<li>echoes (sensor_msgs&#x2F;MultiEchoLaserScan)</li>
<li>points2 (sensor_msgs&#x2F;PointCloud2)</li>
</ul>
<p>可选主题数据有：  </p>
<ul>
<li>imu (sensor_msgs&#x2F;Imu)</li>
<li>odom (nav_msgs&#x2F;Odometry)</li>
<li>fix</li>
<li>landmark</li>
</ul>
<h3 id="发布主题"><a href="#发布主题" class="headerlink" title="发布主题"></a>发布主题</h3><ul>
<li><p>scan_matched_points2 (sensor_msgs&#x2F;PointCloud2)</p>
</li>
<li><p>submap_list (cartographer_ros_msgs&#x2F;SubmapList)</p>
</li>
<li><p>trajectory_node_list</p>
</li>
<li><p>landmark_poses_list</p>
</li>
<li><p>constraint_list</p>
</li>
</ul>
<h3 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h3><ul>
<li>submap_query (cartographer_ros_msgs&#x2F;SubmapQuery)<ul>
<li>获取请求的 submap</li>
</ul>
</li>
<li>trajectory_query<ul>
<li>获取当前轨迹每一帧的位姿</li>
</ul>
</li>
<li>start_trajectory (cartographer_ros_msgs&#x2F;StartTrajectory)<ul>
<li>通过将其传感器主题和轨迹选项指定为二进制编码 proto 来启动另一个轨迹。 返回指定的轨迹ID。 start_trajectory可执行文件提供了一个方便的 wrapper 来使用此服务。</li>
</ul>
</li>
<li><strong>finish_trajectory</strong> (cartographer_ros_msgs&#x2F;FinishTrajectory)<ul>
<li>运行最终的优化，得到最佳轨迹</li>
</ul>
</li>
<li>write_state (cartographer_ros_msgs&#x2F;WriteState)<ul>
<li>将当前内部状态写入文件中。该文件通常位于 ~&#x2F;.ros 目录中。</li>
</ul>
</li>
<li>get_trajectory_states (cartographer_ros_msgs&#x2F;GetTrajectoryStates)<ul>
<li>获取轨迹的ID和状态。</li>
</ul>
</li>
<li>read_metrics (cartographer_ros_msgs&#x2F;ReadMetrics)<ul>
<li>返回 cartographer 中所有内部指标的最新值。 运行时度量标准的集合是可选的，必须使用节点中的**–collect_metrics**命令行标志激活。</li>
</ul>
</li>
</ul>
<h2 id="sensor-type"><a href="#sensor-type" class="headerlink" title="sensor type"></a>sensor type</h2><p><img src="/../images/sensor_type.png" alt="sensor_type"></p>
<h2 id="cartographer-模块说明"><a href="#cartographer-模块说明" class="headerlink" title="cartographer 模块说明"></a>cartographer 模块说明</h2><h3 id="cartographer-ros"><a href="#cartographer-ros" class="headerlink" title="cartographer_ros"></a>cartographer_ros</h3><p>sensor_bridge：将 ROS 消息转换为 cartographer 消息。  </p>
<p>MapBuilderBridge：   </p>
<p>TfBridge：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LookupToTracking(const::cartographer::common::Time time,const std::string&amp; frame_id)： 返回 time 时刻 frame_id -&gt; tracking_frame 之间的转换</span><br></pre></td></tr></table></figure>

<h3 id="cartographer"><a href="#cartographer" class="headerlink" title="cartographer"></a>cartographer</h3><ul>
<li><p><strong>CollatedTrajectoryBuilder</strong>：Collates sensor data using a sensor::CollatorInterface, then passes it on to a mapping::TrajectoryBuilderInterface which is common for 2D and 3D.  </p>
</li>
<li><p><strong>CollatorInterface</strong>：  </p>
</li>
<li><p><strong>sensor::TrajectoryCollator</strong>：等待查看订阅的传感器，知道至少有一个是有数据的，并按合并排序顺序调度数据。与 “Collator” 相反，它不会等待其它轨迹，且输出是确定性的，调度数据的顺序是无序的，因此非确定性输入序列将导致非确定性输出。    </p>
</li>
<li><p><strong>sensor::Collator</strong>：</p>
</li>
<li><p><strong>PoseGraph2D</strong>： 实现了闭环检测算法 SPA(Sparse Pose Adjustment)。算法对应论文为&lt;Efficient sparse pose adjustment for 2d mapping.&gt;。 被扩展用于 submapping：每个节点已经与一个或多个 submaps 匹配(为每个匹配添加约束)，节点和submaps的位姿都需要进行优化。所有约束都在submap i 和 节点 j 之间。  </p>
</li>
<li><p><strong>PoseGraph3D</strong>：与 PoseGraph2D 一样。只是扩展使用于 3D submapping。  </p>
</li>
<li><p><strong>LocalTrajectoryBuilder2D</strong>：Wires up the local SLAM stack (i.e. pose extrapolator, scan matching, etc.) without loop closure   </p>
</li>
<li><p><strong>LocalTrajectoryBuilder3D</strong>：  </p>
</li>
<li><p><strong>RangeDataCollator</strong>:同步来自不同传感器(即:不同主题)的激光数据(TimedPointCloudData)。 每个传感器最多只缓存一帧数据，因此会引入最慢传感器的周期延迟(即:以最慢的传感器的周期来进行同步，因此对发布速率快的传感器会存在数据丢失或延迟处理的问题)，可以通过来 subdivisions 减轻该延迟 </p>
</li>
<li><p><strong>GlobalTrajectoryBuilder</strong>:<br>该类中包含了 local_trajectory_builder 和 pose_graph、局部SLAM结果的回调函数  </p>
</li>
<li><p><strong>FastCorrelativeScanMatcher2D</strong>：是”Real-Time Correlative Scan Matching”中描述的算法的实现。 类似于 RealTimeCorrelativeScanMatcher，但有不同的权衡(trade-off)：扫描匹配更快，因为为给定的地图执行了更多的预计算。但是，这会导致这个地图在构件好之后无法再改变。    </p>
</li>
<li><p><strong>FastCorrelativeScanMatcher3D</strong>：是 3D branch-and-bound 算法(BBS)的实现，类似于 FastCorrelativeScanMatcher2D。  </p>
</li>
<li><p><strong>ActiveSubmaps2D</strong>：在插入第一帧激光数据时创建第一个 active submap。除了在初始化期间没有或只有单个 submap 存在时，总是有两个子图，其中插入了范围数据：一个用于 matching 的旧 submap，另一个用于下一次 matching 的 submap。<br>一旦插入了指定数量的激光数据，则初始化新的 submap：<strong>旧的 submap 不会再改变</strong>，该新 submap 会被用于后续的 scan-to-map matching。</p>
</li>
</ul>
<h2 id="消息类型"><a href="#消息类型" class="headerlink" title="消息类型"></a>消息类型</h2><p><strong>TimedPointCloud</strong><br><code>using TimedPointCloud = std::vector&lt;TimedRangefinderPoint&gt;;</code><br>其中：<strong>TimedRangefinderPoint</strong> 存储3D位姿及其相对测量时间  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct TimedRangefinderPoint &#123; </span><br><span class="line">  Eigen::Vector3f position; // typedef Matrix&lt;float, 3, 1&gt; Vector3f; 每个激光束点的坐标</span><br><span class="line">  float time;  // 每个激光束点对应的时间戳,根据 time_increment 进行计算</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>TimedPointCloud用于存储点的3D位姿及其相对测量时间。时间以秒为单位，相对于收到的最后一个点的。因此，最后一个点的第四项(即: time) 为 0.f。 如果没有可用的时间，则所有的 time 都为 0.f。 对于2D点，第三项为 0.f(即:position中最后一个表示高度的元素)。  </p>
<p><strong>TimedPointCloudData</strong>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct TimedPointCloudData &#123;</span><br><span class="line">  common::Time time;</span><br><span class="line">  Eigen::Vector3f origin;</span><br><span class="line">  TimedPointCloud ranges;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>PointCloudWithIntensities</strong>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct PointCloudWithIntensities &#123;</span><br><span class="line">  TimedPointCloud points;</span><br><span class="line">  std::vector&lt;float&gt; intensities;  // 每个激光点的强度信息</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>TimedPointCloudOriginData</strong>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct TimedPointCloudOriginData &#123;</span><br><span class="line">  struct RangeMeasurement &#123;</span><br><span class="line">    TimedRangefinderPoint point_time;</span><br><span class="line">    size_t origin_index;</span><br><span class="line">  &#125;;</span><br><span class="line">  common::Time time;</span><br><span class="line">  std::vector&lt;Eigen::Vector3f&gt; origins;</span><br><span class="line">  std::vector&lt;RangeMeasurement&gt; ranges;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>通过 RangeDataCollator::AddRangeData 同步后的数据类型即为：TimedPointCloudOriginData  </p>
<p><strong>sensor::RangeData</strong>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct RangeData &#123;</span><br><span class="line">  Eigen::Vector3f origin;</span><br><span class="line">  PointCloud returns; // 检测到的障碍物的坐标,相对于全局</span><br><span class="line">  PointCloud misses;  // 未检测到障碍物的方向的点的坐标(根据missing_data_ray_length)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>TrajectoryNodePose</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct TrajectoryNodePose &#123;</span><br><span class="line">  struct ConstantPoseData &#123;</span><br><span class="line">    common::Time time;</span><br><span class="line">    transform::Rigid3d local_pose;</span><br><span class="line">  &#125;;</span><br><span class="line">  // The node pose in the global SLAM frame.</span><br><span class="line">  transform::Rigid3d global_pose; // node 在全局坐标系位姿</span><br><span class="line"></span><br><span class="line">  absl::optional&lt;ConstantPoseData&gt; constant_pose_data;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>TrajectoryNode 及 TrajectoryNode::Data</strong>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct TrajectoryNode &#123;</span><br><span class="line">  struct Data &#123;</span><br><span class="line">    common::Time time;</span><br><span class="line"></span><br><span class="line">    // Transform to approximately gravity align the tracking frame as</span><br><span class="line">    // determined by local SLAM.</span><br><span class="line">    Eigen::Quaterniond gravity_alignment;</span><br><span class="line"></span><br><span class="line">    // Used for loop closure in 2D: voxel filtered returns in the</span><br><span class="line">    // &#x27;gravity_alignment&#x27; frame. 经过 voxel filter 过滤后的重力对齐数据</span><br><span class="line">    sensor::PointCloud filtered_gravity_aligned_point_cloud;</span><br><span class="line"></span><br><span class="line">    // Used for loop closure in 3D.</span><br><span class="line">    sensor::PointCloud high_resolution_point_cloud;</span><br><span class="line">    sensor::PointCloud low_resolution_point_cloud;</span><br><span class="line">    Eigen::VectorXf rotational_scan_matcher_histogram;</span><br><span class="line"></span><br><span class="line">    // The node pose in the local SLAM frame.</span><br><span class="line">    // node 在局部坐标系中的位姿, 即:当前 scan 经过 scan matching 优化后在当前submap中的位姿</span><br><span class="line">    transform::Rigid3d local_pose;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  common::Time time() const &#123; return constant_data-&gt;time; &#125;</span><br><span class="line"></span><br><span class="line">  // This must be a shared_ptr. If the data is used for visualization while the</span><br><span class="line">  // node is being trimmed, it must survive until all use finishes.</span><br><span class="line">  std::shared_ptr&lt;const Data&gt; constant_data;</span><br><span class="line"></span><br><span class="line">  // The node pose in the global SLAM frame.</span><br><span class="line">  transform::Rigid3d global_pose; // node 在全局坐标系中的位姿</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>InsertionResult</strong><br>scan 插入 submap 操作的返回类型。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct InsertionResult &#123;</span><br><span class="line">  std::shared_ptr&lt;const TrajectoryNode::Data&gt; constant_data;</span><br><span class="line">  std::vector&lt;std::shared_ptr&lt;const Submap2D&gt;&gt; insertion_submaps;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>MatchingResult</strong><br>local trajectory builder 返回结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct MatchingResult &#123;</span><br><span class="line">  common::Time time;</span><br><span class="line">  transform::Rigid3d local_pose; // 经过 scan matching 校准后的位姿</span><br><span class="line">  sensor::RangeData range_data_in_local; // 该帧激光点云各点在 local map 中的坐标</span><br><span class="line">  // &#x27;nullptr&#x27; if dropped by the motion filter.</span><br><span class="line">  std::unique_ptr&lt;const InsertionResult&gt; insertion_result; // scan 插入结果</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>InternalSubmapData</strong>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct InternalSubmapData &#123;</span><br><span class="line">  std::shared_ptr&lt;const Submap&gt; submap;</span><br><span class="line">  SubmapState state = SubmapState::kNoConstraintSearch;</span><br><span class="line"></span><br><span class="line">  // IDs of the nodes that were inserted into this map together with</span><br><span class="line">  // constraints for them. They are not to be matched again when this submap</span><br><span class="line">  // becomes &#x27;kFinished&#x27;.</span><br><span class="line">  std::set&lt;NodeId&gt; node_ids;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>PoseGraphData</strong>    </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct PoseGraphData &#123;</span><br><span class="line">  // Submaps get assigned an ID and state as soon as they are seen, even</span><br><span class="line">  // before they take part in the background computations.</span><br><span class="line">  MapById&lt;SubmapId, InternalSubmapData&gt; submap_data;</span><br><span class="line"></span><br><span class="line">  // Global submap poses currently used for displaying data. 用于rviz显示,优化后的位姿</span><br><span class="line">  MapById&lt;SubmapId, optimization::SubmapSpec2D&gt; global_submap_poses_2d;</span><br><span class="line">  MapById&lt;SubmapId, optimization::SubmapSpec3D&gt; global_submap_poses_3d;</span><br><span class="line"></span><br><span class="line">  // Data that are currently being shown.</span><br><span class="line">  MapById&lt;NodeId, TrajectoryNode&gt; trajectory_nodes;</span><br><span class="line"></span><br><span class="line">  // Global landmark poses with all observations.</span><br><span class="line">  std::map&lt;std::string /* landmark ID */, PoseGraphInterface::LandmarkNode&gt;</span><br><span class="line">      landmark_nodes;</span><br><span class="line"></span><br><span class="line">  // How our various trajectories are related. 各轨迹之间的关联</span><br><span class="line">  TrajectoryConnectivityState trajectory_connectivity_state;</span><br><span class="line">  int num_trajectory_nodes = 0;</span><br><span class="line">  // 各轨迹的状态</span><br><span class="line">  std::map&lt;int, InternalTrajectoryState&gt; trajectories_state;</span><br><span class="line"></span><br><span class="line">  // Set of all initial trajectory poses. 各轨迹的初始位姿</span><br><span class="line">  std::map&lt;int, PoseGraph::InitialTrajectoryPose&gt; initial_trajectory_poses;</span><br><span class="line"></span><br><span class="line">  // 约束条件列表</span><br><span class="line">  std::vector&lt;PoseGraphInterface::Constraint&gt; constraints;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>PoseGraphInterface::SubmapData</strong>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct SubmapData &#123;</span><br><span class="line">  std::shared_ptr&lt;const Submap&gt; submap;</span><br><span class="line">  transform::Rigid3d pose;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>包含 submap 及其全局位姿。  </p>
<p><strong>PoseGraphInterface::Constraint</strong>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct Constraint &#123;</span><br><span class="line">  struct Pose &#123;</span><br><span class="line">    transform::Rigid3d zbar_ij;</span><br><span class="line">    double translation_weight;</span><br><span class="line">    double rotation_weight;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  SubmapId submap_id;  // &#x27;i&#x27; in the paper.</span><br><span class="line">  NodeId node_id;      // &#x27;j&#x27; in the paper.</span><br><span class="line"></span><br><span class="line">  // Pose of the node &#x27;j&#x27; relative to submap &#x27;i&#x27;.</span><br><span class="line">  Pose pose;</span><br><span class="line"></span><br><span class="line">  // Differentiates between intra-submap (where node &#x27;j&#x27; was inserted into</span><br><span class="line">  // submap &#x27;i&#x27;) and inter-submap constraints (where node &#x27;j&#x27; was not inserted</span><br><span class="line">  // into submap &#x27;i&#x27;).</span><br><span class="line">  enum Tag &#123; INTRA_SUBMAP, INTER_SUBMAP &#125; tag;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>PoseGraphInterface::Constraint</strong>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct Constraint &#123;</span><br><span class="line">  struct Pose &#123;</span><br><span class="line">    transform::Rigid3d zbar_ij; // 相对位姿</span><br><span class="line">    double translation_weight;</span><br><span class="line">    double rotation_weight;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  SubmapId submap_id;  // &#x27;i&#x27; in the paper. submap 索引</span><br><span class="line">  NodeId node_id;      // &#x27;j&#x27; in the paper. TrajectoryNode 索引</span><br><span class="line"></span><br><span class="line">  // Pose of the node &#x27;j&#x27; relative to submap &#x27;i&#x27;.</span><br><span class="line">  Pose pose; // Node j 相对于 submap i 的位姿</span><br><span class="line"></span><br><span class="line">  // Differentiates between intra-submap (where node &#x27;j&#x27; was inserted into</span><br><span class="line">  // submap &#x27;i&#x27;) and inter-submap constraints (where node &#x27;j&#x27; was not inserted</span><br><span class="line">  // into submap &#x27;i&#x27;).</span><br><span class="line">  enum Tag &#123; INTRA_SUBMAP, INTER_SUBMAP &#125; tag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>cartographer - ImuTracker</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%20-%20ImuTracker/</url>
    <content><![CDATA[<p>ImuTracker：根据 IMU 的<strong>角速度和线加速度</strong>来计算机器人的姿态(方向)。  </p>
<p>当 IMU 不处于重力水平面上时，重力加速度会在水平轴(x、y轴)上产生加速度分量。  </p>
<p>通过各轴的加速度，可以计算出各轴加速度计的倾斜角：<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=pitch = \theta=\frac{180}{PI} * atan(\frac{a_x}{\sqrt{a_y^2 %2B a_z^2}})" style="border:none;"><br><img src="http://chart.googleapis.com/chart?cht=tx&chl=roll = \varphi=\frac{180}{PI} * atan(\frac{a_y}{\sqrt{a_x^2 %2B a_z^2}})" style="border:none;"><br><img src="http://chart.googleapis.com/chart?cht=tx&chl=\psi=\frac{180}{PI} * atan(\frac{\sqrt{a_x^2 %2B a_y^2}}{a_z})" style="border:none;">  </p>
<p><strong>ImuTracker::Advance</strong><br>根据 IMU 角速度计算姿态，若没有 IMU 数据，则使用从 pose或odom 得到的角速度来计算姿态。并通过该姿态得到各个轴的重力分量 gravity_vector_。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void ImuTracker::Advance(const common::Time time) &#123;</span><br><span class="line">  CHECK_LE(time_, time);</span><br><span class="line">  const double delta_t = common::ToSeconds(time - time_);</span><br><span class="line">  // 根据 imu 角速度(当没有imu数据时,使用从pose或odom计算的角速度代替)计算方向</span><br><span class="line">  const Eigen::Quaterniond rotation =</span><br><span class="line">      transform::AngleAxisVectorToRotationQuaternion(</span><br><span class="line">          Eigen::Vector3d(imu_angular_velocity_ * delta_t)); // 陀螺仪积分得到的姿态</span><br><span class="line">  // 角度方向 : 当前姿态 * 姿态偏转</span><br><span class="line">  orientation_ = (orientation_ * rotation).normalized();</span><br><span class="line">  // 得到各个轴向的重力分量</span><br><span class="line">  gravity_vector_ = rotation.conjugate()/*共轭矩阵*/ * gravity_vector_;</span><br><span class="line">  time_ = time;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>ImuTracker::AddImuLinearAccelerationObservation</strong><br>该函数只有在存在有效 IMU 数据时才会实际生效。 根据 IMU 线加速度 imu_linear_acceleration 计算姿态，采用<strong>滑动平均</strong>与前面计算得到的 grivaty_vector_ 进行融合；并修正最终姿态。  </p>
]]></content>
  </entry>
  <entry>
    <title>cartographer - LocalTrajectoryBuilder2D</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%20-%20LocalTrajectoryBuilder2D/</url>
    <content><![CDATA[<p>LocalTrajectoryBuilder2D 激光数据处理过程：<br>1）同步多个 scan 传感器的数据，得到同步后的数据</p>
<p>2）若未使能 IMU ，则在 <code>LocalTrajectoryBuilder2D::AddRangeData</code> 中调用 <code>InitializeExtrapolator(time)</code> 来初始化 PoseExtrapolator; 若使能 IMU ，则在 <code>LocalTrajectoryBuilder2D::AddIMUData</code> 中初始化。  </p>
<p>若 PoseExtrapolator 未初始化完，则丢弃当前scan帧。   </p>
<p>3）调用 <code>ExtrapolatePose()</code> 推算当前scan帧中，每个 scan point 对应的机器人位姿，并存入 <code>range_data_poses</code> 中</p>
<p>4）scan过滤，去除小于 min_range 的点，并将大于 max_range 的点标记为 misses  </p>
<p>5）累积 num_accumulated_range_data 帧数据，并进行重力对齐及 <code>VoxelFilter</code> 过滤</p>
<p>6）调用 <code>AddAccumulatedRangeData</code> 对累积的数据进行处理, 在该方法中，调用 <code>extrapolator_-&gt;ExtrapolatePose()</code> 获取当前时刻的预测位姿，并进行重力对齐  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const transform::Rigid3d non_gravity_aligned_pose_prediction =</span><br><span class="line">  extrapolator_-&gt;ExtrapolatePose(time);</span><br><span class="line">const transform::Rigid2d pose_prediction = transform::Project2D(</span><br><span class="line">  non_gravity_aligned_pose_prediction * gravity_alignment.inverse());</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">7）将激光数据进行 AdaptiveVoxelFilter 过滤，并转换为 PointCloud 类型，然后调用 `ScanMatch` 进行匹配，得到校准后的位姿 `pose_estimate_2d`  </span><br><span class="line"></span><br><span class="line">8）将激光匹配得到的位姿进行重力对齐后，添加到 extrapolator 中，用于下次位姿预估     </span><br></pre></td></tr></table></figure>
<p>const transform::Rigid3d pose_estimate &#x3D;<br>  transform::Embed3D(*pose_estimate_2d) * gravity_alignment;<br>&#x2F;&#x2F; 将激光匹配优化后的位姿添加到 extrapolator 中, 用于预估后续的位姿<br>extrapolator_-&gt;AddPose(time, pose_estimate);</p>
<pre><code>AddPose 只在累积 num_accumulated_range_data 帧 scan 数据，进行匹配得到校准后的位姿后才会执行。  

9）将累积的点云数据转换到 local_trajectory 坐标系下，然后插入到 submap 中
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>cartographer - Pose extrapolator</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%20-%20Pose%20extrapolator/</url>
    <content><![CDATA[<p>PoseExtrapolator 类：将 pose 保持一定时间以估计线速度和角速度。使用速度来推断运动。 如果有IMU&#x2F;Odometry，则使用IMU和&#x2F;或odometry数据来改进该推断(extrapolation)。  </p>
<p>(旧版本cartographer使用UKF来进行数据融合来估计位姿)  </p>
<p>如果没有 imu，则在第一帧 scan 数据处理时初始化 extrapolator，若有 imu，则在每帧 imu 数据处理时都调用 InitializeExtrapolator，但因为该接口中对 extrapolator_ 进行判断，因此不会每次都重新初始化 extrapolator。 若使用 scan + odometery 建图，也只在第一帧 scan 处理时初始化 extrapolator，在处理 odom 数据时，只是将该数据添加到 extrapolator 中。  </p>
<p><strong>timed_pose_queue_</strong>: 缓存经过匹配校准后的位姿点。该队列不会一直缓存，会删除间隔超过 pose_queue_duration_ 的点<br><strong>cached_extrapolated_pose_</strong>: 缓存根据 odom&#x2F;imu&#x2F;历史位姿点(timed_pose_queue_) 推断出的位姿。该队列不会清除   </p>
<p>odometry_imu_tracker_、extrapolation_imu_tracker_: 都指向 imu_tracker_    </p>
<p>ImuTracker:使用来自IMU的角速度和线加速度来跟踪方向。 因为平均线性加速度（假设慢速运动）是重力的直接测量，所以滚动&#x2F;俯仰虽然会导致yaw角偏离，但不会出现漂移。  </p>
<p><strong>AddPose：</strong><br>AddPose 只在累积 <code>num_accumulated_range_data</code> 帧 scan 数据，进行匹配得到校准后的位姿后才会执行。将校准后的位姿存入 <code>timed_pose_queue_</code> 缓存中：   </p>
<ul>
<li>若 <code>imu_tracker_</code> 为空, 则创建并初始化 </li>
<li>将匹配校准或的位姿点存入 timed_pose_queue_ 缓存中</li>
<li>删除 timed_pose_queue_ 中距当前时间超过 <code>kExtrapolationEstimationTimeSec</code>(0.001s) 的点(前提是当前缓存中点数&gt;2,确保删除后还有至少两个点)  </li>
<li>根据 timed_pose_queue_ 中的 pose 点及点之间的时间间隔计算线速度和角速度  </li>
<li>更新 imu_tracker_ - AdvanceImuTracker  </li>
<li>TrimImuData() - 删除 imu_data_ 中的无用数据(过期数据)</li>
<li>TrimOdometryData() - 删除 odometry_data_ 中的无用数据</li>
<li>构建 odometry_imu_tracker_ 及 extrapolation_imu_tracker_ 指针(每次执行 AddPose 都会重新 make_unique 构建)</li>
</ul>
<p><strong>ExtrapolatePose：推算位姿</strong>  </p>
<ul>
<li>调用 <code>ExtrapolateTranslation</code> 方法计算偏移量  <ul>
<li>若有里程计数据，则根据从里程计数据得到的线速度 <code>linear_velocity_from_odometry_</code> 及时间间隔 来计算偏移量  </li>
<li>若没有里程计数据，则根据从缓存的两点计算得到的线速度 <code>linear_velocity_from_poses_</code> 及时间间隔 来计算偏移量</li>
</ul>
</li>
</ul>
<p>计算得到的偏移量 + 上一点的位置信息，得到预估的点的坐标信息    </p>
<ul>
<li>调用 <code>ExtrapolateRotation</code> 方法计算旋转量(即:偏转角度)  <ul>
<li>调用 <code>AdvanceImuTracker</code>  </li>
<li>根据 imu_tracker 获取上次的方向 <code>imu_tracker_-&gt;orientation()</code> </li>
<li>计算偏转角 <code>last_orientation.inverse() * imu_tracker-&gt;orientation()</code></li>
</ul>
</li>
</ul>
<p>根据计算得到的偏转角及上一次时机器人的方位，得到预估的点的方位信息    </p>
<ul>
<li>将预估的位姿点存入 <code>cached_extrapolated_pose_</code> 中</li>
</ul>
<p><strong>AdvanceImuTracker：</strong>  </p>
<ul>
<li>若IMU为空，或IMU时间戳异常，若有 odom 数据，则使用从 odom 得到的角速度 <code>angular_velocity_from_odometry_</code> 来更新位姿，若没有 odom ，则根据缓存的历史位姿点计算得到的角速度 <code>angular_velocity_from_poses_</code> 来更新方向。<br><strong>注意：<code>angular_velocity_from_odometry_</code>并不是直接取 odom 主题中的角速度，而是根据 <code>odometry_data_</code> 队列中首尾元素之间的变换矩阵中的 <code>rotation/dt</code> 得到</strong>       </li>
<li>有可用的IMU数据, 则根据 IMU 数据中的 <code>linear_acceleration</code> 及 <code>angular_velocity</code> 来更新方向   <ul>
<li><code>AddImuLinearAccelerationObservation</code>: 线加速度用于更新 gravity_vector_, 然后使用 gravity_vector_ 来更新姿态</li>
<li></li>
<li><code>AddImuAngularVelocityObservation</code></li>
</ul>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>cartographer - assets writer</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%20-%20assets%20writer/</url>
    <content><![CDATA[<p>SLAM的目的是通过一个度量空间来计算单个传感器的轨迹。在更高的层面上，SLAM的输入是传感器的数据，输出的是对轨迹到目前为止的最佳估计。为了实时和高效，Cartographer 将大部分传感器数据立即扔掉。  </p>
<p>轨迹单独没有什么作用，但是一旦估计出了最佳轨迹，就可以用全部的传感器数据来推导和显示周围环境的信息。  </p>
<p>Cartographer提供assets writer来完成该功能。 assets writer 的输入内容：  </p>
<ul>
<li>原始传感器数据(例如：bag文件)  </li>
<li>使用原始传感器数据执行 SLAM 得到的 pbstream 文件  </li>
<li>传感器外部参数(例如：来自bag包或urdf模型的tf数据)  </li>
<li>配置文件，.lua 文件</li>
</ul>
<h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><p>1）、生成 pbstream 文件<br><code>roslaunch cartographer_ros offline_backpack_3d.launch bag_filenames:=$&#123;HOME&#125;/Downloads/b3-2016-04-05-14-14-00.bag</code><br>该指令会加载 cartographer_offline_node 节点。 该指令运行结束之后，会生成 b3-2016-04-05-14-14-00.bag.pbstream 文件。    </p>
<p>当运行为 online node 时，cartographer 并不知道 bag 什么时候结束，因此需要主动调用如下服务来显式的完成当前轨迹，并使 cartographer 序列化其当前状态：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Finish the first trajectory. No further data will be accepted on it.</span><br><span class="line">rosservice call /finish_trajectory 0</span><br><span class="line"></span><br><span class="line"># Ask Cartographer to serialize its current state.</span><br><span class="line"># (press tab to quickly expand the parameter syntax)</span><br><span class="line">rosservice call /write_state &quot;&#123;filename: &#x27;$&#123;HOME&#125;/Downloads/b3-2016-04-05-14-14-00.bag.pbstream&#x27;, include_unfinished_submaps: &#x27;true&#x27;&#125;&quot;  </span><br><span class="line">```   </span><br><span class="line">（注意：若不指定路径，默认写入 $&#123;HOME&#125;.ros 目录下）  </span><br><span class="line">![assets_writer](../images/assets_writer_path.png)</span><br><span class="line"></span><br><span class="line">2）、调用 assets writer 生成地图  </span><br></pre></td></tr></table></figure>
<p>roslaunch cartographer_ros assets_writer_backpack_3d.launch <br>   bag_filenames:&#x3D;${HOME}&#x2F;Downloads&#x2F;b3-2016-04-05-14-14-00.bag <br>   pose_graph_filename:&#x3D;${HOME}&#x2F;Downloads&#x2F;b3-2016-04-05-14-14-00.bag.pbstream</p>
<pre><code>可通过 `--output_file_prefix` 来指定输出文件前缀，若不指定，则默认为第一个 bag 包的名字。 例如：若指定 `--output_file_prefix=point.ply`，则此例中输出文件名为：`$&#123;HOME&#125;/Downloads/b3-2016-04-05-14-14-00.bag_points.ply`  
  
### 配置  
Assets writer被建模为一个pipeline。由 PointProcessors 和流过它的 [PointsBatchs](https://github.com/googlecartographer/cartographer/blob/30f7de1a325d6604c780f2f74d9a345ec369d12d/cartographer/io/points_batch.h) 组成。数据从第一个处理器流向下一个处理器，每个处理器都有机会在传递之前修改PointsBatch（点流）。  

例如：assets_writer_backpack_3d.lua 使用 min_max_range_filter 来过滤离传感器太近或太远的点。然后，写 X-Rays，再根据传感器坐标系ID重新着色这个 PointBatch，并使用这些新的颜色来写另一组 X-Rays。  
  
所有的 PointsProcessor 都在 [cartographer/io](https://github.com/googlecartographer/cartographer/tree/30f7de1a325d6604c780f2f74d9a345ec369d12d/cartographer/io) 子目录下，并记录在他们各自的头文件中。

### 点云数据第一人称视角可视化  
一般情况下，通过点生成 fly 需要两个步骤：  
    ①、将想要显示的点写入 PLY 文件  
    ②、使用[point_cloud_viewer](https://github.com/googlecartographer/point_cloud_viewer)  

第一步通常通过使用 [IntensityToColorPointsProcessor](https://github.com/googlecartographer/cartographer/blob/30f7de1a325d6604c780f2f74d9a345ec369d12d/cartographer/io/intensity_to_color_points_processor.cc) 将点设置为非白色的颜色，然后使用 [PlyWritingPointsProcessor](https://github.com/googlecartographer/cartographer/blob/30f7de1a325d6604c780f2f74d9a345ec369d12d/cartographer/io/ply_writing_points_processor.h) 将这些点写入 PLY中。例如：assets_writer_backpack_2d.lua。  

一旦有了PLY文件，按照 point_cloud_viewer 的README文档来生成一个存储在磁盘上的 octree 数据。  
</code></pre>
]]></content>
  </entry>
  <entry>
    <title>cartographer - RangeDataCollator</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%20-%20RangeDataCollator/</url>
    <content><![CDATA[<p>该类同步来自不同传感器的 TimedPointCloudData 数据。 每个传感器最多只缓存一帧数据，因此会引入最慢传感器的周期延迟(即:以最慢的传感器的周期来进行同步，因此对发布速率快的传感器会存在数据丢失或延迟处理的问题)，可以通过来 subdivisions 减轻该延迟。  </p>
]]></content>
  </entry>
  <entry>
    <title>cartographer - 全局优化</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%20-%20%E5%85%A8%E5%B1%80%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p>trajectory 状态：ACTIVE, FINISHED, FROZEN, DELETED。  </p>
<p>FastCorrelativeScanMatcher2D (Real-Time Correlative Scan Matching) 构建 node 和 submap 之间的约束。<br>FastCorrelativeScanMatcher3D (BBS算法)。  </p>
<h2 id="Closing-Loops"><a href="#Closing-Loops" class="headerlink" title="Closing Loops"></a>Closing Loops</h2><p>通过 Sparse Pose Adjustment(SPA) 算法优化所有 scan 和 submap 的位姿，来实现全局优化。  </p>
<p>LocalTrajectorBuilder 中，构建了一个个 submap，也记录了每帧 scan 插入到 submap 中的 pose。 由于传感器测量值存在误差，虽然在局部范围内(即 submap 中)误差影响不大，但由于建图是一个增量式的过程，第 n 个 pose 的预估值依赖于前面 n-1 个 pose 的估计值，因而，会导致误差的累积。因此需要 loop closure 来消除这种误差累积。  </p>
<p>一旦局部 scan-to-submap 成功，就将该 scan 的 pose 作为节点添加到优化问题中。   </p>
<h3 id="optimization-problem"><a href="#optimization-problem" class="headerlink" title="optimization problem"></a>optimization problem</h3><p>与 scan matching 一样，回环优化也被公式化为<strong>非线性最小二乘问题</strong>(nonlinear least squares problem)，每隔几秒钟，就会使用 Ceres 来计算结果：<br><img src="/../images/spa.png" alt="SPA"></p>
<p><img src="http://chart.googleapis.com/chart?cht=tx&chl=\Xi^m = \left\{ \xi^m_i\right\}_{i=1,\cdots,m}" style="border:none;"> 所有 submap 的绝对位姿<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=\Xi^s = \left\{ \xi^s_j\right\}_{j=1,\cdots,n}" style="border:none;"> 所有 scan 的绝对位姿<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=\xi^m_i" style="border:none;"> 第 i 个 submap 相对于世界坐标系的位姿，上表 m 表示 submap<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=\xi^s_j" style="border:none;"> 第 j 帧 scan 相对于世界坐标系的位姿，上表 s 表示 scan<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=\xi_{i,j}" style="border:none;"> 第 j 帧 scan 插入第 i 个 submap 的相对位姿<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=\Sigma_{i,j}" style="border:none;"> 协方差矩阵。表示 第 j 帧 scan 插入第 i 个 submap 的质量，即 scan matching 的评分。<br>约束残差 E 的计算方式：<br><img src="/../images/residual-E.png" alt="residual-E"><br>其中 <img src="http://chart.googleapis.com/chart?cht=tx&chl=\rho" style="border:none;"> 为 loss function (目前使用的是 Huber loss)，用于减少当扫描匹配为优化问题添加不正确约束时可能出现在（SPA）中的异常值的影响(即:<strong>减少异常值outliers对优化结果的影响</strong>)。 例如：诸如办公室隔间等局部对称的环境。 异常值的可选方法参考：&gt; Robust map optimization using dynamic covariance scaling<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=t_{\xi^m_i}" style="border:none;"> 和 <img src="http://chart.googleapis.com/chart?cht=tx&chl=t_{\xi^s_j}" style="border:none;"> 分别表示 submap 和 scan 位姿中的 translation 部分。<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=t_{\xi^m_i} - t_{\xi^s_j}" style="border:none;"> 则表示了 scan 在 submap 中的相对位姿在世界坐标系下的表示。<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=R_{\xi^m_i}" style="border:none;"> 表示 submap 在全局坐标系下的位姿<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=R^{-1}_{\xi^m_i}" style="border:none;"> 逆矩阵，表示 submap 局部坐标系到全局坐标系之间的变换关系<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=R^{-1}_{\xi^m_i} \left( t_{\xi^m_i} - t_{\xi^s_j} \right)" style="border:none;"> 表示 scan 在 submap 中的相对位姿<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=\xi^m_{i;\theta}" style="border:none;"> 表示 scan 的姿态<br><img src="http://chart.googleapis.com/chart?cht=tx&chl=\xi^s_{j;\theta}" style="border:none;"> 表示 submap 的姿态  </p>
<p>全局优化（loop closure）的目的就是优化 <img src="http://chart.googleapis.com/chart?cht=tx&chl=\xi^m_i" style="border:none;"> 和 <img src="http://chart.googleapis.com/chart?cht=tx&chl=\xi^s_j" style="border:none;">，使误差值尽可能的小。   </p>
<p>每次局部匹配成功，则该时刻的位姿点都会作为一个节点。  </p>
<p>约束分为全局约束和局部约束。  </p>
<p>intra constraints<br>intra residuals<br>inter constraints, same trajectory<br>inter residuals, same trajectory<br>inter constraints, different trajectory (无)<br>inter residuals, different trajectory (无)  </p>
<p>1、scan 数据<br>订阅激光数据 <code>Node::HandleLaserScanMessage</code>，并最终调用 <code>GlobalTrajectoryBuilder::AddSensorData</code> 来处理激光数据。    </p>
<p><code>GlobalTrajectoryBuilder::AddSensorData</code><br> -&gt; <code>local_trajectory_builder_-&gt;AddRangeData</code> 局部 scan-to-submap 匹配,将scan数据插入 submap，并返回局部匹配结果 matching_result<br> -&gt; 调用 <code>pose_graph_-&gt;AddNode</code> 根据局部匹配结果，添加节点及约束<br> -&gt; 调用 <code>local_slam_result_callback_</code> 即 <code>MapBuilderServer::OnLocalSlamResult</code> 更新日志  </p>
<p>2、IMU 数据<br>订阅激光数据 <code>Node::HandleImuMessage</code>，并最终调用 <code>GlobalTrajectoryBuilder::AddSensorData</code> 来处理IMU数据。  </p>
<p><code>GlobalTrajectoryBuilder::AddSensorData</code><br> -&gt; <code>local_trajectory_builder_-&gt;AddImuData</code><br> -&gt; <code>pose_graph_-&gt;AddImuData</code></p>
<p>3、Odometry 数据<br>订阅激光数据 <code>Node::HandleOdometryMessage</code>，并最终调用 <code>GlobalTrajectoryBuilder::AddSensorData</code> 来处理IMU数据。  </p>
<p><code>GlobalTrajectoryBuilder::AddSensorData</code><br> -&gt; <code>local_trajectory_builder_-&gt;AddOdometryData</code><br> -&gt; <code>pose_graph_-&gt;AddOdometryData</code></p>
]]></content>
  </entry>
  <entry>
    <title>cartographer - 官方论文</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%20-%20%E5%AE%98%E6%96%B9%E8%AE%BA%E6%96%87/</url>
    <content><![CDATA[<p><a href="https://storage.googleapis.com/pub-tools-public-publication-data/pdf/45466.pdf">Real-Time Loop Closure in 2D LIDAR SLAM</a><br>该论文主要描述的是 cartographer 2D 建图。  </p>
<p>为了实现实时的闭环，使用 branch-and-bound(分支定界法)算法来计 scan-to-submap 的匹配作为约束。  </p>
<p><strong>scan-to-scan</strong> 匹配算法经常用于在基于激光的SLAM方法中计算相对位姿变化。 但 scan-to-scan 的匹配会迅速累积误差。  </p>
<p><strong>scan-to-map</strong> 的匹配有助于限制误差的累积。(本文使用的方法)  </p>
<p><strong>Pixel-accurate</strong> 扫描匹配算法，进一步减少本地误差的累积。该算法虽然计算量大，但对回环检测也很有用。 用于回环检测的其它算法包括：基于直方图(histogram-based)的匹配、扫描数据中的特征检测、以及使用机器学习。  </p>
<p>有两种常用算法可以<strong>解决局部误差累积问题</strong>：<strong>粒子滤波</strong>和<strong>graph-based SLAM</strong>。(本文使用后者)。<br>粒子滤波必须维持每个粒子的完整系统状态的表示(即：每个粒子都需要维护整个系统的状态,如对每个粒子保存一个完整的系统地图等)。对于 grid-based SLAM，随着地图越来越大，会变得非常消耗资源。<br>Graph-based 方法工作于表示位姿和特征的节点的集合之上。图的边(edges)是由观察产生的约束。有多重算法算法可以用来最小化由所有约束引入的误差。<br><strong>对于大地图，基于粒子滤波的 gmapping 算法比 cartographer 算法消耗的内存会更多。</strong></p>
<p>cartographer 提供了一种室内实时建图方法，该方法基于激光雷达。 激光扫描数据(scan)会插入到最佳位姿估计的 submap 中，这个最佳的位置假设在短时间内是很准确的。 scan match 发生在最近的 submap 上，因此只和最近的扫描数据有关。</p>
<p>综合考虑硬件资源和性能，该SLAM算法不使用粒子滤波器，而使用 pose optimization 来处理误差累积。 当一个 submap 完成后，就不会再在该 submap 中插入新的 scan 数据，该 submap 会用作 loop closure 的 scan matching 的一部分。 所有构建完成的 submap 和 scan 数据都会被用来进行 loop closure。 如果它们在当前的位姿估计上足够接近，则扫描匹配器尝试在 submap 中查找 scan。 如果在当前估计的位姿周围的搜索窗口中找到足够好的匹配，则将其作为 loop closing 约束添加到优化问题中。 每隔几秒就进行闭环检测，一个位姿点被重复访问就算达到闭环了。 这导致了软实时约束(soft real-time constraint)，即：要求闭环检测必须在新的 scan 被加入到 submap 中之前完成，否则可能会导致失败。 通过使用 branch-and-bound 算法以及对每个完成的 submap 的几个预计算的网格 来实现这一点。  </p>
<p>BBS 算法，即：branch-and-bound scan matching 算法 (分支定界法扫描匹配)  – FastCorrelativeScanMatcher3D<br><img src="/../images/BBS.png" alt="BBS"></p>
<p>SPA 算法，即：Sparse Pose Adjustment 算法 (稀疏位姿调整)。PoseGraph2D 及 PoseGraph3D。</p>
]]></content>
  </entry>
  <entry>
    <title>cartographer Constraints</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%20Constraints/</url>
    <content><![CDATA[<p>约束类型：</p>
<ul>
<li>Intra constraints：</li>
<li>Intra residuals：</li>
<li>Inter constraints：RViz 中黄色连线</li>
<li>Inter residuals：</li>
</ul>
<p>(Intra：表示在内部；Inter：表示相互之间，在外部)</p>
<p>RViz 中可查看约束类型</p>
<p>旧图、新图。insertion_submaps 存储着某个点云会画到的子图，最多两张，旧图指front，新图指back。</p>
<ul>
<li>INTER_SUBMAP：节点和其它子图之间的约束</li>
<li>INTRA_SUBMAP：节点和它画到的子图(即:所属子图)之间的约束</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>cartographer参数</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<p>cartographer 官方调参教程参考：<a href="https://google-cartographer-ros.readthedocs.io/en/latest/tuning.html">Tuning methodology</a></p>
<h2 id="cartographer-ros-配置"><a href="#cartographer-ros-配置" class="headerlink" title="cartographer_ros 配置"></a>cartographer_ros 配置</h2><p><strong>tracking_frame</strong>: SLAM算法跟随坐标系. 若使用了 IMU, 则应该是 IMU 的位置(尽管可能转动). 常用的选择是: “imu_link”  </p>
<p><strong>published_frame</strong>: 发布位姿的子坐标系. 例如: 若系统中有其它模块发布了 odom 坐标系, 则为 odom. 此时, odom 在 “map_frame” 中的位姿将被发布, 否则设置为 “base_link” .  </p>
<p><strong>odom_frame</strong>: 仅在 provide_odom_frame 为 true 时有效. 使能时, carto 发布的tf 树为: publishd_frame -&gt; odom_frame -&gt; map_frame.  </p>
<p><strong>use_odometry</strong>: 若使能, 将订阅 “odom” 主题的 odometry 消息.  </p>
<p><strong>use_nav_sat</strong>: 若使能, 将订阅 “fix” 主题的 NavSatFix (GPS)数据.  </p>
<p><strong>use_landmarks</strong>: 若使能, 将订阅 “landmarks” 主题消息.   </p>
<p><strong>num_laser_scans</strong>: 要订阅的 laser scan 主题 “scan” 的数目. 若有多个时, 可为 “scan_1”、”scan_2”  </p>
<p><strong>num_multi_echo_laser_scans</strong>: 要订阅的 multi-echo laser scan 主题 “echoes” 的数目. 若有多个时, 可为 “echoes_1”、”echoes_2”  </p>
<p>Laser scan 与 multi-echo laser scan:<br>标准的 laser scan 消息只包括每个激光脉冲的单个深度和强度值(intensity). 通常是强度最强的.<br>multi-echo: 多回波传感器能够为激光器发出的每个脉冲返回几个回波. 例如, 拾取到从玻璃以及其后面墙壁的回波, 或者在不同距离的两个物体的边界处接收到两个用于表示每个物体距离的回波.  </p>
<p><strong>num_subdivisions_per_laser_scan</strong>: 将每个接收到的（多回波）激光扫描分割成的点云数. <strong>分割 scan 能保证激光设备移动过程中 scans 不会弯曲变形</strong>. 有相应的轨迹生成器选项可以将分离的scans累积到点云中, 用来进行scan matching. 用于 SensorBridge 类中，将激光点云数据按该参数分段。 </p>
<p><strong>num_point_clouds</strong>: 订阅的点云主题 “points2” 的个数. 若有多个时, 可为 “points2_1”、”points2_2”  </p>
<p><strong>lookup_transform_timeout_sec</strong>: 使用 tf2 查找transforms时的超时时间.  </p>
<h3 id="Fixed-ratio"><a href="#Fixed-ratio" class="headerlink" title="Fixed ratio:"></a>Fixed ratio:</h3><p><strong>rangefinder_sampling_ratio</strong>: 测距仪消息的固定采样率.<br><strong>odometry_sampling_ratio</strong>: 里程计消息的固定采样率.<br><strong>fixed_frame_sampling_ratio</strong>: 固定坐标系消息的固定采样率.<br><strong>imu_sampling_ratio</strong>: IMU消息的固定采样率.<br><strong>landmarks_sampling_ratio</strong>: landmarks消息的固定采样率<br>基于 FixedRatioSampler 实现按固定频率均匀采样.  </p>
<h2 id="cartographer-配置"><a href="#cartographer-配置" class="headerlink" title="cartographer 配置"></a>cartographer 配置</h2><h3 id="1、-CeresSolverOptions"><a href="#1、-CeresSolverOptions" class="headerlink" title="1、 CeresSolverOptions"></a>1、 CeresSolverOptions</h3><p>use_nonmonotonic_steps  </p>
<p>max_num_iterations  </p>
<p>num_threads  </p>
<h3 id="2、trajectory-builder"><a href="#2、trajectory-builder" class="headerlink" title="2、trajectory builder"></a>2、trajectory builder</h3><p><strong>min_range、max_range</strong>：测距有效范围，超过该范围的会被丢弃。<br>例如:<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_2D.min_range = 0.3  </span><br><span class="line">TRAJECTORY_BUILDER_2D.min_range = 8</span><br></pre></td></tr></table></figure></p>
<p><strong>min_z、max_z</strong>： 高度范围<br>例如：<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_2D.min_z = -0.8  </span><br><span class="line">TRAJECTORY_BUILDER_2D.min_z = 2</span><br></pre></td></tr></table></figure></p>
<p><strong>missing_data_ray_length</strong>: 超出’max_range’的点将以此长度作为空白空间插入。(即:超出最大范围时，会清除该指定范围内的数据)<br>例如：<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_2D.missing_data_ray_length = 1</span><br></pre></td></tr></table></figure></p>
<p><strong>use_imu_data</strong>: 是否使用 imu。（或者修改 trajectory_builder_2d.lua 文件）<br>例如:<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_2D.use_imu_data = false</span><br></pre></td></tr></table></figure></p>
<p><strong>num_accumulated_range_data</strong>：累积指定帧数的激光数据作为一个unwarped(未扭曲)的联合帧，去进行scan matching（即:num_accumulated_range_data帧进行一次激光匹配）。<br>例如：<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_3D.num_accumulated_range_data = 160</span><br></pre></td></tr></table></figure><br>指定累加 160 帧激光数据作为一帧，有些激光雷达将一帧扫描数据分批次发布，因此需要累加起来，方便去除运动畸变。<br>如果有两个测距传感器（例如，两个LIDAR）同时提供完整扫描(例如：前后各一个)，则应将此变量设置为2。 </p>
<p><strong>voxel_filter_size</strong>：<br>距离机器人较近的地方通常扫描到的点更多，远处的物体的扫描点较少。为了降低计算量，需对点云进行降采样，但简单的随机采样会导致低密度区的点变少，而高密度区的点仍然较多。因而，cartographer中采用了 <a href="../../PCL/%E9%87%87%E6%A0%B7%E7%AE%97%E6%B3%95/VoxelGridFilter.md">voxel filter</a>(<strong>使用体素化网格实现降采样</strong>)。 voxel_filter_size 越小，过滤后的点云更密集，计算量越大；voxel_filter_size越大，数据量越小，计算速度越快，但可能会导致数据丢失。  </p>
<p><strong>use_online_correlative_scan_matching</strong>： 是否首先使用 correlative scan matcher 来解决在线 scan match 问题，从而为Ceres生成一个良好的起点。（即:使用RealTimeCorrelativeScanMatcher对数据源进行预处理）。开启之后的对应配置参数参考： RealTimeCorrelativeScanMatcherOptions、  CeresScanMatcherOptions、 MotionFilterOptions。  </p>
<p><strong>imu_gravity_time_constant</strong>：IMU重力时间常数。 基于通过IMU观察到的重力方向的移动平均值的时间常数（以秒为单位）。 应该选择使得误差：<br>1.来自加速度测量误差不影响重力方向（当常数减小时变得更糟）<br>2.来自角速度的积分（当常数增加时变得更糟）误差得到平衡。  </p>
<p><strong>rotational_histogram_size</strong>： 旋转匹配器的 histogram(直方图) buckets 数</p>
<h3 id="3、-SubmapsOptions"><a href="#3、-SubmapsOptions" class="headerlink" title="3、 SubmapsOptions"></a>3、 SubmapsOptions</h3><p><strong>num_range_data</strong>：每个 submap 包含点云的帧数。</p>
<h3 id="4、adaptive-voxel-filter-options"><a href="#4、adaptive-voxel-filter-options" class="headerlink" title="4、adaptive_voxel_filter_options"></a>4、adaptive_voxel_filter_options</h3><p>voxel_filter_size 指定了定长的 voxel 边长，cartographer另外还提供了自适应voxel边长的参数类adaptive_voxel_filter_options。  </p>
<p><strong>max_length</strong>:voxel边的最大长度  </p>
<p><strong>max_num_points</strong>: 如果存在很多的点，且至少不少于’max_num_points’数目，则减小voxel边长，以尝试获得该最少点数</p>
<p><strong>max_range</strong>:距离原点超过该范围的点直接丢弃  </p>
<p>TRAJECTORY_BUILDER_2D.*adaptive_voxel_filter.max_length的限制下确定最佳的voxel_filter_size来实现</p>
<h3 id="5、loop-closure-adaptive-voxel-filter-options"><a href="#5、loop-closure-adaptive-voxel-filter-options" class="headerlink" title="5、loop_closure_adaptive_voxel_filter_options"></a>5、loop_closure_adaptive_voxel_filter_options</h3><h3 id="6、CeresScanMatcherOptions"><a href="#6、CeresScanMatcherOptions" class="headerlink" title="6、CeresScanMatcherOptions"></a>6、CeresScanMatcherOptions</h3><p><strong>occupied_space_weight</strong>: Scaling parameters for each cost functor.<br><strong>translation_weight</strong><br><strong>rotation_weight</strong> </p>
<p>还包括 CeresSolverOptions 参数。在 3D 建图中，还包括 occupied_space_weight_0、occupied_space_weight_1 参数，分别配置经过 voxel filter 过滤后的高分辨率和低分辨率的点云。</p>
<h3 id="FastCorrelativeScanMatcherOptions"><a href="#FastCorrelativeScanMatcherOptions" class="headerlink" title="FastCorrelativeScanMatcherOptions"></a>FastCorrelativeScanMatcherOptions</h3><p><strong>linear_search_window</strong>(默认:7)：  </p>
<p><strong>angular_search_window</strong>(默认:30 rad)：  </p>
<p><strong>branch_and_bound_depth</strong>(默认:7)：</p>
<h3 id="RealTimeCorrelativeScanMatcherOptions"><a href="#RealTimeCorrelativeScanMatcherOptions" class="headerlink" title="RealTimeCorrelativeScanMatcherOptions"></a>RealTimeCorrelativeScanMatcherOptions</h3><p><strong>linear_search_window</strong>:最小线性搜索窗口，其中将找到最佳扫描对齐    </p>
<p><strong>angular_search_window</strong>:最小角度搜索窗口，其中将找到最佳扫描对齐。</p>
<p><strong>translation_delta_cost_weight</strong>:  </p>
<p><strong>rotation_delta_cost_weight</strong>  </p>
<p>例如：<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRAJECTORY_BUILDER_2D.use_online_correlative_scan_matching = true</span><br><span class="line">TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.linear_search_window = 0.1</span><br><span class="line">TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.translation_delta_cost_weight = 10.</span><br><span class="line">TRAJECTORY_BUILDER_2D.real_time_correlative_scan_matcher.rotation_delta_cost_weight = 1e-1</span><br></pre></td></tr></table></figure></p>
<h3 id="MotionFilterOptions"><a href="#MotionFilterOptions" class="headerlink" title="MotionFilterOptions"></a>MotionFilterOptions</h3><p><strong>max_time_seconds</strong>：插入 submap 中的 scan 数据的时间阈值, 超过该时间间隔则插入    </p>
<p><strong>max_distance_meters</strong>：若移动距离超过该阈值, 则插入 submap  </p>
<p><strong>max_angle_radians</strong>：若旋转角度超过该阈值, 则插入 submap</p>
<h3 id="ceres-solver-options"><a href="#ceres-solver-options" class="headerlink" title="ceres_solver_options"></a>ceres_solver_options</h3><h3 id="RangeDataInserterOptions"><a href="#RangeDataInserterOptions" class="headerlink" title="RangeDataInserterOptions"></a>RangeDataInserterOptions</h3><p><strong>hit_probability</strong>：hit 点的概率值（必须大于0.5）。  </p>
<p><strong>miss_probability</strong>：miss 点的概率值（必须小于0.5）  </p>
<p><strong>num_free_space_voxels</strong>：最多可更新多少个空闲 voxels 以进行扫描匹配。 0禁用空闲空间  </p>
<h3 id="PoseGraphOptions"><a href="#PoseGraphOptions" class="headerlink" title="PoseGraphOptions"></a>PoseGraphOptions</h3><p><strong>optimize_every_n_nodes</strong>: 每隔指定数目的node就进行一次全局优化。  </p>
<p><strong>matcher_translation_weight</strong>: 优化问题中，非 loop closure 扫描匹配约束的平移分量的权重。即：局部约束的平移分量的权重。</p>
<p><strong>max_num_final_iterations</strong>：最后一次图优化的迭代次数  </p>
<p><strong>matcher_rotation_weight</strong>: 局部约束的旋转分量的权重。</p>
<p><strong>global_sampling_ratio</strong>:</p>
<p><strong>log_residual_histograms</strong>:</p>
<p><strong>global_constraint_search_after_n_seconds</strong>(默认为 10): 如果在此选项指定的持续时间内没有在两个轨迹之间添加全局约束，则将在全局范围而不是在较小的搜索窗口中执行 loop closure searches。 即：   </p>
<p><strong>SPARSE_POSE_GRAPH.optimization_problem.huber_scale</strong> &#x3D; 1e2  该参数为激光匹配的权重(即闭环权重)  </p>
<p><strong>optimize_every_n_scans</strong>：积多少帧点云后执行一次全局图优化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RAJECTORY_BUILDER_2D.use_online_correlative_scan_matching = false TRAJECTORY_BUILDER_2D.ceres_scan_matcher.translation_weight = 10. TRAJECTORY_BUILDER_2D.ceres_scan_matcher.rotation_weight = 0.01</span><br></pre></td></tr></table></figure>

<h3 id="ConstraintBuilderOptions"><a href="#ConstraintBuilderOptions" class="headerlink" title="ConstraintBuilderOptions"></a>ConstraintBuilderOptions</h3><p><strong>sampling_ratio</strong>：ConstraintBuilder2D中采样器的频率。主要影响 ConstraintBuilder2D::MaybeAddConstraint 方法，达到控制约束数量的目的。 数值越小，约束数量越大。    </p>
<p><strong>max_constraint_distance</strong>(默认：15)：称为约束的最大距离阈值，若距离超过该值，则不作为约束条件。  </p>
<p><strong>min_score</strong>(默认：0.55)：约束的最低分数，数值越大，计算速度越快，约束数量也越少。在sampling_ratio较小的情况下，很可能会造成约束过少而导致建图失败。   </p>
<p><strong>global_localization_min_score</strong>(默认：0.6)：  </p>
<p><strong>loop_closure_translation_weight</strong>(默认：1.1e4)：   </p>
<p><strong>loop_closure_rotation_weight</strong>(默认：1e5)：   </p>
<p><strong>log_matches</strong>(默认：true)：   </p>
<p>FastCorrelativeScanMatcherOptions<br>CeresScanMatcherOptions  </p>
<h2 id="launch-配置"><a href="#launch-配置" class="headerlink" title="launch 配置"></a>launch 配置</h2><p><strong>load_state_filename</strong>  </p>
<p><strong>upload_load_state_file</strong>  </p>
<p><strong>load_frozen_state</strong></p>
<p><strong>client_id</strong></p>
<p><strong>collect_metrics</strong>： 激活运行时度量标准(metrics)的集合。 如果激活，则可以通过ROS服务访问度量标准。 可通过 read_metrics 服务来读取。  </p>
<p><strong>server_address</strong>:  </p>
<p><strong>start_trajectory_with_default_topics</strong>: </p>
<p><strong>save_map_filename</strong>: 若非空，则序列化 state，并在关闭前写入磁盘。  </p>
<p><img src="/../images/cartographer_launch_params.png" alt="cartographer_launch_params">  </p>
]]></content>
  </entry>
  <entry>
    <title>cartographer安装测试</title>
    <url>/2024/09/21/Robot/Map/cartographer/cartographer%E5%AE%89%E8%A3%85%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>##、安装<br><img src="/../images/cartographer_libglog.png" alt="libglog_err"></p>
<p>libglog.so.0: cannot open shared object file: No such file or directory<br>apt-get  install  gflags*    （安装libgflags2）<br>sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev</p>
<p>error while loading shared libraries: libf77blas.so.3: cannot open shared object file: No such file or directory<br>sudo apt-get install libatlas-base-dev</p>
<p>libspqr.so.1.3.1: cannot open shared object file: No such file or directory<br>sudo apt-get install libsuitesparse-dev</p>
<p><a href="https://google-cartographer-ros.readthedocs.io/en/latest/">https://google-cartographer-ros.readthedocs.io/en/latest/</a><br><a href="https://google-cartographer.readthedocs.io/en/latest/">https://google-cartographer.readthedocs.io/en/latest/</a>  </p>
<p>1、环境准备  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Install the required libraries that are available as debs.</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y \ </span><br><span class="line">    cmake \</span><br><span class="line">    g++ \</span><br><span class="line">    git \</span><br><span class="line">    google-mock \</span><br><span class="line">    libboost-all-dev \</span><br><span class="line">    libcairo2-dev \</span><br><span class="line">    libeigen3-dev \</span><br><span class="line">    libgflags-dev \</span><br><span class="line">    libgoogle-glog-dev \</span><br><span class="line">    liblua5.2-dev \</span><br><span class="line">    libprotobuf-dev \</span><br><span class="line">    libsuitesparse-dev \</span><br><span class="line">    libwebp-dev \</span><br><span class="line">    ninja-build \</span><br><span class="line">    protobuf-compiler \</span><br><span class="line">    python-sphinx</span><br><span class="line"></span><br><span class="line">sudo apt-get install libceres-dev</span><br></pre></td></tr></table></figure>
<p>2、安装ceres-resolver  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Build and install Ceres.</span><br><span class="line">git clone https://ceres-solver.googlesource.com/ceres-solver</span><br><span class="line">cd ceres-solver</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake .. -G Ninja</span><br><span class="line">ninja</span><br><span class="line">ninja test</span><br><span class="line">sudo ninja install</span><br></pre></td></tr></table></figure>
<p>（ceres-solver.googlesource.com需要翻墙，因此可用github地址代替：<a href="https://github.com/ceres-solver/ceres-solver.git">https://github.com/ceres-solver/ceres-solver.git</a> ）<br>注意:<br><img src="/../images/cartographer_install_err.png" alt="ceres_err"><br>该问题无需理会.</p>
<p>3、安装cartographer  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Build and install Cartographer.</span><br><span class="line">cd cartographer</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake .. -G Ninja</span><br><span class="line">ninja</span><br><span class="line">ninja test</span><br><span class="line">sudo ninja install</span><br></pre></td></tr></table></figure>
<p>4、安装cartographer_ros及cartographer_turtlebot  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Install wstool and rosdep.</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y python-wstool python-rosdep ninja-build</span><br><span class="line"># Create a new workspace in &#x27;catkin_ws&#x27;.</span><br><span class="line">mkdir catkin_ws</span><br><span class="line">cd catkin_ws</span><br><span class="line">wstool init src</span><br><span class="line"># Merge the cartographer_ros.rosinstall file and fetch code for dependencies.若已下载cartographer_turtlebot则无需这两步操作</span><br><span class="line">wstool merge -t src https://raw.githubusercontent.com/googlecartographer/cartographer_ros/master/cartographer_ros.rosinstall</span><br><span class="line">wstool update -t src</span><br><span class="line"># Install deb dependencies. 注意：rosdep不能在root用户下使用，否则会出错</span><br><span class="line">rosdep init</span><br><span class="line">rosdep update</span><br><span class="line">rosdep install --from-paths src --ignore-src --rosdistro=$&#123;ROS_DISTRO&#125; -y</span><br><span class="line"># Build and install.</span><br><span class="line">catkin_make_isolated --install --use-ninja (该过程速度慢)</span><br><span class="line">source install_isolated/setup.bash</span><br></pre></td></tr></table></figure>
<p>二、测试<br>先下载测试数据：<br>2D bag包；3D bag包  </p>
<p>cartographer有自己的地图保存方法：<br>rosservice call &#x2F;finish_trajectory “map”<br>(默认会保存在.ros文件夹中)</p>
<p>roslaunch cartographer_ros demo_backpack_2d.launch bag_filename:&#x3D;2D_bag_file</p>
<p>roslaunch cartographer_ros demo_backpack_3d.launch bag_filename:&#x3D;3D_bag_file</p>
<p>3D建图过程中显示的是 submap_lists，建图完成后会生成并在 &#x2F;map主题发布 map 数据</p>
<h1 id="下载基于PR2平台的示例包"><a href="#下载基于PR2平台的示例包" class="headerlink" title="下载基于PR2平台的示例包"></a>下载基于PR2平台的示例包</h1><p>wget -P ~&#x2F;Downloads <a href="https://storage.googleapis.com/cartographer-public-data/bags/pr2/2011-09-15-08-32-46.bag">https://storage.googleapis.com/cartographer-public-data/bags/pr2/2011-09-15-08-32-46.bag</a> </p>
<p>roslaunch cartographer_ros demo_pr2.launch bag_filename:&#x3D;${HOME}&#x2F;Downloads&#x2F;2011-09-15-08-32-46.bag</p>
<h1 id="下载基于Revo-LDS平台的示例包"><a href="#下载基于Revo-LDS平台的示例包" class="headerlink" title="下载基于Revo LDS平台的示例包"></a>下载基于Revo LDS平台的示例包</h1><p>wget -P ~&#x2F;Downloads <a href="https://storage.googleapis.com/cartographer-public-data/bags/revo_lds/cartographer_paper_revo_lds.bag">https://storage.googleapis.com/cartographer-public-data/bags/revo_lds/cartographer_paper_revo_lds.bag</a> </p>
<p>roslaunch cartographer_ros demo_revo_lds.launch bag_filename:&#x3D;${HOME}&#x2F;Downloads&#x2F;cartographer_paper_revo_lds.bag</p>
<p>三、注意事项<br>1、发布的occupancy地图只支持2D<br>3D建图时，实时发布submap_list，建图完成后生成并在&#x2F;map主题发布2D的occupancy地图数据。rviz中展示的是3D submap数据投影到2D平面的效果，我们将这称之为：x-ray。<br>cartographer中并没有编写代码用于在cartographer的submaps表示中进行导航或推理、实现轨迹规划和避障。在短期内，可以通过保存轨迹以及创建地图（使用 rosservice call &#x2F;finish_trajectory），并使用map_server来加载该地图来实现导航。</p>
<p>cartographer目前的形式，相比未知环境下的自主导航，更适合用于建图。因为目前还没有路径规划算法可以根据cartographer的submap来进行规划。</p>
]]></content>
  </entry>
  <entry>
    <title>ceres scan matching</title>
    <url>/2024/09/21/Robot/Map/cartographer/ceres%20scan%20matching/</url>
    <content><![CDATA[<p>cartographer 中，将求解 pose 的问题转换为求解非线性最小二乘问题，并使用 ceres 进行求解。  </p>
<p>最小二乘问题是一个局部最优问题，好的初始 pose 对求解有很大的影响。 因此，可用 IMU 来提供 pose 初值的旋转量。 在没有 IMU 时，可通过提高 scan match 频率或匹配精度来进行优化。  </p>
<p>匹配过程：<br>1、构建成本函数<br>分别构建 point_cloud、translation、rotation 相关的三个 cost function。<br>1）构建点云相关的 cost function<br>CreateOccupiedSpaceCostFunction2D 或 CreateTSDFMatchCostFunction2D<br>CreateOccupiedSpaceCostFunction2D：将点云与grid进行匹配。随着grid与点云的较差对应,匹配成本将增加。<br>CreateTSDFMatchCostFunction2D：在 pose 处进行点云与 grid 的匹配。 成本随着 grid 中匹配点位置的 signed 距离而增加。  </p>
<p>2）构建 translation 相关的 cost function  </p>
<p>3）构建 rotation 相关的 cost function  </p>
<p>2、构建 Problem  </p>
<p>3、配置参数及求解<br>ceres::Solve  </p>
]]></content>
  </entry>
  <entry>
    <title>调试说明</title>
    <url>/2024/09/21/Robot/Map/cartographer/%E8%B0%83%E8%AF%95%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h2 id="1、不闭合"><a href="#1、不闭合" class="headerlink" title="1、不闭合"></a>1、不闭合</h2><p>若闭合点很难完全闭合，可尝试调整costraint_builder.min_score评分值。SPARSE_POSE_GRAPH.constraint_builder.min_score<br>该值越小越容易闭合,即要求精度变低。  </p>
<h2 id="2、IMU"><a href="#2、IMU" class="headerlink" title="2、IMU"></a>2、IMU</h2><p>建议IMU的角速度和线加速度都要发布。并根据IMU数据的准确性调整IMU的估计位姿的方差（方差越大则越不信任该数据）。也可调整IMU的相关权重：（trajectory_builder_2d.lua文件中）<br>orientation_model_variance  角速度权重<br>position_model_variance<br>velocity_model_variance  线加速度权重<br>（因此，<strong>IMU主题数据中的方差信息填不填写没影响</strong>）</p>
<h2 id="3、odom数据方差"><a href="#3、odom数据方差" class="headerlink" title="3、odom数据方差"></a>3、odom数据方差</h2><p><strong>cartographer中odom的方差并不是从&#x2F;odom主题中读取，而是从配置文件的constant_odometry_translational_variance和constant_odometry_rotational_variance参数获取，因此&#x2F;odom中的方差信息填不填写不影响</strong>:(astra_camera_2d.lua文件中)  </p>
<p>（走廊长度变长或变短时需要增加里程计的权重；平行环境变成交叉的，多半是数据角度问题，此时应该提高IMU的权重，减少配置文件中其方差值）  </p>
<h2 id="4、num-laser-fans参数"><a href="#4、num-laser-fans参数" class="headerlink" title="4、num_laser_fans参数"></a>4、num_laser_fans参数</h2><p>影响全局匹配和局部匹配的权衡。越小说明传感器累计误差比较大，要更注重全局匹配。  </p>
<h2 id="5、地图提前闭合问题"><a href="#5、地图提前闭合问题" class="headerlink" title="5、地图提前闭合问题"></a>5、地图提前闭合问题</h2><p>建图时离应该闭合的时候还有距离就闭合了。是因为环境相似，此时可继续再往前走，由于它提前闭环，前面肯定会出现不能闭环的情况，这时候就会自己发现闭环错误，从而修正了。<br>三种解决方法：<br>①、继续往前走，走到下一个特征明显的地方，等待重新闭环<br>②、增大里程计权重(前提是里程计准确)，修改odom中的方差值（协方差值若全写0，则表示odom完全没误差）<br>③、减小cartographer里面的配置文件astra_camera_2d.lua里面的huber_scale(该参数为激光匹配的权重(即闭环权重))<br>注意：减少闭环权重会使得闭环变慢。  </p>
<p>里程计还要融合其它数据之后得出的数据(如：IMU等)才是真正跟激光对比的数据。若将里程计的方差都写0，则表示里程计完全没误差，建图时理论上就会忽略里程计之外的其他数据。（但是单个数据的方差为零，不能使得融合出来的数据方差为零）  </p>
<h2 id="6、SPARSE-PISE-GRAPH-optimize-every-n-scans"><a href="#6、SPARSE-PISE-GRAPH-optimize-every-n-scans" class="headerlink" title="6、SPARSE_PISE_GRAPH.optimize_every_n_scans"></a>6、SPARSE_PISE_GRAPH.optimize_every_n_scans</h2><p>指定每多少帧闭环一次，增大该值会减少闭环次数。减少闭环压力，不用过于频繁的匹配，传感器的误差不会瞬间增大的很快。<br>（30改为75）  </p>
<h2 id="7、real-time-correlative-scan-matcher中的rotation-delta-cost-weight"><a href="#7、real-time-correlative-scan-matcher中的rotation-delta-cost-weight" class="headerlink" title="7、real_time_correlative_scan_matcher中的rotation_delta_cost_weight"></a>7、real_time_correlative_scan_matcher中的rotation_delta_cost_weight</h2><p>（1e-1改为2e-1）<br>提高局部闭环的时候对odom的角度置信度，局部闭环的时候odom还是挺准的，也是为了解决当时工厂的错误闭环，但要说到减少闭环压力的话，主要还是30改为75，不用过于频繁的匹配，传感器的误差不会瞬间增大得很快  </p>
<h2 id="8、ceres-scan-matching-初值"><a href="#8、ceres-scan-matching-初值" class="headerlink" title="8、ceres scan matching 初值"></a>8、ceres scan matching 初值</h2><p>好的初始 pose 对 ceres scan matching 求解有很大的影响。 因此，可用 IMU 来提供 pose 初值的旋转量。 在没有 IMU 时，可通过提高 scan match 频率或匹配精度来进行优化。  </p>
]]></content>
  </entry>
  <entry>
    <title>问题记录</title>
    <url>/2024/09/21/Robot/Map/cartographer/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="1、建图时跳动"><a href="#1、建图时跳动" class="headerlink" title="1、建图时跳动"></a>1、建图时跳动</h2><p><img src="/../images/carto%E5%BB%BA%E5%9B%BE%E8%B7%B3%E5%8F%98.png" alt="carto建图跳变"><br>建图时 map-&gt;base_link 跳变较大。（未使用 odom 和 imu）  </p>
<h2 id="2、LaserScan-message-warning"><a href="#2、LaserScan-message-warning" class="headerlink" title="2、LaserScan message warning"></a>2、LaserScan message warning</h2><p>W0529 07:18:06.000000 10156 sensor_bridge.cc:207] Ignored subdivision of a LaserScan message from sensor scan because previous subdivision time 636944599764771023 is not before current subdivision time 636944599764771023  </p>
<p>检查 scan 数据的 time_increment 是否正确设置<br>检查 num_accumulated_range_data 参数设置是否正确</p>
<h2 id="3、IMU-message-warning"><a href="#3、IMU-message-warning" class="headerlink" title="3、IMU message warning"></a>3、IMU message warning</h2><p>W0622 12:16:01.567340 5175 rosbag_validate_main.cc:103] frame_id imu_link time 737749000000: IMU linear acceleration is 0 m&#x2F;s^2, expected is [3, 30] m&#x2F;s^2. (It should include gravity and be given in m&#x2F;s^2.) linear_acceleration 0 0 0  </p>
<p>IMU 数据异常</p>
<h2 id="4、SPARSE-POSE-GRAPH-vs-POSE-GRAPH"><a href="#4、SPARSE-POSE-GRAPH-vs-POSE-GRAPH" class="headerlink" title="4、SPARSE_POSE_GRAPH vs POSE_GRAPH"></a>4、SPARSE_POSE_GRAPH vs POSE_GRAPH</h2><h2 id="5、机器人运动导致点云变形"><a href="#5、机器人运动导致点云变形" class="headerlink" title="5、机器人运动导致点云变形"></a>5、机器人运动导致点云变形</h2><p>激光雷达扫描一圈需要一定的时间，而机器人是运动的，因此会导致同一帧scan数据中，不同扫描点对应的机器人位姿不同。从而导致机器人变形。 通过 subdivision(num_subdivisions_per_laser_scan) 可以降低该变形的影响。  </p>
<h2 id="6、重力对齐-gravity-alignment"><a href="#6、重力对齐-gravity-alignment" class="headerlink" title="6、重力对齐(gravity alignment)???"></a>6、重力对齐(gravity alignment)???</h2><p>重力矢量(gravity vector)  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const double alpha = 1. - std::exp(-delta_t /  imu_gravity_time_constant_);</span><br><span class="line">gravity_vector_ =</span><br><span class="line">      (1. - alpha) * gravity_vector_ + alpha * imu_linear_acceleration;</span><br></pre></td></tr></table></figure>

<p>此处使用 滑动平均算法：用来估计变量的局部均值，使得变量的更新与一段时间内的历史取值有关。滑动平均得到的值更平滑、抖动性更小。  </p>
<h2 id="7、消息频率相关日志分析"><a href="#7、消息频率相关日志分析" class="headerlink" title="7、消息频率相关日志分析"></a>7、消息频率相关日志分析</h2><p><img src="/../images/scan_rate_log.png" alt="scan_rate_log.png"><br>kSensorDataRatesLoggingPeriodSecond变量指明每秒期望处理的scan数据帧数(cartographer中目前设置为15)，当主题数据超过该帧率就会输出该信息。</p>
<h2 id="8、score-histogram-日志"><a href="#8、score-histogram-日志" class="headerlink" title="8、score histogram 日志"></a>8、score histogram 日志</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[I0703 08:26:46.000000 20966 constraint_builder_2d.cc:282] 10 computations resulted in 7 additional constraints.</span><br></pre></td></tr></table></figure>

<p>10 次计算导致 1 个额外约束。<br>（这表明有 10 个候选的 <code>loop closure</code> 估计，其中只有 7 个满足 <code>POSE_GRAPH.constraint_builder.Min_score</code>，因此作为约束添加）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[I0703 08:26:46.000000 20966 constraint_builder_2d.cc:284] Score histogram:</span><br><span class="line">Count: 12  Min: 0.555694  Max: 0.762069  Mean: 0.660244</span><br><span class="line">[0.555694, 0.576331)             ##    Count: 1 (8.33333%)     Total: 1 (8.33333%)</span><br><span class="line">[0.576331, 0.596969)            ###    Count: 2 (16.6667%)     Total: 3 (25%)</span><br><span class="line">[0.596969, 0.617607)            ###    Count: 2 (16.6667%)     Total: 5 (41.6667%)</span><br><span class="line">[0.617607, 0.638244)                   Count: 0 (0%)           Total: 5 (41.6667%)</span><br><span class="line">[0.638244, 0.658882)                   Count: 0 (0%)           Total: 5 (41.6667%)</span><br><span class="line">[0.658882, 0.679519)            ###    Count: 2 (16.6667%)     Total: 7 (58.3333%)</span><br><span class="line">[0.679519, 0.700157)             ##    Count: 1 (8.33333%)     Total: 8 (66.6667%)</span><br><span class="line">[0.700157, 0.720794)                   Count: 0 (0%)           Total: 8 (66.6667%)</span><br><span class="line">[0.720794, 0.741432)          #####    Count: 3 (25%)          Total: 11 (91.6667%)</span><br><span class="line">[0.741432, 0.762069]             ##    Count: 1 (8.33333%)     Total: 12 (100%)</span><br></pre></td></tr></table></figure>

<p>以直方图形式显示 score分布。例如，上图表示： 总共 12 个 score(即：累计共 12 个 constraint), 其中最小值：0.555694、最大值：0.762069、均值：0.660244； 分数在 [0.555694, 0.576331) 之间的有一个，占比 8.333333%，以此类推。  </p>
<p>score_histogram_.ToString(10) ： 将 score 根据最大值和最小值分为 10 等份。  </p>
<p>对应源码 <code>cartographer/mapping/internal/constraints/constraint_builder_2d.cc</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void ConstraintBuilder2D::RunWhenDoneCallback() &#123;</span><br><span class="line">  Result result;</span><br><span class="line">  std::unique_ptr&lt;std::function&lt;void(const Result&amp;)&gt;&gt; callback;</span><br><span class="line">  &#123;</span><br><span class="line">    absl::MutexLock locker(&amp;mutex_);</span><br><span class="line">    CHECK(when_done_ != nullptr);</span><br><span class="line">    for (const std::unique_ptr&lt;Constraint&gt;&amp; constraint : constraints_) &#123;</span><br><span class="line">      if (constraint == nullptr) continue;</span><br><span class="line">      result.push_back(*constraint);</span><br><span class="line">    &#125;</span><br><span class="line">    if (options_.log_matches()) &#123;</span><br><span class="line">      LOG(INFO) &lt;&lt; constraints_.size() &lt;&lt; &quot; computations resulted in &quot;</span><br><span class="line">                &lt;&lt; result.size() &lt;&lt; &quot; additional constraints.&quot;;</span><br><span class="line">      LOG(INFO) &lt;&lt; &quot;Score histogram:\n&quot; &lt;&lt; score_histogram_.ToString(10);</span><br><span class="line">    &#125;</span><br><span class="line">    constraints_.clear();</span><br><span class="line">    callback = std::move(when_done_);</span><br><span class="line">    when_done_.reset();</span><br><span class="line">    kQueueLengthMetric-&gt;Set(constraints_.size());</span><br><span class="line">  &#125;</span><br><span class="line">  (*callback)(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="9、Node-日志"><a href="#9、Node-日志" class="headerlink" title="9、Node 日志"></a>9、Node 日志</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I1214 09:57:51.000000 15236 constraint_builder_2d.cc:275] Node (0, 30) with 200 points on submap (0, 5) differs by translation 0.24 rotation 0.006 with score 76.5%.</span><br></pre></td></tr></table></figure>

<p>其中：</p>
<ul>
<li>(0, 30)：Node id</li>
<li>200：<code>constant_data-&gt;filtered_gravity_aligned_point_cloud.size()</code> 即：体素过滤后，并根据重力方向校正过的点云数据的大小</li>
<li>(0, 5)：Submap id</li>
</ul>
<h2 id="10、Submap-RViz"><a href="#10、Submap-RViz" class="headerlink" title="10、Submap RViz"></a>10、Submap RViz</h2><p><img src="/../images/submap_rviz.png" alt="submap_rviz"></p>
<p>显示 submap list。包含所有 submap 在 map 坐标系下的位姿。已经完成构建的子图，不再改变，<code>submap_version</code> 的值也不改变了。 每一次激光数据到达的时候会修改最新的两个子图，例如：<code>submap_index</code> 的 4 和 5 的 <code>submap_version</code> 的还会继续更新，直到<code>submap_index</code> 为 4 的地图不再修改而增添新的子图。可通过 <code>submap_list</code> 主题查看每个 <code>submap</code> 的位姿。</p>
<p>其中：</p>
<ul>
<li>0.70：表示 submap_id.submap_version.</li>
</ul>
<h2 id="11、Constraints-RViz"><a href="#11、Constraints-RViz" class="headerlink" title="11、Constraints RViz"></a>11、Constraints RViz</h2><p><img src="/../images/constraints_rviz.png" alt="constraints_rviz"></p>
<p>显示约束信息。共有六种类型的约束：</p>
<ul>
<li><p>Intra constraints：内部子图约束, 非全局约束, rviz中显示的最多的约束</p>
</li>
<li><p>Intra residuals：内部残差约束，非全局约束，如上图中红色的虚线段</p>
</li>
<li><p>Inter constraints,same trajectory：外部子图约束，回环约束，全局约束</p>
</li>
<li><p>Inter residuals,same trajectory：外部残差约束</p>
</li>
<li><p>Inter constraints,different trajectoies：</p>
</li>
<li><p>Inter residuals,same trajectory：</p>
</li>
</ul>
<p>上图中，只有单一轨迹，因此不存在后两种约束。    </p>
<p>最终发布的 <code>constraints_list</code> 中，<code>constraint_marker(ns：Intra constraints)</code> 为子图位姿和子图内 node 之间的约束；同样 <code>residual_marker(ns：Intra residuals)</code> 为约束位姿 <code>constraint_pose</code> 和 node 位姿 <code>trajectory_node_pose</code> 之间的残差（rviz 中残差约束的红色线段为 <code>constraint_pose</code> 与 <code>trajectory_node_pose</code> 连线）。</p>
<h2 id="11、Huber-robust-error-function？？？"><a href="#11、Huber-robust-error-function？？？" class="headerlink" title="11、Huber robust error function？？？"></a>11、Huber robust error function？？？</h2><p><a href="https://blog.csdn.net/xiaoma_bk/article/details/80000933">Huber robust error function</a>  </p>
<p>ceres 根据 点云、translation、rotation 构建三个 cost function，使用这三个 cost function 作为条件来求解最优解。具体过程？？？</p>
<p>ProbabilityGrid 与 TSDF ？？？  </p>
<p>pose extrapolator 中如何融合由 IMU、odom、scan match 三者得到的位姿？？？ 为何删除了旧版中的 UKF 算法？？？</p>
<p>在预估位姿的方向时，使用了IMU(IMU存在时)的<strong>线加速度和角速度</strong>来进行计算。计算方向只需要角速度，为何还用到线加速度？？<br>对2D建图，作用不大，前提是IMU重力水平。若 IMU 不是重力水平的，则线加速度可用于与角速度进行融合修正，得到更精确的角度值。  </p>
]]></content>
  </entry>
  <entry>
    <title>controller_manager</title>
    <url>/2024/10/16/Robot/ROS/ros_control/controller_manager/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="c6ad829927cba36bedddacacc4461e62ed702b3098fb2dcbf99b3e88e999ee6a"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Robot</category>
        <category>ROS</category>
        <category>ros_control</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>ros_control</tag>
      </tags>
  </entry>
  <entry>
    <title>hardware_interface</title>
    <url>/2024/10/17/Robot/ROS/ros_control/hardware_interface/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="30906a452d59b18cf0ec4bd11db11407b2431ae5ce5c807e3b49479fad6d1f47">61a285bea0bd1a3904d1b9b9e1d94077fd959dda92683b5ed352ba1bce4617e6d74428ed83f5b5774739681be64a7187788bb3159bf30fbc803fa193bb5b7ff1bd1ca52d0426c7623b933a591bb0eda4da94f8844e4276e6e6b76b2160e7ef7e996c55dac80ea24664ed3bd466890e7d25c7630d7216d505d7c0573809684d51c62783fada999878fc9e0373e1cc7bdd430abdbf35a487023e26295ad22759cd289acaaddde2cbcf078a91731aba0cbd6649b1bc1b799d4237e37b65c61b3d6cc6bf5f2475e73ba2e79ec3233f93ff09aa8c1d4dc96c737c3df54d16fa19de65e6e0401d528d70e6687b4575086985df548e6edbff8ff19a0cfe0d48b38af4fc48c42b3845c72aebf04f20c3a80f574467ab26d244ab398bfc5845bfce2e0ceadba0e6974f0cabb66276a2b58eec4e73c4bfbecebad112f62c14ea0c7bab027c6d49835fb12fd57529eac1531d4912d9dd4c4c08854911c33fa6488b25d0d19342fdc742d8f3640406086687d1d34863c498d1cd532430308a875e16b287d8b3d2abac56ecb562fb520eab341d4f6b32f4036fdff0d5c44003009a3c9f6ab83adeab6a95d1ababedf9fb5f02095979cb6cfb1be6bc840aee4802b8c36db57a783594cdfd104988d08d91890ccb234c9b0fedae717a020198c2541d6bd9da85c1c54258cf09b133d975156fb566266719eb1a19cf9e1550f5034ad9d9d568af11d35439a9e16f00317dc40aa254c9b873f474f675b470b1a6bf9bfde0fec01bedee771bf5150ffa43010feb40cbd4b4b8f93a43ca4b7e06a583399db9611f18934120ed45ba55db908ba2747afc75420afb7a2d2a7a1954129973c6d4f117ff2fe661505b6aaba6fd35eb1a6abe59de65d78c7b6664a32c52b95f2a5323ac14a23b1a97aee6539a91a0c85ed67f9574712341945bdad89531b1ef028c03265b5ae42e58152ea960b5d905f8c27c2f639bd9a37a921c22a056a03ef36a40bd04f75e6f51cf80d84ca2975e887d6f8ada50f1284344bb749d8e874b4b94d9389c9e10b0ef1687493de4eced0150c647a4e84974a2728c75a2583ec32dbcdff3161cac805652e947671cfaf0b12f948024e608b41075f434f591ab8805730d996a86377b7ed6af0e343022796feac348822602e23b09a1b86734f7c03b8c432aa1b8adba62af119821481cb3d8df81aeac4f81d69360636691084db2fa43d5324cdfa919de3c6abc64d1e6eeff73618fc3ceb112e367d8e704e870e0ea19dfc27bd6c8cdc3c912f5a21dd0d04532484718664109d2bf41e3ef257d35c4ff61b8561624662895364363029a99b98a7647476d0659bc4a9d8a4d5b6ec9584a87b04fd6c34c0953e810d88d126a361853d378fe2d1ab3d3d564db278d4b998144a56c342b7491e91f0a27069f04f45d2de3b3ca193eb0075bde0439ac0aa5c29709327416a57da2cd5ee02a7f7ca0911e2b627d6be48c7397cc99fe51737766d81eba6caa8dba6e8afd4c9372f94addf25f22094c50410f7e90191555cb94118906487b1c9cd22e8b08ed1cf4f77ebe393bb848145e5c121337191ea4a2fae7738153081b5b25a72ac948fb41a7642623b5dbeba56bf172dd466a17df0642305cdb4b98cd836004df769d944d8aaa5aa7344fb08e2ce011575145544c2886343c4f1c28dd61665796de8d7d59c778d39135e4922562edd8a3d28a73f41f2336b6b8ed154bc7da23347dfcf1333aa49225c1c6345da95a4f93bd094f34596919a38a46b37119a2da78a941711fbcb9ab4cccf4040b9adfc0b76526e922222281c0aa470499471f6b97ac27d264d5c434caf7b83515048ef98ee7c37d6beb822f6dee5e38f16a9292b4f033c4b263df282ffa026dd75e4016ff639feadfafcc0990c38ec0b37ceee2ff080152f0601ed57d7d114e9b6c02c96a3cf5ce228c2c812d3bbd1bba6f30423a3147a0cb329a045a436e2a4ab1511b9a81a725dc66783a72f4dff56e4f2b16aa1cfa3624336e3d0a376a1f90ba1153ae7bf72e9f0b339721ecfec6a84063afad4fdd368a753d6d0ba3e1d63c828327648255382e37f22949fedacc10b6dcd4e431686b3f1bedb4b6eeea4842e90ddbc40979689d09611a0b44c3706ce535d3f20eb7a055d755e42242b520619f4356ebd201807f74e49711d5ab4bf1a454ec8c346b5b359ae5137e60b005e29cb68d27f498f45fe7003264d4d2605ad7133562f2d576b56db709ee39df3a282b9297ac50b91ff5973f38eae9354de3c160c58070b93c40dabb5b9ece0c235b79b04865f56a2280cfe539755d6b8cb75e85dc9a4673a66df7a5b62e57641490fb9e883694695ae1f0db63046b2cde77c91702246b0c62d2dd586d30141b81c0d3839f36f6e8f58bad5ffcdb781be2742b425524d35f8b71b1faeb9888dd74c77601fed9225dfba6149ec297f56f2fb04b3c889929e055fe2bd1766c248a2e69ad4ba79ca5c2ddbeb44008043c6a5d56265f477b5ced6a3de6b11641f510f4ce85819f71d0cc4acf0762d443b4c97a402f9dd53e65bf5831baa6a8f66f01dd4bbfb616e3c5712114a5c0bcb0fbb5427228cabecdd8c22d34fa92385c8b033278c7c4d55e13f6b52498e0104ad8beb8008aeff6d524f027a73e3987c5601550ebc5c93a868fb9a5665742c94065a5de89d3c6d603203d8ed130f79a6aecba69f84c53af7bf282cfa1632382df359b3464a43706c6d8be07f44ed3c150c9fd1fc4806c592cf35b877386b5118edcfe81bd0d4a387cd57a91ba263c740651b6da34d765abc714c05d5fe7ba8278e4bd7341c67dbf9dc18982b68bf1654e46f7d4e15afcd8b1dd57a5feb38b85419319685c0c52c2afd985b32709675963ea39939d469321f5e79d5f882e89bdf3725346fbdb470c960ca9f040b1713d342f3db6c6669d4d29206259954624bd46ca5fb1cdd5aac9c23375038a2d9fb71d8e94fe2f5c59065ba45850b77a8e6fa99263965b47273ccbb8fc952f9e2a9a54461c83df47defd66d3d18d59dbec7813179605a7878c84bb34a66e555d2481d695fcb947f98f8406ade8bb4f3b551518b856c9a1016562aac2e03b97bb5303792085224c3f7fb2f9fe9b8fdeef7f91fdfc521314aa6ef2ee3700d11c7491f7458e1ce01ba835eaee09692605aaa1db71c5dcdbb6ebac9494b6ba1d17cb9bc92079202b13ce5b377d2c3befc8c633827ab4cbe2ae351eca073c8c29e0c333de0cec7ccf0622709eb11eff9f17b4f8b67247f50e5b7ff0121d22f0d13b049d11e6f9ac9a47fad34716c451b3bfc3a296c9d50010d1aae94afc6e5798acd0b55bed5615b1d880e1a1f595c01a25b7cf257e06e8b20e282a3803f56127d49a52ed79f7ab617bec6ac32857a9cadb2903af22c8bdd2a2dd57bc3180297089efc7ff6e84da097cd572b30b35e8bd76ec4d5684c32742bc2c0dae9ff97aa403ebe22778079151d5c23f6dda82b58dc9d2dd1f6fb1d05c01a01d5f8458a75101e54c00e2b063f5479297122b11a4ba07a52902cf5d1ea504b91d03e825979ac4a8f864892048a9915eeebfc748400a2e7677c8adaf4fa6fdc6387422099af615e346e827a075acb8a00d65a452c10c778654bc27690aaff6db714e083e8918463cb1bc288226086b02351163360d5d1fee52ba7b7df219fd7f583f621abfedaeef352f8f1e4ec860da5a0643ce72a918d2c01dca2c38242e1daa3b5d639c1cebf8860a384f5ab464ce882db7965ad6283786e2ee82a386ae8f013a6ce8e830299b8efd715dd2aa205e034f0d13c256b42358efa27ea42f461cb30aec74351cd733df1a2c82c9ea6cecda0fdc58f66d0b3d66d33510d90851893359d4f65b1f61c047b20d11ea60705e095b10e01bddd3a748be88eec85f6002c7ecf6f5994c7db64ae12b7f6f931404bb9175ed67212720d11a9ad8f5f00aee713f720e441b1f3dde543a16b27b92774ba87c3a7d4860b5b9fd6bb581ea4ccb813bc995478350d8b0dcd0473a7bdf4c99a161a5f0fd7834bad89c2f2f4698360850984adef4e401b9b53666e973d7380b33222b02eba302d28962056ce5229037ea45d45cb7da74f209951232f2ff188393b3f7f5e707b6c13b9c88d16d45b077d034221936e36ef5a41583cf08e31472163d2639156a82f813c93d499bb6c0d894c59742ec1dfac8358e78d500e220cdf0debdb86bf1f2de686a8bbf262f702943af66d3cf02b6d847fa001258f30f049ee10bb5c5bc0f633ccc045c4f95a0d7fb7daede6dfcda56e51690410b8bf4e632df18e8fa77092803b7cf0ccb2c80f511292e7ac9ab659c00f45cf81c3994694188a66b3b13ba77c47206b7a19330f6ad2100a3e08fff0abd93af217754cd854fe8c99c16e174828e1e07ded2ffd74d0ac81abe973975955d8c4b0e58f72130881400da796774b7121800eb516e2e71eed43e41ea441ad3796d8e6db14697d0a819a7b7b1aedb0fe4839a4cb79b21caad7427ea2a652c18e1d991ce13e276b7e7395d5826e1dfc0a3c6977c2db016024dd654959d204111bffd9e094906323784566d3e078e38d58aa8aaf955277f674de58f7eea4ac451866f64fc4cb1f66a10a2a0e1aff93d702e34a3d7bf64567ae3ab764ff0fd4ee2f5e6e27bf05a80a5286fb07e252c4b4d7ea4be8b841dea1bfb5008a4733a1ef00b14fd86888e7ab5cffe41f677fdc80c13c3ac2ba4378466abf7c90adf4cfd146b28a7acaffe25e79d32dd3c64bcbd583b8f10f0f944402e839290802df6192594c5931527ca13f2926a7376ce4b5025b09ef5d2fbef255a15cab74fe3c061c700ebf714eb841fd4f9c0f58822c154d8b1087239b95ca0e6526d7cf7dec33ca0417d94716262c9c2f9dc74d07ea02bbf3a1374f5720797f52af4b94686dd6ece8d0dcdcd65482cd03736bc8b1a28b5541700370bc865fa04342bc9c115e15096f4bb821c70b53dcfc88e6c5aa5a04ca9579ba9042f7ea0ad06869805b81920702773bbedf48a53c542dc8890a4bf1f27695cc881bdaa370d5970a63b4571e0c9ce6f890d4cc20d48d36c8effa3cc362cd518c609eb238ef3a258f2d9bf1393679aa3e3d41762c319c6a7973ef018c477c1a66c466c1c126112b4564a97c790e88019e93fe9e3f2af5799298a7468eb46990faf8fec8bd5c9a55bcd0ab7f2c8d0af6ef7f4cd70f3a6d5341cce20c94c14bb911cc5c8913ff2dd97635d74099b5d05b1599775802a9a3f10596c4a1420406f97551b2fa83c53c0f092aaf2638a11fb9da266d07c11876b6dd07be4f015fe235b2af30af62031e899ff0ce62a8f059f7c1c4e3e61c0cd4447eb18ad2dd65d3e0263791799e31f549b66fc28c452718227e10ff6fab103073a9a6509483514de52a206c44ed35d0fa28e0d56af569bae9152d6e05e65a72dd00b8b74643b8acb9e614fa85507a32f258c08301d79e8471676b5b1995417854edf258e1eade2adb6c52e10c4be75050b60e6444cf86e0c9348a2aae65222077435a3bcbc794da11d4f0e4acf1fa70aebfc9d1b0d2d9010b4e35f153205c13dad14f5120f82a0207963dc9d8951afa2ece97d2a036123ce850e87f1ca88abf794f8fc9431d00cb5e1441923f44706b5ae0513393b9fbe8352ac9ab3a7a8701d06fcd3fbbfb3bb76d8b466f30b7c1f60280f968f50f5b6e11667f48243e0b817a1c3705673735f1f9f2a30017358e8c3716bf6c5f320c1b32f17af6820c28f19d61f90d8e93afb2e39a8e320922c4e7dc9d9a6df4fe0e56f5869cf7f8f3600111476edbea6c06af1b8ff3e1f56a7de7f771d790aecc664f505537fae240895076bb9ec48a0dd28b39d68c693b2891c1ff5cce3044bf16316aa27dd4756c0d1968100fee09621d3856c438aa37cdafac6eb4193d1d2e95823de44db0c0951726b9bd5f5ea21a426978b7000e52401ed6503f77ea9c639fe13d912cf0f93e9eec74c31ae9d48f6879ac17d31404626431873fdd0078969a196e339b7597dfcf98dd617ff0eaa051f77557516d6939b58364ef3acc938ae91c59a96ef09a0f89363d0878f3f908d2326bf2c6269b862545fd461a17853fb892592d4cfe6cb0e885213a9841775b8569430dd7d77164cfb3acbfdde4d1b9987fec295f97ca7191c520721a6fb8dd7518ac0370de2764f88168f5c489f216e6ab3e2bd7d4028944a4e3d8fc08625596f6e3681f8f903449bf0279c2af86534e7ce28bf25563c2d6fe8ba22dd7f2c89dd84dcb12cd89621a3bd6fcba487ade53bafb11645ab6a5ee0df04845b17be4fee6b628dbc806e085efadc007cc25b928041a4fad63794501ca7c44001787560445c75db50fd2bc4646564f974ef98d00d3474124196a3768681ecf404525ea03f86145a575ada26aedbf88e8645203723192a408d3eda6ec4c070f7430511ae803be9f7b4385282f26806310a3028b2ab73c221e71c492f4490bde7233e2d7f21f860eb5357634380e5246075568a7ee5f8669802a41dc4476756a9cf0d148baa2e4b0921162430e0ec20f8748493010bc7ae4987c9865ee4c088ed08c4dab9c1e7ebb5e4ed2ea1878635eb5aad73e2025627869fa99355b0d9fece9abdc7051902b2eb3b02c910604f7bdad5fe1ad965c9d682c47c587543526fed0a11fa32913b0b2fb56c0d2e49446285ed78718abef22e9338e32c2c5a9768013ae483d6ed556e780a5a9dbae8a2a4c8696c7194c1ec22c728dfd8bf644c1551b967f38968cae1698c61c1fd5b53d77cb2f584769dcb5eaed435e7fcca592e8ec11228fd3dcd084747c4cdec906ac9f1ca6a8afefb8ad840e5a0e3a8d05169f922afba58f195a260b9fbf334a7c42a6157a8ce45ca56cfb5278e69521fab4ad083c1245f18900911c4958ef11dd6141c2fd8b003a36568d3762978b5bed70a8f5f1894bea70d5e67b840beaa8dabb0e6cc159391fe2fe5a8eff495737d4323e2379ea96e19060af42b18f49cb5ce7591582487c0b60303c6ac08a6016d392d1f49717f2499917821496b9b1466e0b38c294e84e5798e3cb53fd079446aef7769011b51d2e58b937c6b149f83baabbd8109c61ebd256256aa3304c3353b8c9e7333accdba73f3dad66a07ed1ea34e2a42efc83f07f828a9eed7fe44daece601ec86116f7a7da47634e20ccea14b3fe7353de6cffd285c71ba73dc2ba6946e6ac97ceabc5ba5f518e9c53b06e5dad8f57c01482dbcb3ec1ee39dfa75493e26c0c5f921f229f86f40d2737b10ec08c1524bc7de1ebb3b2817864fb3d9e97ce93df9e706a95a88d6631c0bfbe2cd18af841d5eda325d4a5f60e3c5596072fc76b31093fe2570ad15da63f14bfc27a71ade3ae8e16ba6ccc1ffe0434f154f3de61ed848e1ca582a3584e8824b00db115a7af9f1cad7461f9fe0a60eb46bbe87fe3dd5428e0d7e7cbebb600922ccd42eb3ab824140124e65d33f1e22dc27885eaaa85ee2f32a3b60b19a366f83b0162a64d5638e77d47d2171383ad89ac23230bc6ca6482ad474515626e99d9594d74355d1ba3f7a7a625fa56f669ba4aa8d313b8c36ebc18de8f9f292a9c2e647ac1120400f9957bc56acaa9af37e673ccb76d287f9028af4d47c115bc28f272b06903ee57a6706e13d828697254d9af4230531cb5f437f1c1b689ebf64b5269ecbe8c217b2999d6dd81d1778299c5ec6d502261988cc02254a65b616a21cfc9c52e0b068d25aed95d383c608ce7d410bb1d9dfad0b0d48872658908ab6a286c05fa7952eb707afda180cf0e928f008fbb40e5f1f5aac1b0b427d540b5021eedefaebb4ebbbfeea16a312fa50e3619aa452781a1e0ba578d2a4536f190816b7632fb193c35d3a962ddf24d13a7c061a80bf15fd1a45202748678291ad39bd41de3271e5e507e0b37cf66957a03e15d1b412f479bc74029d7f27df8202265ba1be57f73e3db6005e4ba2a2a9c41321d86fb46455048ca26cc04a651b67585c95f97155ab44c17effd7973d3409aa64573df6c20ce46c15567be13c9793bde2a2f9aaa0a6a3005e1e4c0569681372ea2f4d9ab9fba4c16e460b0876232d97f2282b69363adfab656093e4ae0c3d16e65307a2db9e95f4efda89fc9b5f686e51fcd09340a8142c1c42c1374dae61b086e21eca68af078542fe66b55d3367a680ba53aa6b21add41772ef2740b77710eac2257a78f3a007ff941d6ae828479905c5eb9142bc12a8ee1ad14dd05cfc8f424db5c729832cf10c0c4746db08390391760f5b3e31c900bd3502fdff1597da59e2d796ad5d8a77a627f759e8a0388e8670fb33c24c7bb29d57900d3efcd8dd0ffb8e21e1708c891274c6739bcad18eaad4ffd15129f9b9c9fdfca33809953fe5b383ebbf3fb5d528af4dd36b553cdf91c59781fb89aee699676a535941c93078849abe553051a9140350fb8920f42adc9b87e78a0884219d58e0ad7d76e107fb55fbb081319b554650332572bc0a3af097d8fc7cdee86e03302cbc192e473c9428821a4e882189e449884f26270e320bb06a704f44bffc93ac9fde11f894924cc27d29b50da9be110885d7f3c49903612077cfee4f0ab8e49f41a863064967e4eaf0dd3d92d9a81ed0ee47b9c20caa135ffabf413de26cf4bb1d689adaeb2c25045b7493f085fb36356e9e9031bb9b515a6a15ef1fb90deb88cab2dcf13ea8cd01e6a4b4535eff3f7bc79e9f0615e3e94ed80fc682f57dea67479b33905980f0c4cb30be35735a72b3ce5dbd2c8f3b7cc8f6b4e8b51f83e977c96b4717b1bf1e939d08aad5faccb631142e45b6db523697a1417677fe9681cf0bd11150da44efcee9639c0ccc8a64c0c078f5abaa445436d9780f3ac805e21fcc63d8ea1865dcae7e79ab815209392d422654abc2277e4eacda9bba067c67115a95e34d6dcf0031ca4e571cf8e1da167b1a78663f13f511139b8d93975492e27b88a620d67a9948b74f26128005518f6778cba3a19f8555f66f2574879424a9de27eadedaeeadd75738b61d3484d1709b854f614358209d33583a0101f728a397210f2832b48578c49bf9399262cc2b7da77f083b8e1a5a1e8e24916b2849786a05a351fabe035754817a35afa95073224031be7656d6248de1865fbf0aaa962260e97bed8e159db6f1e633ee1b9c8f5238cf7ca0633a0df3cb8476e2986860b6c6e7d75997b2cdf9f25c7814ff64d2e6ec806817276a1e671fc86850158bbd771e7d5b07daaa45532945639a1680943daf31c83a5654e37392ef5dc12f413a611c3bbd537809e19946405bb01b6abe712f29951f7901b6fa3ca52ab522a345235941dcfea501e5675ad91997da1501cdb905a6181159b303b315fbbdb1562b723f5c05d6d670b2dab0b7bb05df2bdd31a3e7842886c3f8d922909b6e6e1760ec462fdf096dc87b910457e29b5830bf2f5965b8dd7b6c7bd99e948c61a04ec07afadec674993dfc7c2d858b3934102083323c5c5cc7b8b9d0b1f3e0e408f420471e54d522c3334904ceea4022e23ad2b59571979e51dc83aaf8dd1951eee2462e212f38e1cd225e17625c5a1f36930285dc6c756222ba99da2db949566810990d322bf497b2828099bdfb005f1a58810e360b062d9fb95306b3b8d45e86fbd230f87276894a425fa4841e896147a73596aa4025b9a4ebf6b372f7952e3d9fc1c7733ba44bcf0eff2e6c95359ab10f05b53db839b7391390592c4b3bd6fac3b31128dcce4cecf3d6fb28b8f59c302a3c311d9cf4c8bb8fc0bb46538eb141fbe57426260e663b6940c56677e9ae36adef5305269b6d56270e739c98886b1dc415bb637375367ece84f1992b173545c499ce91b9e87d31f5cbfbaa45a78faa26fa266daad66e0e8f3388404958fef2a9b37027c400dd365f4dee0c174ea0703815dd486d84ec6d4ca6c9fe118e28468893684df2a22445fc4da1dc78abca26e8af78beb9c13b801b9d611ce1efdce97ab34c2f87153b319b76034db6ec4058be3860d74393320c9132da4f0db7d41bf11a7369e1ebd2b67dc71a29e0b8b8ef7c902059e97de75d635ac8e46da3c8dc50ad0681e6e806c033074d4bedd2529d8b556f9cdd78446e791c7a8992829b7df623eb49e6c35e2fa87560238d42c6dd600b1aa06e2c6229e3f920658dca47f1206d85eeb14740c13f5c09c65b101fa66d5c7222af367e299267f829b8c2e0fa4ca4e2ecf94beabe0f6c3593f0b37ac3f4e09fee82a85ba101131978f9d3c5d3dda88267079b254f0aa80a59df5a12887069bd95f2996214b8098fea8215268cb0635d07fca8edb85de99d93e9c978781520f82f9c53cc6ff70160cbb7d780c4ad9fabfbf5df8e8537c696f68d687b7f2eebebb81a82d7a37740771be4b90d8a521ace0bd4b8864242d2e5563a2a21c4d2d926c5952874bcc81237afc464a858bd37e87c78819b726d4182e91705064b9619e1bcce662eb6955e3e12a9708ec13b0e7268dd7a1d93fa777c0c7701603f5d0906836c262190815ac4e6f75c8c04e4d23b6e0f226df940bee3181fc6a56ed1930c634de66ac3e5bd99605e7a48eaf41f0f5fc96b3b8fd63846176782506d85d61e8aa906b80fc975bcecfde7dca0db7747e645768607785bf29f4b1db1747212fa28fc99cb90ec797363596d4355294e790bde1159e39e5353d2cbf597d1ed5c92405c864a49e3dc27d84d7cba0bab00830235ca226d48882badbae830bb35c07e59760b7e810d219d46ab5ba8983a188d61103e97cd731ab282f71bf156d634aa7e60988c8d4ea08944b9f8c5e8b8e1d5dbafdfc193c6e57ae688ae475d7d9ef9800c492c530fdce40f29365f0ea05aa6beb15d43a8bf4d06ae8faae4b5b1b5a73f4666251c211fe56744e227447a8c9f9021494eaaaea2ce578a6ab4cf44f79b7d6be1f08325814336df41f73089ea60d314a109b51555e95f5b22600d193be19b139416d7dd2d4e39a4f5c64d9fae5b8abd4446fda663a83b911e4e0f5d37c96ac02ed22caa57f37a363b367fc2d202bad85e6ae9346a885ac7ea08dc2f0ea86041f1296f0625183b2e8d33f178e38b5588eeb72d7dd997fadf6758feb2df78d1711fec26485ef917eea4d4f61d820bb2526681e9d991d59754400b93c06f9b9217fa4fa47e70c6e39bcbe588bc4072692f2cece9fb47848898bc168cc79148f5b51164b6ef11e58a5bcd0b704bebbfe5ea7649477225fa8872aac8f321bae90c430bb34f10c12b56749db683f6adc209b7758dd49ee9e3d72c8312894e88f849a6262c0fc951eab1fa677123d8115f2389ff7fb1564116da0e42e6e59aeb7a7f3578c15e9911946c7c52e9ce73bad752bca00f955e5d05300040efabdea234e6842f57f8f19f66465cc6f367973687a950f0665b1b54c5457001d2d7ed14aad2af9b01625be9795b237cc493231f59e673036cb9bce50a4d7d5c9292d6d69f2dbf047c664d0e3180a0884ea02ca10da5bd3e7eac6ef0878f315e37724b62f2061481dcf11fa5ec77f0d4347695b4a8f57ba521eb3d33e5e1ed6857081c045fc196e96a129d68534660c0c4e2d6b6b025571f4ebf70b87bb7cd74ab59d4087d739106b5388850f72397ad68882fdc8a522a32bb018cc38a1e78abaace5104c6d331b7a16251b8a21e076cc2abcfbbcdf8930fdc79e3a7149408db9df18961797e8ee1c889eb1020226035c4055dbc840344d5e069bc7bad485780043662c145391dc8d8d2f76da9ecfe73d1191845ac41f8ca3ff7359faf15218c037531f498d2f9526b81f82a0fd78e5a0705c6efecf81950ffeb40122ca2a7e4c311f7d56095e7aea94113de11b5aee4d96f2cbb25bc4520a8f15d71eba35771ac636cda34c5ffce58d9d40358c8f17a9937ae62b7d8e215aeab5f6205ec7aec27834d8f86fecf288c10c91bec0a2259172cbf6c82946463c5c71295bcd211f2b6104ba2e371797e7bceed3cc584848ab4d24d87e1cdbc117141e74a5643294ffc42c4b525b1b66522a5217c955340f95a6e6600bfa0ead2a424197a2b01d43591144f63bfd2a73a3f1a12033e71ed4b3981ec7f306982dc525980c3daccaa650e9bf3b94f49e68a12387bd88727454aa585da36cae72089926e4e6272149782a1b4b7276e98d20050047846402ee0f02aa6dd66bf14175e7fee3f071eb7f6dfad012eb7c1bf56852dd8ab4b3c18f4f649f3dfffe4664e32cfa2d225d95314d5a646c81b44e0b79d349fef4dc4aaaf113b9d059d7ed0517fedb37b12d62ff1a4606ded09ecb63c9d2c25190e734a376585438739dfb59c78101933ae73a4a4265db3cc88917ed758f18f567f53bde1ab518e89de4968386ffe77e0cdc5e45b787ea7758e7ae532999cc901ce2d13f630404e3c8a0972bbe174d59fb0d88b7f71b6e7131127f11d07bcc990f90d59cd484656f7f001e326e1d179c71b87a3b39adc73e443d6b964026b74c3492549763557b4b90370477c9105afbcc94e4f4eeb56bc84269396a52d9f178f247bfb4f37b88fda5794b92635d1082ffe3b20ac0877f44b12a82186565b7c0b3dd0e32e1e338e83a82e6ea505db2e31396a70e860da42093a46668af9483547ded087e0cfbb00b5f0a922456460dace7d1d8ada6fa27c3e721704a558dd53adfeb3adadb3a8c7a94184eee1a4bf1c3c319260aaba901011e6366947877fe0a098ad23397973c96925f766ca8903d83d5130a96cdb35bf28d09d3377dfecb8cd6553b7386239d5cdd68c71debbc36cf418bc06773b73e94678463b7e25887058edd23b1d95630d0d495d53a41176b35fc0ce557f1ca6b9a25a5e021bea9b513929ecbf25e527370d2906e656d6e166832f1d3ae69d096fd0360910151eca53e15f2708d70d5eed08947946150f12a7a5cb442819dc88cd1ec4e9a8ce5608a37fd15af41ea9409510857f6cb630ca7661437455104fdc70f3ba2e53475b78f2d3f8f16fa40d487232355cb5c3898582fa997a1c98c6d764bf49955dbb348cad3cc75d464e3d71a796d3612293b8c77d8608e94a02989e49cc1233d80142a2e18171ba22b4ba9cc25536b7a2abbf3a6108daa61a2d843c2718fbd500d98584823e3ab5f7a31109775ab4418ac991ec921ad71eb2b972e58e69c48ce3a898adb7049448193fe7f6123382e56db84ee297f621d498423e685f3d3bce219101da93438b6e72bec5b3c4ed6691802bf6a3db81c02e51101dde1b3f63edfbc3b4c0246085d7bdaa0f2090bccc5f5ecc6a82bcb0b07db8e3e90afe5ee3af2b0ea485663b48b72e797289412f8831eca7c5e0b13083d46017f4243193cc6043beb6012967b1b904ee71124f4211c74ac165e054b646b1d2d95c19a136ba8c803993dec0375b1f2cd8d5703fff3256fefe838745768cb9ba35c30eba5172ec2023b5646b37acf1388f6e8a1e5ae6e046cc1f1d821a9e8dab8769abcbc738d7871d5900d31044312bc8ea276aa76262cf244047619658b08edc34d4d04d6d29abbcb9e9d0fc119d8a37443155eb3d23baa0dcb799b994b4eb25379fd11f3fcb93ee635d39e36b718adc73d2f9e59b333c4490b6ad3a37431366e5b2f1bc24c05edd5615311158cfc4ed24f1ec1616bc387186f3b01c5fbdec4a05ea60ecce7b16f448aafa04095bd4609d81bb07e210a977562eb78cde219c20b874ae7700e2ee84cd060f24051538b7b57a0b87ebe31a30255ed98b51b24591b6f44006218611390a03d273c7f899f89dceb85ab683d20ef1a384226da75cc204a4a9664f783864a62dc20fcc5df26b3e41dd91ddf4ae58fe9136d14d1d5bc482762c011508992fa8c2665cdeec183be440963da98bcafc972eab5f4389ba67d78b9df5ee75cbe053d795934be87f6c1ee5e6da4cb6856388ca16f2163a2a43a415d1494e83f1fb4f1b9fe719afde9b971bc588058fa42a9886dc648cea6ea26c1d4d454c23e8fd380837e89627c4453052b03a4c8c30f34bc1b93f8dd45bb308e82b416fe599b853bb5a54f600da3480f849344800c1b9c1c27974fc3db0bd1a908f8770df8ec747087e1f499a76ead1a9310364fe877fb4859ca461f811853610d5ad0f9036fbb8be3ef5b97e33c677ca8ae0c90a5a6c1834280b58345bee370c38c261f99b2ce4910ae22c42dc5c1179c04dd1325947a33bcb6fe3fa08d2979c7bddee43afb87b5da93501545cf0865fe0ff70edd7058648484c774c3f69990ad3660c2feadc440cc2f34c16e0736547237e9585344aa1c5c75f8cb4e4a3224fb99d13dbe1344db336bf3179f4d28a56e80b71958f90846a70777c1133e5e1a59d606f384f6350e29a209b768c3f5d68b860f40ad063f5aa8e3c5d0572e25bee5189ad8500030b112fd436bb1ace6390ef410cd34cd2ffc4d663bca5a95f80cbd7212c37199807f8b2e92a1a2bd308d6f2ae1e3828163523d01f39bdbf6eae5d246ce7955cebc0b384f3bfddb63a45b76acf61f0ad0416cb96413c9e879391ac9194cb11407ab7a0c4c33b848bdc7105590bd392b4eafed41ad2de2d699c73ca94d9ac54dc839231d0861de28c8418384e6c86783b48b91c10f60f179eb3633b31095dc7c43c2e12b2eb9421074c452157bddccd27220fbc0365a18366688a4e9038b00c9f0ae13da1533812fffd378bc32748bbbbd8612938a416f32a72a351717b32d5494753a41d755533ca7a4e073a8a92121162edcc7ff0121618fd1b4c215d75cf8aa5a598a58283260bb8f430a0ea475f914b75bb52bcc73582162fa353a1cff7531209b4d1cfda5233165f3d937d69fd56126d5d81134b0ebe880baa7f962c570e78d25f85b80a5e36cb01bbb3515ab9ececdddc6b65dd5b3510965ba10a6b8cfb8f76d4cc655f1d34fb31bc7b18875c188a93bed460bf3d22a35d15c7936f47de869591ffbb8f0f13458b984c708319b8938a617dfd2a24f48e7230bc4f1b362c0aa7c39d746aaeab9cd1b2aa3a254b00010ad50345fbf0ffd3da3e4c9a1c123b3c0f8331e1983427a9feddb6db997a8844a6bf2477eadae461fb54cfd0c350879db6664beaa42b80d19a836ba5485f221cc848cc7915d6de72b6de39f644ddb1ffea877f8b77a34d27fcb5e13ee0e631e30a5fe99222d04a10cbf61aa47cf55daa3413aaae7ee35a7b5ad507b31f715d2605db7a6485321199b1ad95f7272b1c265e04ac6c6ea7abc93beadadbd945230abe906ece63561d8ff95e69d4a3dc76b49a7b7b4215860f50c8b63842c95662f1b156d3958d59e4e5073bdf6de2019ab2e3c96882a7070804124378c6c9ed5b47421bf0505873e2e53781bd382c93529d3634c840bc06e5288844d30396c51fa0e530692da52be062c7347c49719b43a017bf55400e09ba366c71d0624d16d7e0bd30ee8d8a11785e810e50504a3d731844af5543f2e5a55d59b747d9be31ebfa1f09e2d2cff93c9f33f3482ad437b08c84e716570d70b0e78142a18aa1c25bca6f338a6e6f57fd32fc87fe46ec19626664eacf56c1bf4927c6a9c1731fe8fb7eb1b1521a2d62e6a28c9accfd1dad841952d78eb00b64bc4838c71e5cd9877f8f521051e363d34d0c7b62b6100ebd64ed61d3bf6dc9cc43dd660918667c566a3c5b44088187c15d4e4780b872f28d521aef532536e0027683b3538cc134f436df78fbca8564b65590f7ef01dfaf136efe07e8c4ea80acbf101aa53f09bd337b3d0dcdf539d49c92216eafefe47175169ad0489a0737a87a5bf7b5c632cab508ba0727c1d2bd584a3fcf978c0cbb3ca0f6f67b06c5f47c9d60883fdca1c99ae4527060cbfcc0986f205c6dc7d81762f4298e675633711ec0d2c99b600515a10be30e89402c00f8dd02dfd5f8802ca90f52e452dffe7c691e240fe1880e4595b708060e44af0f727e9aa37692a9c362f31358cb57fbe0774da942c55dff47767e9bb88ea087fb5d8b2e58c1064609df754f64ec3ada4aecd45d876c7c68d02c0d81ca82a14e027e680879e15407d5564680bf9f60e8affd70ce63d3d449b894021f34dc444866c7485d9e30f6d5344baa11a183af9352830edd675b0a73787b3b447195f35b6751daaae10a6b54a3844c4becc5925e5b1e8f2fec57f37ec71cfa2955cf5eb76871dd1cd4ff202e6038a6fdf4505481baa0ab3ff763ed9f491c246165a9d0d7ad4e0d480c0078e36166c0bfd18c337de40f34ab92dd4d83fb3d48f7e08164acb2d162cfa72c738ac4f9f6c5624537702aea2d287e2b9077ee1f9267f44e41ff1db5bfbad76dbcca4ffe06ca76b63e6d8da3d424223354f182c0febb35db173d36cc0b58de873427dc1800d76933217c3e71390ba083e7db4d0caf5f21cc0393bf6fcc3136ee4645dcf3c87137013e3dced609e7fde1c926e61534d42f0eeb67edd9e25f28a2ac3a81fb29971346e40a8d9aa7a0355d2b70124a88c98f6381729f6e84c075786b493ec1b54348e9cdd2599179455db5c9a9c7df724534eaa379b42a21655bc8c0d6bd01a1d483c5f10f42616cde135aaa10e4b7c89cf15b21cc2366343485169037da3c8efb9f4f2fad4f2a3b0f9a55dd1a80b6daab6512217680ef1ac848a1fb84e6a077f992b30f3fd3c97d065409e59c00383fa58290e77a52eca68c38e3b24061524fcb8360d7ee002dec6faf620e3d3e072a334d812790da83e95951761390794b97990d59b9907707dc59300964387e869dfcd369fa5515604a08665dfd6b641248209b260c234087b20e7d576c49eaea90d15dd11433b91f7ff8b7bd49d6f54a2f137654cb80b5a4d1417a4f21a570d22d235ae535b9676c99fdf229faa293f3e63c9a35d73196cbee4895f87c90a342a5e6c2fd2ba6ab31bf7d0109aad9f854081d359d234f33cc8f501551adfa78dfc9a72042af6d60cc82350453bb064891b8ea9d85eafe592695f5690541399a37a4e8867d1e82bd483387559a2536754a6531f9b43c1296dfb5ee817d6f9ec53fa292d04f88e531ca1a07f9c72677cbcc131415a255412cfdca5187bb1b809f6bb5382b76c5751a4bc2b42e4806a603bf687c0c8fdd4835d2fbeecdde95958b5a76a2a5102ebc79b753d344096cba7b0f077ae3c6899fcb4988a8ff21f47e353afa8e3a0e6cfcd73f976dc3f5154880aa08c01d16a6ec2a08bed284cce8acf5c3db7237a5b5361aabd4573c215c6969f32862994309b1666f978df9bed40b38574a1bd867b29f323993eca22a7644b004ebd331e75676bde3f9b5087c7b724388c25cd08e6e610b39c46c391da65d235db861d77b0a22ef94c47e6dcdca6ae038b237956812c8310a764a75b0a6e0eee6a74ff52b587c394cc8721dd6be0b5194a567a6ab37fa2461efd0a790c795990385c86ab28770f087d43c7f9fb6c26e05f179985095537c53fdfd69cbcc06939d1838e918cd8db54ebeb283d5b232576369488b9a6576ba88cbd144d54d8e38a83bf3fbed83a88af9ff637a8c54ac2e10729ec114c435a1b2a9f3fc6e800b2efabccc66d69597583ec6a3336e9e3e52ef20bde3e1f8276609482f2decf0206ef6941afd23a31b23c2902c7c9070f5f1c4d11488bb37f7b45ec24c4aca191b68237ee068af37ac61829b8bfc5352710a480ca3b306224aeb464bb0a8bd8e0327082f8c73064b507cbaa401ca653b7464579f43275af78c90dcc5b412dc690810a8ce67643c813eaf37e870919ea07da7a54c7edcd0953372c68931533e263dd5a8423f52e7cdfbe0efbfee21d9893bd4a06a8e48f77c7578bb138669dc56fa166b56455cc7c74e728a1b2c8079bc49c995e412a14d1cc203beeb653f90e7bb0612cd1459590b41527de0fbbb322ab98c2ffe06ccd89fbad0b540412fa1ac8df3f8e93ad44cb9da54218be6992dbb652fe5c9db47a5cf99174ad6e08793da9bbd71d0205eb84a914c453b8b228e0f06f28dc5767f33a1bb76e15efbfd890bc46ed785774ea3aaee5b60592c7c385102a1f9df5c625c2dda8d6b913579263bcbbdeb344f256866694314c293546408e2ae0ca59f42added1739c8fdd0bbf1196574274b88d5c2172825fac2e36e320bb86bc77b994be3ed6328329453e21772ea07c47bafdc80103546999f69cfed24da3ff7bedb4054d99dbc90c0767d48b61e019f33b28f296ea2a381f52c5e3ec5dbdfa73dc1cdc4789492452303b97465cfd0c46ade56c8dea11ad8ed4a7ccd62e72773268f05f2dc89a49c95269d1dcdf5b0e4b75307ec774e96dc2d1e9f5c3715d07fd13f0353de8763738f7ea19171c4c53678bb0b978d5009e49692fd0063f1a31b54a0607f1e2af05dae54d8861ebfbeca33cbf36628a37efbe81205a9070c8789d51a2eac2b916924ba2645214f0fb1097d2db955372ec6a47a9b630f3aadecea6600c974d1e0cc986733c5ddcf76ff442f30c24ea84ee22c2ba2762409de8b8887262c963135bf62608d9b91078c47b53df184077584a43a373469674408003ed06d3fd99dbaa13e5936bcdc00774063814642ca912ff671610377285a857fd3a025c4ba67f06c613cd2669e232bf61da255666bfd9e280690d74fd2e4c8801f0a1bc7ff67d5daa3a393406c77e7aafb489bc69fb6785d9d7c554d1d2a9e3a389e72bb6ab968c882a2b589fda38e8ecd22731b80e77b6a48ee568c9771a0391d3cab217f2b314a2f6b0aaaf29833823c2b1a80e12340a3f65d88163723165a9bc5b49b778d254c0e35eefceb8dc4474b00fe149228fb00b4e51f4155f7c02f8779796c8a076da0a24033a6de2120464dd807bb58b083c704ddb4ba21ffaf9b80aeabee151c8e7253209c82485db94a4c02fa2a6cec2853081aabc083df183b2cab3fc12867053a434976a145440388297c6347590654d6eb2d181a09a1e8a34a477452ad0335eb1fb3326c1d4faf628b6c2de2d8fc8dced4fe4a7e87588061a07de52e268abde02ddddb9e046851f64f45d7b4a87c4305d7ea8ea0f1f74f9f2cae115f38ab45f6f5980cc0e31d51ea86ec425aa493cff17ca62b066f63bb0c778e4a0e67bac08ed47093edf7fafc434e2553d9169a5575fd2e0948415e77fce29b75eeebd7b443ef1d54b8796bf104aacadaa7a7dcd797440ac8004e3f65b44d26ebcd50b03b72086a62990d29e04993ae36f0c2201b74dc00ff450a72a418dd9731a46e5649c1aca8b9b2944f26c8b9337c4560dea7ced3ef48a0a11d2cf7404aeeb51eac3db5dcc2f9da5b401652cebb405f1fc5ec3080ca9557b491cda83d805aef2e9b22fa755137c63f1309a750b4b9f5a6979d29c8bf9e90a781077cc9d8926647427f510a1c78f4d43f934a93c0eaf055b584803d5e7d2c58d0a0382e1a47279d1739154326bc71de8b056f1a47af437986f4691fcc4dd36e286156d131ddea35db8f3ea978f7d09ca1f9e94a74ee5edc9a4ab646237fd27c53d80d2c827c203f2056d3bfab6e3fec5459519d9fa1b39b998f4c932ec3ba95a2a8f1aa8b3d7ae44334b88206acccb730c582b45e4a9b8e7a6cb26395f7db47cfe71c9abec4c09b58a2792dc739eacfdb925cebdd94bde2410dffaa9dc67fe7545e9fbaaeb868ea1e3024e5411b84cc97000cbc511cffa838bc39d557c2ae615949658ec6443878bfc1d88e21e859f454d761443eba9ea4ea0f12f5329d3a7c22b773af02b22069e42836c7368e2be63ced0f0544f5bc3db40b8cfaecd7cf53f30fef028e46944d560e14784dbad124256976997db899e009c348734dc2f6a3abb78fa8e63457d77671798c2a2a1e037d7639db971d144a8a6ebc43f9a277fe06a4651ac854d4e02d4f31062729eabbce5dc42e0212e514ecce7d606e9fddea0f4bc4b0332f7877d51a7dc982f452f7ae53e317576c5f5dbe8d29e3586a1f1c3d318b75107de501085ce23d45ee6536a66180b9bd0acc0367c15610a5a9b156b36b14bbf530c14bbe967376ee25b1f75f5f545cf3a69f0b07c182c85c6e6d20824a77427421cae0596a5a25f91db41801a306269770af3205fe33fffeedfe40826c8642995d185a9fd5fb4e99e735e1806b69e76cb47dc0c1c31aafd06356f32347afb38c3d567f034c3fd851a23b3bfd2b0f7e2f5e2cca8757d46091310a49010f029bf4548ce0f93abfea6cc192e0926e2a6c25426eb5485a01a03e93e3b467a30fb19666108af76c63eb94b68b678d046588daa7999d5de4142b94e9be21466731c273aeaf0f09c41a39c768f29aed3d8e960fc078e03a67ab437b6d86fb7fbb79f8b7157d90c8451aaa277754be39ff96ebfc482624d1d7e85d1165355291dc175f644882d08ad101e50566247fe7c3b5d39385b658a57431a25088bc887a68fbf43baf960a8a9df40b7f33f845853a557076a8e2f57ffdad1f29c6a361c9f8a991c93741cc53305d8616f6b3c82ff927380621362e511b40f79b87da83531fbd5c23b9dc1bb1bd119d4503042571ab12ecec33f0de5f6ba543fb5e480ee19dea49f1bb4fd4ad2ca28dd76ff8d7250fb463e58086d59a01e3f1fd100c9e6275a79f581507cde38c334b46081b2f2036d8491882c2834aa8c078f0d73c1ffb83687ff3d1593022f31bef0946c9234baa5adf7834da033fff941f46cf4bf0c88bd5e527f9345fcc9c66da95b672f334cad08613b4abff44afaf8939061b78bcaf3854e71f0e3be1edaff6e939749348782fad75c04f429785475118865a0f258df85ec9bdeb7c20127217b8df48fc69851d2e4eaf6715c808bc5695279bbbf41583152c05fdb6183fcb0382e1734f69a5a0696ef410648c632bb8598744238e88278053c245eea7a6e8ecf50b3851e88bac1ded595cc27a5b1133cbd3174b2c550dacc40e822a63174d563ca7024f194eaef247f6517be80c7ce04cf2e7d012be3bc135a396a3aa8e2d3d008b8e238e86a1466f3fcf6e3a49e80eb2f4b0bff0ebc3117d148ba31922a48ed9b5f393ac945d9edb8e4f50e46d97dbb90992bfe04341fb9e56b4766477755bfd6690ba65e43ecdf3a53e91d8f390c4b1875533b280996ffdee3d98bec2569f78f9d5f002d8939bb02e1a1055161075d8439ddd57c9c949d1103d86c06ff3b0b7a71dd44955f702f73bab47af06b8466b16b26e46d74922cdec48954d1706fa45a58b1b44d304cbee884a82aa310834a5b0bfb20e8be0c76a5c56c9402dabdbd09c19ea644d68953924def5f70fc4ac55c38418c009de8ac5175d8b3a6a141d6cfd7a92b57d1a0987321c67fd47277babac15b0db53d3f2cb0449432c845c84512566a44d49e47151ac96ff00838b2471e541b8900e981eb2115f75ade87dbdf9e7eff52b0a73c482454fa1cf8da828bab505501150ace1fab271ba72b7e5491c810be098af849512d59dd90356e155633c9ea11a76c46c166dbe17f951f2fbe7d1d8929da33042a165075bd06145de97feebce647e1b999a142a5e6009966961965d744996d5b4e040db390676cf68d7d2769cd091421efe0464d1470741611362192594c9f5421507a9ff34b990a24899d91aa5e2fe9a9fe987954771f1df273022f5f69000e48672aeef07601e28ecfd4faa6ce605b75c75ce68a94aa216f914494e0bff27fee15cff71dfdc8ab49fb6093d620648934317217c4f5426e45d18a39d928f98620db732b9bb9733dd6040e8ccc33689257fd5a879c982c5200706c2c424141ede067494ac78c4f63dcb2a4808269564a5cc4354988c8b6545bc06e5e5890a8004254cee4122b870091121e24833b6e6a782e75c5c136c6d372ba26d56300a1415b673b482cc81e4fdae8c563d8defbc824511fe0b1c730efaa705329d886affa3e65a240ba393d0df95d93d9e01411d99e151433f70dee77cbfe9723d65c64ed57f671f81da0d1cc20d0ffa1803ef4855d7be6e07c6d1f91cd93dd835b2331564a89aef6595a5f8708e104243a498f122378ed9bd7525e95c4de93fd05b5afc554272f8b362164afd5f6ee2632f4fff274abbde7fbae890f86496c435e65a663ec369f8ada673019998b47274b6c183fff88f3747547739fec0bc681908dfcf88fdbd50942c283f44040aac578d9016765bbf21dd4af0314b8f962d480b9572258fbb34d3367804fb9cc51ed4e06c28fa2fec410092becf22cbda27d177e7e715221f33e9c450e79d45b8a7ed6e26185d9cc68dc530d775d0c06ff17493b12c112a6e9deb0c2232b47a01bc6ea99ef452fb600df628f10d767a1d264774577b1bd0c520b30d39e516d572a033e59697e211b0e32521183dc7943084760431ac66505166d710efe0fe5cb9cd13c9228953ed8c613fa91e1e7f3c84d524785b6da170c4897d74f5b0e473504c2dedaa5a1a4ff9c8ac0bf227b5549c4755d681f63033afc21e7233a95189721ddbd3ed02c4803b7368733e48caf6eb8456121cacae9f5c8268c5d7062255503dcd7b141def6f376e30b2392bd1c532edf6c3e7ac08759f12614ebba8b5bfd1458715e681f824c4f0563662dbdba9d4b3fdf13185639054b64064c8363b71ccf645242755908383e270ce29c3c02b6bc133509d99c0662872c8b3ccbb8a5b03207d37687fa38a0de8d19ddaef1a7f3579f5959ebd93a9df426ab69994284454d22cf71e7d46b2586037e0e13e55be150bedcb6d17e195813f133168a21c04f388cd31f8a7cbb5a07804b23c1a4d1e5085597a81eeb5f4920f48236d033670d04a4fbd268ca4caeaa89ab960a8dbd67a04b5621af8f5de74a73a1a89ea5a6906491fd1e937f04c2d4d90e17fc6efe5b174dffbd09ec8ed9fffb1e14c081c56d3f7d4d498d97fa8d55ee3190517fe06aedab69fa243781f2088f0e9b3e89bbd540655c86b361f73211a4d1fbea89a7c869103c2520b3ece86df934d67f2a2bfffc996674f2e7b4b7fbdcda752d05564878985b55ea0293fac66d9e955b88a404edc18178e3716f04c1d8517c15b7ea2e637ab4b39c61af91f0d31f148051a8aa8883cf3aaa27a2b3ea1f5d82a786c881bd7d111fe7bd3c786d33327f5f5a213fe383f1e7ff108a57154866d12ed0ebf75eaa0fa5a6626fda5ae01db2722931c9d3171c35c850fb34f536eeb812ea9563f13a2f64aa3dc57feb0c1f399787de0194622c67ec28831eca7f60b1b7efc0debea9450e7755a9d9e9579a3cb1314385fdc5bc7f3be5097895e6895218c8c112a0f251391319a5bb902437e42b74dbccbdd84f3eebf0cbd6f02cb72a47561aa8b026969ef707d0e930e2fad5fa12f91898a91de47037192cf2c6054bd855d0570d7c4be77ff1aa8fb9256eca3922751db32164637cc27ff9fb154e0a1741121c782300cde4329c749443238a4ba6ca92d15db1ba1a5e2ff7d540f0a2dce78fa1b0106bc707d584772862970e66402295af41b843ed9d62ba0a434deea4243cfc5db862ecadeb218d4d57c3cb0dd91b871d29d701fa30ae3080116422b75bb85495c29c2bca1223cdecd1885a29f07b37bdb3d18250ceea4235f99ecee93bd7ab594a2912eaf5995a3a46fb156145c0e8572374906b7887f1bf0af8daa4a145588dff0c6cf0672a1b08211b417b0a2c965049499257c85c97fe3940598287183bcd60a216f75cd7efed4498ab0321f2bba9212ff1907b0a159d52130b720d0c73668b0239d3966413ab7490f614e2ada7c886c4c36515adc2a6bbf59d4b5520fee3dd3496327822796bc6ccd4666893819a7bbaa7244ca210ecf43990624f04d144491f403d25693c5ef2d207f1d16d4322c873abe9f7b64212ce85c116b4d6e14cfdbe43338d7b966ad69d1ee4a18c1e5bf8b5f03055da3d37c05658bfa00a701a37f1a05c327e7f57ca2b27bea919b783266ea87efd5c0e2a6348951c7689e82c6a67129c9f9f86c29cf17f3b0f9acfd6e9e0e5d2204ce629cb0572fbc02363bf6abce02503cc4c81355ef95753defc3357c85721e23b0a58949522edc682672a3703d6312905ff5238d1da8c9551d7dd7e577a3c8950c87dbe440ca1fa7734e0f8ba43cacb384ed269278584eae27028c34c0bf48b55adc59494e4ad2bd6c12095344f7625d9d753b89e12532ba460b85b4a49554116d2fbf594063ff0ee0dab74c42c4dddce9d8e614916d0b8ea2671909cd6220b2355b226c782e7c378397b98ce0bf48cd2de2cfe3d75c972a8eb418de9d4dfdba1d87feec104baecdf709795e184afd7e2b63d652497aec86b20dba0cb809c00a5a6f8268866d0b7de7ce932d22d20e49cd83dc89ee57973bb87bc12ae834a7e7084c85afdb0a0d55a9cc375c7592886261afecd2082a41b48880634da2654da59c5b1bc278a44a5abbcbfa8fa3eecf8514d93c275d1eb947108f786326727b54da6c662227c32fe8ba39ac992d66946cafbde085e4260e7839d5895ae30318587a7529a0725ba99c363d16ba5bebb6bc555631deac9b07858b1028de8bf36a9259a2f7f3663f6de79fde0a8a666ee83c843d7267c718d9aa70660854b931c23c02a2057fe3b446cf3d9404f30f5b0f206a58cf388b68f442f056d4854cf42ece0026f51443572b693d26273257b2d7426753b61095b538e17ce070593829c0188129567f14ba92e197e09d0ce62b9b659613c06175c3357c96a5db9622837a86dff2bf15d666b1b67a5ae469788ade999d037dff9000654b59420e0d3cc9cc6d1a1d316d027b862efcee7a1cbf0b955878c0b51ff8855d8ee4df7d27bcfa3995e5c6b0b37262937458cf62f17d31d94123d4fa17bb5a4ea8575ab937b2593e1677aa1b2ac026f23b15ec86775b9c618b2f3205655880a992f50ceaf97bdc1e70d944f55a8107e46441d8347ad6e200e03477d0240a7160b16578dcd08912371eed50ee1cebcdc0a79fff97302700f6b62908a4c2efeca03f03f9672db18c849fc5dc7ee2c675e33a75713ab5d24df9f8da0ca85b26d3a4ca48fe05f606e5bf23e5c827fe06dd8786010228d626e5d5aebb0e85ba4928a6446837cef23db992a6e2b84cf564862d50dc6921ca877dbbc48ae2a411db06ff3f092a7b398f19263fc2d0c72289c47f4bb1508d2bfbf0f83a463da11038480e4098eb2c12f18e6ecfcba194c741885bfb7a67fde09a6dc63537c715868dcee9a0c4f973ce8b4030d74ab3c4318f8f3b4e092b23e77147ef564180cb23660943b8bd75e1a8a37a2d12d276ff3f9f555edcea2ad7a9045ba72a0d08d71e9f409542854d458897fdeba18ddb3e3681f214f06d17b254d4052cf61f5850ecbfe66528d42613dda48239e28feb54cae13a6e9222ab0dcd67eaa1d8ae6e95da0f5ce48613d21c4fb888784d90441a56e5026467b9e1c424b872be00abdb2ac68bb31f2956975c9861074638d6290d5087637c97e9c2097a7ded0033c7b9c21306f0a398daebedb6e80bb3d3073d76afc9c4085467bbbf4282d02b02841193eb721c48c5fd8993a6963f7557efcad714f8b0bafd3f6edc80d270683b9545422a9871343e62b023b2b54a5075426c13522602e0dcc938b5aa744470ccbc2093f3a33a9509f3b2b1970f9c67a7da621e1e521ccba6931de0c1793090d7134aed03759da3537c4219d0e2076f8730e5ea838ac2b72b933ec5f7d19d6007c546b2fb1eea8a70240da8acb5264508df8a3836a36f58e20de8f85459b64f4ac7826f595c9afb650d2ae2a8b69946ef0813710ca5e5adc7ee1b92a7c37e7366bcf774534de0b292466c37dbc10baa16e9eb5039f8fd7336fa69f399f85a630a948dc64a0df6afe5f5a042cab3d23d0a9c87d29ff9b465620bd8ad890b9ba371a898933869f40a7a02fbb674131267497ef88842101ac94a02b197e61fbb74bb1d0cdf548b4d0660994bbd534d95a3d3fa5eef3140aba396179025cebfd0ea868dcbbdfbf42a54aefc9009d877fb600b725f80ace53bf754468a0ac7343760957c89e3f6124f3a48a0900a9f720844bdc21c999831de4b96241567f918fbe9f8da6ed336f4b625e9f2b2ac478cb515472bcc00dbd84699253e031c51907738c37fc83865d5a293ac541aa55f477eb16fa948600c330d98e248633eb11ce5f1c1948bb077d9528e341e019fb6a7994a027203e31b5d84b3222562801fec53e83029dd47a3ea7b7a34665237b98404495937cf12a34a28880ed5f1830753dff5c5649ddb7e53cfc36c645b52c9549002afc4061478d1b2067c5a61344d0e9d096bae1efb34674bb037dacc7e47cf64cd8c5f4036b7c062774af1c0e8b25628f85951dba8577f203babb019402102f2e4618e86b8a58cb961a990211434ff45f2e53d1996af7ce9086f9f336f4d7d3a3c21fb6af3994f8354b45563c45bec1a7d21bb1186894b393d62745acadbf7eeeeea84e24e55af09e2d7cf95d32547e9f34947c3815f880817e48c8f70a47fec4379c17e5d6e7722a639f4bcb01a2f0ef3522641cd67824a09fe33925f55908ba4967908dde3c711ae0f6238352888e1a1b960c5142aaf9ea1824a1299f3379424bc5f7e7980d6db6f150ceaee41f967df41924d8828bf5aeaafdb702793476bf911706b7ec1026490dfc4b81288d426b71de1b815f5077b7d06b5d2090ef6ff2d0d3fbc787a8afe0a89f63e1ee1f6c7d0c71d5e58e4f00c666c10e9b0f62763e505f7e4d4733acedf695763611482f2b305e0ccdd83090a3cc492dcb46526347613d2820dc621e5c5a16d88511c3639dd213ed58f9b954fbadc5c6e0d71ba96490bddeb83b4c56433f1836833983e738d65678a6743e195845f00b3337de8e3db8492a8b9605922be04eddbde865be32493ac510c10d158231c2fa4078d0f8d53da50376246ed520b7e3e9ad142ee37613915b5b1ccf73743c8074b33f3462673fd9c128aa8c24abab00fb7fbc2b3ed5038871b4a4db49ba35cab24ab81c459d62ad955fb515cc08d89200e7c127ff649a09c70c77d0249e5863b47aa949954c322bb2f436523ea6c1f06feacb9bb1a0d89d8ea155055f8e2123d11d31797c3b240c2a73633b49db52cf27a276a2731035a016bf1e6ca1e46eb7366cd7e426b7a8c0cd69aa95e779909407df7816f2129dfa9e3e50517268dbbfcbcf2450bd6512222173d92cc2e2837b54459bf56ab59b5e2cd5429656056aba745da15d966987a1f7bcad4c37036f5f8307fabb28b6bdd421571dd9c09325ba332c553553b8217591c45e733345fb8ae2b415875280f895b5309639589aa480d0ba2b61dd7c07f5740732b40e6948b36f2a19e54ba87ce79921ca9b39331c41c3e52cc2834da759ffbdad718ae43c57003c99fd03d3c66039ed5886fda806c08e2ef008c0877e6dbaa849cc9966fa7114e388a96a16bafbde6646dc866112133ff1e54467b52ec50daa6dea43879efeb7f1a4005bbe42318ecb95be8aca9f1ae6488690b438fb7dcf74979fa81efe977aa3067e5d40da69a61aa9addeb30dcb621eafb03105be3821a44c3fc44451d75fe080f316544225e7bbadd42aece73238ca8af6dc4e8b898da21db8accbfdd72c431be06ccdb186f1c1086c3c0b0cc2fc95162c62dce3b93239af7613135628704c45b036e602996d23f94260ff2b806177a51974de54f91a757bc6f4bd23f27fd98600377331c975432afe203ff602ead073c7024307d7c740f72c5e6d8e5e1e4c5de7c0785fc73c15bf7d65cf45f40e91f903fcf812e217463c59b8e81fe8af0718fa11282344a93657fa560aa7937e5bd9a49b1751e7b63630ea43ce7b31681e3495dbc73b12aa424940cdc41b9e006240c4746e4157afb49e435c8f773caba19cc47cdf13825312eec3ce8f7b7a6d76524169b544127cc9debeee2f7024552c7dc56010e842828b06ea4658a9ab9dc166ecab32404f5e68eb2b17ee6834873fd5340f654788cc1b836fe5850f009032052086407d008b880440f138b7ea55c7be3d82943dbbdc3aa8e73ed3b85dab18fc22491b9b21113465f984c6b5a949c64656d33390a9b03468568456d148e8a975a12a2b17b14551ac0efbc4753282457f3799029c3262a4ebd6b8880c00691c3142d581187a27586b73857b1d961c564521e865d33ab9b609abbec81e6940c670fddfae8b1319490a432334939b83c39fd1797cb6c098b3fbdc2a15bb90f42660d1866d3a7bff9ab67f77e8b334ff7dc4b6ff3cd86a67103b67c765907fe317fa616de8ef3b9e94e34b0fda5405fd6e9624c8479a4cfb0431006f7c559af51d146a68b953b0f695a321ad80610fb378aeed9350b69a7f5e491d5160b7b00088e09501908a28e9be91caf79367f78a5abd50e903d5bc8b4e2b6f647d0a49dc91c71a2f795b67fc148ef4d6224e5e0ff80dae4ededf854a167d96d1cb81905647329f5e963c9ccb2b7a531678dd3d2995e20f6dc74d379debdfcf6cb3d602a4cdb5d4b38a257cf72796205d0901253d9b3a3f3ccd4828ed70c5da8fe85af5a3ff7798962b1eec085305e13b2b6d1efdf577dbdabd397f605385c090f4ab4e2fbefd130122ddabd08c74cc498752cff595fa467a346cc32b3969a456bd2007d19c45c2d01477fbda6e6f6e4513f59db5ccde9a3517d45bc657c143ea9082e3432d72b261c19cecea953b8f764d91d1f74ddb1d49f8bc0a7f486e1d2465a0e643c9f3fd38e3b302d236c79dfcfddd540bc939c57e4e76968ce9a9735c4086aad4fa4ef18f0b81fc6bd74fd14d9c3dad5b87cb3fb65aa92951111a58e5d7573394fb1b6fd8c147c15551cc7b9d789c93e61b82490c6cbecae9758149992806001bdd5bca09e3aa029b9db10f82f2f8c161404b5a3444fa235d75807288324b7900b606d4f40cb057b4318a402e72c1840fbbfb9bf576a74b5e7e7fd9d6d1d78a63af9d8fbb58943d3b07536501c76b0efa99dba9b786fb630c09961de0bf577b23a98a14e508bf88683274bde54267155542910c209a74cf5971f5816dc7e37e033f08da29c42a1892b90d0dfd0f0eba2d0c45538c5c85782b19040a30669b9938378b0040f931812eb18aee5e0928bb9d90d8ae5e2c41ccd2b220dc50e55b2c9ec9c4bb794a721b771e66f6c576a74e8ae5ce5cac0751c14f31131ad6817c58498514befba0b0db3a0e16aeb6b83c3f5def311951b6bf171c46d22f13eeba86064476222b9c7ac60b3e171bdc5bee16d643217bdcfdebcbbb0df4a0e23ad56289c7be353da6c84e370c5dac5fad5069202b440a28221f48b4257564497b09614be0a54a5881fbac168a422c7a7c3de4cc451280ffff183df43f7c28566a2f10f7f91d93843b36fa646cd262560281b8e578d04140e45cd8dd63dec43fd68f601c75bbe061a5a2a1e850e5ec7c2d88a55918ae036fd7e3651d3da85a1c77d18b0c973d7ce9bcccadf1eafbe2c9c56e0b5db550bf47477786a744163eb6ac7ebf6257bcbfa021fc78dd2eed527d885151905ec08e1a0724bffd94f5d6621888ef8230d2fd8fd75ab5646e26dffd49d8699016bba98c4a7ba44462252b9665b024553a9cd34332c56c64f684c392c5ac346199e6567e3533dd8582a50931d75182120b3f0a144ac9d1bd0ef7d71d622681a4a16b1744811078347c096c0607de770be31cb2276806bacbdb5428f3f02acc5644eba3dc359c1ef45d637cde5fa4158475d5f0ec2b8f29db5ddfaa036d247e18b7bc62a3987e6ac06d81fcb6423a944b7ac59df91035c3b820c872c603d129d1c001ac0c3c2241768e1c0b4ca4cf1336f586e453737f36dce4406e53f14739e969b0767f3dc911eee5ef9108e397469217659ba1f9942a3109004eb9c3a17b583c331eb6ef2c8d86f3a3b898145b4cc2ed0113a015f15439b1cca000c22052a599a2be69644c417085c79b0b8c93386084cc249883c660a9335dd3a249896a54a5523414bbdf62013163f992def78907dae807e1ad43de180c19de4cd35808793120d0dd02362c79799a48b02f39a34f0c51019bf59febfa7d2d19203831e9490d197e759e79ff66e9d6bbdef7697574b0df2b9a95b8ff2b349b051cf4bdc0b8ea57329c38b13e078a158525787e77d3e6deeac9de20786fa8a49119d4bf5861e74fbc277f270166e474191df0d578a7d1698e3a04cd5b0b1358dfee81c545e7047f951b744aac0f1b15c994e1e4b08429d4cea1783dd02bc572b5bba3abd2ee6fde5e071a17708aaeea5afe70dbbd7c7d4da2dda01fbcb4c10d9a888d4c48108bca0829f3bfae075e7a206b38fe14d2b1303f1075fe05cede211a84569185676bf8e071a15fdf12569dd8f336f544117811eeb76f22f4f2690ed0256ed53856a55c73be31c29e9fe7b487b67943d1e2dffeeff5958bbca5d5fc4027df0a75e8cefdf387c980460950b3f57c76fc09661c44a5dca3fbda2c1260cf72bd977afba3b8db1922ae234d59c9a62df18ced45f254fb28a23fbeebfa3855b0f3c045b34d7be507cdc283af83e5b28730b18d803203cc0d36b533ff8f6198e52bb4441dce1b681d7d50d95c4b9dbbb2dc8ed1d4043201fcd7e6ba69c918c2df9ccaa067e68758814c64696db52d168cc6252f6457f6b29b99f3199fff4a3940d465c7c92d8a6d38eea33d761cea19d2d7a1de5b2a6d42b1feaca20a93ac1504ed4fc3a3b68dd6efeb71abcf793c365f35f83888722fa08043a07de4b961baa12505133c260cc24c03060fdbde9501fd79c7e1f01cd97d4743ba9e004b75ac7be39b95db225cbdb17b48713f0e6d404e3a2d8bbe32f4db239a41b26f658a4041ce5a6a1281be5992d725775541b5639739a0b2015e629585ab3080ee45c049029b56f6e8b6f1ba6adec1c28c998d0bc7ffc5294115fc39264733ae9b7066bade57cce2181083bd857d741d056307be3b8a75f664e6cf8138361b9ad76d4a2f8b22e160f2b3fc53860c47b8e0d1ff869c6a80bf2efbed141e0595b067a9be1a3b85411e471f850a883d8161c62832c96d5def03ed4a2f1da22b9c3bb9123989c47c2a08d72d2807c11189b0d2a790817c3c62eb24e84085d43235ac5a84e9e15c506fd7cf81ba4b16e3359a0abe7327e81319ae66681217f6795e81a632a54369b46eed33d65ab70e51ef6f60227ed65f6a613b32a758e54b93b73473b5519b88f6435c870666459c4ffb32c36a58cc3307cbd86b2d782639154b90a2b3231d6c8ed9c2cd34bf1291b79061c2a0f12b8ee63894f5249f2d543a2cf268c790f0a38d3c6823426f4bf607949c3b4e57b2065ef975837676b149684ab207dc47ffe5e6aff5c9a11eba45dd4d37e112e742ac1d0c3eb9411c7010581a7dad80a3256f1fa0b6c5dc2ab3e463b54b756a2b2ecefeebf7f4423840facb876305f406a280a990e740186c318de9cda0563832c9fcbe917456f4290e050ecad04929db67904da4b4aa4c51d4834030503a4f586136821008e82a3fb3d42d900b0005eba206d0953a3f433a201717d8304d4f24982978b8199c2c5dbbb16e3764ee90b4fc759a803a4eb146d3d344006a890e306c8e9038fc2eb6d25b457f6aca4e0988319524aee0058d6a2b949768ce3dc0a6427957bc683e8d9deec5c4a1577665f0065beed16ce896f63285ee60881dce2d9dde54f9828cede948d3e21225c3836f72c7e5ff1b3d21462a437cd794d1e47cac893871ba952d342447f166a33cdd5951f125a3098911a1d0d684e08f134cd947a0fef8c2357d810c92946aa24fd438c432fd06e30a7e50e88f2b6f8dd6b7ecd45407969fd03685fc35ff489c73fcc169931cd2bfa1f55a317f63ce56e2708936e98c4493ab95247db0d2569dfa341010fa94d9ec1d42e3599a2c3743ff48945a7588030da87b1d9db99809630c79b0978e375a2b82eb86cd0193c1209c0d08f6d991a9de0e60bb747fc6d18363e77510a28225d6d4ae418635001af2bcd5dabd470fbcf9f0bb4efd884c0bd7e6a574b0497c31575a79c277bf38535204f1170bbee154b89eb1fea6685946858cec9f50a6236324aaebca26b536b3569daff9eedcf7c40fd2856fc1ce4da8b5ef76624ca27c8ad9ed8c9167be9fd3881b00baf8f39b8c4622b50e27626d14711b59712303db1e8092508cfedd6c59f981e0873e9e49ee5e22e5d0d0a6e3dcd89b1ddaafda6f8088f1c7283445535050211bbe5e62170d1eeec7ff443d773e6021ca76ee1ff544fa787ba1bd52c89f2a747f3b1ffee56824885857f0e16d6ea1c513d5bdf2de062f486060befbfa2c29f5fb13c365f0a6d4a44a312e5b700f8d09b7abf8c124a659416892474c23926fb2da7f5843235e6b571eb45ee46c4b4f7a23bfa2daf1a674ffd0bbb2eebf425ac288b5c62249216a8796823b324232cd0c56bb6ab4dcfe86fdd28110aa3b6d4eaa9b1519556877d3b46d2f86734ac1f0ac7d7e4685d7e2e91143ae98f9cd22ad4f903a8adf8e568703c79cfb5517894d609d502692f5e3b0cc596aa1bcc6f7503cc5d94537964cee75796a3d18912ea92ef0ad1db7e5269f4b57b191f4beb4e65ac4ea178bdbd0c0a537c655334ab479ce1d817e711f026298ff61f64442e05abe53360741e67e421bcc7f3a9b29a229802625be73bc00bc179a4136323c0da3366c813d25b0abd2085bfd7e6ad145f527cefe5a49681b55e3662b371e59f260d6c9d101177572ef68dc63db22878428b2c3c272b49a240b04ae4ee431498870f17711adac9718411f01d4edaf4163303e3595026a55ac3059fc4f78b4c7a869efd260f57dc63ed237cd2030b779b45ffa6d7630d482629e93e4ece17c570dcda38db84989ebd6beed390448b82fdaf850d6acd08d16fb140163d5bed1850443c4fd8b1d49c453eb8ef6d45df1429faf60c2ed66e6c5d07f168a79db557f9c62843d74227f700f834011a67a03bbce53e615ec3a9773b599735a3327c61f820903b7c19892ec052ea754428b89b240658d5122e7dacbd133626f8e57374fd756332f831453fcd4afe402e8240c76313d55ae215702bf198fb6acda806956af9d7062139f11da4d1fd840cbe47cff014ee9f274a93c36272e8ca3412e3edbf9618157b172110bf9ea5e49d5668f47b4a983560a48d4bd66cdc07c21bfc5ec9b0c8188a4f714369607eef869c3b9c0d84f854b315744a937faca108d17a4795475dbe966a831e1f7577d0766d7287bb50e82bfc5b9c4230c02c6b089e827f11369b769b55f7ccbc7ddbc6a0dc4900c6f957cff1d3c2632e59507ad0c828f52c20e482ef46e41422264cf1ff988551b0704acab92bf104e87361554f71c98e41c7e315a270afe4db0439bb1690b4fae78240f473519c782b7d4ece97482e62d4138a025cb0ad96401714f21117f2a8916535688c1f1082cf1c11a36e1da87fe0c9e460177e4730cdd28f91ec1b09d6c03e46ca8a8d9b5b3370fcbd69ef1fc054cfd8886204871efc875a59367ee317df6af5345f308bddd8a795965cd8d4c2ebc16753c5cf82184b701135a49443092a47d978be84dc0875a7e8274226a3c4ee3393cfec423b26930b9481a3e8b76375557366db6b0793f054eef56ccdde5f299156c9ce90690e1c120a254e5d736fee8088eb59ad0f5998fec448e77591b4699a5c8dadc6ddea4c99fd1070051f35ddb4e6aae3aa810e07204344a96536b37e1d09faef67b4a943893c11b8ab83d528980b23b188a9aed20d1fab051463ecd15c6cc96212f34fad2947322bf5bf2db28198af4f8e366faf49ef79079b9eac2cfc5c0fe58cdfd41e639a0c313b1b6a5fa91ba6d39f2eb175f68efd0902f556dff01e29e54c65712ab3e69f34577c40493ee2ebf4a1d45b54c4e196d3fd1f02f4feb04a0f94371c6c174ed03924e5d12ddba5435a5bb24371c741d318f217bff5b2f89c67e381ac86803ecae14ccdf8dc6b233389ffa5f21643f4d6ad3eece6eaf2751f6e15435f2bf71e63dd87a2d64114a25ff8ececf02f7431262911fa4f1409b884e1d3222c4e18dc247e07bcc6205bbfe43d07ab57c863480294e2661fae2659f1d33cd349988ad05bea26cd4283c55c92bdf5e41caf52373dfd96190bd640eb99a62a8aedfdc1b17c80c0d98a371b2c9a1a2ceaeb899d63491e1daa725970421a4166f71743a14c98c33b3bdaf26ebb4c8a83896d7bb8ece026e627c2799b96de867e81f545c5e3ca837614cb04c2952eeedc8afa0a6015b2c178bdd3e34b5f1b0a680ad510ae916ac4260d77077f1916bce90e23bd69c98d79afcac36ad51adbd145a50c0a13996ce3aee4692ef9a0dd4a4e34942ccb20de5187dcf8508668885203867694b55d737a858d60dd210bce2af66f0db8f841e718ac843fb8fea9900e1fd22afdec9b30a67d45618a4a3ed0efd58093dbc27e5dfe93b23abf92b6315f0bfef03c52b23ad2ed0c5716503360f67312b3a6c38acea8bec4a28a208a2113e214c5f3f0df7230386fb866928fb77151a9dfc31bd66366593ee3bee81c1599d55a80399fe9db594fbfb7cfa259022b4ace9836e5e7fe8ee3cfe567cc0ac795860dd43dc6b71bf34be34a2197ab7df2ab3aaf9fd26ab1ac2ed26d84246f39d784f7a905adfd7aa236b774fc235053c9c9f62ff515632afaebeac96a6cd71a2bfb12fdcd5acfd88d2b47e47031125f5fcf4aa5727212ac9fc80a1513466df575ec9f3f7e4f32dd3c166515320876ff8712a3cab1cc4b59e1f4d060529ff838646374932bf777d6677c817197f6d6006efafc39b6afc036d802397c745695c9237c1deed5466111c7923a14e03bc08532bb7b441f66d6adb9688d5814e80724296a618a490017dfb259f96cbb7db673d3fecd6f49423737a91abaeca6c15b8f4713d1909f87befedc34a9fc103201a74d55010b1b2577a38bfed637878509c2bb4d6fdfa71fc406a983d2fa551efeec9d192845ec13ff13e9c3ddaa8728847495eed581acf5e097e738b4d3c275f5b24ae1e2e17bf153763b677ae1a5b166b870eef26b3cc4108889c5e24ff4cc899c3bf5d283ed52716251c1572670a97429b559337cfdc2cf3c41bded8b8e598a3c76884a858e537f0319e85b6935bc3dd14bead5a3ecfe0c3137bb9283ce6ed10df3ec9261489042f823b9d753d2d7e5e47ab1f39a4aaa3ea93b9a6a827b6e3603855013e3f8743368785f42337b2237eee1ae51c482cd0325e5f1edeccc1bb23a521e345b73a58813487392b8658dc1cd639373396236ce7a99308c3f1f49032784e3624cc9c9110a3f725d713aebc4dfa70f3c3e0ee5093b75922ade85e9b2e0f27aef40ce56b2dd974f170fc80f37a981745cdf3cd124d65a79acd2a1af5aa028a7d7f97e97b15e71e42065abc48e7fc330f113996abe917e2f1b8ac49b362b0ef444f8a2490e998f1df31d9a9d80debe5acf4b6cf81eb8cce0bd51d35c385479a20237e02024e4ba5143da37694be150d9521b40244326382e547495a76cc21fe98c1642ca340784d18ea8ae741690df32fc88fee5358a391f5d8df70d2c5e31e9a632bc6ef893c1a253f3ca26554523e8536725d9962316bbfe0d82ae2102078dd56feed87186b09379250e5523912e5647524c0f2f080de0e1f17f810b192e603b0e231d0027fade065f4344f6529872c5d1a1fad243b027afcdd0903c4cc1bc4671ddee882b7ce65ec8dd08f81b227e36a31d3cdbd85f026c6b01564425cfa2c0cda62b52c08cf9fae94860f38588b121943d476f3110f2ecb6d986826d4d231e906e681b279d02b16d578f7f0389e34a63e986df3d02d18222d9995919cbc8bad08e126130db725594c0708a4d9488880e8699ffd24623bc068f823b41ab5e443861d00c596589530078f258171c95f89f58ed84ccfc8aa9b3230b66c0815540fe2b50f15bc83662a5c6ff21f101c4c6beff167f1ac46c9d6c1a2bee547fd66265f68b56ea294b62935c57b3e4b71b0ea9a59caa0185bdf101a3b89d20bb5226fc2942f7c2ab547f3e6886d0c806bdfd8cdc1be4d225ff28349c47e82d194b13fbd5f6b90d5329f09ddc5d340b2afe39303d5f926d755ef24456fca5800539ce4b91634d8169267b79e3eb63897d5f082cee86a5301ac9b65fac2931119e50357a5a106c1af605c0956b565d05aad6959e654563f1b2b5500e7c105d9d7ad42692c312a296486908f8c11fce2c6cfa225e7490d3caa26b0902a539662f0d2c8620f95d3a3c74d8c6ab5b2ef452449c7eec5c0132a7049cfcddf8584cd76e99b23b16ee3b6853e7ceaab79078dfadd234ace4136873d88d14bf423251bf5559c2beca0961abc730b3e938729c7018061de0543f1b5a8a5bc6e5ac1f30d2f6d47ce851738bcf782240d73bcffe7f54acd8a6220cda1ebfdcdfedb10d1b4140c96cf2e35401c469bcf8276bed1b040443810a52d4f39ecc4dfaf9b286a8b1986890649eafdd14399884a871a52a7a868e5e104eb036e5870e324a09d37fa00d53336b8f8b4684cf78abfee58eae663ccf94349389c0b000ae413a2b4e0dfc630333b3fcce513cfe9c3735fd392b07978507d641a6fea20cfc7988144b77443a82b4fad68492201337c580bf61825aaaabb2f70121c82363818c01d4e2ed4a7e65c7f18d0b7d9e8f1fc4c7c8ebfd5ffc85587e88422f0d521e77f106d2abe7d0c577f5fa47333f2561224953dfc59084f30f72f583a4c5b96beb7a7521a5df14f301ec2eb5055e4a61e7fb8c165394c27b524539bf1970d714e3c05ed057a387f7332d1d4cf6460b5dcf8ccd2525ea6f8727c8aba2c5cf5524a65282177ea3485941ba9342509e04f16623625f4e19e3983ae3361050be77f22a017132bde3692e2a40c018e449cf06c46070dd4295ca22cb73e4a2c4e961a94119e617c306a0b988714f0243d547546347ab41793a95a5581cd29d8402ce5d61504b08a92609d59048837155a8364e57ecc902c8938047d19f23fc180381cec6833108d5823e913693ab023b1c44a5a9d1369c9b87ed0bc2ee4462048ee137d9694535815b3ce42c7dc1d84310bbd180fa35bb27831920781738c65fb3db84a7492f9e1011dad6bde87380e02b1f339f279e647a2eaca3fa3f93f4f48fb7734c8b8c10a2fac230999cba642041d04cde8c3621666d0904ea3d642a8b8c140f621d2c0c863b3931c7ad743e851ebd73ca2b28c9a5fb7ca77abcd4e587749b76240acbd3fdb74044721555c56dada984e080818ca5ba0af18ddee11f0c07eb07232c8886c49c477586d9953395693f093e35438303bfd38b29912800e66a68e4b69ca0d5f5b112792c491b859bda0f7468eab987c66c709a12960898244ff9a86890c89a0f29518dfa2e5d750584abb17ab716e17c0d71bd4500f642ccbcc94caec69d8fc80aa5814ab4406af5752e84f3547166358ebe3cabf7669be3122b5ed9968484f729da196c2cbb10c91c7c49ac9c0bd5ba6d7fcf8daedc89ffd9ff97e46bfc0cf12b87ad82f8b98bde63ffdba42b5fb050732a1f5c3ed96cd02e1dc93bea1ba4584e6dc54ea13ec307de69ed82253356c12e261cab4f22a7b83101edba89825cbf2b861391ca0690fd56a547813e40cc7c034d41e9e5713dfa2dc19159cff218aae2851acfe2b77bba00e586ea96d93bfc4a8a001b0fab51403721239267e947a65b6aebbc4e2f6bfc84720f07f17e28544c41aaab02c79a6f3c874a1a6f3c949d04a5d36d6227fb09a29fd1b8b091ccd79ff4ae8e0d32033496a5b631643155d556362a04099fe10636c221e3056d65ea5163f11e617f347d55ff10747d25083fbebb69a8bd40328ba5788a37e01a27cbacb539a2d46a96f895a77c41419dacb651af34dde39f6e1203f0e0b3a23da3ae314a624611b80a25f73eac222c3bb918e5bd418c87930cda3043109f87d6f233e7abfda7bd7c66c137d4c3cec5aa57ee1333830e0b9e7d97240940edd7ea1b060b88d32e3680dfca0230a299bd84a7e9c4b87be965c6202e72ef90d90994fa860e9c3f927d3e0fa18e7b93ed1554ab3b79dcb2ef2087bcdbe8dcd72f0c1a169ee7f99a933d23a1a9236c52b17619d58d9721a570a711d77ae75656cfd2d38d451bd05debc5051a9253c3ec279d51c4f02cd2630c1fc7aeafd4f5049bf6c6b084997daef6d2fbd9b5f48b8ef09c8a7e9f8fef83696e7fceda290c0f2f733fde5f4a68a9848c0a8bd856af493c2ce88d8fdd4432fb9f2871185eb1b4f974094dcf77f3513325116ae42377c634b6dc378259a2b57fe138a30c1338b61e1344ce3e27e3feeda0ce310a0c5c40b2188aac2235245f56c0ebcf6873620229a60effd41fb03cd327b1a88c407e7e3d2356ee73d0532dadb404f5ac42fd5b213fcf6942224ea4accd7609fa8e7170535e8591dadc16f5c3f862108a715bd0a85877783548814061338ccb0b254da322ddca5887f17a704660400ddec5d032da7e63ffa53aa8adf5199b82dff05a238888c78088b0eaf6dc2d382ba13198314119f1c8882083f34600d6784c49e9d561cc7f60907db5b201b1f73d15f819e1953045d3bb208b84aea065a2cc999d9e47bd92db726c1be3a9a947b3ed873824161f66f23cb7ea8c552bb9a0723bec44c4f555f96ad15c4712118d12195c59091167829472fd8de3d330193ab5e674222f7f302b6e2f567c2ca5fc3b39f7c70e16befb43a877f2fef2347f66dabdb163c420ef5ae5b7f232d380355dab7f2d0a0fcea089b36ec2910b89042dfb1638e2845ca5cfb7795f90daf56980048290bf4a5425d6c87e4b2f8d816be313555dc17a26704b4d46663d4ffbfd0f8c209044b8236f0c04c315fc3467cb17392748351b7ba24539bedd9aa2835ed7b656bfe9392ed8f2cd8a745c4432e1bdc66b52e2ded2f21d9b1f48b6cc7552de3a528cc831b5215bcd62e59135fe58574499ce457209e08afd8225f15e42a2aad66c7f3e56c4167da1976b138f1235dd9244fb9671411ec246ec125d991cae2c14ca1d741ca6b98c252492be7d3b6b79097ec359576e4acaf844370434b2f9b36dd5d0c2e5ada4a2a395a60d97f40698d7178aa9f68f8715f0b2630b9a52bf35f1c05d15dbda83d07f13de7da21f69a682a973b9f90c02cf22219d4197120d94005c3a51dbd300b8c425f234b0372f6b3014827852e3fb90f25b9d8d971a99fb9727c9957b7889ac34af462f1ecc59e931892816a8eb0b13c9a8d73644522fbb02e8fc6c4ec71396e0a5f8c1225fbf36004dd1d36043249d91e948d046f73cbd2ffc2e757a7da93074ec46139b8e22e7ccee9bc4baecb2a49ec3a5f57a9dfc0c515fd5d635e3e70c2e39f8c191e4079ec15b588e1f0aa87e58ccbe087a998192b97bbde6e7c88fba00db01106de169f80933c8d25edaa88850895c6cd25bc67c3318b1fb20b227416f0738eddff5c23c83218d0fe9fab424a328b8cf3d21a8503b0d1e89bbac581e6606f2ec84071fc3bbe26263565475377ec68c8d79f32d09387e6879729a0cb69e7d0591c0cd0dbd7fb90b36e0486aecc1c9ab887086653b4d5b9dabc483e67d27c2062e5dc7a6f0729e5fd089d23d71d731eb4f3707cee3fa8aee76cb8580e298dca41e9c397a17582abc3d0000e5cd85112af96663480f2a8ed43b17ae281047376e037d63d52efc44da76e1b161e079446ef983ac7f56eed637c42a00de0ab83aef07fb68a8b042817be51973189e76e5fabbdeba91e6b7be2af2564154254d63e10181a6a9e0cfcf2b2418600b8b3a2d853f4e912d5f2c3e623b0d5f03c2fca1812bd5df9aab59d8d19f24511a5325de0b612b13fe30b5c571b53dcf4c8dbc6573519533957d40e9d4b485918891014f83adceaaa67cab5b96be33564cff576170b0deefaf82b12da27fc83d4459e1e75bb3a421f435093cd1e30213b30b87f070a6030ff38f502c3f62d7104271bd836aa71feaf48e55bef4801f0d3329f6edd8a585c675eeb140de59f5296039f2fd80230747fa06b08e375ae4a8d6bcabb5eb876208d7ccbe5f0e5ffff13121dd1470a2aaf7d3766b1876a84a4389537118f89c16cc28620b4d49ceff332f1a1467f53d0fe643673d4251f9ef683dbed6572cc3c089d719c4a771be923599c09e60f9d7a4fc3ff36ed980b3d8fb0185c2c2a1991e3a54ad51464fb1d9822146dd85c32ca41fad0f55147fa43369336879097616f5baa4431e4c6920d17dc7c5cbdb2bf35077635f1aedbb15053839cd0e3b4de4f72e13b8342bbfaf3fccaefd41b54e1b107052bd9a43bb7ae0b5c30e63a02e99b522a5d5b25a69ccb247deea13ae09e997a922d873ca1be7b7cec9230375496c8efb99874333fbd5eedc05999985158a448cfe471dd0986c5e13a62232e307042283f8a0e7f2a5c8939e7968fe4fc5b76d3ae039767f6cb1a143aa757319e728cf11dd593514fa60ac289f6a318740b2605807ee3b1b8b1caba2b54c312a66702e605d59aa827badfc4e3dc226ff019c81d9e7c0cf25c86f7da3ea6af1a1d2b20f4f5c98fa6e96fd8044963b9726738fc4a2406129126616b7a55448a56d15af69c38e5f03f6c464cc17a92da2c74c6c4a7937ec1874626ff91165230235a5c728a7e84ffab1d7176dd10ac1040b40d8d18b5a7c068d3f06ac1331529809e18609d53f3e143ae213871e12e0eb5322d09071c88e9a26d6469a0d3f77c2c38985afa43876a65389423b58b0b6b31853f359f565ffa811e0781cdf47be1dc0d37f6239816e260329b5d381d87e59933ae65640a15144339ab24072ea531a1964e4b9e9e3a35844af6f871f1379616b16f890b442394bb67f67965f0a34327f4cdbf794f6e414d270fcd838b34214404cf21abace06f513fb6c5ec1d3c12dcc1354f3d7937f115a47c7e568e23d9d4dbb0ece117013a4db060b49d9b038978ba13250ecb7c056b62f78062633bf5a6009705a92680a31578c5571cb5def6b54cd91f32f9601ca598ec456b8846960dc9ca90135a388b812511f871dad65a3c7c803f3b445be5bfb0b07256fbbbe9d9022a36309904b900898e75141da09845504ff73e262952786842080951cec4cd79418ae67ccb6d2534f5464ce78cd84712e1630c7f98803082526f9e324ad4120d4e4ac0d373476617680e13731b5db75f0d5d396466685778e1b6e8546dc49f43bf07cd9c47392fa82597dd97a63440824923d8fd02e2e8508734968426c16d330c4cc6643c199e5ba1934f17d4fd969445582f9c35929e5457b7eec0d60245c18071b9021eada209b9a31dd68a70089dabf050e63735233feec1fb5a7ddb78fad612bd8e34c0ac5f72f8efa97f68cafc2d055536cd14f36ecd05242efcd04c9acaa519d20243617e41491070bd8ae22b2fe2d3db5f52912bdc033bedd8790dca0c6af418f4bdc9d17c88b4894e4187bf8a454461f943b5404ae4695c3a2ceeebe7ba202ead262acbc093017fc9d5b0cddfc0aff4dab50bfa115d8c153e95a326ad3c46fc75b7c0b0f35a87a4fe65f543a6f29223849ee99e4c4a892d7b1895d652fbd66a5a3a6424ce62a0d4ff964000b47100fbabf0cad086b179b9870583c7d9bd78021bdaa8aad13870aa54121be430083954acb14ef126412069ca681593a27c6e98416a907eb7f3d4515310b17ae6939a25575799e1a38292e3701f43d1e4b74040b7548b04fa9fda338c96215a30588f3de707d11d8dfb82f70d00b5960952c7b09ec404842d7eb288141b16a222449d05e64dd0df85c2680c7cc48877363d2ee8792b64346c2ce9a50e308674b6317ad0e213771580b34f53aed5f80294f6adb613c0b9e7af7687151c9b37afb4ad149e761cbb9d2078e509f1bd286157e8326a2803071516013b77acdaf9b0509cfcd1d663765a223b5b14045968cd9a9dec40a9facc6b027f45f16a35fa9f52394414da8abe8ebd4ec5c1b61474857532db2439a4e244cbf6130867dd907a12755005ecb3d09069c976504d6ef9937b80b28729af99cfc8e265215819f0a0a12c501408c7aaf53e75c2b29826ef92ee748e7878fec82df79d7e48bad4fd86e34a69f222fbb42ad6c154a97b99026983deacb6228f1a9fadf65428fa3dadf3d897bab333d36797267d0417846ccba8c85358350e3d8bc5354cd253d074cd16890ae5f0ddccb3d423dc4aa67f2e6cc8ddbd9f29a3af5401570ed0ff910580265f4ef7fff4b9af6fbb0a30006169c601a4d74d6b2da589b38d350ecc1c40679b8b9e49aa1b3d7f32b9c3311a9ea44a3a8293044ad50799cc063ffecc414ca36161720337dd8bf89fae1102ad5f9711ea98d1e0f8894cd76673cae62733598763a71745af36b97562a1d8952de0de63ed8a544026595763cc8d2bbcf45bdeb6dda09a54afb52d6d0a78ebc5fca16c17f6ae79f85830f5661df975f8cebbedbd0ba4987498757b7a7e0cf4d379c1e27268dc753c2691ec50becd9c6da97ed02697beb50050c820bfbe758ada0f5e3443d27c7765c7383bbd7e538db581c6235a73fd035e752418642f809dc54e75820f702fcdd1e756fe11aa3723d4ac36fdce5923769e091dd77a693d9e338a4f33af72ece5b759603644bf8e64b3674ea8a58c3c350f732cd57438fa8c027f1c4d3b8b641493c38ce521aa41a319dc8ff80255f9d3e86ab3e948bd64d2cb42d477b43aba3127542aa119916ab44ef324e8fbbd308212b6ff640d80240e4ab795b9c11e72b0e6965d5f70950bcc05a1115738ef9dc118471755b1764c77cbded8dcb5a236362bac2ce2c0fb97e626c812cbc5b57c23de66315d2a91951002b9478a655e7e1cad6ba53202294515f0aa06f7e1d4a0d37f7369c113bdee82188f41f21b8c148e9a2c5a3d18929488af0a4d67d2480eadd1c1db732f5fc899e3585ab822ea62a00e285f7b071b84403d1a5b29f724254b5d8ab486c35240ca296d690eb3d5c2f9af6e3cbaad1d9e2e2b974f5ec23aa51d1798adb9b3574713f080b270eb2ccbb58034f60ec806cf3c6f1409bb642533b5af8f9abfba5981a66bccf6f1b78a4dfdc6e4d269653aa9e81a0829a0722ffbe71b0a9b1cdce7a55bd8a0650348d8a3b809495dd05d730985eede8442fff80d6baea1ceb4b33bf38101565c3caa8c4523f11c59f6691d42d89f63a1dcf3d6717d3f6e3e3e23d153c7dd9c41a0b317b9c37aee04e5371795301fed2ac6bbdb400ac74245935d50c4eff5f40aeec9135dbeb69fbd3f6134bf3b8d0b47fee349d6eb3a5124029a830fa815d7238f6ec52fae25a06aebd90e4a96971136b10b962518ab1a3a858d704e64301d7bb026ee1fb78b8e2f682126362608301bb7677d272af27d4aa53af095aa67f50a0c71ef7a625defc98f871766ea3563377808547b13840540745638172878991adad84873e877546ecf5d24715d5d6e6aa9f88ccb6000d8f444b415ec30ac8bfc269a7b6cb04a9192b8a9e8026eda96e75bec148456e464acd52539bf6121281782b19d78069969cc74ee75c4b4c4cac11e29110f3e18c71b5bdc822793a81c4631938afdd710916cc42cf6fbf47ed700022e0835d9d31856bd27c45d95675a169d7a4fe11113e57e246575c9f1aee2d7b20c538fe60f2351a415ff7bccedeb57da5b26867b1ffef8567185b1ad4539de8ddd80abcb1e0e4ef520b2887548a4465283c2e03d53c1d350a18f9cbc9ad60fe9cb75c09b35b1053f9fd9fc0f9c0d445b26f84bc75c23b61e1cf0c854b9b4c24cb0755648e477370ad0fb46f0c2beecbc5149dff17c1224d43de8b5f6a9d2713aefbbac9b9567dbedf751aabf1dce42d78967d7912cff625e949e6561c384c59573925bde1ef1b9ef476d4e176b655baeecfb9ebfdca258ff17ca39c73f40e955a852b15cc42573dc0dadccc7c24790b6a7113a673e44f042e9b4d52443573fa8f5c5025a617d39812140cab47729f1d346aeae95cd95e6e967a5b0c21edc2ce124beee8087485fa2f02bd75c24a62ea7a8a6e4f62f81981680eef425225161ce388c0308d13bbc233cba65c6316432dad9a3e6c3f184cb1f988505fa155ea36c09aa63033717766c01485c66c0894ee34b02e219b0a1b1fa1ebc5c45b0c739b7eec94908fc273984414ef93871dae120ca9f6ec2baf0b0ef1f1273af34cc47d06b02c5e25dbd4df27c8c0ad156d356022285b5b0da311e74e0fd7647c895e274ac59bb3e810f0a6d959a254aed41fd08a34ea35bf6aaa4c94cc43b093961091499dca91acd1646fd00a6b748c389f58a815cc116492bf049dfde49589db1324c49e6236366cb0fb48fb87fb5d33ef2ed81688ca61f46b7c7e6f51b82b4e40526a74e2388bba9bfb32328fccb244b05c51341d2d94b8acdb7a56d948428acde046ac9292c1609e397e784d3cb739ad3931dcbb10b3a2f71e55a40837a8310d9fe567ee5bd23c734f130d049156423b90d094dbe8ccbe853224369bf468cddbafaef873e457460657625b700089051deadede0ec464d48ea642baf16a17ccc53dc127882a80ada8842d37b266c8362f4f901d24b51041ebbca2d9c131b6f1fcf944d4bfa0573c9ab3312988da8439373be791c73e003e709c4d66becaea487a79f775634eaed349906a0f211c67b1030e06a1bd8f949f435ba82eaf5c6b0210c569fe3a21173aeaa5c8b48576abb92803771e973964f43dbb394cc1fab5a6f82a238417b64bde4387d64f2292d2ca290fd6676db620e0598629978c9f77728fa240c4ee130631c6b573c7733de3e1315bac366d37e9fe24857365d2920d235f70f3c65f30606b47b522cde138ae436afcd80fd778b91d07d581a86ca258f7cc70ee7edbcbeb526ce6312bd1895bcbc05d89ed6dc5eb897e62c3e4b9c375158f43b6aa3d0dd8919a27fe111cde64d9cddfaa09565216820ccf3ce7b2dab59b35f3b49dd8adfb41adc7c3a27d346c3415083b4014c03b620adf28eb39e8ea0051978846894ff5fee981e4b65d8201c574677c8f4f9210973707fc833638fc53aeefd08be198a74983d527153ee1346bcc3bebb00cd7a0020af63214ecbab8d175425b86951136643eb0effeba4cddbdcd0f54e9b2f66fe42a4d7752be4fa2089eb8901dab557b681c9a9c1c7a42f22e1ee4bbef792f8e48e6be3caee5ab4fa14946e4c7ddf996452ba632263d01b2d9d173307a532f06e2eb23fd631e1aeaf7ee5ae09e1e26fc33dbda18bc65c79ed4f4e98aa4eb76992720e4c30f6af5a38758372e5248cfb6ee10182948486da31160b4f18a0a2f1ae7ab49d41454963e9a55e810712e5315703b65da3b5a47d128efebde77df369112d0e98d2257561fbbd9addbc24d1ae37b277b0ec088d5823b753d8980003a312bed507644fe74269e4335f0b26eab33e56950fab14880773060fc907d67990e823c74356ce0044cd3d85446de970971bde65500c2f2bf2444ab6b27b0951b5f6909439d1732a8116ae6627c1bfff963a95e3a4d9a14a48f36c2c5f394455f766f64513c7938a74c058f0b4bb6c35fa250a9687151a3b0187cb356fd3ee963bed4225b8dbabf57b600da0176d29d230b877e20324967ebac4ef53f882128fb5368a755cd9d8113f728f4b09d0324b66de530bb2aee47cfae1b40c7c3d439b1159dad472a6137df8f1a5ec13eac1daee9e53eb86db0c8b55399ce7d24100e82b5f9df8e68bde0df2e6923729b7b2ad7fa32a0bb19cb0677e128f58424168a2d2e1ed9af0095d888a55d440e5f183cb97504882b66816179450fb3e96abf0c8e0fca8c211f50daea4e57672de2ef90f89857734af19ef8cc138ad07fad499e5b45eabb50008035261bedb5dd1b513fad4987c42e367d557ccf350cb955ab5e557d6971a291971e6761d9c12927e339dcf6b71cb1030c3062a11505cfb3a9ebdffe18b68b3f4b91555ddc77c239648d58f31268367e9200189d03326305f0235655b2849e4897b172e4b3097ee27e53501a15e832e60f5eaf09bf15dd1adad39a98a2e60d29218b702493f58bf50f50618db3602df1fd774e24a98978575bfe1f4b4c0f157947a91f776b56f616f09616a1806c08e41b9010453b11fc19aa9e7d0f53736f57bae696efec204a90fdb583e4e1b7a1cc264c4490fa3831a5c4f754ff322c437d1d11d56f47442bbeca0683e294354fe28605c1c71e86851b47a2a1bc7e3b638e7368b0658986e28fde08c09f71800eb277912d6e256e3e90b4f249b18e1b87d73bb6defb03ea72f8490dc813deeaea7a60351e0c06e04668003735b9cba3e334e60f1eefffd8df6251663e78a5bbe5d8e12f3ae3ede2243950e1dfcf26ad04f618098969e990082a56225f950c187cdb69dc846b77296a9b02dbcfacc467ce332b20f85d43e4d531a0c184d1e0332e722a3bb47f7ce7c9b3f732b279996c7fa18e9b2238cfb01c6c72e22cf762f2b2071c95f0c60bd6f1422062ae6cb624dc3c6024da5968e522b1f61ad5a2156dbf00e54a191f9bfcb27a3637b05625edd35e6a08ae17e7f457543767c1ad4fa1e3e8756234b5e3bfef1a5b856aee695bebb45b2a28659672c2f84c731ce85173ac601cca3bf6d12c2eae6a36554708e00d77cfbdbb4f802f6c24b9986db4e97e1069911099dfa80058c725a741cfeaa0176631bab05c274e20658f5fd256bc76d7c12d69cc5e439deeb560e70ecc46cfeeff651c75a2a3a1795579d83f1cba9686d63bdc5b717aaebf8f2482a4775b17e526f46e65c4994a67e1e286ab409886101beee547e0658e51bb4aecbe705b4c3e7a6cf66851be9827e93d461045f4c857462f08bb9a9cd455fd550de44387a929cc80478376377e13bd90a241faaf7490a3687249bfa1a87213a2338891a6903be6ec4c42bba7ea298bdca331b528283c67e9c4549f83bfdebad174cb94af37e23112a7f5265955b98d7f55063274ca9a9f74be54fdfdaa785397dabc6925fb4aefa5b31bfddd88d0da16bd8a183b6051483c79dbd303bc5cc749cf94177b2715e975e40f55bb892785bcfac995d4db9f3ada86f1b89a1b6b5bdd67f063117ad70c9b1d9168cbb681f398687ee9f48c5eac0b5577bcee3c29ae9ef96a2e78deef402f43c5e2e4f09f319a16c9f50eb519dffe11fc37d52aed3df9ddbf20995eddd09614ae08c222dff5ac1ceeae70d229ac5617e68716a989c706fe2dca399c9564f7e1fa9b7166b39cb8ad56471fafafda569fbad2071ac57c0a8a5e71538ff773cd0fd19ed71365b94d1de9534938d790ba7ccc7402c67486aeaaa42390d057bdb2a25ceffa891a54f91bc1de8ebe5c1c58fad47712d981ea1dec50dc63b3e0820f56ae25e4227643d73770c1f98fe017858e734258bffc8e594e723123fa1556ba168d4576c112285cb2ed02064c450a375e11ce17529cc659381e66160ab144bdc27356befaa297d536384a202d037a2280acc55f4987d306b6fe9df2ba26d7a0d773f0998b1f5490a57aa6882c48c39b658d677ff174c77df2592204e313e42c4895c6c030ba204e77b0aa851e688e6eae149f41361c15ef15ca3f57c9e99956a6dabd254f2055acc44fe093d5b20dda1cdb44c5e416e7b50e3f4cd19e5299e70803736d6d0f93eeda0a8c2f2da4deba2652e6e880dbac7f7b7a52572abe193d726666f40e85048e9d9c54db64ad7f2b1b3405d6eb364245e2ccb037f6d4aa1366eded78bb851047d350e55e99458020b99deadefc2941237e8f433ee1ea6b82101c84bc6eaed175bffb697eecd1d3a3698612da1abdab92fdc46bec121884252c47e4ab4f9518a734ed06f419dc654283d6d698026090a2478ab32585d87b3a59f2158aa363fc50b6bd88c57590452cd8f90c1ac17bb611fc0c963d7bea1d2986951acf70d36dd5021d1deb9a77014cd8222769aa85e0f76edc93ecaa95e1ab20aed55779569204f117fe9f2426471277eef1926699225970aa74f079007c0729dde4b820c4d60709d663e599d0b948df26520c0f47e907fbeb24fe2e6ff5d20eff5ef14c87b2c02d96976eda9a2036d76e44e9e75e0c99779822ecd8fb7305ba5fc190cca038af9d40368c9e7ba429fb20e5145c1e3effe09983413c978c17ca0b0c54960aae05733c05db78bbe7b9424c7b13c3ee659cc6e26b480bd651e3128f74550b7e3e691b0498e43266705978a567f6200c34fb25595ddb093658370c8369ec6ff426a2c3d7714539d80fccdeecb5bc3c6d9244a67c86960a06e263a26748c31acc6acb7a7a1e0f524c456f024c892af4051a99610af88f3b1f75ab7145d136592823e45dc012ccc3df7dcb51db52744e875fc6eb824f3e8a1c05192fd425f1e1193caa926970c8f7dbb5f88dc6f10ff76c568738de5b61cbb8594ef72d3b3a88417c947275d906d05e642b10e8e45207fc26c9a3d163479dde34accc34cc2887891633e80994ca3235abf05ecb64e3c74dc1a32b06acd03de16360a2af35224996f66f362b2e8a2dc7f1e216e337634815ca616b7b2a3c25d159444b300ecbc12ab9dab25194fc2f10d4d7790244759dd9778e93c96815f6d68975bfd349d1ce2bd6c1031c1888ba464e79ab8aa236e1d5b06624854be5d00830dd4df9de58dd4b764da5ee155450dfa351ab5b3004c6f3ac5c3fafe7eb658cdf2c87d79d5ac091b7ef3098621acff7711b10c6771f28063d98d122d70bab330887f9f54d094fc96983846981ced48ad56138387b3b969c7d66108bb348ec1500f59efdac72ff21c6937ade7f8ec974f54686405886344cb91414375950b73ab1bf60e8dc2f7039cd416a4316dbb5691f1307250032cd2016de52f854b93cd6dcbb10074eeeb3da2b0f432cf550c8c0221bc33df8723905bc39310b48596e862835d4027a96c07cd2bc4ae3bca87c2c2248b5f663a9e4a2b4324118654bbc83a5e9434961037e972f98e3ea77935a3fd889325e468371106129638c7b45dedb417c56b530f65e791c7fa45b967473ddeaace3267ecd5581df186aa80f52a35417978ab55a06d25d230d48251c8d72abbcadf7419bb39d5f7aea668754fe88a93f3bae9aff8cf9e8d7d79e8f8b2797382d2d2fe63770edeb7ce0396240a76760749ba3582e39414fe7babfd3c45e5b0618e528cef0a29b1fe993d91b62605bd335bda82f2614aaeaadb943dcf5ac495387aca6e49e5ff5c8301302618197ccff4e53ffe431c6a9c6a5137239ce45c7a197843d2968063ae5812d404717065d3a93661dc5c65e63ecb52a1c7be6f35ce112c9a813ed3f13225a1d04d3224e0a19d648a7e7d6bc21bfe25b4ac43b13c269b4d81ab9d9ff13becc569e7b613112b8f9ed61975eadb66d59bbf9312627651b56794eb686c552de41a00ae59288470f78f201e464ae37164421ebbcfc81b7077c3a5d6dad919f3618839369b2ae848d310e575b81b8655d4e04c96441d0170eb7a631e3ac7c96367df00196daf3479233b2fe502d94a6c743f760a73708485838248a550b38d66f24948f61007dfd412af080234e7f906ebe4df88643eb415636b3e7530e9f4bacf40c0105a90bf084c80e7a6707f02f9f54809fb9ea591a4d19d8ef8fc20f092019f564cf1179d38b1e1f9220db1dac1a080125a6dc4f359b89fcfeda5dbbac08eec7a24d06a29d0ce16daf958cd6e54138e7a3a36fbfc8661e86b880ce5431fe33eb530f3f04834938aa2e71214d69701f241b64cefe11f517e41a0cf5ac8aff3e022ff4f1d91cab23b123b92c0bc96ed79fcbd524f1f6900207a2ec0b03a489e67cf12938182d1b7dc3b5a01e7fde7991f2049d178210e916b69705c5ed2b630d110a2e47dad7147cb139c7b16fcad02a752e8e9f9e653a141e7d2b9d697a312041b5407e20ae6a9551b1f5e7342f9216f0f3001f15b565f4f5dbd4625f9a4fe78fc58f63a9f12e16569adaad3223498beaae96384109fe29945e8a7caf12cd94f2d636280986bfa1a26353986572944028b9a0a320da54bb01fd083b20737bf4c85c55ccd61f01069b225036cb90246d5fc8557522586c027776d1af4c00b0a5f50af5e38a779a5195d03db45c7989747bbb13fb3aa9e547d090587517f3a166d8e4f862d3d1fa9c7219ea62b6d111ce77b09b82334a9219391091b08faad54847f9ce647d33177b98e62268f3d093ca86ab7da20597f9444172da7ac1f0fe8062b619e06cd8e5c746742d05016536b632fc1b59382177372326ae127e1ea42e5c420e05df013b0377b7f1f5b111a0820ecd521d409f5ee840852d504a9b448ad8ff9db739dc39d5b3062ffb5860d2ce3b586a85e3a4472bd626c1df937f074d1f82de1e93ac210f2f3fbdb14aa4747e1526c71c4cb6eda3b7ccb48ae758cc3f657cae807c067f0234dda3e675bf1e1f6b2ee8758af0ca567e91ce94a0d88bc75659cd2aababe760f94a864c8155537871ee0092828193c5ab0da9b684b8c28e9ecd1242e2a2dada56afdf3673cbc61c731191f85cd64e719098d270055ec5a846c07b2c7e70227c36ff9421cbfff8539bc969c58e251145b5c6e6545d8668d134240ce32fcf93a45fbba80c387edb74f24ca443dd5e09458536a677be7c18409aaf7ba25c8968bd65f7bf7e1ea7b2b861d6a2be0c962489f0ab31144d66daca4f243f7803a623ed792389534a4052957d0b46091a4283cbaec66d22f4a4e525d85ba740426e8dca411d934f36b4361a7cbfbca2b36d73d8d05687426cd3149551cf80aa0185b02d22babc2ad0ae756fd3cec1a91a7d220f12ce9b282400509ca355d140f2d32c25d1e30f86e4e2e11887b15555b34838e8f50e461de9e8a6c3c6fe83eac0116eab0fae1116952d97bb2ab58b225a19700e7ec5f2eb4c08f6b93fa11ec8b07c41e6d844524b150eb7211a90f5322009ae7edaa16d7d0dc785912aa4bad4e0742cba2ec80baf39d85e870a1ab181735338b5728f5966d850d5b6cfa04812144e96a687163e2f1a3285461460fe36a4eaa7d065fadca30e30c035a6da786e4f354510bc2a32cfbf2cca872509c5841db908a7a7b7202949b42b1aee50d835120b9b814e31658c54d6073b2a6dbf87425aee7cbff73c6fba5230228cc4071be955e3ba71cfbbcac3385ee275652c14ad71df35055e4bd5fbcf2a4d396f1532a9ded8e77c182343f15bf7824728521e4fe17dc0cabac796df593e4c8bc01ca4531b7d92c3b1bc433ce2eea23adc1098e6bcf6c4f89ca141345523b1475623e244b52966498c02230d83a3f607605ee3d2d930363d0dffe26db663d83f83e9b74e47201488f28332c1ffc684242d295cd54be40d3576c9e71bcce1af1773388ab852708affa587a26db3525fd38a885cbc934c58ee6be6368591bba684a18c3c9e1904df6c9aa3b2359b07d4266b301596161226555d8d41b393eea883a954d6bfca7875e8f21d416a0748a8078b4cafcfe217fcff986ae5464f942d42d56ab7d3d2c8c75cb1f60a310ad24da49620b6f7cc67ced2725277b594e508480ba1a5cf95cdb07c9ac347b39689fbdc15e04fe7f2a79bef532ac6514e2e06b122307c0f80cfba600efbea1498791dd27bdc024d27e3b826c89a7fcd006c762fc63915249d6c947259a0b17e5a3fae4da03f1dfd5ada6662e7006d566dabc53e3ec587faeaaba93d43aeb6a49fd7448e4c25785cb71c56d0ea14f108c0b4475dadf36b508f9b6016557e14dc3f4b088cb6ba37780f520d4d5e37c9bc61360e2a672ad2b322648f56f6db70f718078b3ef94657c4f08b947afefd49ed2b341db9ee78679dfe7996fd5c807e52eaa40760e13f2fd838dfdd2a30a498238969ac02993f6713844776fe41df239f1a7df6d70f16b4d2f8fd2d35d2d849b7b5c3faefff8222d71a2c76e769a3ab2c3b524365aad1450275ef41a524e83a6a1737c773048c9d18bbe4986c1a6b676298a82f5fe07dc031a3be682ccd0e4a3acb3c296573b3a66cf1b0f36f49ab88512d2ca530fb09f3f28cf79267ad7a552af2f4af05e9378673d004f23cfbb76e7f28f0ff9da572b9ccb3c03a14506d21da7197b90e9c219e973908e7f77f123086e8614465f372ed29e71d66d1d24e55fa052b8e71bc52cc0a08eb8a8a70162358b2448a758455fad43ba6cd97b60029fd851295e7443482921d14ff47867707f2d28bbe93a2a2f2c8d4c1db4ca554929579ac18700e942ef92cd623e2337e886e5001a6c1cacd2fc5ae26033b9b95e45f8c7b831ccf24688c3ec311efb6e76276b39718a8a6c0d81cdc065e2d62f0fd9a61c43dbe1f278a9191ad18a36b6dcc6b886b0d45df67ab373ad239d905de3554c48006669d6b0c523c148c09993f2497704b84f1632ec89ec392b559e825c663fea23ff34f23f8f3c26a688114281413449b85ce28beb18c424842cad363920bc1f7e3278fc5b83e5be0e21af8c285545541ac67671d1abefe702dfade8d5f72d8e5b9265ae8538ab2d95a2dca8977a26d2257f51c4410fae73058fa9b64eb9f4717078e4d1b04148fd544db276086a99e64d4864e2c0042c168680c703b52793147a6e1ca6ecbb313365773f0eb77ad37071e726549f4b2294fefd5c32085eedb2953a4650967b57370901ae18ffe234ec49eb64ec8accae5f09f27832f7e526df1120ad2b55472c7db6cdd26c87553901e36e4d937632d851e52959365cffeaadd5b3efac5a67eb8e4cd4616b44c57b057b2b2f7666dee47103efda171c9b605a1298708ad49a70dc576b40cc5704075373a4d0ec207d6c1356274a66f76b9e6f62216e6137b11f375b8ba3bc749be3bc449a285f6f225b64be07184aa856b13106b9d8a8aaf7f549f5ac9a88d6a7723f467d46a1e191538d5177ecff0dfe20b0b43c5be46c428450a8603a7ab185b57c218e72fd7575666db458bf607da04f64f9e6690f19577eabce0ca9b56f919981b7119f6e4c154f9979cb71201e86b776201a4b9e0caf5d17e006e3c9ce0a58691fc7e9c39002fe62969ac4b395f73314125dda4325cb8ed187e03790976eb64b02e8c92aead23183a27a40264136034e6c9406f9e6e0ba08d1fad79f597a40fd30c301a64f7c826356b93b25d72262799731a50e3360c48970f374a3ea2c6385a4dd729b4a999aa7254213f4926898ecc3e136a697b1b423eb0a1d8c794531331d8182d0b17a216f6951da189676c71bcee635c759b110f78e1f5e85f9748d3ab193fa848a52bad01cf78ad9647a8a9adc4862d387093c444553c053285e64ccd5697d2c07ff2a4ab84bf7e3ac7a4834cf867833c855549b3f58c9a97b8cc2bcd2ce1199ff2a3d0cdf61dec4214cc61866e5916738c9e54a6d23daba607b8cafb82acbee9600e3fcd3de880ef2e81f67e90417569dacc6579d2ef78ee2556068b61f0679ec97e630b2d1c38768f623605be61288cbd0cb421f4ef66f120d38d83f51912508b20f2f44e41aaa0aea7b5fc241c1dc2a6878395aa441c21ffcc85d5b748c06e65ccade7f7032e025539764c6a261165e0276c7bc1a5b0a4b39e7ae5de9460a8489a9f72417b8599d8e6d95afd15be35c7029a32d69a91cba0a92ae0cca28b68056c93a1640017bc9d3be034e367e8d10ab5a1df38849c1eeb3bda8030a3191013eed70e9e8f8700c27c0443514b3ef37b85c40f328b2b97556f1ff6c1b4348c49d7a2821d17081636b78c1e7b4e67f277f169bd6c933e7dd4f68cf48f02b41094b849b9248eb68427860ac4c7d6b8ae97d1238ba5c0b45ce07360d4b123563a312ccf48b7cc0c9d5a04432f939afb863386e688b7fd2e1ce34103a10beae331a238575b16ccd002904a6bdecf85023fd0b5ce488724ca5885c609809294fe956c715abe85133a51243b1036029fdb7d1e17ee2e2b570717545988d5dcb92047f2355a32409ebe38c15916329e08562d29321970bcee19f7bbdfe25a35fb6d1da064bc2262b792df533fee61cb9dccea8b0fcf137e35d9ec502a836d19ea65cd8ad91f6d605c3481c3c7b022da382f1eac70d35eb6a6124187a1beee741afb7a58bba828c330b73db8ec5aed4435ae1d02347f82c969097c2b8843a85b93a3748e8a77e538fad66b4f67b610948046b51542ecb05fdcdf7fe10cbc89daffaef1f26892575ed3bc07e77f503fc83f718d20f28366cadead80c30e8685f739b5586d10d5a5d2209151bfcee94e4f82bebe579a6b3d6c456f5cb6aa4aedabcc667a35e5e96afb409e39a7ea3ddc0a802229e0a4817d542246a06add9c955479718e12ba205e876693683d6e88d081b6d6be950f73a68f2495f8593263e6935aeca67d02e8b4c59cdd397daa7029db47f1e9e81872444bee5b53049b8e97467e8e4e0910d7bf05f6cd8dd3e8bc2f5c79d5de2573fdb8e59e87b193651c05e1779879c01f4c1edb6c8f83c14a0e6ad5e4a9bd67531b82aa5049b6395ce82ca019be40bddd03e2c2c55cb76c73c28d1b56836753b2f7d8f486cc563814e00f0ccba5de3bcc99d8bb2238bf9ca3aa4c20d360826d70638e56125923e2ce4b8d7f189b7a7701f6f161b716fa29225b05e9fa5de3ca9d793fdc78bf39fa91e58753292d36f785c823446fa80920f2fa3211caa3eb257376f658304cac9a465dad4ff2809e9fa6c28411e10a524a3d06566ee0d3f862fbe662d59f16174811527c6439ded3ca97630461808574a1e49845eec306930a304b60ce8ed664e5fea834cebb57a9d9519929d7d3fe6adccbb37d1b67a6cd9fcd8a2f41e06900667ece7448dde2fcb078d99a4d0a309ff931e71ba04a689bcbd243e5d90d793e9600bc3fc04eeecb78bffcf9b72cb153f675f892073f5120a5278819f281b84e1856ab922f245c4e6e071c1adc5e5a9e8ff614df53acd974cbcaf7ffc7f747e5a56a91a7f035c4b41349dd4109e2d6c34027efbac4377067473110f219dbefa52b0d1e50ba39ad05f46f8f108dc14633ddfbf8368c31674ecea0509a137e37292abb920b159af6344e170c7eb17db4ec76aa914c6bb176ea3b5030dfc03466d9ca8290ef0fe81334e2f107e41f4866f1a07f3d8f0da8773e066a5e8d587891c024d3f10f74bf509cbfd80de6f9a715b5473bf8adf21b6c4d1f37024dd8223640b59f7bf17a6c269df0530ff86cf6b931f04db62443dcf305255229f5ea32274de1f28c44d39d199a9094ac24c1a5ba08477bf2d088985408578ea61b94a211ce4a1b16d1b52ef29dedd95883c720f00ba87d4bb963d3d50a97b913c5c0648169cd5619895dbd4d4410c6c2665fb5bc2ffd4dc39fc041019781530c2c435ea9b01ae4b78894b06ba056941c9bf4eb24b2c43f9c984fbab369a2b6f8c07cbaba1e4bb5ceec800611dc679549f90fe429629a205b415c8e61d475cf9f9785aff8ba03359f14575cb8e94f7d4fd3a44ea0113ae2a82139f7a8c1ec0e46774b06ef6a006c3c3ea1dc724756922e1c008337443c3a348b9df69b12f4ff39327a789a9955f75190f15a950e4f622085d7dc3d6294d43f2b6bc92accadb87a4924acc051a0655d954f7f063c86be7b71b3f6a7aaa0e40deded39e72d794bc72173ae55127cf6d1c1142ba2f0f06d35082742af3df9761b25340ae57470e76ff845bdea5d1caa935df8f062fe743c41f19d6a5b854fd2d9f5c710b9f9ecb932e2a6033808ac254427ac4e7eb73d6e4b5bfc7df1a4b8afe4a1b745941495276e4981c60b8f33f4fdf43a39cf97332f526dbd08bb715c050f1c18b7c5c58ea0d30ca41b5857650d7199c13a68b400e3913e21d8a714825dc0e9f3197cad04b435415364eb701147e36feec074e7462a8ca5eda3dd6dd64cfa2e4ec0ec7f6d9b8d8859f137fb6ccb790a78f2c7323b6e94e1da7951194b0d9345325136b36896401a524ba744e97e80938e7f1ee99176d092674d11e0880ba75a6779181c51b6b9e2d0fcb6f7f9b99eb07bb1d1e7e9df591d0facb1dac8095e48b86c6c905953ac2007834334aeb7f588842c0f0beb59234653f822bbe7e1b71fa550c4f9ebb2175bd4b1e3104a1402e938484d3907169968b2660c3aa555e2300e732e2ae9cc16fb1347a5b86a54696f3898b51f4d12bfdc872f9bb048f658398c6facdabea1f52575bac551cee400450f6501a50467cf6b9f29321e07b073159c3c84194459816d5db9737bda99369d53b55ff9ab31ecc3406ea42afb5209ca670ed4100d3ff9e24f4345dd6d893507643646fd3d5f2e2382c1a598d9e83f3c74953bebebea7faf12cf5b5da854359e4e668fcd4df45aaedec244f3a2c01bef29d56b2926f4fa81d11b9e26cf4e8499097e0e9d05951dd7ba8feee57c14fcdb6ae70da3421a9ed7cba3b63325fe882a08148093c5c8949bb5fbd938f6ed23280a379a40783ab1e5abd5ef0a11b29b698ebdc66667b4325f8477d6760b428cbc880eebf1079ae3fe57894afdd0dae9d8ea3dde2622f94ac44c666902aebe30fa5bcffa152de727e2e63fb93565d9091fd3a1624bf5303841263384d1e015dcdc1386d6ed0a813bfe945680f743dce991cc05511427b5c142538e011d6fee2a1f00117ec89e9eb0c9288f9e921b2cf77a216ddcae18645780b311de6189071ec4a2ad40f910861065b539081837fb01f1965bc0d4aa8b58542b441fdeb46dbe74292c82379acbd4f97dd19d2a5aff2c7e6d4aef74765c1ae2d7b815c3342098997a74487ea85db385817626ed82f7c4d1e9f3579166721d9a497f4f47dd0877fbb921f4110b3de499c787cb18f8b8824782168667519799b9444ef6aa730f678ca3aaa6466a25c08c615be37d458754a881852544665191405a3018b3f1d641d434d921e7aa622303777fc3d4e32cc44b6076639899f024ec5bb3842c3b8ca75192898f8847eeb17bd792411e1330b7971f0b39a8202706aec93444b0b22f9315a4c812bbb71b678facdc951fd8f5091090d6b5dfff587f383748b149000a07ee369f475a495dacaa347f97df11736e5142eaa252e8e11d524d70edcecd36b35be657795ad5afcce87911ab892e33ad47040c5afb02c7502845bdeb8cd9afe8c0ac90dfa1d847fa1d8c70c9eb0a2243652824c9b518e7e53c290e6d6065bc58554ec3e8a9be6e2cf50244be223df7b055c893359ac901f3003a02c2f3055e4abdb083c8f5b6e4819ad0d338f8bb6ed33fdef212ed2fb31205b8da0b249f3cab794df5f7178b6f5479ede517a6d51b324076bbac689c07b08e2a5d44269d78e78ef0e294f6ee8a4d8e4b99cc8e2d5272bb5f7f4f2ae091ced82b02842a0c14f8f6ae35d3fed0a2930112fa536d9d351936bb0847f8e0ad106706df8e4849c74a4e999b6ad1d026e95bd382cc5f7f19101bedb1733eb9587143fe480c2f1210812b521858432f7badfe294d76a39c716360fa987bcfd6fb648f2109f79088d8f2d87801095d35050e57a083b64e8e22ef28a08c4a480d0bdd503c5cfff00a49f529c7fdef6fd2affd542f2b71bc601dccdc0b4e24ef53e523687161baee9ced973458f9a1cabdfff8d65d5597a249d7af28c48273159393eba4e24bc28e6ae62712a0b05577b9e94c4dc6243a4d6e51fea9fdd594031d6ca19e1c870b422f0499d0dafba135543c801235a1091effe41c85023c252d260f2fcee87aa8156b5490c15f7a13b8116a1760c2b2c88eb88443e3904ac237a41e84b40f04b4b10abe76c68894e9094b2fcb299f4122712d66c308a772fa494173b3daa9fc65b7f7d70d8be5af6347cfada8b6954e9706de6e98e63cc1d07c50a77ca97248ce4353cde036b921fdc09faaa4f2e8b459a82151cd6861639b82a174ae4004ced9796845e485107ed4d8a7ebedf9af0c780b49506ac6fe68b2aaaac88aa46eb3a9c043ed0f5bd6d88bf8089c031a3812ba8f438b5cb15717ef7e0df4161ef3038713ea13db6fb28cfbf0941c35b5d0e781408f821d65b43dac3946b773d8d771a7e2779508b4cb3b02f2863a007f073eec970a06e40bf5de4005a3ea681d4fd9ff3373de9ba1288ed0236d6d00d555b30d714e45938fc69c8072dd503b0b353f558aae92f7ceb608316a2a576a20bacdb86dffc13698486b54125444069096fef4545303dc8ff0b3f41ef4c5b938d8ed15241f266823b62de70a7eab9f4f80a79236f045c7a85eff4a7633e0454ec79539a20dce0158b48a12dc71b3030d14a39f2c06cc4688965d8e90650dfb5136f2455e87f9a5db6c11b37dad89c1f279e8669e872d80acafa945a5bebf2b5fbd980466f083ab2d5a066b165d4dc3d402d39b5ca791ea30beb5662547092a54b876c2d4425e55f59a45edd0f0a4ef211ff27942b1747d313ac589a6b49f3f1f11ce7de3da042cf54c10c4e0699ac7b5ec1e28150999c994a9cee050e32c0a651f3bc0db9ffb9758853de1f8b97d6c5e06384f574c203b8f5dce0e0867d7265b621e6f6729b1f10ce7903715f7efda51c72c5de48e83c6f97ab49d17bc3b58d290dd3c7ee34c0da97831bd470959ae6dfde962441b056ee910af69cca95bb9f9cd1b6fd5deeb22dcfc07fa0b0ed925b0a5314db3576a7085ef10aaf50ac113a43152390a95654049c367b19e9bc781bbb7b5e595719476ac6751940e96efb6085349c5d5fd1e9e7bfa09996f7a22ea0f03bafb35b6674ef941c20128466308c9e57a179942b3916921cdcb1064b4b20c6c315aa7820ff5734b65b62a8f1bdfb05fb1be32cc48f1fd5b88cce2081f84388cf0e2e24666ed4b28d836d644322e3ed8b14fc715c6387966370c7262c831f5219440d3dd79d325d2fa51d50f64837635db10c5f140493483381f8c7ee4c2e717c183ceb60a0be3e8175532b1b9fb4f42aa7541fbaa8bc56ae4aae1e4c7fd333a3a65ad54672ca4ad819924dc81faf3ed163fc3f06c71d05a5ca39d7603c3c7231922580878b03ace474b5a2b2b213b58dede78626a8cddadca70c7fd4578febb7108bcfde4922b7b07aad2b6aa1517a91409b83237e38450cf0d1bddad42b85d53da987dd4635fcd9290270563542c45ed05c35650ebad5661441bc0bf04bb8132981557c1b3da4e1cb78d8f603062837cad3c9f5f7c7ad348309db5a247fb83a71d6212fd0c2107a29341e1e2d428c553894e5fba47b8d0dcea63e32bf5a3bf987b08ed65f89ac6adef112a8cb1a69683c98e8bcdb3740747e1308badfa224adbdac93ba695d84a2dfd8ff6cc08066d555850739460b1fe80654172c6e77abce19465779ee0543cef6c17e887a24298288d96df81c54ddcbc638f34b8c6f2dcc767c714d1476963f6f643dfca72434c2537fd632366741c05e08cea7ced7d9fba6d37937538c61c3ba7b1441d49da6a2ea12ef949dd05b0455ee44fe68a37f9e3ccbb613fa4662a58374276751dc9b274c15c281bc095587f3ea575912a23d2f5dbf8f5350eb909ba19ddcef2aa15db5820f6960be186c5fc7ab890b345ab04a8cb969bfe41f9dc086a759456208528224614692adaef18cb1d05f460588b1c2587118657e3d9a36febd14a034b146d83c14ba77f9ed90445baf0168444cc62bfa90a3540df282ef47c1ed8ae9be0a66a1ea2dbaf1482a896ec2f47e0dbba1211a025d6b682804e7655474eaaa9292c52343e1c91bb0e614f553a2b5bb5de373a2e5d5e85eff80cb37829d62d5fc118ace14d1f921ded224cfcdf6c065c8f5c37641fac8f358d1e014529f7365c95034ca3a7929187d6110ce1e58e2eb78331a0c7d563f8a2f706913616452f172d171e27eb9c21403a060729811259b6a6be9de659eb7a69e03fd812d6528d99dc647140f49d25dc85bf3bb5c1b511561c76dc92f985c648b973598b17601f3f3d98036552f06a3e3754f98d53b9efb1b45f319461e70cfb336eb82275fc7bea708130cb4c3bf716175b082c1ffd367b2ac3f3e29e8efe05c87b3387c3689f175ac1f0b13f6f5710e6cca8e079416d548d7a1e20953ef91a07dc39989c426267c0c534cd403eddb8de5e2bde17bd8c38092865f07eca90c4a3622d08ab474121a08635fcb1be46bdada35a165dbe886ff1650de3fc65391225a98b3a4cef925618e72d090253dca999d2fefbcdd52754b074bc939e5d59090f2c5f52882eb59d99c2ea5cc7733e6b9d33bd34bdc459e8e5c2bacdfaf48fac42d5272cf60e81a111b737e0bc28822caa5acb71b63c0d869f003d64835dd6dfa5a1ab73f20c21607b42284c68afc1ddb446ea8aa425561372e442e7a36f4e4d15933e8e16c62f943d2f122f039dd0915393865919bb7340902d5aaadb15822c4759f9eefb6d81fd2c332c21cf3f6c6e622b17f4f6fbc1977e88210ce7b7623f39c6407fa31dac6e229660da9f9d536f047e4c29994e948365ff37c7eeb49cfaca3428aa1dc4f08f09e6a6dade9672b15e2f041d9c9a1498c8cd6f5bc4813b2d3a82632efc3f0270085661f6a65c0ad17204e9fae4aaeab53fa3e2fea7cf8d2336aea3802eb14737df0344f4289c78a98ad3c6f9789f63bc5fd625f8721174f7b3384f929e402f587110568ea613a7daf1ab548c8583beb483fe6d9b4ecd20932102bde871c044529aac109dd1e249e17a085ee679a2eb59e089d62dab08bb621932913a02ca7785f40986d96cff9d08876be44984271f304ba9b7c703f8a9e81ee8be33bf351016d37d4696aabb69d3e8f9b0e2041dd06a92a30658d0e890b56b1d13c1f93e14f9f345c66da8d96738bdb9d8fdc7f7f158ca52d12024918944722b8e6a27bfcea0bae0719f24bb9b75a3485fe3594823b884f1887286028f16ddd3d018fb51c12bde01c4a26cc1c7ec528dcd111d7ff518d57fec42669e09d1aae8be90516964a5864b739717eb7217e17449366e6270ac9182a136b4f2b316595c415c69103fa36849fcb7fd0bd66aa573b5ad0f60daf577e77408e97d741aff1c3c23bc690b07015cc1a4a0b49813289c0493f1f237e4f3bd5ae34d28ee98e4b24eb5d34958b90eb4f7e2af56bc8113c984c0fef0b1c9fefe01fc8f69a6abcd6fa81b7b4460d5bc750df41a6774d0d6bbcac486511b04a2cecab77ce3392fec480b4bcd8ec5403a99fc377b3677cfececa307f403a4443972e56c7b6c4ded3b75d45bc0eae94ce719c7e9ea2c331bfcb76a27afac90e1c14a708bcb18938262558e0bb09f1281807f5773ea347357ab3945ab54723fdb35d0b08b38a9e42c3e7092f4346c22097fd2c29b8ee40c3516f17bf51ffe804cbcbb3e2dc9f0ee9d6d37af77552384089a16745673afb1a25b21801bc0e41d5ebd8c4826951875c0d299052fdf7fdf095b0326a85bd7a947ed5c48698d56bb6772c0823e5415347075652dd98eac65973a87d9e2777938d33b68066bb365963fffd9b1a76ce66104fce0d6f9dc8a588a3689b79a4f80819f0c375e15244c3d40f4c5c9539ca6da80d98112b2dfa33600c7675e08d1fc09f4c322917fad3739b0da93a52c46d3dd0d8866d0567fc1d87ecc7317517e2e6ec4eac2a59fc5bc7a1f33cff399ac27072db9e0933d7e25438df1ab0975739d63fb9efa2298d5b470008c97244fced6001c4d88b8fb02e3d564fbba2e186b43c08a0c5bdb575cc6df6a5dccc2916191b8f4184836b32a35db27d1232d5024e14d95901053ecc2f93b997ebc74f3cf00feca6b7c9acb16ad121dfb810e1562c678677dfe1302be82694ff3c63c6a6a52173c0bf2b31607c85884dfd8dfbb3003fe763d058cdd06f040e5e9d949e2808dd5857adb699d7108c070809b858fbd446c84e792589feb7a30b432f5c5a06a7e2892df4b9a0ab5c8901f08ac457b746b55b84e349b23eeb11f9a4f35d36fe230734fc4edfb54ae23021abfa984657f4b2c04430ff2f84c21bc4dae3c2be89430e88567d77df28379485027bcd4e22c66635840f65bc642b4440aaffc03f09f22efb75d4061380a0bf8018ea01941e85c8963c41a686df3e4e91939266ee73dddea6236a0c67a7b8a7f45448deb85498edfa2ae24aa3854707a899db85d2f09c870b94aa1770de79735691207b326e049ff6d8417e3ef28b1cd2a58b878ea22a2ff61150d7bd2c7361255a4e11e0234699b1b461c2689fbb34de4d5bee7c930e4c06a21042d473e9b48eccadbf14d89ae3991f9a80c4042b098bcd5c34475285905aa29c7147e7c34bad3e2180f25cc7a26434f04c7f768cf2473dbe3107658af01ea60bac0a19cb40a8ddd26e65f8f0ba832b062e69f379f1aca139bc381eaf1b362cda14ac04c59708980e21be440fccb05f878d23287f65cd21b09c2c560062bd7e0ab47e56bcca906980903faf52b5780a5db36a279a1cd9f863188e791ede3a82bdc13fbe3245c3db0908fe891f4e75441bcd42d2270f1b1b1a395f2e85121e72f3342059ddbc14443e1df145b02d33683d1497cea373d79a14c16997d5b6ff72aed8312ebf17b30f90c1b50ee296932f822cea5451190ee5c8a5ec7df23caab7f3eb46c00f2cfb59356c0fcc0665150267ed0bba02c656c238ef368a219885b7a8901fc10a25f3c8a9531bb74169f93036e7c896a8ab5ab5d7be46e19464bb52c37a655f452a2ac41668194c03205bb7bea26c6e1e260ae62ac1098cf967b301a133670a339cbb50c34e6d4ad0e82c9a3361b037fe5787bdbfe168996678a530c2a8b3bdeea6e79f96560346db4fc7321eadea7fcd071a44bdce9c308440acb25af6308555e7bbc782f4c062b55c3a19776be0c49d9f327c9667b0e24ee9ab79854527b6934035f34bdcfc48877dae3210777e4f927676754f371a8faf11aacb047a32a7dccaf7441d581b5b187f6d984a90da5792ea6d188fb7d38023e42a111d0d127d1c25cbfc8028cb2fad004a51943d6af1045066196b12905e00e768a553b85b49843ee21920926223d28027ac62eb75186093859ade83824397109d310f2854274f49daf944c31251fcf57702a7f2bcfcc645d91816d9c615c414e2ebff64e79c510077951e9a466a1117e8924511d1a8ba8d7dad37efcce94cbbb2c4a53220df98a1b9a216a93c055611396d00dcb0cf630925e9fa5a33efafab176d683619126f461009b05bec601ac3751c2d232cedacaaf55f86ca30daf0f60bbb87bda3cb8ce59903c1e0b159979c7171174b21ce6a04c1133d1af8ee40e2a6a25eb14f861f6f482324c78b85baa72a7b119ec29209b43573f9b6a2be8ff4c037dba8f529f505a62854da47c4883859a29424d76bbc66a0a7bc579da565ebab2914794531da4741ad1cd85d48feadbd9269b269e73be388065d011ae2301d6b7ead551f8f1184826f3b6d540b380f6389837d9462a3d443e8233c0237ebc003a5e1071b8de559b45359dfb1c95fd7a07c0686e896f40b26b7458e678a755f65f8aa1a2e2d0852417d8a74e5e379fb76bbaf01c70a4c89ce9935e7d94e0f9d6d22e71456e96d128003dc34280301783c827c545a22bf108232996ffdf07fbb940fd5d0f9478d06403b88510c1aa833061fa893018181eacb6e496afd0b5d43faa714822c70302bc3760875e81d09b999fc5e10fe4857f4f992b1e87cff6ba2345ddb9d8955c3e258251de7c576eb9cb4a18f922fd33af74dc74a91e1085f85630965f63c74091507516c01de12ea160844f4888870c50a185678b976b1aec70aae4cad927d59d79b531c879f400ac5c2b7f7cd950b8359bbb3effc903eb4351c2a6e24d337cd3837fa8f7b9a46624550abdbaff251c054827bccd8b5428f43dec6b6a3f1b79ac4a42d1f54791d5c37effc74f5c442423b57f6f3cd1a16a7c3763fdd42d41a7f3d4216ca82d1fc15aa6901c99bee00f275260cf172d17df3e020100dfcaadeef15ef281fc3723fc9f6903befa39bf975bb0e9dc568f6c4e8710f8e639ca2029d42e5327cc8f4c81286c2b957d000cc1e15a5a57604700092681cfde2d13113029719b29c64a8feecc878405be4f42be8eaaed9018c17466917fd56392cc86ef9ff4f12d286cfde7a42ee7e90d7572448796643ef3626ec253d8dbe1474f4eb8dbc6cda1e496d8222d416121091cacb071571c196d8f8deb01ecbfdceca1002da46045f46e9d4596a0e208168e3857e96e42776d2dc1c431da8ecdc71aa5c8aaeeae50921352e3986bc341d00ab794524bc60afe4499d6476da548e96989a6ca405ef600f2daa41bdd47334fe83f9163be7364a43830e6ae653fc757ed0483f9f09638f2b005ae28e07ee0c08ad2a565e76a27de3506e4b24df6f94170eb247706ad22abad20ef12d4e07a7697fb14aba12a0308065a8653cdf8cd34e521b6c752dc64667c9b6a0ca068f6053607bec4873e4e579663ab9dd35d48fee3c38dcf5d95192ccd6bb627926a04184dce771169e5c5c8d237a1fdefbdd0bb0bb84b6415fb03e03043b84e6c461db8582cbe24ca96f245de201f32a79e84ea2b9c15934ab08bcc994c9221f15e60f0099fa1dba2e4cc0aa076e5a335f8f29efbb756ae36ed377f3c49d1b94718435053ac3f9a709796aa8e5d884838747c1556ed479584be3513fa8addaf1d66221ef33220be5ce840d7df324587f483fcfac22f6145ccb8cc06feb5ddf9772611d98b567c0e48d404a43202e92b6c023fc0bf24ee882bc710215e8addd225cfeb0cc05d3058febf111d303cfbee5f4daf4b4403c13296e3848238db378cb37cc2969f4f3e95154980f8230dae461f235e754ffceb9d07f14c3cfa0116f9cc1277a017a36da0b5d23a9099982c6a0b82a996398fdc84bcaa59ffea03d06d5c5fb7d62e0f97b11ebe3d2799b5fb2b300e25c234cad3b42270d6bae8ae4d76a537228de320ef33b303a9a540efa37b63718a02cae21fa5f6bab2d3a2493b9163a216a3ad2d363ceb938e6e57a1682484aef6c5d26c89f6cd8b9daefb9e13a9b953251a2a734cbf6f9803c7057e266a9b058aa64822f9a90acc910457fc1b3195e7972d2dbb96b7567a71badb0c1ad736b751ee90153dcee68fb87150b3fb486c64f5b223b84d930fe9b873bf58b68631a6d0ff80117db4e0b9101502281d0baa0e85ce2276967ea6555cbc16fefa28ac39b9b65b52b4a68afbfb5e762c4262b6a974aa3d2bfa5258725bcb6250b0de803db47e5b49cb707edcb2561101aadfe98a8662995180099e343cc7b3905291aeaca67712ec737a66ec121c3d9dcf7023800635efcc4e25dbb737c193d75db761ddf110400e8287fc2a3d2b65b4880253378335d55a8f99810cd69b89326126cbc53e41e1ea4424da93d5fe38e03208998f9f07389f7fcf3018205280c34cf78259692af3dd597e6369e4555f9372e543f06dbf5390202e4713c9bf0bb3c5be7981d357b9aeef932655af4524ed261349965b5013c4b94793405d808a3549d902ada1630c4339f3a907446b6a2f7ec9d81aedd3077b9ff89af63e2a023ea304e763044db41d1e22bfbe8c7715ef8199e798d5109df9d591b9496358d275c29a0ac607ea183db9b3c52bfcdacde434689d7e208adc5c1202ce2f08f09222ec5973408123ffcb234ed4f3b68ed363692df50e459e9d9dd3629bbe1f0f3a0efa9ce18a602fff443cc059db1a10fc94b8440df37cfc4ab58ba0e45178a20b0b6d00d8f313f54f052a3aad3ed75e9eafe7d8194f8bc77eec7c83292d8294502c3d312feb4fce8e4c3280745db1a6713b340a1286e1a483dcc2f871bd4c925e6be9b9c12d7f888da5a7eeb8d1f98c86262ea509e6378d54c7cb8f73f005db03dca0b51432dcaf0af41b21d65ba858762eb9682a61bd3a39f76c6b2d09c13e7c6ee3060085eda9b1e402743bc64a2ad01e9d196ec2dcd54107724d6cc96950c3b8949d92368bc27a0baf5c1a8bbca4bd3ea8229841fb9dfb855739c74baec8a20798921ed29626a6c0ab879e986db3d1dd92567e3f1a74845d7e0ed3640464920ba67f880acd0aed5786fe0e8cc7f11be376b18d8266bac19f7c4a65ff5d4a092300aa046349bddcd65d5c2b74b838fa072b1ed6a12dbad06c485f1e945ee90c6335e945be12b9fa50671c41be2398b5088ffb37f745da8c41f204251ac3079e1ca1d8286680820ad1ace9404a941bb24fa41ce752b0a2551a7ce3207ba465a93f33f31c4fcf3a8865fdfab96807c387064cbb84a17a8a4d62a16345f8f2d13237d1250256a8a879d9eca11830821589b490b74acf7a9504b4400b82f5355a3258709b756a0dddc51056ef1556c6e85455ff5c50929a5383dde1d7eb1e38b39529f2c67bc89b52c64f1e2d2b2867dfc10ca23ff867942a31184acca17f715f4a496e7ff01866a4223f7f818620e027f11a0eb5b87bda78d575df64334e8bcec592f1cb36b8eb66b979fa11d7369414d962fe0f80520d9463b3f4305d5ba00d241543714741236963fd41c2a45ef4630fdce0a69dd15003ddad66b73d29c6da8cd4ca8319ebd5e5e990f092300aeae92d81d77eeaca75efd57d6810f8e84439bcfd3af1e8fa5ac9ae03875b511ebe554adc534399708c5a3d4209a223a3ebc8d6ac60ed75d584b142839855b812cc3e81fc1dd9941bd211eb51a024655ee911728ad09d62bbacf0897d1102bd44823edb6f9fb21f36566c2ca33e4c347b2e432e751d2923fb10c1b9d8bd45a55c850a9c42aa30864cd9de7dd10c44e561f315fba7695c0a3a97f96108e1da8f1bfb58376ae311bba3a5b2e39f25ee35046780b905f905736d4094841e2c91dc6001ba043fe8d96e07ec70527658656933843bbad2b51e9e568271586645ff94bdab5fee30bdfe4fea6e52df964e2853b31e77138267d2c5833c547e0cb6a58ca670c0c11c04aa80092f7de22a13efb24b3470f9847e5eb0cc306d0ef1c0e5d00e3638d478c3081c53b93298f7d41846854555d9e472cca2b6a9de90edfab56acb24abe5b3c85510571a623a993a93bc6738876d6bdb43c1192486acb32bdef3270974779df95832ff7e48f9c50555bd79a1e4da18490a2e09c1aa354e99080762898399005a691927273fa34ce198861f4504a451e9a9bc9b7468c187d523d45492373012b6da1304c6bc8041c4c9784d71b24bb432bb13e6944566fd12cc9dd585dbf886a98fa31eb45283e3f5492713b7fc7e981ec4da685f7d0b52fd010651d5c46d71bdc113c5859fea1534b0d9e306445256289dce83fdad615fb0e64e2d72a87ae0cbf01b0ad4602c3f45f09e677c7adcc1dcfd1015324b429b050186059716110ed6f1073e3566257ddd095a4d81285f77c7ebf21eb775f2fe462d123cb836447b410dee53922fbb10964def485ed5029cfe64c32c7a6034834acc169c3e6bec8b9147554ff2acb8b71776a41eac883041ca0944ea56b4eaba43c37210af06a2ea83f086a64eb9cd8be8b8a3adc86c7ba1ee4a2d447b7d23e3fb813496a79e98d824a26ed4a2fba1a2a0d167d647fd7ecc8626330d324b001b7973e212d88a23b8c42cc2da1051fa02398430b185a1505973a5aa1d99eac03cabec243aedd2f7045b2261971fc9d1a94a960f1dd8d088cf017ae991ba5e7a299d129092c36f28fef625152677963270bee4b6a405ee6f39db9d15a32a30fffc090d427107b4a5112934a746628dde17a3708e6b2ef8807bd3cf3cf79894d747e8d886fa0675bf2faf63b780204889ae6cfaaffaa15d5533719e796b2ff2e9b55c7f98bb9ac72b9bd37e6ea4da0b21ea25d2fe344db3d1230a515cfb298dc123fda718a3aedf2202b48eec515492bfd9561aa1d2e36c32afd7f2b2bef1c46bb14bd56970c48ab3d0a5583d10960c88d18bae6fb05914c0990c67aef0120bbaf53a41827795c51dfa1b63bb4b50cc13383e8b03f900d3f2f46000fb1fcecfdc0414766440c2105b824ad98f2d1651079121b3cffe06d26b36eeb3e103624cae28bd602012ce444b844e07de331196212aa9e88c2a79ec7181ac13c46f09dea56073b902cf74872894d452d3d7eef00d1f015f56fe842d30f262b94fb30e659e7a7b02bbcae7fa160e2faa680f57821d07adf1ffa38c77b09293a112cc4e2cc09b7def976defc010e5eca599c214faaf5b448ed17d0d2caddadfbe506f2a685146fa44ebbbb48892068da9ca3de9160c81ede36f3162ddc0841930efb1460be5de1ad762a94c07bb5cc99bd27be67ff14ada207fc7195b093d742a918c860c8dd9a1d0d94292a17b855dea6d176458c24ced0f2e4efb9e07413b2a40a7a0b8a5da6f336355feb945f73996e856cab8ae51952c16a51671c996da7d0eb3b45d2148942e828aefd906c4752cdec9c2542f54c081d2f727189ed386f93d2bb2521c7ea180c0272886896678bf9d2f42c58f2e36728390909b1796d4f6427dbf01b48a2deccbe00334d61f589016c628c7a735681e1a3cd31cbcde9bc573cbca35796416fb26c39c79879e08d4998bfe052ac9ea52afc8c60442c5b84b9ae88702c488d4291dc920c3b2b61336df5101fdbe0479e3048276708ca268e40df87890f8d13785cc25c4ea17379f8869c9b41fb802cf1175fc06811b0c1776f73d52e71e6da9200e0987f09d23cc995723e80585964b08d676a9d71ee3fea42e4ce5532efcc66d85c6e13b277a899f19e17364f5540374ce84d7475aef2b83a5763c9237fee02acff1d18a7160afcd767593005032768db09269b5e0ac838fa6ccaa054b23793fa7427df16e774f710aa6b0d5ae679c409a3ecd25bc9e9dfc7074a9c94f08d9456b38f8112dd307162fdd4fa964a77b4b0f994c0a630f7877b3e522f7e52b039a78cf2692a3f39e7610d4dce4c8aa3b59ce5dcdd464d883fa754c33afe3a57fa5dd31685e2923172b97fec02bf438bd7a853209552a3b2cd6a9922c91c3ddd197eca3571af98568ecc8683347d4e864851fe3414276f20450c71eadfa5545230fc39d3bce79502c51a7fef549216cb5db7508477523499798a26891571235ff31a79922de601b9e1061f7e00128051396fd37389053e1b831486aa72daedf2484f3b9bd593cd08795b91cf86ff749e7369e72a3686c9bb4e7bb9cebd573775cb48bacbe85956f5baa6890ff84e85845f6e5fd842e4e77b297883de21ee8a80253d4336e3226b0180ee3e9b6223bb78261529298e9350d64aeb9376141d1780b015566f3c91276b3fe443ff1ed27db9cbe9cfda366ca34a3d632984ac98484497c77e033bbcc4b7198e053f21d28fa9520f4cb11264a5aa7162f9de3d382e98c99110089efb6d031dde1087b57cb48beb891ca2daba741e9db24752c7491441af580d181e5225be7879a5985c52c329873077ef6b514269199a51b796aeec5be866adaf4b17baa9d829ce7a0ec98786c913fc1b801d6e6a30beb743974405249caeb62c3ee78e5d16e7c0d189f171d9a916d759af94cb951265de364516ed11fa6228122c73bce0b86521856eef21afb3b97d9fd10725ffeb91078b4c6916ace940b5ad7054e8b42ade20a32937228e6e62372fdbf7f922715133ee5de51bc34502033ecd74da6951e8b1d1d148b83017a2f810eee5e1d60bf4e6c28f03c18d2a772c0e529d8af7ad566a33eaa3b63e526d8938e1ff225f584d54477b94e9f13e953747036824534a3fb03543b669babcc9f6bd0a061051a0cdd0f638b4ef90d8dfa11eea8eddaf688973a58f1cbfb9029032f03007646fa9bb75538d0dd61d2dc4278e8fd9137d1028f7e1bf6c9955cf1f9466761b6d667dde26dcdf2b0c90a8cc70357298ef7e1cd497081600a86175e3cec0e59af4abefef8219e9c6501eab69a83e79592e60a31df46d06ccf290091eb301a6baa3f909b3b7e7f1888a367694ffde0443228ef539e5bd733efea93d6fb111264e49516151435f7dda0f4a78664a49986c2876be41d759e0e07730afb3753464e305f47cb92cbf07e1988e5f9b72b63cb9f36fbf47979aa0b3925bea42f50360ae00c50e45247da50205de30873d071c5a6ca258b3582e23e1fd40b73695516c4ab1c8afc7a8f9d75818ef7a714cf30e25ae54f9d80bcedf2a957573c41cdbf0a505d04c7fab72d6caa5b58c45d09404a57a762dbaae5f0dbd831ee714ccebb6135c21319800868f965af8ea762b63cd268ac13de0e8e85fa9fe870346bb02123cb924c4fa9b7716095bca75aa78521b7fcd9fb9829270744b839edff08350b717da094055568b8a51fe8aac51d213de7a2c02be8edbf5378cb66d6173198e1f133dfc690e0b37073eada21fdb3e5fae7840fadd6269a500cdc0dc9d42c435eaac1119e446d7d64e3fc1fbb0cf79785e610754ed2399097e2bdc64d7a3cd4cfb676a06dd7b8db4a33b78e549ecc76aec6b06b53659e9fc7d701dd110332f507d3f7a98ee663b927e444979b424134205d6cbeff748879e01e39b6fa01c5305b360e8365d09898909bdc5de0e1d9b2361107abba79e944a7ed91f48d342d933d5c28b89f302994e6e9fd077d2499f369194834a168b2f08380637c9b138c45cfbbfeeb0e6f6233e26af8141656f959c44fbc544902cc789e0491b588fc5f487fdc097348cdd1a1e906a5d7a36b1ec3d3aad433b8b5fd78e294ac29dd419a1fbd58b5afee8887fefb3f79c28ee074a0698c36694189310d446265a6b003c599ba37182c0641ad5bbec1f5d15c5396df71cebff5c97553c41ea96333e81783b0892a2178e5d47b0b5a6ffbbf0e6894582d39dfdd10b29d28fa86b3e7d897b2cde794793eedf92373ac942b2944b8679fa26cbea9700d6d0f93e710b1cb954c0bba2f801b6f15b0f0397120186f66f87874f2cd197a696eead5fe2d96561068f4705a9474ef068ab775c4c81d803aad090f1efa81c65e8dcee3e6e046b2e0a9bd76f04b2d40048d03aa3c24282b542013047ca573d394e636faaf42bdd7d82e79d1787310810bec214e893e0f5d600bbf4974b8487d8a67daee4d6f2119a84ed76898a5dc4754bb035f114616ef49e0f10599732c75493c4eccfbbb61cfe5ef5e8a20b096f3a6ccb544f587c409e6347b258bdc8173920fae21df4b079f9bbdab1c71c9a757910db49de3767ddcf084baf1d7ac981a24093b34406d87e5d8784d84f421d7094e9da38e18869acb75f94ab5a6cc3f833ce9263bb5ca51e9faa359510ed11baf904d512f0d41b0421b715f6a0877a3d72642b20d9e8ed9516f79e9579e1af99f831ffcefd8a79eaf71f5b8c9dac330f86cf98669c2ccd6e515294364f85fcad334a270c78a4beb63fc898031d2a637aa90a7b4e3398105e0ac5e9f8dee87ec4090fa7c13fce2e99ba1e8339df0907c98aa681fcf18daa593197ea9855ee01f17179f85d8096d150c18e281cdcf55dfa3da0e15f99845ffb1913d9c2dc36091a7f5d83456f47f89f84a024db77ac87eddf5a4e2b04ac003e9a7da3b5c671e55a2652b675a0120f2d29e0fcf62540e0a0ad2fea175e4a7e36c2101504280419d8914b59a85c97a23d7cbebbf51b3e147682caa31b74b2e1e4f547532c309942b4090cb91f31a0a4d83f2b9cb8b95fcd88b65caf777285687751253a5f04243ef1e4724038d64df51c6c5a786cad818a030c8e59c58ae03743c7d549e7edf9e7c34bcc4f80e71f62acc73c6cd137943d46a49d4d6e350b0843a0b287a4f27030f4a379c1e79791694774b4b831e6d8e79777bba5d4ce7c0f305b873aea0eea88321a423d7761aa3e9b3dc0a48f04bb55b344f4772f5c7d09e7fdf14db81c2690576a23e1367f87b41bb604aa3d49a17a2710f7d5f732c444c0f21981ac39dfb982b709b4b59c3c54be379c13f8c626bb900b43206bc97a295426ac07f82ccbc51353c0509456863f41fe159e9410704e714dfba0366b5b1994eb0514c0ce20dc3c1bb7e50705fb6e3940de4e3356b27ff6b35abae43d4c4ac2f6d3c7e2502a7a6607a34a119f81ed5e2001b5f01a28fa1b5143ddfd2d10a14ea4d52102b213c88e8ace43c689d7c516b5f160fff810901d80afa5ec3f4d1886e8eb395ffb7e6e120c1eb8cc0763515e08f2f97b22fa5d4b910b5e3a9bd6c1ae7e9d2ca4db26e165044a2eb21d0698340989586e6516b633621f1d25d1fd9412ac7efb50271edba200c1032462c1ce0a7a3d5836229465a8145fb7a3a8ff841bbd1e030cdac47e6d97ad559da439940047be66528521b14347a63ce124e64cc3f974012f19acefd8390102f0bc4168e20dc56bbcc2f92b2c919399a20e3af031880d20be7d8434d8de95afa66ddeb24a420fff430b111d2934286e969adc5351b2782a7b375c62849a661575bd46aa254f5ab2f790894b186080b1da67b6305c251f09e0469c5b3380e6eb628e075509728f3ce2290e8a20fed2d2f0abbb55c9c84c56b06ff502c93e124847d7edfddf02360d4e4f07005e772ea5ef7a75995af52d0777d30a114cea0b0f63aacbd462d5fb4af52603ea11b61bda4d92cba1a4411e3215d004c68faa4276c8e5ed1c748e918d0f9ba37047dd692306d8cec302b6cc1de2be966fe824a0118f8a3500d5b8fcdbf9789cfde262d10479f154bbbf3792e7f8a2f2dc2668a464993f975ddde43c8e298514950556caad60c17b7917f9d60ba0cd59a5f4506ba0aab13a3748de98501986cb89208be2d9e859a78d9f1f7a6cdf4cfbde7a8d1b747cc074d7824d8dd927067f97ede69c8630a86fc8df99b0fd08d0f9f9f8510a1c899ffd89dbfa3dfc6f6a48ee1c1ee97dc75d011cec7387dfcd01b0c8e7ddcad659c6b97f42334ce29eaea5d6adf80344ccc6b156785d6e3a03c908020450cbbdba529edebe0e3fe60c0c9817ff861184889fa7f4626289694ef46c6fec5c84b125afd9152bbbd213889e57d96d6855c984583a82d9b6ab069fb29c8826265ba9a5634b278038ff58815b9f1df7987216d071da2a4f1adadee057caddc46cf6ed4dbe43281b56811223d5652dbef0a857e5262348ec03e5c2f8ac229b0411d0ff8fd2c009e32891e1f93eb553bef5afcf2bbacbbd8ee7d6fc11f7ff512fa4932c329d0b6221f716878b90fa94c4b3edf1b08a42a9b472b1c36a90110c24bdb7e26bc7edef0d49c3ef2e1561da994ecd9aefe62ad61d3bde6bfa4d1377a4efd76f12b8e516d934271bab063eb09da8b16987c2d1e23d8a01612760c94cfca1f093243dd7851cd6179ee61bbab13cd9a111755ac8ba94abffa7e890a3e81e6d25f122e0b68936760302fbb5cbdfee3ada23cf3c3ec6623341841d96932c3d1380abb86695541b152efb9e6f31d72204515f1c306f74d2ac6fe60bbe7fcb0886d2ee9133d5276a99502d028808159b2ca397b87cfd09361efabb38789ab1371ac4491cee65ca1d3b6520158221603484100837ccb2cdd00bad49734d51f6b0dd0287d3e2d007ad0ce3cb5145b64753314a411b4f20608e3d2130a88acd3a51ad312a27b7880ea944c4e045c27107492d5dbdd2270c20039e2a046f031b0bbd8296104ff75856228377551f6f02b12c32fbc122d00b7d312a79b6c2223a1e540425df710dec6749f651fc60c53df269dfb95ec4705a5cbea46880c9bc511d29a5da51993ba8bef5acf3b520cdaa61a1e99e699c11efe679adaa21596a1e80e49a1a52459c59ebdde4ae09c84df7ebc7b995a2a696cf0eca13c72e9432f1579d8a15c723c3063f35444a6e5bb1d03b7a04b8b0437c5dad25af7ecaddda5b285b8b81e183a5356c66dbd44a39868f422f74a9fbdb26e68a7ef46e18327bc28da75f3c68637c5d9aeb48f39bef4b037f20289c4447e4d8b8af326b2a15b8b0a2ccfde6404940475195dd6446befd6be12a3026fa449c97b76fb74a32f4bb6b08b013785a1738857db4e0c76c0848fe3f83fd3ffbfa7bae7705c108958aaaa6d7e905e2a52d4da9acc7c197be4f7d29cafcf6b51b3b5584f4972fcd7b14d507d60aeb18fba41db9f1c3972dbb91af83948d1a3bb3613f3e5f861399e3bc25a8433c2b188c2f518be254411a2c03691cca5b5037c440431734e19878b4693ca58aeebdff4252385068d0b49276043847384213a197f022578f98e49e836b5ab66c0a48e4df2b7a1cd8e5298be72090ac9f375334e030f13d44d651e44ec7168a379e196aa290d2175b8c2a5f94dff2778e4b429c747bc0994a3e915ac36a126dbf1814a1fe518c41dbf9def3a091a339b6487d6cb373c8025e2062b24f435de68bb4b9ef6fb61f662deccdd29bb7a2b4b86e8e14ed292c4ae23eccf34614b15bff4cfbbcf2638ba7f8b020ec8c3cbde34547474b3a01177500136deb03456c0733ae637d5d79cef9153446bbd8fdbe4e6a9c409011e67716ea0fa0abf4bc5ea56c589e46d0a5493587a5ccf01b96a6362db4eb54018e827e9fbce14d071a134b1add3dd77823db31d18324b595a3b4f7928f218853d0f91c5ca9518a34277dd04d1532983a0838c89f8a081e73b469ad94fef4eab7eaa7576fbb4d18c7d91f7e1e21daeb32f2fe0097a87100bda8008b5d9ac991aac05b00c522594b4f5b9665099bbe6fbb3d23aee8f5467f821f1f10c785e6954e645e4f1ec608cf1ee820b191a91d8257d1a01b2267a696c35b51f0af6ceda2428c3b0e9a527725501c1a39d7bbe77f9add6e48d501e383b98877f6ec0cd83d7ec1115174dbd08885afb53152d45f1d292751924acce8ebc4a1ed5547c5b1a38025fd2e046c67bf5f3eff25592f9810ef98fdeabf19220bd64f9d8b53800f8f4081dd647e0061ff140d8abfb14e5df5932381fd8ef66f017e5ea9eed889b31be1f698411f6e834ada2e2aeb056c0d1f79427edd1f3cbc504a96d9bbeb495f3b2b965872a68e1ce607fb04b1cd7b472a9e4a9691ec203c5ecaf40c5b0e0841f61422386ce4d619deef9bcb6c978d0c8bb2a358643cb2cb154c9c158c586f3d8667460ab052d6799a268d6650aec3d2440a69141836d39cf394af28ff4bda72ba8e138691c44cf28c31a2fa838f62bf538c623919e943c01fa40a6e4c47d93bc2b4e266b30eb68f0bf0a081cf9b1e69a27ffda5040221c48ad78aaf4806e8c4546fcca1e81714fc0a4478dbc0960ee3e7c5b1e202e4eca260bb11ccd03e5af93d14356c7fb17751441351186d6ec16d87ed23e43e7d76f229acf0ed136c7a4259cdd1be8841b7ad781a773f81a85ac1154dcd9be1923bdce1740204badc4dfa2fdbdfa092fc59885e0dba559a034b8ebc3529aed883608fcb2ceeabaff8289ba6819514fb8719827ad02d0d45e7f03d71101ca3a88fb44278b23df47e1ede9aa57e00125bd28568f290c885002d0d2e545a6fbe952bb1c1137d28f56f953cc5a4718683f21a200a3aef89be6991d37aa208f61e30e555de1a7ed332dc5811554a29bd2cf980c9b16c345ace9d7f57ded88f6458a81bddeb3d31f5c9ebe05cd4bf7dad4c3b15508277fb25ff192868df80dd53439dc391b091363d7c2831a695b5d04f01994b1d8d04378c2b127241d841845b5f70c19115446d396148ec8a005d8ced117095f8fdc030816a32fa71a34767c5d8d0e88e2b898289d3867d937840d55801782171c96727037460d5bacbc0b547af78d0097b54b946c36b0947d38c32ce4f16f869a13b44db00dc13155fa81a96699b9c2ef8b012994782a075d2360f3856bc023b4fefa98b6c99569bf4f70a0c72b8e2495fb5cdde675d8e81f563d7ee4fdf24331d43026a703fa181c7e5cf86fd21ba9728a789b21dae1f8473cbf97ae5d71d87cf5dc4332c086ad0deb473efb6c09795fdd24ea2eb2010a362e8cc014ca57d0fc91a652ca956475ed52228c19386d0a232d3adda70a3b3edf75b31add1df217b460a64f1053f5772b3059e906dd29803c8267703288f337a8e41d1e5e1716a2c77bd7edabb37d78e81381c30ab1a60d6ae734827f603a850d7c3285b866d847cc33bd5b8a2d197a29855776bce9cbbf1c96266699bfca78baa017d8ef18bf35f96ea5b563066c56618ed0bd4082b1cf79c872cd819986ea44a8c0fdc100997993acaeb76e25a22f0c4d344f521ac8102ccd0b7cbdbc02a878fad03e321245c5c4fdbc7ecc19f43e6b5dda020c450c687b9969184be5d2719634ae7decae9bd5430545830945b43b5bd2527c4ebdf3bc7402c14e8a07c85cbaffee9316426c4aac2630aa54e617a997956eb45a90c6e54ec0042a4ad892d810712e1917cf9d24581d5556951ad29c0a64b972d20872ac743c48d81495bdd251886f1b24d820184e2c4e53cfc8ab55bf1706e4c0d04cbde32a3ab6f094fb0151308cf91a867ba1a283545911a11472bbc68654cee0af0c498d12cb84d026f7bc51ef33bb92640540ebf9466e31ce0ef7274bf0ed61c0454406b58b646d61b40bdbca5fe06dcc373406d1ea769bf42ddf80d687456621e9f9740b5e15f5c0efaf0580a357e12365f67b880943283f5cff3b5fca65b8a85b407ca0649ed49a6c8095bae21bd87cfc987a19644fd056e46c3fec915537b1c484d564662ddd3ec41e3e35b5e46e9650c9cf0bf3f0a7b5ed23f2f2ed227a356ae33260cdf25a028d37f7edee7f7f6689ad4f9c6866c8f3f35cdcc7e0ad62ac5c792bf105c1421a9075d3346853b8673329283a2890b0223bf3bf9bfe8b2906e4035e913968c5106a258555df8a89080b83f06843b74b4c6eadcd3adc082d6ca9b4a6a99faaf5f3221eb8f14bfa0e299f1bed2449d0ddec1f4d9e96f610a50d7fc8f2f5fe706f9b14a070fff1e07b362ccdfefd9839cd082b579df3bc689a53cd0d829b0899cc42e8243632ace1c357017b1744f028493e5c5d07f2cc499d3558424954011333fc27bd310fa7031d6ed3c63c035ba64129634a89a9fa3f63163b38d165cf2ee6e2b60d4e15c68b9c2e62b498c93d2d408fc7451871bcc2e8a93d937b4f648e4f211f7cf84dc2049fec4e7930c14d7bcc48f8624f6320b2fcf8dea246b94418f70053448f56179a3c4440f447e9df21a67e93328669540a83947ed46db69377cbd0641b785b5c173481bfd093a777dafc5b28ebc093db281349d05cd61baa64404761d604da807a0a97cb45645c6ebb506d643891e450cf79f3fccd92c682b2712c5856068de97309547d3b7a72139be3e806c60a2173269bf582d7b6469d83dbe0664d45d80db6fc58364361943cd59f974200555946ca23082237bddcec9b60b8004e9b223ee0b1ff555ad8a77e51a3c4097320f8c1150682a6ceb33d67bf959d4f3e48fcea350c4d1135099ad3f78d4e84862632f79203543b9fbdb692f64da1d43b3a260747c4afd060b3a7b5139a38cf863137972420ef6c5a72b679619419712e93ba824b5c29a63b5f228c162a59bbc2e8ae6a75542343b86ed3ae60ae886e5d56a72aefff39726c9ea57574699f7f3b0372dbd1b4d810a8bda8f7ae9fc98f89e3568590fb004c5f983b090e3969ec74057112315a5cf138920bf3325f0e97ff853d5f7e2a35308ff3060453d6178f068bf815c265d89f8b3d7497cead8f6593a8d9420f594b9e841a35fa5e17fd7bb950de9f27005a82df2d7857273779220f998a5debc26e022ce4456c59e3afff8defd068f0ea709c21113886a200d2ec6badf86a9339dc3badd048defa3f3338594427fec88096f59ba5aae24e3c3cecc68b885bad061e84bdc1dae24cfad0cfe39fa796867d12bb54ae598356a790abcd566b33cefb9ea0ad820a78498c80181aa990bb04532e2ac3c735f42e563c74789fcb0192b40764574ef88856a600c111244e569fff1d665b640400d5ee6996a25ab21cf5fd3fb07d4e0611b45e2bc933fab1c960c914a50238abc7ed7740cc8f478ee40d0cc7c3d6db3de938db01c3ce12a028297b86ef74f529e5baa7ed766f111ddc8024d60d827478796029dae0ff48f5758a77393f971cc4a19fc664c9d95618f747f0ac46dc43e299efcacd4b6b1969a9f92e5db119d9718ce2980012db8496daaab943080d5c97c7552e4eacb4890a1f1b0f41fc4ff91ddf20048d7e05c6f53d8478a865b0e8e5e9c6eb99a981a29926dfce4a28745f8a3f8c3b5d8be451cc20937bbce74a4f14f1b64760a24576cb2b2823726601b1ca7970a23b1e4b622b9c48d6d7f9d2e5175f35699b9dfb1185632dd834f9d42a73054852202c7df9bb1c8dcd2ca9bc50f0f621bc2aa6b5494beae19d3d0e00e1cfbfca9f531e5052eeea2ede9b6398120738f347f84045914864bd74799338f164744f97262fca2ea9e8871dc2e7fc2a1abaea77cf3cbe0ec84bda408bd9bd598435c0bb9616e0c9a5f02b193be7f3647158475ed6ec9432dddfed8536204680cfd933c1208307cd7a8c9be279bda4d68a248238f467f0020dfb70ccd9bbda28b53d1a3cd25895d14226a25c6c9d852a33b3d968e00e86009ea85b5272d0cbc277297862ad4e7827e015f5b66996c0eaf0a953377b618ff137473892d45f7d431255691c2a691383d4b297c8a38063b06ca68f8b718cbd4fde55eef1676d001f7253e106736c3fcff7e8a58146dbeb91e10ded268b0b90ebaa2ff37a4e3789cbff6757eb9dd590ee64a7836a14068b89c894def2c1128f3b18612eed6ff22b33425bbbfee10ca42109a299550c94038f4e6e29c37487618e2188ae680f0e8d95edc99669974cb30cf7d4aab1d314b05ec36a5aee63b967191eabba1820a80fb906aa9dad928f88a5d119e7fd8beb35d8a6f870894539d630f1de8c3d27aaa0f3e39c56916c343cf95ec1ebca45952f2d9300573e703c9af04808b9b796ebcc4fd67386eca15224cc55304df11a6708656d0c3f17bba805d5452d93426eb713fb74220be431f3b9326a374d0509cebe8945a7292647439d6fc5f285ed29c208565540ee82da87084415a15d33249f54dd50aa6da2461b0ba71b0ad1295391b49c3a97a92e39e1c42d1e6830086bbdee17fed3d29d053302864b2e3080ff427ad85d2e83ea2b16049a7bc545affed8396fb23b405112c895efefd40b7f828868191009042a058ac74412c2fe2ddaaa213dd9c505ce6e164d2edcd9be033c942f5de95f5699344f9ca87160d33c79ef50c80f6e96227de21789d845d5d1a66f9a19d6fd98248a7d3446312f90d35059878bb0bfb3278065584c1c6dadfcfecc267c5950f6122173e8f4f8760bd9a0c43d0cb7d931ab36b19023140c39750f4aafa59b77db9d35797daa7fda1dc69123d6323fb215f771c66da8dbd8a961ca174b7eb001a00475b556b203f4cd4d8d8f9213a5f1d38c253ade9a9d0927506b9dacdd04e201b0d01e44c2d683fce2e60df9a355517243ac85460325fe7c7040a7fd47c3f7d6300e86dbf529f700dc5346f99d0e1a4d6f4fcaf00f270e45d563656e58139a5334461f822034d42bd367a895e9f934d64d21ac0fb4963ef7d8b7cb4cf7b3bee397ece1044d00b2a442a7d65c8993f8dc4e7a9af091bd65f53f2b159711da50f15a0539da83e0e1dabdefaed5e0cf9b210b514d301fa8aa81f617b22e40b1ac66066f5db99813090b39a4636663ad5028b5917a9c3948660ece6458f64252aca1d3bcd6dd0eb8e44bef215f9a3a99b722d61596322814fe07d9e1b1d9a9e146a4c4a381582e05dcf1b68cd672db585df2db9095b713d00be55adfe634a3485e69257e668813c188a2da588717783a0ac51fe728e4a3cfc64831133aae7447d09d75b85f8edb1f5146640c09104cda8f267605591b67ed11344820890774098accdc82009aa103d749a046d971f1b2844fafdbdaf6b2c5381e9a7e9231e69aa6754ab3b77d89472b30710a255047c759343e16c03cd4620e192a4fdc0f48eefca21a00587ef9b18e65f25e7ba8f56b3fb2a97587326be2e979ae4274d7e80edec3668d22d4d3f5b148c397b1361724ab9254108a9460710e25bdb77c24ceafcacf4ef56ea73b9e4416730900bfb6fd8f0a9b8a02dfdcfa1dc9025ef14cbd88cd1e2bf0532822a0f7f7620f0a12aad68326dc3834549cc8deed6cc69bbb07590a3f1e785a3a053ac247ea06a5a8ca74cfdfafb1f76b7247f98c8d7600b461377fa7260b681b16284d0112c6f875a21a5e5aab0ffaca3b22a10b6c5dd1d7debfc72</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Robot</category>
        <category>ROS</category>
        <category>ros_control</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>ros_control</tag>
      </tags>
  </entry>
  <entry>
    <title>ros_control</title>
    <url>/2024/10/17/Robot/ROS/ros_control/ros_control/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="0211c0bb2bf46718e37968c9e993b706335d54389aed30b93c3d178e28b5f622">61a285bea0bd1a3904d1b9b9e1d94077b3dfda3ecf2d15292d3b1d1e06e84fbe31c5d6f57abb60de37b47054148a37e14a68be3d2612cbe187b8184df7b5fb5fd81337d1c11ecdcd42d23ec199837f1d3d84d76c721fe23bd94ba7f727d142a2623845287474460cc83f2acabd7a092f2423df2cb1c801cf9a994cec832823336216442d71958a1d0fdd81f6a77029ebf104d554403e4c48a3caa0448b3e2df44a9cce3a6ee26d4f537b9e56a1da58e8c2acd4b57787e4aeb7cd9ceca5ff5fb653b3578fbf4296ccba3ccdaf139bb82f1f0f09ff1d37c6a1c0d9de1568338f98f0f9e193571b5e0574bc3ba7c434ff775070611dca1227db93395f63316c39533f129e98024140d5f38a76864f2bdd2664367e1cf53b4b0be0ab9c4dc1a70a8daa908e2c525f93b29bc8044b9b616c0ef7f80e05b3d6906d070943c72c0c2500252dcd7fe6450d0629df8ede88979e69b89b2735d032384385a226c592ed294e65daaa9a5e8a104a7d49d013f1aabf61272e115f120bb0ed7d72f0b902c4d2b43a890253a43f98a7db5575a238885f013696607268c2820a8dbe019c15d151f154e47712678d61a81f8c4c4ecb5bcf3bacfbbf63312ba1d5e9d916dc6ad375c126547d202c905acbaea5b2b7b4d928e0991f0936bc804addd30a66478ef3af8aba4d36e63824bc9b95d059f3f3570a70e79c8c9baf4312dfe2f74a40d505f37a911e5f9fde851fd46920837bb37282554469e67082f9b7dd220585483f7f93d93a660c86a6262ca3ced8d09398079bbbc2ec8c5be70ba00a46725bb683edfe5f9b640f6276565d53c75d89299ce89ca7c75a917e92108d1788c0ff050e9f3b225bb30bf7fb2b1ffa1850d7c68a311eac55b1eb3e47ed2bf2678a75cbeb44ffcdcfd512ebcb759a3635a6346c155a95d4e34ba791e68119532672c1bbdceaa3c8d32e299901b51a9029c1229e9763b50bb1f39c24a7e2f9701584a296b05c6b2afca2ccd8d70fff122037e21da7c4e4a21592d1201e91bebdc73dbe7c5f2b0f45f957ec81deb4f31e2beca787644e5ba797431ed4b8cad6198e052c47570452f113442a705afae52ab23a90907fc595397c251a6937366c6c3471529f30d2e81b219eb730e9843e15f5787e1ef997a5a0929957558051b252d6e22eaa3fbda5e9d6dab84535f122806c2314999d4f017ab63218f5ac532995d1c9d6ed2bab7b0b270b545dd5a1c2defd96c71c0c874c06bd8e3cd4c73b38408a6f0fe6d38462736b03e265db5d85574c6afc97ad18a3fab15f45c450b42df12d99abe29e9a30a1834da45b41e040f3f2812bfc5b96a6cdc1757630f459e5ca96746783173b298a649be9877f57fd9afcc7e5f8dc8c399c30ff2cc5fa3fa930c36a1a5eb9cdd13d313277c6c82b5b9c2c68cef9bc05ae432fd59bf7ea162b47a0b97023bb481e2b3c50eb295df17e001208603f10ad5a2e4fe9caf01b32ec43ad88dab9f1d75744c653a6fe83932712960018504bf218126a3101adb0cc6efd67bd351a22f808f9c1950962fd40c32da842393340e4079eac5ae649e4ed3b9b25009edd10d0dbaa99e4b5b980e21ef4feecfa98dccb506fb1a793bc05d200edbe61f99b5b7b8c36a9dbc5e06082c17ee2bfa02632e00ee6135468c66a3cf2f302f22697425a671b31979908adbd6ad8a57d8acffd4e060ceb3e5e4599a706d3fdd963a5637c9d7655633dd0722e9854dc93d90a3e03d7e3aed171071f193a0c2f8309c8ae812d0ca9e29ec225f164e2658afeadd29f20be2c6653ffbb9633fce109a93b576fda35d3cc8187a1b30371b3e95f1683773fcec18dbe3fce6cbe5c45bbacda18f86ec6d2c1937944bd577e854eaa0eedc579b0a76812dc3c67be1eff125d309d46f61fd893036c925574fa4a22c183768b256805989e1733b3d00ac7af50d8b19a9ce9aea08289bcb1d8512494c394dd7c8529ed9572b84415782f9372233d57708b15596d93b971e18b07daf1d9bce73bd7d424d4851a89308458982966380549a8ae526028ba60197b1c4ae9f303c4bb19db668d7d9e4746ba7d747f06857f30c55b47239d76f85e8a5d9e8b8936137a2a7584669c226219eba569e566414e6a7a9bfb29bc642cad8e3d0b4a68408c9b27beb26d8b1a9692f04d3ff05bd17c8614e15320c44d345fb0b2b061b662c21bd39187f018866e6e6b492af6dffaf15cc6dc0149fb1b4e4d944288a534cc183fc774d67eaf3da8768d581cffb8a6abac2146cf2e27eb2fe7ff68546284f76ee00fb27b4cea977a5fb527795ddc4b6facce61eaab07750a557bb371169ac59991d51175f2f338354f53a768d493989e5c28929766544e44b61d8a0f80babc23a4fff01797f4a2736152043f46530cb7e0313caa9cdd544b9e6cfe58a0f0ab5bc527ee8126ab47bac7c8bbabd2e388fea3d28d6661ee428464bf60c6017bac3feca728e4a455f93d089d00f415bc0ccd4dd55fc40115bd6e0d73ada36ef6304a223e14db75ec32103d155c51beaccf0028e88384a8dcbe614898547f32728f03f2b362a1ba04278ffb5e8ef59da3f1507edaad49771c8d1cbde10871c37fd2185dbcb894d5e4b48778d3486285ad92bd11accfb01f9a48c7240bc00c542d5f0eb03b4f00c15a2a4bc23e7d136e29b6624c25720651c917055d184449fe36ff1745e9155a1c5de71d3870ddcd1c76b72c3de5dead9dc8c001da55552421004c606537448b7117a333a08622bdf5c016fe0850528984589fd17c1fefc9429d19b194778e48fc62749d6de76ee42cd9070e0edfb0c24fd86c90ac7351db48f7f9037d91a35f6248a4aed2b579926b2354b50c2c7bb86da851636684cb93637036bc7e67d3852e48b11c9af59a95724916a776ab844e141f46d970e2ed17326e89b20c493990d2e3302891454a9f19e7b875a1c3cbe1c638dd769833eb203297c48223f91969831a3530f83d1da45f2e93d087c8d05dac9add4649f2e79f02964bfdac07f73dba203a6ce3506c43d0715a1b7f22641dbaa4ae94ace2f2b9b0c15544024c9beb099d85db341976ec822b983a2a752da893b7a707bfc118351306a020b26f99ff5de3d9e3d0e423d254e88529c01e71618a13019d66f08dc32d3822336245496531d1ebad2be9925b556be8ce67586ab37f38f39638f8ad017f24640b0434f3631008f220977462d023d00909e7bf9b25676c2047600a6bd491cd6e95d5bef7f32f50b9338c1552da3d4076b135ed7fc29f3bb45896f608861a82661fb343197d00a20aec64622302d2818cb832475c35d542e3f194669d52448debca319e16c582d93d3e5821f793f607544bcd4d72394e80262a67c6f94cd9b05cd750c17d8f86402c3777fa3c1cb4b4b3541c906d436e4f95d4cddbf361a6a2e650ad3a2aed2c2fa1041d9931d517d1437927e7ba67cd9d98ed8dc2f476701f2382648e5a7cf833c6e851bb076ba54a5fae54ecef279cadf2f27f8fcb9da98dfb82b7735c64b83c163464edc47e8a3b0c147500a26e85149455adb9d60fe961f9f1ba65bb93a9e30a053b401203b73e83559f98468f4f4c4dd3f66cb4166fd1adb14f78c6f8978844c330906d128154de9111ec7e4f28319acd70c4fa7c1faf22578bb11be9a484ea2543e3574e4336481f6a094515699125c0def5881908f83cf34c23d0c2d5941dd75d3858e289c7586817245d678ad07027dfb5b04943c1c1b7298c61c3b9bfeab59a7e2c617138e2edf6de02f06d0274945e1e33c81af4622764ea42f23842b78348cae9dc4ff5bc891bb67ec2c341aaddd021b0f38ab8825d5f2cec18c6aa0bdfee85cba800b4b5f7d4b6c897d7d64e061a9f2620104726008a96f28ed4814b652128abf9d73c239ec98c9f957ad1d522f400221919c3ae97b03e663e2a06d8b12815ed1da0fc0a4e9064db690dc1183915445df2b4897358a4554b4620e000034cc6d88d0dcbb2d16672a032571dd12d03ca44c031365e3c5f8bcaf5bc5686f050b7d017312fde617b5804eb52f97e2059d6e39feb6d1696813c45030bedc7fd7e4ce59b46c394219abf3c1fd9642a6991173329f7ef08e5feccbd63afaff72af7d04eb4ec168ddf09a1fa82b2a11a238b1dd9d99722b8f96dfef66f8746eb21ce6dd034328ebf27f6aac4583d524866bf6b0e93bd01365b3e1a918b9f9087ef9c8ddba6013ea60b5cb812ba378c779bfe83d9d585e82b73d12ad5afef943b354a8b7bd9e8800464783ef49df4e136923d96ec843e6a105f28e120bd9545593ac68e5bef12842285d930fb60dafa646e1f10434bfa81340b538b5ec4a1fb661b3da8f1ff239e9dbe162d54391b9c3ea9db2bdc240d32ff3c2f307df52128309fc476888ca18eb1a1fb125fa21180b9f027e48653cb737b2c09081b336379c3219860524d98391eb5d3fb7e3b56f3fd00719815736d80fe815bca78a912ea0e45965584c692f8edd923baba6079a3572da1144435c31b638c5bc6acbada5c42e53024a4830622eaf787f5cf8cc0889fc5700b16478362118d02d9620e7769549384a09f82aa8e86723f1302794244f5ddcf4b2e75f08ea84bb064ce27296f85300664df636305f428805aea4f1d14e3c010e56b4ae77b64cd1402063a3a8461dc0f65fd2a363e550ba67d17e8118108072b9a8dc27bb098c0bc084bba1530ad326e051a1502ac1a439e2228a7e8e3a424e63291b36688c6f3aacd77be28907d75c4b9d5fe69b6f36ac428c48e368960442bcdba522be4044e52fd580feea5b11c4c5ee1e6709762ffb705a71f928f89196bfff9ab549ba93a4c1c7575f5582397d72ad76efbcd0bd71f1acd23719369dc84d50d98845250fa625718091330a88e8b4ad56e4a77953234b3b98b57bcbdc61b8ec4ef1c65cdedff8648d3aa860c28f6766cc40f5179d115ea6b8015f53ee587aaf227653bb920615af4b85b287b1923a6f5742542242c8e7ab756ca9d6edf9d3c45c165ff9420a607370700f443e217608b3bb9c1d050159cc93e9e8e883ec680773cd6dd57f6007cce75a4b132c8c733740f98de94d343045699feadecdf9d5142a111e3c4eb2a8394082f9748b95b1c21d1560a4f781c03907552a3d7b8519c8f5e17d5efd92ea37aaa835e44f3f9cf950d2d7292f8baf1b849b73b0c5b4ab54d354c5a1229c3d9d049cb6ffce5b429d04c11fd446e7465105b5232afa45ab6f2b642687f960c103b5061f2da0ee9c40ae74ba4f13b6b8e8ade9e179b7fdc755185cefb96815fd12f5c0ad74c1fbd6a0fb6010d36ebd53ac3cf725b02b0306af1d67211350fdda38bbee5651ddafd455cb0350a58aaaf8603403d55ae6c6cf67077d26a0b03ab7718f941f6ec793c148dae395f3787e3bc54329627e65e6b7027eed81115e43c1b9159faf268c437159e7cd0d09f46cc42357625ad47130e1bcaa7c61212de0899d33444447edc02913b692b54a4799876b50ad58ff529e647914ae88e5457bedadcc4fac1641cef18617ab471c09d67f71c718114226f12ec9d9fc27243cb6611185c4dd5634cf88d671783c26035c5bcbcbc20734e9342a0cdb6779e1c607b453b26f80ca8900b9f7bf17f7e874a77203d40fcf99ee0868c06a68d0b970c476a9bbdaf382d635c7dee8ed8148991de36bcfc9fb0e9ef59cb072822f28c399634918db64abef8e8a8b53e520c3585cb126ea695a5d51aca09c25a7e26db053fc47bef9afa9c1fa3f42714f4f4ecf04816ebaed296dba782f2fc61f6f3e57bf2dc0ef7c127deefcd9ee6f80f8adb9533f16e67bf56a89341d593dd98256c312442e1fe87e7f744e60468509d9034d43bd0eeffdef251372b1590ebf20cf30db7415c497fa586771f307acd71de0ec605b9088fee1df5a012bee5a88360d92eee82db9b89a34ebb503fb7e0e83fa91b399c234ffaa4661742b4ab424942103fee9f49cc2cdb7e1dbdc2a20d57c7d901bf91f7d77789fa15bbace32268a5ce8e6d38367c1e9987ee467b237442307ee616c2c80d7e6e75ebc37ffe76496c559ef53cc1357d392a9bca1801697b7c16c16c2431baa10f86d1c6aaa8c193800b9ed9dee4aaae8ac5b280312aa8aa5a9fa8042422855f14749d5ed9cde4066f14afff7f469d5324a7857c466aaa4ad1563deca5860c6aacd380f11b6d86b05ca7575b2c7251816a3a9df3456629d49a434c88efe8573f8b2a07b96f6cdf899acfa61f50246bd8f8eb23d49f5d8d9c6bc6eca65cc77e914b24ff81bc49a9bdb1fdf05e3cc29efd3c1e7e170a72574e23c3286986563080b000437f9acfd1068306629ed06a0b369fa4efacd866469e29de2a7614d9e0d4ca4aacb13cdf5c6747a01bf34f599cc908d51bab044f25e05ee5f11c0de75a594f3861ec049f84aaf1ab81d66a3a995bfa73c3133a153aa95463bd1a2d79a38ac9b0a9151de56d6cc3aee68dce5820fe56efe4560b725b922963352c0b1d5c9611623bd6c69506f0699f8e44d4ab340aad9425ad2b230e9e9309bbd7cd3f8fdf3bbca9628f52fde68d98ef864e33727bc1062f8b15cc91f418569f3c0395e0dab11c50ed65e3f9ec6228f58866456b2692216f66caee873771d5472f34b033c9820161f271b7d6cb826dd5ee468d960bf7f0244070862be1e9db1d2d9e2558aab39c10a4a88115252f7ed26102e2603e8218cedf81f5b80623b14bf4846f015008850edefb53ef4b33feb3ce2a1e62595477fbe96a84b28876fdfd4e7604671dca296ecad04176a9fe3435476cd254ea937913068c82d4e93ba3b502ff51967f2c1262d1d35d16bfe0661e30dbc10d2963388dbaa22f9c596a08d4753227daffe38ad5f619dc4b09ad0ebe36bb5f072e9236656e25d7b90409b62e823376200a262323f337b46775f74cf3deb7b4d20c1a35088800d7bb43f216d201419fc2e19f8722fcad6de779c370b2d85f7e29e28e2079a38fbe30c827923bb1f153197bc0ed726faacadd99c57e436fd5b8eed7ea4a781dbeedcd0dbfb522a07e0f10d26dc7ffbbd3c61d27db534b3845468ebd741db601d7ce8bff848d25b38ff7a530d183b0a66522db93043813417e98c502213017534dca1bce84ec28a59c9ba6b576c359ebaf6a71caab48283ed84c6d3b020fa55f1c91ece86b4daac07205b4caeecaf421b2891aad8b36d13b450e68ef481c97c8ea6486102bbdd9b203de2f23ee175b57c945dbbe348f161ed9ac63c70aac530d38f189220daa15a0d628bad41958ede06d83455b8e90cc0a2f1d54a17a6deb94689d62b09bdb16122b53a4ff51659fd93ae68d9f7542073c5e443314e424764bae081aecb5fecb964e7aedd9e8c001e8acfd6f6e67b0d0eef3248f7ab8db91f9d61c88dece6fc458ee645330071da95dc17d02bf3c15e54cf6cfce79ca04f6e6ac024a0d850fc25b31e9cb78d727ace1b58a9bdb9740e2b0ce234e2891a4f9a2333256eb06b6c2296b2348b37ad8b258f7efca4268554b8ad93c762d29c5db81fb0842f5ff08ce8f7deae4c8497355eee4332747c73d6bc0354d514306c0d33548a4d4441ebae8bc85d35cc8d5442bf22a0c7afe126c74f229b163513a1fa78bd729e8832264e3d84a5a201512b8ed1dd4f298dd3d8803982eaefdec64490615d1798717ad6982f20dd6afc2e78455bd72f76ac7d5c6a5337c8cd97e3a2c9c8320a7e796f315d0046345198278fff044ef69429076b61bc2ee93922615fa33c03a1c949e905d1b1c4df9795ac299b8e0c2625fe427e65e8bdb0454419954f3b5e636d0ae3663df8b2b0815f08d0bf7f729080b5db181413b31fa2096271c6f6c7e72d3bc0350000eddd7b797505128db07234c191d46b674bf52a9a8f44f6911fb191c353ca4b4798ac36d7af545eab741800a16c66e7ec8a56bb33e1c1ef77a5503602012b34a6902d9a709ebc8768da9c49f06cf471b1ee22acc6fff87805c222e5e8062e0bffc4c3fddc6dd668abfba7542dec328f3b526c1355b92c0bedf0ec72f885f44747f70d45d86d04c817ca6c9abe02fc0adb6ac0212693d09a0f998729e2d3c62c29e4868ec990d33d1ab4767d83dfb85adb42bb146d309fd0fa77f8916f78775db2d2fdc5493adc474661e7e0a6490690db0fbd3ecee7237c981e2c9e6f162ad83c0d912eaefea422b7c2f67788af46ba1539d8445f6ecd7956182c7e50e95abbf792a9114a0e022f4cdfa6ad1ee74879c1bb5b10c9b2c0f0c5c473e9cc7d4990152c94e80bec99e15f2e424c26224891c17254aba321fed7adbfd0b1047a519f165ce6db18f1cf5d27df6d2a81c47032ef3cad906e68be15a022a32680546da814bf01452780fc76a6e5b5b4fbf4e6c521832304a30a538e7940d04811e9533a1d06a9be250c64448da5623f692cd5bdf7fa19a1a30f736376989f08cd292ab3b7ca9d9888982761b474bc0db81e8107e30c9cbe8f8459959bade4974c7229cc6d64addfd4b689841ef7d8e163e36fb8b439aa933763588b78871c28ee9d0ca7f157d512e0f9c4e274944b0ec20b19f4bb17b38682667d130a5e62f64c64f88a4f232b2dc492bc999d7e8afb0255adda5f424bd693c5b12b131d291aaa86b1b9698acbb667242d235b641602b33a58d9063eccc7cd17c8d06baf3005018ab95f47457a2236b9d66e6723ad3e3de2e2355a34798297844babb21b0a63e1cbbe4c9083e45215da92b8aa4b278a430020089a0991b910e7a6aa78e2def147324a6ba9eaa7812d7522ccf3d0da91ac70b9c8b65599e8f1f25c0a53d6fe0c2fe0f677bdd9bc3ea8c8cb863c9dd280876f49962dee2b5da2f16025136419e997201ae6a11fbd34398450833090d053290be4825f76d60f62f7762a5cce51719c2cbdd3e03a2d43eb0094338f84234c1988896d6ae2507c5719368f1c118dc0904b3353cb9529a0d1682beaf027bdccfe751d0281b226f10e5d63225fa1a8d2824e62c29ba42f292a185d976e4f5c72ad9e5cc69e6afc8f806cca3b5f2bc36bc64c85c392e7c69df9634855805056b4e583bdf1b8083c4336165a17cdd525a9e8f331b3470ebe2656c089477a5353098a8956cd9085c4577ad3fb43866df4c5376fc74a6b2b2ac12b90ecf05f178b5099db9c9f96825665734f1d638fd4e6a78d58f64c49e4806c5b1b25eec9396e4cd1dcd1f3a58de17e1dccdefa505b5c38e8ac8f49c86aa567edcf9528bd439da5e812559067ff0150102d9b4abff5d74393c0f55491af55b4e26d2558ec29b03c303b1037a9ae8aa1dcd1eeb6d7be8e0bc4a5b934796c84d5241d823b24589923b2692b4b8eb9d60bcdb5357059d5d9d606387065a574ef12c0c751f9472727ddcf34de8fe1abac9396421195bf49ff9437faccec2b8f727290c679dddc6d690289e79132be411f6e828ef920de59feae99a8b930e19917cd7cf84f1ce9c75870b82cb7ad3318ee1bdf2565f127abe33798202ebfb8ccce006b46dd79b98d1d3b1ee49eafa29ea5196c81e2aaf9665aef98848eeed9aee92d4b90bc5e6329e41dce0a4c1928425861d1b3f79288adc7eb5b8e11a635ec5b45ab53ca5696eed03c3c93e5725be25831fc4a6510148defda33938ec37f40fa2964d54cc362f3eba5da3197390309faa3fcd20503b8d86c7a77a1f4f6abd34d1140dda37acda385d6f891c456d23c8828cf1dabf329a09a2439e1a180b3c9eac4cd5770ca531c26b2363cb91d3c33bd13146bf0c8605b50e0b0b72d7acc23508162a24c8f2489ad249976498f55dec01523a57c80f9991cf41d5391ddddfdbaaf2edfff842378a37ed955f3fc8e2566ac735f66a3eaa004198cc35c4bcdd77b75b6fd45cd06ff249a94d941e8a1bb0d5deb149419dba03f10a9c75f09ad06cfa26ee5ce2168b8e3e732cf1cc40279339207604617bd5492e3d17b3190a4eeb4472e1d79f9c584554828c3861db6e7881b2e9d719c8721d9d6221ded23bcb70a96d8a0d69af08072e2c88a51c3f7dbe4e8ac5db9cf101f5642a4638e7acca679c3bd9634ef32e82d1270133b67c252316c05df76f33ad71b41af545c8082810d13df506e2706bd6f6b62ddaf2aee412217b099286afc46c157b284d17ddc188b2b86ea01c4bd7d385d8d1ea15a060bc62b9d8665f1e190c010dc18ad21bc578982ed421cc84e334be6d4ac4f41233839aab3def8e34214a63871d31bc3d252b3172624503426d698eb971f54f8f2a0761d5200fcdca733444292ce50da760df16c38da71efa2c4f1034e6a22af4bb610020a267491a1342708676b06cc83cf5b7ff4e162ea10eaa0d5716d09e6963f83c1a48b29ae0483e30b5260a321467baa3bbc82dccd85727c2f471f367e7a2de5684b89f14472a884a6e2aa35efeec819af09d3f380a0b2dbd6b67e3efe4b204c1eef07638014bf9011aaeb3e45d9b75cb275af64e011465734c39d846edde74536d88179aa5e4edb8686a0e4d5170244407d6970ba7971240dac2b680119d03960c2dcb907e636496fbf33582ac87d8b4c587f01545c728902db9f1535f879c87a527029a2565830372854efaf9f5e1a7f27c3a4e441f54bdbc9fdcb6fe0a3adb7d724d227eadff2952a3300b029a20ced6fdf1b10e8a876fa1b9dc12b6951e2ced4a933899205ae656c5b71f683c5a57d7ff8411c9f36d49f0e8b9241ee918c39d83c8ffd0c2ee1de9630b882e77557d57bec7a7cab2e0a635f4ca51ae71c077bac0a18864ef9d8ec8bc659b9ff15c5cb686b6429988552e2e0680ba83387b5b522e830405ad2d951ea15bc70a4b5bf56ee8f40a8878e98750ab9f37bff960f9f253920678b8176141b03a2a2410824752df9f67b6e796ec1d845de31f416f3f712754296841c948b956ca4e5e2881d1d872485dd9f372d415450c990918629dda2e469a640e2879341186964f7db7c343fc14813a7d1d101c8229c43fb49c942b9d1375e36f033b7467ee762173948e1da80d6915c7e5b0ba9e8740098a8afe930f274f0b081f37e4e0329d33e0e1118da2069b0442542265512565a8faae93ebc922e1ea5ed9d0818a2254f01e26b15eab8e00f69d0facac5adf6109ce5aebb316f07d0958864820ae48c0142228a6ff0a183a79e09e70d14e216255f9f01b4130c620a52632c9ca693afad6a4daf693a8e4e48e2c6ae331b8d26e97308090117ebb00ca93db2a9d2619ec9fe6874d2c5d450cb2ff7ae6f0f2cacd8bc1c2dcd50bb31d1281326f47ecda94c399f6260d9c9d616fbb799055b2fb9297a70405166f4dba0a6a512432f285e03137f13c2161e82bedd0c969b7e2e50f1ebe3e97ca48177c0b09b17ac48b72266d77b55d451b1bbdd55f29493403f4d2e693484eede8896716a7ae2e516f15443729086b17157d7583250c5dc879a08fb3d047d8466ae30fb7ee937d883f10e85c1de32ff87829e60a11252fbc93149df6d9235de423968a566e512047553d94b6944d46ac8c58e102bf6c7f1adb9990b334c33d69084c74d8bb5184cf2cc46ee273037a8d54f8eb151c0702015a9ca528fed8b7731d8be7f30b2be066991e31a2ac6e543bfa9cb86eab513753e7d6f1cf373fea16931fc8b212e29aa1e4715e13ce1d7c9b09b201d8810d97469abd8c360f11e9a594e7e93e22278fdbf064c84f0813379b54898ea89229718e04faa704e70758ac0d8addd475f655937f394c31240ef8fdb3f1242b251300c76a788efdc92f6a83bd5a78bde398ab5b5f4c2968f7a6997655b8744a777405fc3ed8c9ca70fbfcf5b9605f485ecabc7917589eb1ad1d1854e85095933509bb5d7c658d0477a5f8b087fef1871d07a5aaf092ec73d0c42d9769b4d0a9423bbc13ef712b5ade2f1f6d75ca44a4000abe9f48500ce8b0ef84394871faed56b7a3da6d6c2c8313613c37857708b24eb19abe28cb4c98a24e59c42a3d19e9e9c03e016d1fb08e949cec699209a3da653845e381a0078d181705f2746bc65aa2fe9c9f19cc4999f2c19dfbb89c3d6614bc397c9b7df753e5f9da0b7c7fffbfc9c3c7f4f09fdd0f8477715e3c6327d3a8bc866a816a853b452ff25af534b95796b12c8b0db6b6b186a9e67979f8c02c029c462667085176ac43cde6de599fb210d94cccde0a2505cf2d6fa9ed874bc150214e840299813f15948cf122e123d79d859ace5e7d08d0b30ac2b9ee20ede28e8c554b61774c53ec14315cab899af48b750589fd639095fb7103a6351bb6356334656a171cb00f12a84566c80787b3ff2eca616f76c389f6687d46861119a53be025f361965b5e7bb50971f412273b622d9e2dd1e2a43059960fa0a22c27b338f7852de18bf9cc58d72219cf02673d53d83f0940c9eaf38c2ab7d24bec0682255eb51b692b7800ff8803d02d4aaffaf4cd68cf5aa6ba80558be5228170f712b85353239cee05b86ceb137ac11aca085d6dd9a334567e218a3879629848c7e93854e9bbbf2c97a045ceee1f7ff1ab65f38abf7b89812c4afd841269049e4875cb59d3aabd8195d15c07da2a7a3c0aa7ebf5b9be074c5fad5bdb5b1471611322132d866006a40d61edb4751e5bb8003ce5274586e336537c6d68a672748ac6b469851c1c7e37258fedccd25c9e8de55f387ef3fbee329dd94c8d0b2021b9327d844f1184cbf52a294a2583cb596273ffe78f085d9ae181c4d7352a85a35e9ccabb3357c2450d0a49475b0764745fa104599445089181e0d7e4a62eeaf370b70eed8b4ba87714aadfbda67a6d6496c294d4521421a752f469cf1baa6485797b4ff545718d03db049a61dd1ccdddba55e3ad84fb1577395851f0b27809fdd12084f4b91854af46c8d0d42914977b0809d26218f9634836fd7c79be883a0b8fd6ef255f17aa827a25803e6969d30ad8af234bfc20b27463e7126a5e3f285b85118c39c1f90c3bb6121a6d8ecc24785c476c4d401ecd782e89d40d8f16e50596edc2337f3ebdefafdf4fece78811b85fdb48f9576bdd5183ec1665674a7ab6eb735b5986d3d8ba15ec6340e95ba2bde74ca63e3384788a5eaadf697e6369d2ce2572081f726bb6dcf1bb9c628d337ac9ec9e7a3b4f1fc4b55a068626dbb008b9090974fb3e83ed6418a80791f0a7fd425abead75a05e7410b15c3d8e92b71d48a7f7736a3a513ba1f52927557ad9523aaf3f369312dd0a1da0aa24083bcdc672f5fed3b2290e62a586ce97041f6924fd3fa20d22b73822ff0ffb74c63f9cd2ad086b1a39503c26af2de5cd4fefc8f4ecc3833a257aa49c0dee670765b64927485e7128a7f56863587a0bb0b68d5540993711c106897110e8e4c7ba2337f591163237f1fb31998b534dced330b6bc0f8364bf8921a4a8cbbb436818cfa3af3ecce66d46b69b68cce3c5f8c42fe8719270a41cab9462370b80633237cca2a90fb98b49b65fea10a019417b8111f4d7d14e3c40deaff1c4a96ebae654bda4118b7559c2f301a3f950fe93842c0e712d3b8541508a5306bdcbb4b6b35159ebe72dabc672dab0b09973d6946b5f6a8bc64612a2ab3a0a155b5760240848f69130a52b29941891cd4a683380ec0543bafd36147dc4af4d632984a99fd39ab449c31cb550ddd0926626a5c05110655c353930e43a7f14e838545bcdfa40e84ff08f900534f21efce3a423c1d0752cb7c6bd60debf472d6e71403dc22aa7f011e2ad6068f1440fb02294d711fcb1d513fc7b4a61b664cd6fe05e1b34b093bfee53d42fabdbf946bff4c7563b941f2daf0be4759dc96a456b185158d94b9436c682a5a9477b356a4e0e4158e7bb20c5ebb83dc69f4d16b93d1766b42a739e03b32eecf151d607c52054c4c12a7f1a75ac6a41126040af216c0e7f90a7765f28ef3a986a6353e312aa647d0a93796aa63bc913b15c0c50b6935514f96a511a2d1473e9502d7de0d6113340c7a608ff722c21f67c506a3a7ad420b5b008aac648a1fa4733cfb8bdb4c05a308ad51282d099bb534d2db3659174ff111fbe2f23afee31af524a5e2c417023330fb242e6cc84a0d0d8659009b89ff04dd42bf910861df731c9c52d48d0758dc65ba6405122e493510ce168dcc03f85ac43b5f9bfda9a6a8090e26accf8d2f73c837296bee04870f786f09a5be5624922f97849087dc3d1308cbd58694098525abce37a32c732c5ccc90cd1c146d7ea96305290dda5f8a716493934ada5f5c1c3f3ac9383c3b2e050ea8feea7926d49e9f09f097ce1fcce9cf30f4971ff4434a9bf86f642977e8f6ee8c0f176ae78b9373afb7bb446e62127245332d4e7aacdbeb896df96643c6819b5d815af2ac4ca0661b20d7f51b69eee2abe13168451b00a4509a82fc43779a4ff6fe89fed1efdb9628d50e78f971b25edf7f6e1183f46baf2be40c1e7812f3d24ba074d8db8a8d2db43ffa1c556500de5f326beb6b449f1393ff3f0dcf97a8e56118169766591945cd5125ab2ff3d9c2aca42966dddef2ccfb486b1216e9aaeb337df4a378c0f735e71d4f5eb7d333e792a808ddebd278f2e4dd9830ccd1734c6bbbb5d088e7b2962cbf162a6be50d249cbabb7d528b7b2a710f4fdd718992d4cac4793110b91cbbd961c18c500516e16ce89499dc9c24d4a4e78a4a812626ce099b7db0a5a50733cbe92610c92cf6c8498f4ee2681bbcf2baadea423ddf40ac5f43449062158cba1b18d064340a20cd20fcda138c0b1dd2933e062346bba1e7dc38b2a5c3bff5f60b3d93ce791acdf75ae003e118815898714d83b7bf114f5fab2206008a64ff93bc2cb9cc6cb28bc4e8423e0082ac57ebe43927c31c23bbdbaa3c04cd7896d4736c1568dc7c15cd80b7f2cfde738fe46dc706a2b5ae768ab9412696d5c63db7edbe00d6684aea439271ea38fc82adcf4f913cd05bc4a4d97d292b33f71cd18d6c05770c63bbbceb8106804cc9accb873b3829b8b73de9e5ce419a2ed332871360478455269a4a91fe676b377011e82e1791717a5ff9b2c4efcabe23b2133e888b5617d298bcaa15cc1fb55d22f1caf239b2084453cd3f923e02817858e9ee95028f4247a21a2c5e0c4cb13f6c8b1d73d1920e2911785b7cf6037b8e8176f33c0977ff0c75362c614c2a7abf2dbf89b9769b061094ce8cb7aee19f4f60969db5addde1fa31b8990278379e2c5a38019992d47ea43e09bac642a72f77493ab0a4a3358bcde697f7301dc85c8b1acc458d62552f8d9e10292cb43e937ee51433ef3e3cd49e0f11da36b560ddacc50e9353e5fbe84dcc681cf7e194722618eab92d567fc7d18d1d653d1d884071200c654e288fb37b3de2be902c91981317c843ca1c72b10fb435a1522c64ccd2d54a7f4085222f29ca3ea359463da1b827fce1a8839800b769534f59dbd2af9d7cd3493bb61b2d94f95317b2cb9152327530cc8693117613c844a59a61192e24e99beec8f3ee6614533a47383363068b63bd04cfe34e442c8f921cc4020dedc40240601328ce67e4cafc8077a1ed21427ee59b04d64434d04a0a21462a89ea145b7586bcf4761e851d16340542138d9496223439cf45ae9b01239fe8489a3f97166da6d1025618fcd7a5c49636a390cbf076b53550d601d5d822293eecc9cdd1822855c557251dd0d810cbdf8d9e7140333a0f5f975eaea5d003d21b05d2182e8c0626bb34c50f60905656753a89e1b91745d53e028d650c9d3759d9094a7c862c26e530b8a576806223840112db192572f7af559221672740417b58bb907dd6d7ca352795b1a708499a45b90bcdb58ce464684f07f624d3172662e637b516149c7f91092a299e92885cc5ef9275a76c3297b62d88082cec1cbfd3996e36de95576e5748e66d32a8bc488d1b6d5b5f0e76b5ff0f9c9a2ee23892c7a577212219f8ca0de565db9772b6deba093ebeb303cdf4127aa6242eb536cb299727584c03ac3047f73df7026df245c88ab8c0490f2df562665963aa84aaf6c970a93c6d0d0134efeac80b6a572fe7adf9618e004a466ffb21e41d5032601a90d86302e31c6a9ae884db4fbc092f563062bb1b71f3b3baf88939ec1186d54a1e829361ea8158d36fdb5784a603f8c4e767775c6ac76610ef79447162baae822ad14b7c022588f582323bd7cf5b3e45285f89b7ccd5ce4e80bb3ed87d93241479baee0bc67d2f129dcd422b4ba1b6cfef5b59b2d33e0b29a14bb3f6b691b68e13cb781ac19b7406c8c2f85c34ff454d7a86b9d9ad5cd468027c72e6f8ceae3d01df1d37a6f29ae66d768ec0c7b374174f0af4103159951122bdf2ab5ac35cd0a13a42357d55bdc435a63cee1c887e38c90ca90b24a5d5e774471161a6cfe0692a00d41fa036c2fbc212308cb436b96b98437d96059d8428c40960731f6840c51d21885dc4f2d1ea237fa55b5fbc9ba14fd167868c7824f12b2aafb9e2d6c5a7a5ed334057114a6cec794c814ac1ac62c31cabcd9010e596a9fba6fd094e8759ccb8e2ce6273f57a8fd1595eeac665e581b5a98be1cd151c9989fec9349a741e7428eed7eba6eb0cea9640c68a3843b2d9f126700bece3b70b0a56e56080fb809ea3ed2ea987656ef9d4f1bb286ab8d4537d501f31f2afc973771eeb64cea025702086b057309f339373fd1de5b6887f5fc8c3fba448a757814b286603d5cca210006d6145c939a2ca3a1f31d993f1358982e64f4969bd143dfd66191a317ea161edad34f5aadb5633968be26d5868630872976771caaf3361b857021073005918ce74ad0d1271ce1ac5c9952f952347d7ef1dffdce2e71bccf7d78fb8e62fa6081c0e892420be7f321fb1ebfd9f3fb857a754d323b5373208024fc1ab34e1a083c1813fa1ccccfe3644dc7c5593ef5d0cafb234286a510b664eb11edbe2ffb836af59d05215970dfffb9bf47be371f1d77224a6a3ce3e49c29813975cbfd519bddc4f8eccdc34fe2a330e51bc6d61815b261d5c6b2ebc29a2e0443f0a925113a637f38daec3d19cc9bc5557b299f2bf18b82b75134f43c6102aec2ed37b0b5313be29797c7c40c904f25396c499c7b03fddd2d716f7b05df77010783e90f14339841e1071eaf694f6edcdbb38739c2fd7051b03a8e79435fb1b528ccbd44c14ad59889a3555a0379756374a4fbc7670fc6ecba2d9387aff98d2416e0ce0217688db4897f14292f9a3badef8f346e9cee9f3e82cbdcd45c3d056160f15b2bf949ef5fdafe27d022ca8b7ac3a3f622f7a782af8743b6f25fec9eeed6d8081e6ea8c40d5da511b523bf112648c9146745b688d664a6b0a52990dbe89998b21261a35473220e22cc2208b1c6b6fdacb11060af869ae49233c4f9b5f8a0456dcb5f37bc52f8ba503be5f88f2b5bc8424a6f7879ee3d51140956092533bf99c2aafc80606b72004188383030a52ab0c72b08176aaa8b661ae86dafeeea4ceedc1acf3491c32cdc301515f6be025c13ea31e994a97ad6b7b2cad57eab03f984f76badba30a480b4f9e9976c70de86aa8c64936bcc8dbb3714f82a8ac81bbf863c7ecf4ba1ca699cfad94388832451d4e8e8ade0d1105ff5fada30a89a62c1801b16322ef7d6e5d46039ce7d17e21077132a613852da1601bebad10928cf04aca5f9b72e45fdfb12d55dbbf255fee107ef0a239790b58c68a06415f53b22b54f8e2cb4aa06d1a4d63ffdf9e1eebf14c70677b1153fe0fa42b6091737c10938a4eeee39048f7678a75442033a56ce8959768d9050e3ea1845f36477679f4f4c8d0d574650f05653300827c297ed40a37f593f30dedae865fa761a93a61a18ba6108cbfe4c94d052378a0064d58ce4078b648fc99702103dba54041bd0b8b81fd77e7d0d3c015cda56c251ba20a1751025172624e2ffe7024b4c395b4f8dc395bd9b56cb68bc8ce1afb8764aead6584253994088107c3ab79ac0ec9c0077c62f9546d116f13542ae5bdbc7fdfc92e6d352cb7bc21a57fca9381d782bed77287701e11cd5611fddfe368af438d595cb6d1089ea2b30881e8c9e646e08b8a0c218b1880702741f0047f5b2ccc3c13105942c8a1ccacb83e2e7b54443c1af2cd52db6810d5519016a713ce02c09d43fc62132871125c2d35c4348209a8ba8ce04cd1cd33f995e783de949a05cdf7d524b990dcee84b94be9aeff89e356f7a10e640609b37086803eda6377f7f67d17f9bbbdada15722c9e48baf3bb6ea85a086d8e2a9284fbb05c4e551c11cc012637458a0e6a3f01e6412c2725fa5b0a96c31322afa96418eeca8c04285795898d2a40aed0209854d161bd90b5254d5fc7d4299e39e3d2ce931313d69678fcb8b55d29744e6612941c5cf0cfd416cb66e1dc59018ce99d3907dc861aba36458df1b7729bd6bc392851542e8f344fdc300e8e4ac0442fb9db4ac85643ead308a181ed4cdb5de150748ecf30440265d158b32499335492743433b50b398ae90deba5e6434da8bdd69fecd9198b96db4003015b03725ef3027d38e6d74c9e1ee3762e60ded4fc4b895de4be7bd858766f10ba634831a25b92a062d99ffb9c0f456f05fcfeed67ddc27a22e1593a33b58e846eed0eb25be9b5cb1da35e1c57e7ff00ffb476b4b46d99b29bfbb825d0e3d3c1736f58b98f30e80cbe7f7fa8679f92ef40946ae1426ce374d1dc28a331f421c93ae6ab7bceecf59c66b3d1ecfecc3a62e9f1e0c8289b26981cd7aa4053b17781456c13fb36b7d8bd04bd68d9cb9b17dc0b336900cd35f7b39756d8bc2a3fb706240a625b0b824ac32fa06522fb47de9c9323f172876ed8f551c54fee3464374c0dcf1aa9e1aac8ca077542a40364efd91a8f281cc2dfea109bd1c1d77120f23283687218bb0617d0150551b3c24b00772a20ede040df2ed6897d5e399abbdfa8d88985347ccf9c992394092eb8d35742eb5c5eca32cf0b1b458eb4920ffbce220c3ec9549e6f23d29b61305f19444e5fdcf783e90739c73b417324f00cdd4dd4d178131bae1b3194b07eea73d9fd7420b3c213e535b12e72e0a8fcb7dd846d0b356c24efaf8af46ef4477f6b045237d9f81c8c87e1ec4e478ef670d9508a63fd9a3c42dbd175d5ad9adf4c8a125f38e4cb038b81bba7d6eab2512c12e8d93c4a6bdc7925c4d88fbcfbbc74e592f68320700d20aa4a83d2556a8214a132f26266bad658739ebc64493f65ef042c713589813734599f39c4f939d0bc30f2968fd749a3d7575754091d94ac9f6d71df9d4fd0157f764016c936390715530a73a859edb34996e7a9f38c560db8f530a21fa9028e2027c512cdf2bd023201cb03765dff779a3c7f2d32e751796e601c944426473ca03d47c60ffff888c5f03644b7b55a38b690689829f87f5680951f9836edde911217b87829ecda33272894c4696644f5637fdd4c94af8d53fe5fd7209965aa16c3212c519c2d028bf6f3ebea021c9170ce4147e66f5d22bc8fa2aeec37410d9532599906c9223dc340f2d0ff46b21d9234211e1589805a8471d2e612b816a17f52ab5e037d6127e667f892d3ed43432c05a78e5df6051468de7a2f201512a85d8c1f01fd9ab644641cb7c43f0faeb7c54e5624f80f32ad3a5915990e5312878cdd92fbdf1089b16bd06221424a46c537702d310d1f4fe4c1bc9251fe74ea500f805b00324c61514507bbdae9e0fe9bbead599a28e9b5ffc90ed82268a8715bc01e38a16de403eb7b342df034f58b4f09d4b703cdd39907f24e610316023c46152ca4a46d72dac83f25ae3e2aaf2e2ae720ee27ebd5e6d006066dcd1aed5139ff4be5934936c9381d1d71452b5bdfbb56681861c71e7752ff265b8cc80e779ea758d503729b91e43a6b55290fb8aefeec32c7c61bc2a2031cfef280759c18314a6e3557239898e4f035f3fbca556d30a72830e106017c94a84ab63ae4b3b1d83ddcc8cc5c0b71f6144c543a33b90ca7ddf60093da70ab1ca6db8efb5edd1562307f7022b9e661625bcbc6614fd63d4fe20ad70140d579ad64a94bd8ff03ac75832dac9dca1c04ca7321e5a1296e8a59d42cea2620f74d86edb0c8b8bf87e11103ed518cc2fb194d37daa3b72c0a0c99a805fb4647581e77a6ab6c8a26cb00ea9fbb7af0c93d72fc9a858e83215cb08f876a3d45abf453b7d696efcee62dd98cf509c5adff7a7a5cfa1091c3aea44a7803fa2eb5053f508e984ed9ae8641ca74c35945f87a3653c3bfe9f6a5a9a2163fd83ee5f8cd9fe256b7bebd6f95cb482debb07c55e031213b77da0d5abd313a8fd2dd138007c98d0155877e5a0ad7d84a62d48167004a8d928bd610cb4b1d82ac545fbf0c3029576ff649eb4b29a6228a0b41054769e71dcf702ff8a2139137a4aa769c29e4f221c7a684f618f43d8082b8950372f8987e31c9abfe3708ad79b90191243c15162ab05053fbe309fe2d1cf72de89cd77caf054f457ea9b6e61d658988aad7f13bf69db01c53725999348dff8853d65377497edee1ada341379613e4cc2ad38a4db7321cf126c7417881bee73ef7e9325e91d388bfc4f93c4d4f57f7bd685b22ce56f263b57eff18346e2ac4ddc4e69dd282065ab9bc8116e536eefce451bc5faa5c834636737dabf9cc06fcb3f1350eda1e89546ec1e6ba7f8af7075072330825234ba4545cbf86100219a7a661658cc0c09375379c07f90b36bc50cbb547fc7a9083f2b10f13f7246848fe878e4da89ff42e70b2108afb83b2f18534763230760ef685396df11d9fb4174486438283a118aa5261be0f60fef0d87b42d16ca3d6a25c7aabcf0a606f78654fbb708c8f52bcb62d2d3b90e6d1e482c6a4498c1d014deb66ee0f09c45a54dc81a188c2bf406b2e9c7f3586052924d7a0bc58d40b9d8d343fa2277f1e8dca0fbb62df635335d650d412f00e2b36d7566f30f6c04f1f6d48061c5b7116e1373f94f28967cc4d6222b4f1e7cd04feb3587641792f06fbf7390a4a8c5524939cfe89a6ca11f6a871f6049b109a446e8b75744e7d73acf3c1d52aba1e55d4ca72a27c21d174f5b4e299b67b5b135add83f16b47f6f51cf52b795cbb0fa0a902494a94a35d09ddd2786ba1f34903506b6c9450ae008646500bf9d11a5e8bc914516d12a4d2a7cb6c61c824aac48cd9f95b433dd2a1b2e5812442eb1751fd76ba459cac77eca6ca2f8fa415475cdf821f4d5f249672f8c7e0e02c7b4176c6e2f85e6d2874d8c292c9ca9e087635c75e97e01bcaa1b87a43ff9fb7425e385ac3450cc9e6dda8744b6aeffe41dcedc1b60a834d3aa96c8a28cf0191ff4aa65236146b96f18739155089f87cc09c630691141a9ca8a6a2db491a39cfe925f9cc8b97d2a65ca864ec66bf862b2b2a8789104ddd128e812130470ddbeecc65bca24f31b83d571a7b64f254d0e604b374f01256f4eea89531f0f5bd50a77b429a3a1c3654260a4cc3f4c64dca7540306160057fefba1d00aa770f4e8aaf444ad48ef9fc0c9f39b47143f8f2529e679a76cef5f94cb8da1c039bdf87f3a9e28f6c9db9c47f0938205efd057f3e45c84865934f05d247f717b35f97bea9022000b6e03de5d3627d899e62bf74917c68ca27b2f87ddf00440b077ab2328769e997c7d11c3da0068d79ec0bd59c056b06cd10970c63d2168d9d0a13a943ad2ed5bf23eaa755578c2a9e932a8622b0327285c7973cb56c7206ba04ce5bf79300c53f7a17817df16cbbd718b14e723484cfc8b3ecce8f5f0681e4fd7677cf0da3f22af49c43c002db53c00df4a81f7dd69de5b3c2f9bce84d70f0be23214d0e35c285bf1ba0a3a86c7c8abb2266ba93e5a99b24601e6a0a25c66b3815ddbcef64cddf68bd76765fb9cffde5d45b0bc267e0308a63880a8ac99a9503f3bc75fceb806e60159d7a75b52bc8a44b0472e35ffc842745fa12854fc276b40cdbcebdba0491dd0fa338a11e45eb276af6e918523ce7694ba5cb77d25bafb590a7460d318d7ec940fff7533ad95f92c2c4e456073cfeec896f8579e66acf38457131f150abc38290429f032104ba0f5ead8613b4b90513229c2864ec9a22279662ee32f4b1599a778219b367211ff2b607a3a27c22332e61098845cea75d9d5a10e530cff9abf28e55be8ba0edcf5b179908d78dc3c0b9313798a7be44a777da3f05fc21e0c5babfdde3ed3a735743858c51ba146df5c2d35962db9bd47567aeb3265e2a3c45dd30cc8102ce3553fdf1ca705507760e4e62f3b34eed5298b33bfbdb03dea3b87cbf3f56adb9ee141596ca84c425d0b7aad1acce975378ab482235e6eb96a944b6aa67a41635e4caf61038718923deb6309671792671aab1d53f15f8d5df8e0d1d16e663603420b84a0b43c46ac74648d8edd5a7a089990a539427c1047dd60e0d2741cdfef9898e057762a9748e437df930200c97119ee23dcc1a56473f50551ffece7fa832f096cabccce7fd1e7013b3d598199ac2e088a0c2b4e923ed1984372320764b5e64564ab83617eb4ab832c3e1f064dc923d5c00c4c6ed8ce8bbd754d3ee7da9625a68fc869f88b9d441961a276a0f48dc8bb184853c2a8b3ebafc37592592c1733d4b243aa2ca0e599cf33fb299cf132d298393fe95fe8bfa274ac936d28c4b2ab7facf4936b6585f46ba9ca3e2f6224d23f4b9cd4ae475d4eeac9bc510dd368db29fd9e94770e6ca56d405f00c35e06c620543cfca5b85db89504c12eb8a5577236d50e96f0db4c81e339d37f503046a08ab0e6d54dab37231dcfa8391a2d5bcf4682ed848f1e1dc01b0e0d58f75037bfbf20247dbbf864351651604f37827e06b3b3f6f3aabf4b8d0531f7be912c590bc0cfebde4314b29c04cc8bcfd242f78fb4c08ac6c182f80dd3cb2465bd9de5be8ffee7f64327d03bd47e1ab2fd2110ce9bd173fc86e6528a70ac2210cf1a79c061c1d7c8c30d43e928b33c820c2bc1379ae714a9beb4c7e2cd86d4d0757eb1bdae015b74ed0fe7ea7df09ec3d2a53fb00c1028d68b175aea3b78f4740bd79e8cd6cdb30e4b7b4234f8c6494fea1686573f004e32f1b3870129b23f4b75495d44dfe09d39d784d1a25085fbe238c6773705754edfbc3cea69f0c7486c8fc0aa34a9db06255ed961f29e368b0aafe00c3f325d05f8d78fd99e9ee01417bb3e300f0f91e20bf301e9e40ae6a3d6f4260c66eb33f85c022ad791b4b6435c04bef59939c145142b13802fd77c5966cdfed02f1648307d7580d480b97fbc2e4b365f6ad55118da7c655c76d8de122302d84733b1c81891090803df7e8e783d4a052565c0ce3b6136dd19400a6ac673ad9ffee88441fc924f0e00f4a233755b4b68ee1be891e8cec1d9beefc1c2f5c0e095f6697cf1d99372ccdbb21fb22f08113eb97e699b284a266cdeae0ae03bc1086a2e651378beeed7b7ed57a305335e7b988ba2e84fe424ff6877168d508c7fa98fb71e0637a00ce340138018308c3737bbd844ad3eb17b530f06d4696ddc95c8f159a03f7ca10297cffd16a89da5c58d274da652f587c4c3b605ca085b4f96569b7a3e77690c3434c180351dafb3d700c096061c37d1f69f1fcee5c32a92d6ad5c8b1c1f3663b68fe3da1a1908b527df099eb40a9333376e493865ad401b2d589fedb280fa4a12b5e0f2bcf5eeb1188e819388773b592cc7d1437a45715270bf587b6027a02f317ffb30ddbfb8e68eab39f4b0a47d3e3d8f1bf02aadd947afcebf6b91a586185b578e4de31a7a31e6280eb02ffa1ba09314bcd3b93ddc63b10cf5aaa171563cfb1ccb6069957e44e894710c6f6c95b968c0dbc12b559cedf69223be2fe92f965ca3c45e0142225df48d3ca07a74245cd61c2dc0710b01648e0112d97a2af4b17fa5d948e305eedba96eaf4a75bafded804444039607d391034c505ea722b9b1bbbe8677c7ce7e70865ff5809c9fd9c90ed9fa70fa04f84fc1e4f0691f25b8480f97711aae2b1060c20792265fc009d781cbf5352d777d960a910a9be6cc7981e812990d41d36e50baa3f4c5d15d2b929630b2faa2ea6132858788309d62329256c1e0b07e4dbf4d22a9d49a57ffeca7b959cd660e3598c081089caed7b3b5a075204bed5e64f64f6e540a0625e27d39574c0bef459e51c5e77d5058363600a395f3ad22e29b6a51e9ef185186a2d254f70b75b762a2330669bdaf2d9348cab552806dfee48a318da8a639726768eb567d58b216810bd8205c5a9d9271755e5023acf249ceb4ced5e42287e1bda2d430bff3be0762ffa78fd900d026535b078098124333b8975e30639fc04d9b70fd1bcf1a6d768ce4a21dfec23cbc3c4a09280ccda93512cb4e3a87844a521f12f74e33beaee88dae5af1a0f3ce870c76882b09ab6b3085866a097f5eb8f3939b5c379d6dd0fe6365503c31c08d7deda5cf054d2eff858128905c16f3466953d3ec7f426d3d73649a55fd6c2b999f3d0d836ebbad78597d53ea8e4cc0303ad27766e81bae8276445155ed0c6e409f571bb8b5b855a70d921e23a828a69f4474519990de9a56329d444490fe695ce4ffef800569b251596522cbdf22bb3aa3470f1b3003de1afa36f307d260b2a78d20fbf81345119140f4b65bbfa1b205aff25efe19b2be8aea596add3e98055ddea5ae65fe5cf53138711f0191b95aa363aa95b53a3ee9beff932</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Robot</category>
        <category>ROS</category>
        <category>ros_control</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>ros_control</tag>
      </tags>
  </entry>
  <entry>
    <title>joint_trajectory_controller</title>
    <url>/2024/10/16/Robot/ROS/ros_control/joint_trajectory_controller/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="41d7502aa2cc678a61445d0695df3d5b8a21dc6aff75a43fae8ca95bc3602d48"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Robot</category>
        <category>ROS</category>
        <category>ros_control</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>ros_control</tag>
      </tags>
  </entry>
  <entry>
    <title>使用</title>
    <url>/2024/10/17/Robot/ROS/ros_control/%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="2a7c0e4581cf592960db3ab9ada75b3701868697e3f384e8e63070429e2a9f9b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Robot</category>
        <category>ROS</category>
        <category>ros_control</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>ros_control</tag>
      </tags>
  </entry>
  <entry>
    <title>ExternalProject</title>
    <url>/2024/09/16/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/modules/ExternalProject/</url>
    <content><![CDATA[<p>用于添加外部项目到本地 cmake 项目。</p>
<h1 id="外部项目定义"><a href="#外部项目定义" class="headerlink" title="外部项目定义"></a>外部项目定义</h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 必须，否则会出现 Unknown CMake command &quot;ExternalProject_Add&quot;. 错误 </span></span><br><span class="line"><span class="keyword">include</span>(ExternalProject)</span><br><span class="line"></span><br><span class="line">ExternalProject_Add(&lt;name&gt; [&lt;<span class="keyword">option</span>&gt;...])              </span><br></pre></td></tr></table></figure>



<h2 id="目录选项"><a href="#目录选项" class="headerlink" title="目录选项"></a>目录选项</h2><p>大部分情况下，默认目录布局就足够了。主要是通常不需要更改主项目的实施细节。但是，在某些情况下，控制目录布局可能是有用的或必要的。</p>
<table>
<thead>
<tr>
<th>PREFIX</th>
<th align="left">外部项目的根目录</th>
</tr>
</thead>
<tbody><tr>
<td>TMP_DIR</td>
<td align="left">存储零时文件的目录</td>
</tr>
<tr>
<td>STAMP_DIR</td>
<td align="left">存储每一步的 timestamps.除非被 LOG_DIR，否则还会在此创建每个步骤的日志文件</td>
</tr>
<tr>
<td>LOG_DIR</td>
<td align="left">存储每一步的日志文件的目录</td>
</tr>
<tr>
<td>DOWNLOAD_DIR</td>
<td align="left">存放下载的文件(解压前).<strong>该参数只有在使用URL下载时有效</strong>，其它的下载方法直接使用 SOURCE_DIR</td>
</tr>
<tr>
<td>SOURCE_DIR</td>
<td align="left">下载的源码目录</td>
</tr>
<tr>
<td>BINARY_DIR</td>
<td align="left">编译目录位置。若指定了 BUILD_IN_SOURCE,则该参数失效</td>
</tr>
<tr>
<td>INSTALL_DIR</td>
<td align="left">安装路径</td>
</tr>
</tbody></table>
<p>若未指定上面的目录选项，则使用如下默认路径(假设指定了 <code>PREFIX</code> 选项或设置了 <code>EP_PREFIX</code> 属性)：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">TMP_DIR      = &lt;prefix&gt;/tmp</span><br><span class="line">STAMP_DIR    = &lt;prefix&gt;/src/&lt;name&gt;-stamp</span><br><span class="line">DOWNLOAD_DIR = &lt;prefix&gt;/src</span><br><span class="line">SOURCE_DIR   = &lt;prefix&gt;/src/&lt;name&gt;</span><br><span class="line">BINARY_DIR   = &lt;prefix&gt;/src/&lt;name&gt;-build</span><br><span class="line">INSTALL_DIR  = &lt;prefix&gt;</span><br><span class="line">LOG_DIR      = &lt;STAMP_DIR&gt;</span><br></pre></td></tr></table></figure>

<p>否则，如果设置了 <code>EP_BASE</code> 属性：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">TMP_DIR      = &lt;base&gt;/tmp/&lt;name&gt;</span><br><span class="line">STAMP_DIR    = &lt;base&gt;/Stamp/&lt;name&gt;</span><br><span class="line">DOWNLOAD_DIR = &lt;base&gt;/Download/&lt;name&gt;</span><br><span class="line">SOURCE_DIR   = &lt;base&gt;/Source/&lt;name&gt;</span><br><span class="line">BINARY_DIR   = &lt;base&gt;/Build/&lt;name&gt;</span><br><span class="line">INSTALL_DIR  = &lt;base&gt;/<span class="keyword">Install</span>/&lt;name&gt;</span><br><span class="line">LOG_DIR      = &lt;STAMP_DIR&gt;</span><br></pre></td></tr></table></figure>

<p>若既未设置 <code>PREFIX</code>、<code>EP_PREFIX</code>，也未设置 <code>EP_BASE</code>，则设置默认的 <code>PREFIX</code> 为：<code>&lt;name&gt;-prefix</code>。例如：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(CGAL_VERSION <span class="number">4.14</span>.<span class="number">1</span>)</span><br><span class="line">ExternalProject_Add(cgal</span><br><span class="line">  URL https://github.com/CGAL/cgal/archive/releases/CGAL-<span class="variable">$&#123;CGAL_VERSION&#125;</span>.tar.gz</span><br><span class="line">  UPDATE_COMMAND <span class="string">&quot;&quot;</span></span><br><span class="line">  CMAKE_ARGS</span><br><span class="line">    -DCMAKE_INSTALL_PREFIX=<span class="variable">$&#123;CATKIN_DEVEL_PREFIX&#125;</span></span><br><span class="line">    -DWITH_CGAL_Qt5:BOOL=<span class="keyword">OFF</span></span><br><span class="line">    -DWITH_CGAL_ImageIO:BOOL=<span class="keyword">OFF</span></span><br><span class="line">    -DCMAKE_BUILD_TYPE:<span class="keyword">STRING</span>=Release</span><br><span class="line">  <span class="keyword">BUILD_COMMAND</span> $(MAKE)</span><br><span class="line">  INSTALL_COMMAND $(MAKE) <span class="keyword">install</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>未指定 <code>PREFIX</code>、<code>EP_PREFIX</code>、<code>EP_BASE</code> 时，其下载路径为 <code>&lt;name&gt;-prefix</code>，即: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">catkin_ws/build/&lt;package_name&gt;/&lt;name&gt;-prefix/src</span><br></pre></td></tr></table></figure>

<p>此例中，package name 为 cgal_catkin， 为 ExternalProject_Add 第一个参数 cgal。因此其下载路径为：catkin_ws&#x2F;build&#x2F;cgal&#x2F;cgal-prefix&#x2F;src&#x2F;CGAL-4.14.1.tar.gz</p>
<h2 id="下载选项"><a href="#下载选项" class="headerlink" title="下载选项"></a>下载选项</h2><p>如果使用 <strong>SOURCE_DIR 指定了本地的非空目录，则会忽略指定的下载方法</strong>。否则必须指定下载方法(不能指定多个下载方法)。下载方法包括指定下载指令(DOWNLOAD_COMMAND)、URL下载、Git下载、SVN下载、Mercurial下载、CVS下载等：</p>
<table>
<thead>
<tr>
<th><code>DOWNLOAD_COMMAND</code></th>
<th>覆盖下载步骤的指令(支持 generator expressions)。<strong>若指定了该选项，则会忽略所有其它下载选项。将该选项设置为空，可以有效的禁用下载步骤</strong></th>
</tr>
</thead>
</table>
<h3 id="URL-下载"><a href="#URL-下载" class="headerlink" title="URL 下载"></a>URL 下载</h3><table>
<thead>
<tr>
<th><code>URL &lt;url1&gt;  [&lt;url2&gt;......]</code></th>
<th>外部项目源的路径。指定多个URL时，会依次尝试直到成功。URL可以是本地文件系统中的普通路径(此时URL必须是唯一的)或file命令支持的任何可下载URL。使用本地文件系统路径时可以引用现有的目录或压缩文件。使用压缩文件时，除非设置DOWNLOAD_NO_EXTRACT选项防止解压，<strong>否则将自动解压</strong>。压缩格式通过检查实际内容而不是通过扩展名来确定</th>
</tr>
</thead>
<tbody><tr>
<td><code>URL_HASH &lt;algo&gt;=&lt;hashvalue&gt;</code></td>
<td>algo为hashing算法名，例如:MD5等。</td>
</tr>
</tbody></table>
<h3 id="GIT-下载"><a href="#GIT-下载" class="headerlink" title="GIT 下载"></a>GIT 下载</h3><h3 id="SVN-下载"><a href="#SVN-下载" class="headerlink" title="SVN 下载"></a>SVN 下载</h3><h3 id="Mercurial-下载"><a href="#Mercurial-下载" class="headerlink" title="Mercurial 下载"></a>Mercurial 下载</h3><h3 id="CVS-下载"><a href="#CVS-下载" class="headerlink" title="CVS 下载"></a>CVS 下载</h3><h2 id="update-patch-步骤选项"><a href="#update-patch-步骤选项" class="headerlink" title="update&#x2F;patch 步骤选项"></a>update&#x2F;patch 步骤选项</h2><p>每当重新运行CMake时，如果下载方法支持更新，则默认情况下将更新外部项目的源</p>
<table>
<thead>
<tr>
<th>UPDATE_COMMAND …</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>UPDATE_DISCONNECTED</td>
<td></td>
</tr>
<tr>
<td>PATCH_COMMAND …</td>
<td></td>
</tr>
</tbody></table>
<h2 id="configure-步骤选项"><a href="#configure-步骤选项" class="headerlink" title="configure 步骤选项"></a>configure 步骤选项</h2><p>configure 步骤在下载和更新步骤之后。默认情况下，假设外部项目也是一个 cmake 项目，但可根据需要进行配置</p>
<h2 id="Build-步骤选项"><a href="#Build-步骤选项" class="headerlink" title="Build 步骤选项"></a>Build 步骤选项</h2><p>根据 configure 步骤确定默认的编译指令为 cmake 还是普通的 Makefile</p>
<table>
<thead>
<tr>
<th>BUILD_COMMAND …</th>
<th>重载默认的编译指令。将该选项设置为空字符串，可以使编译步骤不做任何处理</th>
</tr>
</thead>
<tbody><tr>
<td>BUILD_IN_SOURCE</td>
<td>在外部项目源码目录进行编译。</td>
</tr>
<tr>
<td>BUILD_ALWAYS</td>
<td>强制每次都编译</td>
</tr>
<tr>
<td>BUILD_BYPRODUCTS …</td>
<td>指定将由build指令生成的文件，但是其修改时间可能会或可能不会由后续的构建更新。</td>
</tr>
</tbody></table>
<h2 id="Install-步骤选项"><a href="#Install-步骤选项" class="headerlink" title="Install 步骤选项"></a>Install 步骤选项</h2><table>
<thead>
<tr>
<th>INSTALL_COMMAND …</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="Test-步骤选项"><a href="#Test-步骤选项" class="headerlink" title="Test 步骤选项"></a>Test 步骤选项</h2><table>
<thead>
<tr>
<th>TEST_COMMAND …</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>TEST_BEFORE_INSTALL</td>
<td>在 install 之前执行测试步骤</td>
</tr>
<tr>
<td>TEST_AFTER_INSTALL</td>
<td></td>
</tr>
<tr>
<td>TEST_EXCLUDE_FROM_MAIN</td>
<td></td>
</tr>
</tbody></table>
<h2 id="输出日志选项"><a href="#输出日志选项" class="headerlink" title="输出日志选项"></a>输出日志选项</h2><table>
<thead>
<tr>
<th>LOG_DOWNLOAD</th>
<th>使能下载日志</th>
</tr>
</thead>
<tbody><tr>
<td>LOG_UPDATE</td>
<td>使能更新日志</td>
</tr>
<tr>
<td>LOG_PATCH</td>
<td>使能Patch日志</td>
</tr>
<tr>
<td>LOG_CONFIGURE</td>
<td>使能configure日志</td>
</tr>
<tr>
<td>LOG_BULD</td>
<td>使能编译日志</td>
</tr>
<tr>
<td>LOG_INSTALL</td>
<td>使能安装日志</td>
</tr>
<tr>
<td>LOG_TEST</td>
<td>使能测试日志</td>
</tr>
<tr>
<td>LOG_MERGED_STDOUTERR</td>
<td>合并stdout和stderr</td>
</tr>
<tr>
<td>LOG_OUTPUT_ONFAILURE</td>
<td>该选项只有在上面的选项中至少使能一项时有效。若设置为 True，则各步骤的错误日志输出到对应文件的同时，也会输出到终端显示。</td>
</tr>
</tbody></table>
<h2 id="终端访问选项"><a href="#终端访问选项" class="headerlink" title="终端访问选项"></a>终端访问选项</h2><p>在某些情况下，各个步骤可以直接访问终端。</p>
<table>
<thead>
<tr>
<th>USES_TERMINAL_DOWNLOAD</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>USES_TERMINAL_UPDATE</td>
<td></td>
</tr>
<tr>
<td>USES_TERMINAL_CONFIGURE</td>
<td></td>
</tr>
<tr>
<td>USES_TERMINAL_BUILD</td>
<td></td>
</tr>
<tr>
<td>USES_TERMINAL_INSTALL</td>
<td></td>
</tr>
<tr>
<td>USES_TERMINAL_TEST</td>
<td></td>
</tr>
</tbody></table>
<h2 id="Target-选项"><a href="#Target-选项" class="headerlink" title="Target 选项"></a>Target 选项</h2><table>
<thead>
<tr>
<th>DEPENDS …</th>
<th>指定该外部项目依赖的一起目标</th>
</tr>
</thead>
<tbody><tr>
<td>EXCLUDE_FROM_ALL</td>
<td>将该外部项目排除在 ALL 目标之外</td>
</tr>
<tr>
<td>STEP_TARGETS …</td>
<td>为指定的步骤生成自定义的目标</td>
</tr>
<tr>
<td>INDEPENDENT_STEP_TARGETS …</td>
<td>为指定的步骤生成自定义目标，并防止这些目标具有通常的依赖项</td>
</tr>
</tbody></table>
<h2 id="Miscellaneous-选项"><a href="#Miscellaneous-选项" class="headerlink" title="Miscellaneous 选项"></a>Miscellaneous 选项</h2><table>
<thead>
<tr>
<th>LIST_SEPARATOR</th>
<th>将所有 …_COMMAND 选项的 ‘;’ 替换为</th>
</tr>
</thead>
<tbody><tr>
<td>COMMAND …</td>
<td></td>
</tr>
</tbody></table>
<h1 id="获取项目属性"><a href="#获取项目属性" class="headerlink" title="获取项目属性"></a>获取项目属性</h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">ExternalProject_Get_Property(&lt;name&gt; &lt;prop1&gt; [&lt;prop2&gt;...])</span><br></pre></td></tr></table></figure>



<h1 id="Explicit-Step-Management"><a href="#Explicit-Step-Management" class="headerlink" title="Explicit Step Management"></a><a href="https://cmake.org/cmake/help/latest/module/ExternalProject.html#explicit-step-management">Explicit Step Management</a></h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">ExternalProject_Add_Step(&lt;name&gt; &lt;step&gt; [&lt;<span class="keyword">option</span>&gt;...])</span><br><span class="line"></span><br><span class="line">ExternalProject_Add_StepTargets(&lt;name&gt; [NO_DEPENDS] &lt;step1&gt; [&lt;step2&gt;...])</span><br><span class="line"></span><br><span class="line">ExternalProject_Add_StepDependencies(&lt;name&gt; &lt;step&gt; &lt;target1&gt; [&lt;target2&gt;...])</span><br></pre></td></tr></table></figure>



<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h2 id="例一：从-github-下载并编译-FooBar-项目"><a href="#例一：从-github-下载并编译-FooBar-项目" class="headerlink" title="例一：从 github 下载并编译 FooBar 项目"></a>例一：从 github 下载并编译 FooBar 项目</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span>(ExternalProject)</span><br><span class="line">ExternalProject_Add(foobar</span><br><span class="line">  GIT_REPOSITORY    git@github.com:FooCo/FooBar.git</span><br><span class="line">  GIT_TAG           origin/release/<span class="number">1.2</span>.<span class="number">3</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>



<h2 id="例二：从-web-服务器下载-SecretSauce-包"><a href="#例二：从-web-服务器下载-SecretSauce-包" class="headerlink" title="例二：从 web 服务器下载 SecretSauce 包"></a>例二：从 web 服务器下载 SecretSauce 包</h2><p>此例指定了两个 URL，以便选择更快的网络。该项目是一个 Makefile 项目，无需 configure 步骤，因此清空默认指令 CONFIGURE_COMMAND 。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_program</span>(MAKE_EXE NAMES gmake nmake make)</span><br><span class="line">ExternalProject_Add(secretsauce</span><br><span class="line">  URL               http://intranet.somecompany.com/artifacts/sauce-<span class="number">2.7</span>.tgz</span><br><span class="line">                    https://www.somecompany.com/downloads/sauce-<span class="number">2.7</span>.zip</span><br><span class="line">  URL_HASH          MD5=d41d8cd98f00b204e9800998ecf8427e</span><br><span class="line">  CONFIGURE_COMMAND <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">BUILD_COMMAND</span>     <span class="variable">$&#123;MAKE_EXE&#125;</span> sauce</span><br><span class="line">)</span><br></pre></td></tr></table></figure>



<h2 id="例三"><a href="#例三" class="headerlink" title="例三"></a>例三</h2><p>假设 secretsauce 依赖于 foobar</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">ExternalProject_Add_StepDependencies(secretsauce build foobar)</span><br></pre></td></tr></table></figure>

<p>​              </p>
<p>另一种选择是 foobar 编译生成一个自定义目标，并使 secretsauce 依赖于该目标，而不是整个 foobar 项目。这意味着，foobar 只需要编译，而无需执行 install 及 test 步骤。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">ExternalProject_Add_StepTargets(foobar build)</span><br><span class="line">ExternalProject_Add(secretsauce</span><br><span class="line">  URL               http://intranet.somecompany.com/artifacts/sauce-<span class="number">2.7</span>.tgz</span><br><span class="line">                    https://www.somecompany.com/downloads/sauce-<span class="number">2.7</span>.zip</span><br><span class="line">  URL_HASH          MD5=d41d8cd98f00b204e9800998ecf8427e</span><br><span class="line">  CONFIGURE_COMMAND <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">BUILD_COMMAND</span>     <span class="variable">$&#123;MAKE_EXE&#125;</span> sauce</span><br><span class="line">  DEPENDS           foobar-build</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>也可在 foobar 项目中定义，而不使用 <code>ExternalProject_Add_StepTargets()</code>:</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">ExternalProject_Add(foobar</span><br><span class="line">  GIT_REPOSITORY git@github.com:FooCo/FooBar.git</span><br><span class="line">  GIT_TAG        origin/release/<span class="number">1.2</span>.<span class="number">3</span></span><br><span class="line">  STEP_TARGETS   build</span><br><span class="line">)</span><br></pre></td></tr></table></figure>



<h2 id="例四"><a href="#例四" class="headerlink" title="例四"></a>例四</h2><p>假设 secretsauce 提供了 makedoc 脚本用于生成其文档，且该脚本要求 输出目录 作为唯一参数，并且应从 secretsauce 源目录运行该脚本：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">ExternalProject_Add_Step(secretsauce docs</span><br><span class="line">  <span class="keyword">COMMAND</span>           &lt;SOURCE_DIR&gt;/makedoc &lt;BINARY_DIR&gt;</span><br><span class="line">  WORKING_DIRECTORY &lt;SOURCE_DIR&gt;</span><br><span class="line">  COMMENT           <span class="string">&quot;Building secretsauce docs&quot;</span></span><br><span class="line">  ALWAYS            <span class="keyword">TRUE</span></span><br><span class="line">  EXCLUDE_FROM_MAIN <span class="keyword">TRUE</span></span><br><span class="line">)</span><br><span class="line">ExternalProject_Add_StepTargets(secretsauce docs)</span><br></pre></td></tr></table></figure>

<p>可通过 <strong><code>cmake --build . --target secretsauce-docs</code></strong>  指令触发该步骤</p>
<h2 id="例五"><a href="#例五" class="headerlink" title="例五"></a>例五</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(CGAL_VERSION <span class="number">4.14</span>.<span class="number">1</span>)</span><br><span class="line"> <span class="number">14</span> ExternalProject_Add(cgal</span><br><span class="line"> <span class="number">15</span>   URL https://github.com/CGAL/cgal/archive/releases/CGAL-<span class="variable">$&#123;CGAL_VERSION&#125;</span>.tar.gz</span><br><span class="line"> <span class="number">16</span>   UPDATE_COMMAND <span class="string">&quot;&quot;</span></span><br><span class="line"> <span class="number">17</span>   CMAKE_ARGS</span><br><span class="line"> <span class="number">18</span>     -DCMAKE_INSTALL_PREFIX=<span class="variable">$&#123;CATKIN_DEVEL_PREFIX&#125;</span></span><br><span class="line"> <span class="number">19</span>     -DWITH_CGAL_Qt5:BOOL=<span class="keyword">OFF</span></span><br><span class="line"> <span class="number">20</span>     -DWITH_CGAL_ImageIO:BOOL=<span class="keyword">OFF</span></span><br><span class="line"> <span class="number">21</span>     -DCMAKE_BUILD_TYPE:<span class="keyword">STRING</span>=Release</span><br><span class="line"> <span class="number">22</span>   <span class="keyword">BUILD_COMMAND</span> $(MAKE)</span><br><span class="line"> <span class="number">23</span>   INSTALL_COMMAND $(MAKE) <span class="keyword">install</span></span><br><span class="line"> <span class="number">24</span> )</span><br></pre></td></tr></table></figure>



<h2 id="例六：使用本地压缩文件"><a href="#例六：使用本地压缩文件" class="headerlink" title="例六：使用本地压缩文件"></a>例六：使用本地压缩文件</h2><p>假设 package 路径为 catkin_ws&#x2F;src&#x2F;smach_test，预先将 SDL2-2.0.8.tar.gz 放置到 catkin_ws&#x2F;<strong>build</strong>&#x2F;smach_test&#x2F;smach-prefix&#x2F;src&#x2F;smach 目录下</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">ExternalProject_Add(smach</span><br><span class="line"><span class="comment">#  URL &quot;https://www.libsdl.org/release/SDL2-2.0.8.tar.gz&quot;</span></span><br><span class="line">  URL <span class="string">&quot;SDL2-2.0.8.tar.gz&quot;</span></span><br><span class="line">  UPDATE_COMMAND <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#  CMAKE_ARGS</span></span><br><span class="line"><span class="comment">#    -DCMAKE_INSTALL_PREFIX=$&#123;CATKIN_DEVEL_PREFIX&#125;</span></span><br><span class="line"><span class="comment">#    -DWITH_CGAL_Qt5:BOOL=OFF</span></span><br><span class="line"><span class="comment">#    -DWITH_CGAL_ImageIO:BOOL=OFF</span></span><br><span class="line"><span class="comment">#    -DCMAKE_BUILD_TYPE:STRING=Release</span></span><br><span class="line"><span class="comment">#  BUILD_COMMAND $(MAKE)</span></span><br><span class="line"><span class="comment">#  INSTALL_COMMAND $(MAKE) install</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>执行 catkin_make 编译时，会读取指定的压缩文件，并解压</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">src=&#x27;/home/ros/test/catkin/catkin_ws/build/smach_test/smach-prefix/src/SDL2-2.0.8.tar.gz&#x27;</span><br><span class="line">dst=&#x27;/home/ros/test/catkin/catkin_ws/build/smach_test/smach-prefix/src/smach&#x27;</span><br></pre></td></tr></table></figure>

<p>注意：URL 若给定的是相对路径，则始终是相对于 catkin_ws&#x2F;build&#x2F;smach_test&#x2F;smach-prefix&#x2F;src&#x2F; 。</p>
]]></content>
      <categories>
        <category>编译工具</category>
        <category>CMake</category>
        <category>modules</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>示例</title>
    <url>/2024/10/16/Robot/ROS/ros_control/%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="5ac013fddee5baac41fa49af88b6c63e271dc602469b89e120697d136a6eb262">61a285bea0bd1a3904d1b9b9e1d94077fd959dda92683b5ed352ba1bce4617e6a5b3c843305aa8cedc3b8df23d70b8423243aea26a28e9a15333233a3ef32acb181b57d3cf7facc6448728691944d870b368582df4cc7b8f795a91ccf5ffd1090bb6a7dbcda5213b89d588947b3d96265097ab0f322ac2bc2f0b0ca3dea54d395110aa03852e0df2d85b272c481a91b3a0a18c7b98dac7d18446a6a50e3344a94abb998b28de926fee05f8edc4c09644138d4b8b9a5ad2ed5d64fdcdab6f371dcf40571ac20ab11fed43341a5cd1f2d96b953cb64df0a6f786b457ef532c2506393ae76077b805eaf3fc0f2a38587c1a9d8a35a29fbc626ecd97cbd47c52020d8604b279bee6fabf65e07101fbd403900082a4b9d07cdbdf4397b5c570a65344a9802d37825861482c5d03d6a778255937b67ae66e588c21896c111f6916effb008332a0981daf92b057a4bb8e1d04b2009043fbd14e0435278124f06b65f6f3a4f8029ec59fc4f408d5f6ad9a94579607760b7bce8d82cbb24c41ac64f1e89855bd12b89d3eb9d0212575a080388206d4aaec59ea02e8c46830c45f7c2dcc67d6ddb75cc5a743f7d26c1915c052c9b11d2945ce1178275bdce906ca42c4c980caf2ce07aba2c05fd20134604dde263c0e628ea80a5e23f9dea7537f6013fab156deb15baa56785fc09077e8406a0639bf8dbbea9205040a512517131aa1be1476f16ea9f1815a11acd87482a11ef63e9ea504840eb644d0a495fa90a865651bf43102c9c9b1fbd898e8394b482b0c79bd507905637fcef064689e3b39b4311ebf3bdb5c688e60b6dd95dea8c2cfb4b0383b6eea5075b6f2d4662d60a5586d785a439f540eff7e09304044397e54f82a4dfccbea6545dc691ced9adf355a46112f7092221d3876b0c809bf5f7c67fff92bec498a8f55365765f0bd40f656deb728d83364e79a97976566de97956f0bc5b62760ff50b8395c941b72b774e36790a2306b6de7cea3e9c04e6584f82e6b51e5b606aff13c255d4bb750feddde6c831ece8d4e77686b5aa0455d7e8a152d6e2b354c9f660fdfa6c915a841b9170a540b56a1a8fd27206d90e8cc632ce8471b54eff1f8396f0eb659d86c8519918f031ea5eaa05bd221154ec54bd6537a4990fcf3f260b45de5417dfdf7a757ccda13c1e8bf98bcebfda5a49c5bb1a129f40f06da371bce60fa610b8e7e044f95d2a757c0be088c7f374a59b0435c380ea2314a7f80ac955411681a9408db666fe4710a47846ac986f470160ccc697f03d21cc907372c60b09d0ca1fa6691337be162a2d127c689c5c98cd3775063b10969baf65ecdad05789ec3c068656876824335a12b5641ae846e1d43540712506dadd55c8f8999b9f5031fc2a81fd7ed4da28dc731d47df47331999cd8afd62b2c657781b1cab6a0b6647b1d0953d4f35ea80b1c0a5162975e0a446826dfebc7eede6e6134e8d1b315cbf42cd5ff08b43f50e7d36a6f4ce4739ebc8b6e6244091e075ee721cdfe2a1a4df712b524e0ef4b554205339bfebdbdb675fefb96b45a7a2f1add1e65682c5e6b248c82307dc583751c3dcb319c446dd22f3d48047b0dca77555224076b6cc06740f897b8033c5ca592d0016342c5bca603ce231146dae34e2e8f5cfd9a33b2f25a123acf1fb69c0ff198470d3a8de8989427d765596cf576f78777af68a3d94ce86b1d05946807f030218ac0a8e434378d4787b5cbee5e991fbea03df93f5333db8014d51f1c61ffab205f4c6756d086c460cf7e0860c85474276d0583ae707fcf46766c01b30fe8bf4261a27e61f905a7cab06a5ffc2b89b90a326a9e41e9d8b700306e354bbc4b6a091a631152f3c5e4400241ae82ae5145c8ab862a805e1f5f70404bebde3c5650c9d27cf526a6f9c675c7e04a734661bd2ea550ef7996b40216a6c135e2cef1e78c6104d8b82830ecda312e878571c31923ce69d212c02f2c8838cd577322d50f2b81c167f066d9d809efff0eeea12ec09b0b244c53d6a32f4b264d3f65c5f923c2980e2b947d15a5d85c4893d132114bc76f5371935331091edcc4b56d8a4e25262f9c05dc3bd1b4e45bb4e7614d3ceb930821550146aeacfdd3d5b07f44406af965a19e2d3f2ef46e36d63e2af351c7127b1b6ec1e96d9315608841cc5e1c2a8f37c4707099b0f7ec2587496e350c4f2821585ab5cbe2b44897a943ceb1b41420172a0fb8eecbdf62139bc292ab68419abed035113bdb31366d6e2ee857574cc773b61e7ce1117d6a060083dd4302d37dc939505603ed7eb2e023e74f3e631aa9113be80709d555623a55ebd08e8dee566ab0c9bf5d8d871c2723d3443d557948f4cad17662504c29641104f3da8ca932a495b94d7b16df07b641a0e202845290bafcbc59c772cb19c458c8086428d1191ee47d027980428be063e94e92dff0bd5dacf3695c62b80a731d27d2b304f73447c27ea7d5db418e0f31f6640f6eccbc9ea71c6006e1123a814253b043396c4608490e16bc821f4bbd28c6973021459dd4c02559f8caa4e3a8dd1b4821f28a2425fa9e16a91fd1806c7651448868cd1b18a3cb57ce806e6e57f13f5981bb9a66dd909d14b9c36ef9fa7f92a03cf12046a006802f94b5c69edbb3a1eb672d089380ddcb9daf67a20377b93b71506be0f544433c5a484937693ac41ca12bbc3b6931733755bd1595c49bb8f10ba30ba4185538cd9c4250e4fa0728e63b6f8d06a6d985e8b891aba918832a59fbf1b06de553630a6bf2fc2a04a0e270a9924b4dededb419995530ab7c20710bd6e5f58a7cb30b342a335a4bfcdde8aa4ca260f81246f40bcaa4ea9b30a348ef604b4f40f381dd8ee382fbe1018cc5fc27671637dd582f29cea87faf674e03e7c089a07758d38838812c5db7731a00c97a9c291f1afc1c03b159541114f84a1ddfa630a3fe6988277dfabb433db56d6a750c610051f8cd5824e743d3c07c8046a54537ec2504e56383622097d012c4c719067038492548525364429651389e6c96faa9babe4cd8232cb20bffa814fecbe36b9dd73cc927e28d3cb1e96079edd39c6bc294af153011de21bf04b400a2820ba21b48dd8b80dd89b1d23c2069b6155a772e0d428345ad608c6f4c30927efff8564159b197d47920f74d6fbada0c9027caed47d33fd7251a450024a7784793782b3e8176361867f0c35ba7d2fc2d17382011edae9d05d07681dc5789061c2ba5763e304b8d32727ce430b79b0085981703185e394fdfa11a7cb4821d7018bf4f38bc74f22f7866df5bfbea23d5533e08d0326f8799f24909ca83ddaeae7882b1d457eaeed885358e5a98a304da453a6fa90ad67e6897e3be55bd6ec16cb2098100358a03027cd99a464584fe38dd7725a770eda0e883c55180407b5ee2b98153ee16133e080488cb39602e6b5449f2269cf72a88dde90641850d5cc8a20023baea44e5c7048a0529dc0a25d025080e321bb8c192e94c743177a191971c2550fff5db275d4e26084aa0e2d12ceb3a85ac004b42615b98a02434a5da28854eb5dbdd4dfd4d6f9c4b40fd9f704ae437c9eb3fc88aad18de46cb21d2d4e51a5ccbf85061bf37d437cd884f5f716bd0335cb082e417f71c84a255621ab6bdc93d5ce138c06c2a96bb9deac9334ab0672ba17959a5e3f505ae90b8f812f78ee80b29d0cafb800fc2b5a87ffd7697d126c7595e5541862eedfaa6fce8b6d0a482b5046a1d781cdaef005e0036715afbd457bd307e2f564db6df87aa12011d099bcd98ceb4d56e010800b76cbb7df90298bcfe3623f4d99a7b593c8b9aedb6894438c2b89d9fe54128a64dde41c14e8431bcf69a757ed475f1d9732453863f67d1e5e3c8b420643c40d4ec9a11c6d9dd31e383a5e48b0a9d5f2e2714cebb09a51c35ce1395ff135f18d798bebfe831732a6650c8f6a6fa60aa3ea929703ac1f49790fe62c4351b411a4a5ee55ed967c3156f93e63ff242000d7e6a3025d73a52dc8ac65f836de93222c5488f860d8c7e085632eacb23c480cd1ae629dccad70a261617551d12f6435390154d04d68a8bc2c1e03565f65cdfa00a7bba9526459f7fe33bf72a0a909e9a9e20ec0f233bee3f5db88686915e9d609d971a5af1eeb33631602e78b0ff3f56daaee002a0d7efeb2427c09bf400f14846282619a40b6df3edd32efb6521f0a5640f35c52226fe557e03859cbc23dbcabd36f7fff9dd96e97efbc72d06d99b796da5e71fdafeac87ea0256f6677b149a3080bd00cd646dc5a56b8c34a6ac788358cebfaeca5786a981dfd08054675ceebdc3459f5634fd384a819dbc5bf51864189ad993d0f056fe8cc82f3cdba4ce7c487c378b67f0b65d0eee7ef40fd1374c5d1e9c8343a6a839c072dfb71e00e6968aff20f76a144d781439b8c5f64e77a459292320b3a29256f33a3b478ed0f24fea2a57f4003beb9a49542bf2b09bb50368830c863aa51946b6af3614a913e5c5fbfe841dcd1f82c8e242b9167fe9a0090debce671a0d2be995466614df250d68c2cc6ece930f85dc25cd106e3a078df10430ac48bde7943626e4479618669ffc6b70318f0a065a227da569f97c8c0be2fecd4cd329d7aa94f243c46e9917df54e47bfb34fdc2c71518cc5a88cc6b674b5c572eff6bf42dc0719b65bc56ffa74e2644e78a255bc08632dc7efa9af6139517056977f231f65815a3773ef69646d6c37bf21baafa125f8528ab031242e145d38a9a05e41d315a4fa0d5bf41f7d07d09b62cd670cc319599df48b3025cbaf86f24514e682325549124a89579fa2a0556294f9e1de20da2ec0d2a60b377c951db03c076bfbc3807702e7c5a22f62aa8adfe95e70b50b12f1e36178a49926f346df8ddc227c65179f23134fbc119e910430a06601ba35fe657cfe690e5e104ab5723fb963b427fd2cdf72f8bd3866dd4fbbd1c321b8bf516974c3902da60cefdb1054b2cf911a9003e593376799f5083599b1cd652b6cccef42cfdc3aad919eb524cc561e4c67000016543dc47fb77caa79f4ea816c80a3afb672d3e58c366426f66d2781ffbf5bfcba4ca3cc61226f973b9d67a5ba0295acc41beff15a152b26e45271a5fa222d160498714d50f67e35fabb11b89d198a802e640bd9dc4a9ac84810cad921eff17ed4bec61de50a45ae21d72bfdc1ad36eaf78e2e5680f1ba726295955e3946fdcc4c87ff239c7653bf242aa21ae00343111a49a67f0439481318a80337ca51181bc156761be51aa6e5c172fce74cab6b8e8b21022b4071bc593e3a4c0c75fe35f9fd7064636c8a994d62e7cbdfc55cef12b121637454ad5c8486c17c67699426cddabdfc0b43684e9a0a83c7ff53d757cf40e62aba29be93f4de5e5deb03b63fbb1a15281a6b43a13151676a85a61f13f7845c26ee99997cc602ba77c583534494e243a3a0cb3ea95ebf46377b4ddc85c7179fcda9ed6f606e837ea86034477554fe2cd7b21867de1ddbfc2d656cce12c27225de4e5ff9453f25ccb86d721351a71422f34b78db5cdba96d55f3a06bd23c82399eafdf2ad1839b3b617c97e4113a78fb19e9909cd2b9f0951e5e3d41c28b2c3e8d34910d6d9b3d199b2aa09fda3247014d74c858f96e39a974ed8b2c745ec89ba18828ad5517b089a779c69dbdf2133698ab1bfd243026f87024a2f7646334e6649f6f27ab0c2f746ce924baf8887a6b0b0b63a42122e3917cb8f74f95c533a2940870827a62fceffb6a68f98780e0ba5362f802d376da1030829b284026bd40355f8eb4e62a10c544d3d6ab0fd84c63c5bd342f3a94f76d4f0edd8ee17e95e92133ef7c09d2618611d80fafe3cc8da4809e3a81b633a1def253b67cf5e475b19af0ff7e83266c67dbc7561ea2d721668fe6c50aaa17317a086e573d0e6f15caf8b1cdd118af066c3224c32de983b0cbbb3f5934bd9e08d137c8fb0d91f73b1a25d6ecc688f57cd5ba34e58e4d05d811ff09ebef6cfc43e646487d4fdcb84f7eff030ef0593ba1932a33227c2768c10311eb96c118db1e8b4c7d2009c204f7bf4f45d043bda0aa187ce6af80688ede6cf60206e74c70f4dfd0ab9aa879fd371bd72819a411654fa0fb8e2de088660210c217b61c3bab25b3f84e03f13ff2aa67b138f0dbd7bc654710ed7fce7e72eaee9245bff30c28b13338d52f0b63f80ba6a825bfa7b181fd0573cc964ed809a564bf86ca18b06e5d6beb0a9e5d4e5b2b5fb592e1d17af702a360f165e22a4fd82bb37bb18ca53e9acc29b0cab4557fc57e1600583e3af81440377f9865493a2fb980c2ddad6772eb25a1191ea6a038a65392eabfac2daf0c9fac3123cbf8b66dfd7805258950c839b8afdd2617989d2bee9a3c8cf8fbc6bc9ab75b3ab9137d3bc5720191f168651e48192223a72b65ef97fe4bd87b1d3fb38b3b6e48c03766a972058983068e885773fe236ac7d6ee33f93d3b2f286d083a9def86be532171a3939460f7f0199ddd7e5c5e32eb43b974a78875f27b04f6d6d93865cdde8d19ce97d9c70cea8f12ac3931bfc0543162cb250c83dbd123e9ec712b3a075ac9978d5cecb8778b20be705aaf4734a28a42dcd1414b96256677d57248c93a0da7f73fe4687dee22564ad16f8b8df635a8d3a3f2cef5ed30a3ab29f0a7a380d9c3d55a8265259b5df2f73f05b3814de6f08fa6380ef1a7dd8b2d4c084ceee760d35e71aa58ff0e70df5a2b825c08aa567340c7699361602bec781ea0604d0ec6d6aba050bc59cb2685133dbb899edb7c9d2bd61ab008c3c46e63a0b6f524c3c5d15f6a41269df7271f4c09d54c19f97c527057351e44864b785a415a498f4452845e9e9a12635684f657fa2fd32b78bf2c6023eff5b4be4ad5c088340e3720216a52b56e97508de97d49c709c57d7ae3be1ec33b7f009fec72faf4c224b71191329d50cd07fa0a5186f42dd0ee73c93ffad3330926ffa6ffbd19faf6144274a51d3b56249c9b8ef0668664afecf033972632147d3ea962ce3525cb27919e69b7ae44766132c4fc8320f8b4a0a42cc38573a1680005a8bf2c06fdce6fcc055fb57c54c3a223d5495cb08b6812cacfb11bdec0488545afdc3cd9cce88087db5fdd52a6d285b557f43d1fe222948a2df09fda1c13cc92157f158dd2522563496769977ca26009d9e1b9985ce22cd6a70b64c49d67fb122115f4782b836cda789b4bad16dd7bbdf8170d3b5acc5577728da81e0e435f0f4b1e5401d7828a7ece316262d71a351422f1114378bd363c3531a2a340a875e8c2636678fb2e5c3122c52fb5156d2557a4e25fb00ea0210c61294d8d6bc98932ab6b7a05e5db6c6290ae5d464ee149312c1e4970771eac1eee7cbf2b2986c0386f370822049c4b827a1964819069c9261f41122534e1987e73686760f4c20a2fb796db40a25629a5dc61cae1caf5b84dcd8c732ae075100915b8f9051920427dd7f502b7f9ffde324282763fe98ed294c65a2d1a33393f6029f47ae88bfce7ee5cb0acffb22f80d1f8263805271456cf2767c956818fb4fa1f076490abf103b0a6a8762bb9627dc1021250809a8b16d05aaa11449d5f29bfd986c7e1e339e68ecdaad95e5c8f9ad3c4841df55f189bb9a9be7fb5f92aa71fabdeae21a34cae78c27a02ffc9ee0c78510a83a73160a31c8389f0471819e7fdeb1a22a32f00f672feb6fb779b561309e8b998432d122c5a0c91f4a8c28edc95085f911ea64c593602a66546a5a504d1e9e868d0260427280141a0df3cf06e25cd2693be1891173545ae8137ff08251164cfa750f3c73992269f30e4ce2219c2f801d625ab572e7557206f654cefcab440f7a33613b310d482a9e8370f1d7f57d9eddc818a8b9a8b4f1c837e2e38bc7de82e287fcbb6c482ca247d9c43e7cc8bf438ed9f2e4d6a78b0c29a96977ec03dbfada97e4c5488861ee6af3c098723af4a00bc579ea9ae8ebb64ece371818fbbbe726125cf6f94f9c4bcd9a0a7dd8fb69fee1e288b7b08329c57026632f44d663b6699e640028db21ab2b5c51074955716024f1f969ff431fbe863ae8915e15dfe03beec26f7d5d37a877df459992358e94318b2e872ee36a08941f6d70db5067ae4b2c8c7287bb80e9e05d1264248cb29ec80a1a1ab92ee468b01f0d69dd182af826feb1522b657b128a087b45c002c7bbb99e9494b7766ab2c784728ab4682135906532a90171e970d702902cdabed9df3167fc34a53be01a7a368a1035d88c349e0ef9e5f36ab2fa4dc0c0555b4dbb2168f81e5f89c863b60219e0237a571390ab6f6a90036fc0ab559ba55100689a378f59aa16c7a69d595c2b4bbebc88e9b84cb406ad7225d93e331f35125b9307c7f5699326d6fd03bd20f8a710180589b7ef327e8742332a3dbf6b44349240ecea5a2eb6e6974c2de632ebfec4184f3392ec85f55d89868733cdb971570a85253d2e6c206e3463d5e99b3a43c58eecad5a4640d104f8ccd20f6c575c2ce49f73fe972b22455ecfe7b62006ed6d714000056f93299a67f1a9ba54e2373796d890bc6fe12bdc782fde7863a38044431fca286e30f9215b6d71d64d91e3e0b47f0c26800935198bc6244b5d0b2c0bd9fc645eb947eac292374ab8e8f4102c738fe4e4baa97f4cd8b3dd25215e1120e7af8a64ef8e9f680a8f9449ee136c98cffa22b9ffc7ddcdbd564217b166d263abca9a13711cf8a75e81c6f8ee2825a5e17abc88b9714ba6b7a723448b4a9daa584144551908de83bdee03780a6feeb78af54ac5965daf52ffbfa59dcb78a6c7445163c89de2b853e7ab99b82684c9485ad8de4a257e7a7a42a3de3b8d9667d50fda1ccbff368ba187f76a94279ac975dedfb0161531774c042e83c16752d6c7567012fb79bada396b1d4fdec1639b9c24570b65ccb6f408ec6434553556c70b0f25280b898d66d1ad9ffd1e134b6106cac6cd96d9b222ad42c9588ff1ee3e31debeca0145354a3815ced1b962d0c694b50d87649a1b98520fb243c5b7139ce8777c65ebd3b9590bca95572901845aec0dfe7bdeb3daf62011e4c5c4dc2b5d93013a283ca9be9b698691fa92ed5f6f654ec5de7c2ab406f80be0416db79d11f8be1906049958a092086c4c69b6caa0998362d54ed4e701702888e1c2935758f66012b56b55e102c21b24747ed4824b003ad124498a02f529070433733e50ed56c03f9b0946ae92d9fe0e3c301f70cf5ad0c9dc9e191aea2ec19eb3d685210b301e31b38dcdbee90609680349c20bfcf8db08622b02fad508765d02b680506f8d5aeec7a9b6a7dd84b8f4f9cd7ad2527d258ce546b981e22b7b9035546767952a6dffd12ce160e1f7f4b2836e875e90c2d5fae9afb127f3d4b1e33d22c2c1420a51c7cac72ffcec92eaa48cf746d5ea5326ff0aaf40391d16ead91bf8c9e4d685e1d3ae18c4763d44e789954bf6d379f8d9cfb48f0c7ed60cf740d082915f0d8383f792decac03a46459877950153b85da9357bd7ec2efaa2f08b060823c8353b97977f67560741937a656a554c23913f5556e2081e4a0c3a3d21a2f312a64be36dc3b962c95ceb45d3302ad4f1782ce21b2e2120078f08555566d76b204734a39d42c17ed56967fc94fd3215bcab8d74cf4f77b5a81a340598f93fd0a0c03f3399ca79f771e195b82dcd3a9b5aecf3b23c5ce19a3adb168b09f58c5b8e9d8ed1a0c2e42948c176cb37aa05c33b129d439798c277953707119ece0cd34947ea6f6ace58d40cf1c0bb711350a52a9912e13ec2d0b49c1cc54356f160f9df1dc1ab981dea8cde55c59f4fc8be7d8ed563555ac9b815b91ea9802373cd99a8780cedd7beabd5778673f3c9837a84c697785e7c866d09b352ef2acaa4ba6d7ce8e2d1b594db91fb119f37a748e1da4b139d223fbfea3648395a9e27e72229a1554b1f698831583d2c8e3f307e49e6ab0222b0ed088fa2e4e89eea22ab7cfc1bc8c4d5bc13ab6f2598fa4de818701dd62b96dcaf8a316ddfde9f24869baf3dbdc55a9bbd739d9f46c99d4a307364d232d43d6ce43e9cbf306b9a554cf20fa43f5616929f0d41463621aba5ba08cac1239e5039e990f95302e0ba62b14cd9bea71e78c8ea32acb1f9ab995d2b50903714c4269f4d23d51fd9668486b8945c14b8889fb00f73e10e094a73300a300682c3791a871a6a431bb88a3263c83cb38c91e06c8a0403487af954c871d07ec2f8df167500a020c4062beaf180b9b1fae1df74466db28ff370ef86392013132ce1391e1b2a04abfbd627fe1d03f4f6728da153c7ef8a59a5ac469e45ac96239d0152d5ef5bb4cb49e2217c304d04976b4264ab7930582b54f155ecb0d52addd8f1962e980b28c8bed39aa9840a89d571e25eb6761d2fea2f2de58f4db851ea81b5dd3de5c45c6fc4beaff5ce723ac89d579128c8dd2094d7af17e420a1b2e2ead9c6687b7cbb94126fe205bf601c20ec9df2ab55bac20b689887a1cd8c0d060278df7fcdecfd317a7d153955095ab67823092f673ff7f245ef33875fd1a8955deec0afa4c21b4ae4a661e47b78403f191e0e59403c1c23715cfac61018ee95dd547e2f1449661508c494b61bff33f5f8499f6532eb66932ae3b36074b5460c7704cc740b43a23274700288f2fb9d0f07d6c3d78d15f76286076b6502da04c06e2940538e496e1f0f7b7d982a435861fd8860c2ff7fdd5e872475d902855c682f1c506394d5c43c1050ba6dcc8a5c36bc902da9a38d8e88ec9c4f6607411b3bd30b3aaed8579cde9a169232c9c4d8fcd4dea6ffdc5915350247828eec78e272267be4ce3c698dca4fae2d475475026a18d04f06b8956809993e6f188672cd9486eb766900f7c47d6257dc85a5723bf8f4adee7b5d4177987f931ad5b045ebf1519e1b4436fb46359497aea324c0ee8fc35363d312a64d50cf74b5a84b769c53ebe78609788f50708fa6219308ac20fc2e58b1c341445ab4b8b8e1682dcd99f7bc3d0b05015f0fc25dd873da111dd66aebe88e4b7044b4fb6fcfd2581c7cf2f11a5c602180131280a4b0601e4741a44333064472beb56998768259968b6655ed1e3ce789faa2a09442789a5dba269fae790e364bd54a284885f73732187a090b298be74c7142aad3691d4f821068068334b4b01f17eab82e29f68a0fe0b15414904372e5df44251f0f2a23d775aa71c0245524b386840f6432d45179e036ba2ea6b1a0066b21becf55e46667eddef469bdcdfba9672e5e5813114f9e1a7e66037e454754e86c4888e16f4f365f22edfceb42e695c7f0a2ce5c7f80184e426ecbeb3c76286a673749206b89c2d2e8466001f905ef1732d1c1bd4ef0aee8351c38c3c7a72318c2f943b340038ea85a4c897479f26dc82411053e48299edc682d39bb0038421b8526e2e9ed06e3218cb2b440a33b5e970b96933afd21c9e7196ef6f7947f22f607579c8052ea064e1eb9121827480d2712746c19f6a86023cc79ccad1f6728b9a2bcaf2e12705f268e1e91a5bac4c21cdc9d514ed5ac5d4e5a28f183d5994caa0fc1d302c1afd5be993c4110c95a8f288ceee6cceee4d49b5224b63f31a0c79d1e9f0bdc3365a5aebb5c4a608f2d7a7fa6b5bc15decd819b75b7d1970f9f5500907cbe0d2b6bbe4c1c588ce193341cd91d132ca80384c0beb1d4d5c8785e168a85b111655c2d3e7b39183c84cf148e09d27686e699b5a8fdf41fa06bac35f2a75d786837ca81ccc10393e21d5b563ad8614ca2f491e82c0dfd3fc278e6e3240a8a043a27f6ca27a8f225378b8fdc85ae4eb1db255be361f84e21b282d0ebc12df519dda7487b7a9aca0e4cbe924a0b8e9b9e954ebf8aefdf0bef1f18c1599deb614737d9f80caa39643c28602a00a5d95b3c71e6110e1a72c3cce6da31d6c6c51efece6ebbd8a1445adbb871c0ba7f1affc13d47231dc93de97df57a130ff36ee198662d68a2271896d6c718f92864d637d187309630a5c691a1bf26176424d295e8dd5e3e9433b072b8be0512e3b8819b846a19ec2033e9dcc68d306a723e849b37a7dfacc6905e96d3f575e5add367fd75300b9dd3733516f8b216d7c5991b1a38b4807a5ae820332f104ef8f1e47adc87c2e100dc27cedc30f49f3b3dca7d08c12be4c6ace784ad6778f0148f071ddea028a53e88763fecbce892d54a006c4a4ea9b5ff83143c1fa8c338410eb7a36bc43af50b2ac1990146ed4747e9b2fddf79fb36b181efd117883532088fcc150eca27f6d47e029fd549da956453e163eedb262d98499903fce374d9380287f8364955868078a661a88a0cadc58cf12db33a47db959b4c0d6b7ac30c20fe24ab7e1d9218dbc83b0c5f5d541c42351e6b05a06fd30f32d267a10b9469206d66ce40d9414dd6b1c29c55c86f7a74649e4de6a6a136bbdbdc843903ec89fd716c7e6202c114b61c59819e7bd0e71682faee2c21d00ec11a6adecbabd42f799aa7e0c979f8620dec66ce59ea36155878132474eb25b797754a79928297a750b28f2a3881f8a4fbec8e1ec733abd1d848a5d382718f78b50ea7dab184c6d5fd45f81a3004b2b4f7ae5dd269a03bc2ce8ee1c0a3a4308d2377421a84bfccdb806a2f0305755f8d7cfe722b6f87cfe5acdc10f0ec5b79324dd369596a254ff4fb5c0498328a55de97934fa21c81ff3d3b5770495910d86b5a7dc9d74e8bd0b0730af45d9e08e1460ff7d0ed655222308c0ff5d9cf454a090364793725c0790479263c85dd319e20942161bfc987a6d1268c97ee1914e6fc60a40e5a09fb37f6af5555eda2ad2fc717aafece513a6da1f915c8ebca2d70625dbdb59c4c5579f4b30a9a2a705dc4a4e64781ba7e08af2d9bbb0af05e28d25742bbbce0a9297babe371363c9334fd8837b938379298397d7c292ebd8293ef3908944cbf8686f761302c5926cfe2e078759e047f81e7e11e57c2aa21c99665d6c0dce9c2572a826e0a585b4bc89ce4714c56c691bfdbf059b44bdc438ce853994cfed302502adb79a4e120c07da6c84008648a05d3049378cd06656fddd491948eb5ba85ddc127893acf3e1408ba23848ad9a91031998789325ede8b364f82c1c1662cd79501e58afecda4d47037be7fb029c242852286967efb605c56185b6635c0621b66e7537aa087faac649b198df4fe4aa51b8dbc508e17bcc9d3bf148a6c6bf937f9b4511178014db134243da278e464a4354004c21238d9a91e65d340cd06b4981431879c703ba01197829bfb8d1d6985b02117bd0291743a85a6cfef76b8122ee9a9411e83325909575ba359aa12cf8c5df2df177c21ec5cd6a5b1293b97041004238f62ab0088a5e43f4a490328b41478c7dcc6ae19d944e5dc9b33b5e613fe017844f622828ca0196a1fed9dde27f3eb7246d76173a1a85a395f2362dfc95aa14da6454dd532b9a139e6f0866eda760b0003f162333a98d7ece11e2cc42a3538812a8914f3634971de3d62b95328f5f657901d3f26ba1b6ca2ad018129eac35eed1cf0389682a2cd8e8e0c68930df21463b8cb100cdda38e02a4e7daa28b7bf4e63bf3daf864fd20a2ae6481c84055de9d20c4f67817fad1b4846fd7ea49e7ddae008f01a2a941b7611f9da421a0fa2959bd0aa78d5883a52de88fef1d61d2bcb2162a0ef6a8081370b6e0d895f9012f49008fbfe8a1ad91acd92a51121ae8de9b221812ac62b479fce45f7a004aa5d5c9468671e3ce5d8f6146abb957ac12cf4b8f5e6aeff7c6aac34bc34b46c25ba3ad7d7ab531d2a6d46ccecee9a9646061b6affc5538db9fe3afa9f4d4f96c709cc916fc25c2351189d0fc647cbcbd06d3d190d18abcc0b79182138c939003288dc7475606048966520ad2e2291829707e13ab601123a06b04662ce3867abd5d3f06b568650053792701a623ce133dbb3aa1380b517a891dd3e11187263741b6d29b7f0581902bd7a89e98591dd37e69a1b0da961dee6fa46b59dd2d8ae88de5c56032aa247fbe3a45080423b42df7bf10b7bd8795f157b8c69629e396cbb7b41d47a4025b02a0dbec9c854c0bc9c9b617c1c454496c4d0c9947cd539f4818f7c33bce8beb27f89e012c4eb364424734146bc339c35eee250a57af7bb8d177148c8e7a128d0a9d878efe055269a36da94d38976b906b4adff4883a3c2afd3a234b02799b0c3ff76f0cadd46a7ba08b2395081e81c4b5648732bef72cc737f6efaa647b15ae33d6c1e61f9bdafca59969e111d80e6da318ad8dc59f1b0660225af320546ec376adfcea771cdd2d89018d62eec11b2dfe1fceac37e595594b9bf169dadec6ba3825d08d5a415b1c62b67d1b60d5abd2bc652e66bc0591f1f176b8caa602bbd959c186f5d3aef03aa41bd7a980206ba4224ad8915a18afb51479bee6eccff14f5426746a8990a972b517a5a15dc14927240bd7c1619ad288193f68383710eb906b9ec8371b5173e127f9dddde7ec03ef4838c1d3ba1c0523cbaf80d26a6faf8de114aaf5b9c47f198647535bc930f7096e29705a0dc559b2ea975522f03b0d82d9a49f7ee37fd9f37df48eef7ecd74d5cdb1eab4af30761a6b3c74b44f1b3cef2c9b4932717f98cddd96e434478297acc5ddcff1de59095ac75cbf1521b9037e4f2c3156b585ad780951b3016e389578657042ad8b2b5e982d5df12a653064d192d6c722b304aa6f00f6bb11183aaf46e9c2a11cb93a6a68d4ea97622537133b19d1aee9997b8db4496c1fb815bd982b9d781c5228ae71ec97f2873101692d0ca957b7408ef6fc362332dcb82eb99cda188dcf5751eb1c576fd935788e6b8d9d5dd8e91bd2344d8fc5511677c5dc6469afca08343a57053eba705d0c1bdb7973b1a6709ba5000707989879949dcc7cca8a5c442a7931a18ddcef72c23758ec5ba3d406c4b37e578c432af1461dbfe308884edbfa0b3fa7a5475fd4beebe78ddb4d35178dce06cb18032d9e359405d3e727bf1298245a675921b8b9d4ba36cd814659af45e7d5aebd6b1054d6d508b503441896685d4e57b6fa681ef5e2325d80db5c6b11d5c71eaeff3bef6958f08f916e9ed7304193c8ef30aabdcbbe8b4ed8188ec477c81eb31553ea8d9d2c6d71ff241d3e37c177a7bb8150e407c2790793309ae08b1d1f1257f46f68e0a16e0bc264a297b819c6d59b1722f12fcb56fbd19427c3a89f16871d2d721e32967b46e1e6c3b5a7f32125297ee014c4e583f316ac783c4ef5d8aa8b9c39278d27213769aecc1ecf36cad863d9f18f97462307eb9e5b54442a01aa2e8df8b545fdd63d3900e7ee1bb1b571816f246baa58da2a22d99793447bfbf16dea9c9be3f4b08abc2447040656cee23a7be348f166389a8b2bc28acadc41279f2c13d27bec6726e3f56565b178fc22e004da47c34b25e8c7ad21532d9307ad0eaf95f45691f8354c6bf2691a889f9292dff852df07e27739c78e1fbdc72a3eb7225f2a0ef2f3e33140e71b6e04d85cf217700aceffb3e28d5f8ca82760d9adb6eceb415e84f9853e91964fdab7ef1ff0a9d8b0a42c91b3da5250aaf34caf8a9dcfa39fdb256eec2672a1bb7e5e2cf4dabc012b80446fbc3e67701c1ae0d22f4e238105767ac1b66498e43c54ee60c6b5eba1619929077d3afbfaa5f59a7f6b85232fb5ca41552a10ee1e3b847814281017487ca06eb52570ef1b52b230885b1c74db1ad5e2b9e124d22b365914a37a415754ad80bda1180521a5cd6f0859a521e0bb493b085f66344240aa5fad060e973a8db7960952e47fbdea1e734feae3a788315da1116778fe1a6da9aadf59baedd22b4cd15064d0d909568d8e1421fe83ce7581bb745a4ddad778c07294577cd0143bf88fa0aa7f8d2d9f5053bfd4faa9a510a718bed2290203f1decb7575fc268751ffc8af740a8665974ce3b22fcd2582b1a85f6e4db1dd54c63e992314adf7985fd9898f0bc44b7548d97539773efb68d9b3b2bb4c86ada8eae936ecf04d56b602876d9bbf631d69b64c1fbf2c96c41a66306cc36a5f7a98588b7af6cbc815b7df7b912506a5bbf51fd8749341a1b8becb8a865fba91cc15f11329d7f157db4b6f8fcf4d29aee0a308897c77e2a82bfb694ef4be37f7e7ffcaee09bf3574a4f32947ad54213cfe257f37a71ecf8bb4efa020823d6ec195bd4c05af55a9f0e4192e16addf48b4303a07400942bf55f10f32f4a4355a921b04024c830eb44d3aa0743f3f83bed3a209823b4d9491fbb7ce3f3ae701399d4f82059a3c60dfb669314bc20c53f79b2b9c27cf9b4df71e17b338c99fb98564d78a8453c64e78b960c81b1811d408e09e80a142920242ff088e108d5e3ea312c7bb2bdb4340d2bcf0103d70de999fbc155fefecb9dabdbe215f5e3798d91574910ec542ef5e1666af7befc900767937a38c86dd5cd59c6a9b69576d9b1c324db04d3e92d55fe55e38bd7b30f7d3781a9c2a1086ad74b4a6d9738b0d9579fa0a753c7b5e6322242dba0f8cd388d7da3e66250edc3a7c5eb0f7be8c1d66615be173914a12c5975e99853efd789692660750427b067c984a59b529873ea9846945f6d02546dd6da47b6a475e498acb4e3b5c759e3df6ce3339ca875efeadf413b9a4b2400840d23bf6c6fa348583ecc3a22f604e26bcf6a2fcc2b2bf1ccce25132c20a64d9031b4922825ed06d1cad91394f226163dd1551e395da9fc7bb1e80ceb838d5106ce5bec0f7333331dcd2b1595e96c43d06a3b8d1f7d2f18fa4f59c49dbac35b1cabc12e8d53af692d620216f47003498623a4a9c7b07112821ee38246aaa3c883b1006147a1f109da33dafee514858f9fca7efbe5235c4f11c89e28f9585f2eb98ebca198f2cc45453df8ef3ae0ca13fa8d0ca5bb2ce162d42987b48f65e011118825dd0d2dd99002a6e154979e4d1aeae59a4d581ecc9642fca8020c728137aa9e6bd69d027d6661c9a14da1abc1f16c2d0861ccd16a2ca39ab80cddf95e29aff6b9f75f1480760e557c026a92ef28f2481f89dbcf563bfc83a78d9a48c71b8499ed6a5dce562ec4c7e775f53ebb9f68fb5eef7379d6dbf8ee09c3f4d03e48fea901edf45c791f4fac6436eff3d9bfa0e869fd496e2782ba2c8645e7abca6bae953bb10a54bdc10d2d20ce3dca796c8fa4c3e3f6114d2d2d5b4907204d4765dd1be43360d1ad0ea8260b6c11b230dbcc5bcd4deb0b3298786be41c4f020582886a3e3e2758e490c103abff1144cc9886cbce029e1cd33f9a9254aa93183fbd574c0c52fec4c9e2362ef3ab0c5cb48c9429d9bd82ac6e8f07bbf98ecf82ae1edc882c603705c99e62f4ca3fb910cce8695a010e35e35e37166385a8464f358e6884079ef6e18b81b04942ca0f89072891d95fe64eceab2996f9505b749862685ade1d1bfc74b35d48bf74452976a7f9139e88a1fff44d3d79952d8a33024ef1f103e3faa7b34ec16f4f7471ce6fca260cf1924626ff6b52e5473b4cc2c1009674dbd00bacfcf58a071cd07fe539b979cd954607b1a4c85ae3be08022c87c286d7478e3bb9a95ee8f96f7822424559861977aa5b82e2bdfbdd4a3e1208d61656fb98e30ab94113faee1016d7c22ffe4b9f4ee829955baababa3f7a3c5fb9a0a4b83cd45077e8efb13ce95229b530647e133b5cfdfd2004f8cd45f00c7dcafefeb2b44426be147f90ed298890861cef10de867196231a674265678cb07b30db1df9aaeff95a3c9b8d5d883d44925cf444fa68453d392bd554f4d60b2861b51d3838c07fdb4f13838c7a29aadefaf0733757846593618b33504bdc9202079355f80829603d8e3e44c6cb1a331beeb418ba086133275990478b6bc604989cc46dd7e9a35268c807a29aa0303fe3f6e14a862a462a4dd4502e983d328bd0fcd0938149ed0d274f468eaeb8621f6e20f341d4c1b6239071b8cae6cb2acae44635014e5df369cda1963e4e79bc79e92dc1032f9c5552571a10e666f8e0dc9584ecc229d15ff026f23705c57308b7b46b06fceec950708a0afa01bb757f96ea1aff26ffe94201263275de297e116789b076aeceef07e50aa180ddc7bd7d5a8e1339e84b4559a59bcdedf1c617b048ffb3cc5ff2cc1a1bf32e18655ff30f009c54cb06dc528371fb6b49d3363e6ef8dfef2c03dab20f833c27c63ea1ef8053e03592a16a9f2f329f68630f9a7ff2f2969f8c78d60dcdd6aaa49b948bb7c927668256785aebd5f52bdfa468c9159b351aaf74cfb1eda2a15286722c9899184905f8986904e898075137b26a43059abf4762d1d698075a32c6e417fa9c7d257ed95695d6076a887539d76367d56e4d785817b9e71584045fb178a01ebe63eff39cd2936f8b8a7e83f0de3c361c139bcd55989ba4ad7a892661224a40963ade43b0af045a7fe75c24615adcfe387e8b76ac42fe1ffb5d48375da23e44be3d9268ce0d863ab3a4d10b544a5bba7d042e18e6c7a42309190413dea1593b07687966233592f71190f87a909017c1c4b9203ef1c79d62f972d5151671d376b7006c438bc348b7d42575e7937416b0f8ae9e8c9de36b02f784e64f2bde179413bf8f19186df3f82a62d4694607239af93ab9f864c70b161d42aec54ad5598cf72f909a0306815df9d9d35c0a9518f5a9ea875cce7ac17ff7f71fe056fdf374d7553e0f117d89b751a9032ac1ad18bd5e64f4fbf7915e476c63c978f61c6d8750925d029a9078ebdab2305935b8b77e87085cec7534acae4387e0c3771529affc1574b271c0118d6326470cab7e28c52ed25019e6e914e8da22c0fccb3973f73edd46d7cb437ca3b01800ac04ae136a5d7d2cfb8f6dfcc83bb678e98c6428531c57006c3f66e80da8a8409cbc85d727dc19f663b6549262a8a9624a8f068cc1e3217a005634b09c291488ecef35765ddb7f37b2d9eb8e2e8aada87ca08849d1113b9867c199bc8c5c3f46d596dbe461f2d593b84c42b3ffd7b09b7cbab9408115bc4b3319920b4569267b75e5c00326758ec349afc544f0679a1e84aa3f09be3bdea985229f10b3d3ed06f3701b7ec4188686e8142b1003e28b118ee21b72bb34ca518f25441d0eb5f3fb4b830aad9ec8f2796457a454355e082881b187ff4fed41b91ad887e6cbd8734fa0262679f482e151e503efe2378208bcb9432269f530235c242b5872df983d82bdf48f2d15a47d4d810c8a6d7fcee841b3058898c19915bd0a05fc6a2e83a7bb29aff7c20e80ee73deadca4f5a05f0f4762a9fa9e59f98119577ce51f47aea18fe128d303da62418993705a7befacb036515811f1de95eceef0518bd34ecef7a574060fed5ed5c376fbc82251e7ab257990f9a7bcaf3d0a0eb4f818f1fa851082c83e3c0279a32a0146e5717f9209f2bbd3e3ac9e60e06baf529b4103eb4bf733b32e3a8ea4c22f971ac8c31c8a1831d155d412767b60cccddbe65a8008b811157bb10fc887bc821e9c506d88ee7b8e5c5b72f2624cf5258b497fb73dc8cb6aab0885afbe627360df91fe4c63d9265e8c747050164c128c433ed5b2e833b9b81a907b90f89385f00d21b7d7eae81d703f5866548d4944970892a8d9bf88884b4bca6b8d3c7f8740921108c1edafb768c8345f765255f4ab4c85421685d38595ec638668e0de94c929b1f3c4f78f9f5aa7b5d4ed814bc554566c835d32c896331b0dd44ebc1566164cfccbc206ef59a39d8edf538785bfe895acff201161ffbb40995ae97568f21ed93e5b16fc927bb936126bffb9ae6e75d174fa259a0377b2aab7df0fac1767170f5ea6a2b7b330177dc9e09e1be9d0055054aeaec4dd0d7bd5b851cda0484a35e62ac76d751498548724dc754ecf275dd1a2c7f2fac8537623c7181b4659e014bb598d6c5e537a0b402dd20f09cca24739a525afa96f14eef824fe56582f567bda478f8f6fc44439c04fdf056e380f76a2ebb4fc857d0b0af77a3a6ea9e798e8a1af9a612c3d0a44d46f8bf321e0b711419e04a39233165465edbff506b2ee0c523b858c4a925bc2c05dbf80fb7617b43d87bd61e2532aad60ab670b37222b5169421c9647b14bd1eff1d138bc4b0ea3947d6b1da229242708a889080900ad9e2210c36880c1f11dd9deba66c250ed6274cf92bc5ce3c48871572f6d20e3ec2606fd89bc75d019ad6067839c71d9b3a0d9aae5bda2cc610df3820a33a38b519de38154f2efe616cd948aa30cc183f991af60b7ff4f4e37adca414f8ca3a01c19724a86eabfdea8dd74e78c536924da607f9eb3f618111a9086596bc065ec02f4d155725aaa5aa08a9e2da2e6d1cffaccd594155a1e9e59d2dd22df356513ca71ce2bf42ec1979ebd255fe34632828b6fe3bd57c5de855ab67d5e373ccddff9a1d2f177977964600b895c0d419358b3a8911c2c08e318846d817f21d29314ead31a5edce7b22a51bec69c1c98739beafd51837c30becaa8594de288b6814a0031f7022cfdf05b56c02959bfffb47cf3f44ec97e9335c508a2bffe4826f6f34996e86222530c603b52dc54a73e5cd9d0ca7620bc302b259543b508e9471fbd44897cd58d78724ff40cf2cee13c7679934bfcd9b2cad458dd87dc5501c4c95bad937b7b89d510bae5404f3e072d461d7e8f8ec78b88b1e4b552b6e91697eafcd61ebc2f580cb0a9c78f5e3bdd8b7877fb542ec1e0f6fc9848d183a84650e1fa9312e8fa9d3bfcffedd53e3b8d601a3de5e5632d528fc48a041179d660ebb73c3264938787a91246f3e6111b18ec65bfe1ef940dce88a8d2de55349925c393f86addd53dc99367bc954aa3bde5193884a700dc29b653ccdc40a09f0669057692e9d5989ee526b89c90a600bb882d470e66226701ad092b7e54fb7b4b4824ca79da63dd7df96a9dea843b483ee880af0dc5f766c27b24bd7a025e02090ce8908ab7f5a8f90ae46d7021f32ecc6c8621b8c7c7c24b9265ae8fa775993922b4c98abccf51fb5b0d7ac185d28f931d9c43f29b18d620e6868a3bc70db7f1402f7059684a3ca314905f05c038dc54588cab3959ca9e2c48127b52c8b6596b990285ee82dccae73d3beec548d414053d334055b2101da5a7b9c23af5e4b75020c6d32efc8fb440d65c7868617199e25551245ed070e1ed89c1e65f7b208595eb572f78adfea44c1434755a04578d372548f2c767f7400fc63df753c2c91420011fb60a544cdd8575c608f8ca6957fae110aacf61eeb72579c489be69aa8551f2583c00a95a1144c17c027db02f6b0ce48d4a603ff277aec3622fced153c920c28d88dacf1fe06df2d32e8cf9aec0653f9434c997fbc3c9df2847cc484b671e54a21ed2b05e6b054e68ce37d1430b47519b179c94f4427737076fa9e180b44d15f233b35d25422a27482b03565633857a6a699a34ed3da14e17c8166b8bf4990676141cb88a8b482b3e2430da9f819da30ff650a14dc0b162865226231fd0be88a54577c585641682d1af1fedbb57b8a11161ef1d4b822660a8caf4a41fe9a4e6f545178e8f648c479ee6cff41d9a810b839e0d2191d77f4046b82b20eb861aa4d24d29069c51369c0a29a4e8b00bf0640257d07f6ddf16fc871c4a2a0aaba35f6bd8e19b15716c9cd562c0575555dfc85b5dd7fd046f0602ba793f11a4543660de6789df327a94c68a1d08a25f2742414331a60da65819bbaf93ab113df4c0d170b2129648480b8e5acfa09b086911a92d332ddc925ddb995836afc8937e673235917f04e8462725e8ec490ed3a4dee7561415ef0be5793fb59179484bfa06a71420db3183de6a18fd10d1acf1bdd79616cdb8952bf32d668d61484e3c4004ec5a4203daf1004b11f8b6253d47588eaede307acfa26ec77271d893a0e71738ce2d0179b7707717633940f46a26ab6148f963aba48b80300ab61c7bec8da82b192b433bf0592fcf49f6473ae9243b4bd2a11cf1cbe4c5d241c2e1f0375fa344c5b0935d866f3221c4d2689d03ba1765d5af956b6251da4949091d2a91fc1e45f6cbe751df5f39b30921d5a2f755745b7eb789be1e5ba34704b1fa4a7410504fd07a20c3228e0e4f15586896f3b387590e9820f12627025fc932977c9dd3240a1a76329ac344bccf701eda05d974da540572825dac553ccd8186b2cb52204c93cc676a8ed0356faabbbe083a260d6d87362695486654a618cd71089853b2f2423ae401c24850a8b45577c51fcf7affb72fb13265c3142d3f872a9c8985cda4993005503955527f0e8fb61da80c6fc57c43e824894f04659426f9a5fde4eb040e24f148b2efe1a35438f9df839023e37a2e7fe9e50cefc5bc621cc4caea9c2f2cadcb771755688f93b84f8b8648ed98a0b05c3bd7f7169d2bcebe6c7735891ea6e1af521382627d534f7eb42623551442e6c920e6cd8621c2ef47224a3f530d6f5ee61ded0b678ab61181586cb38d498b6fe52429868502257a00a9ce83de04345bdea21421f5140cad73a43be8e5bae249abc41413ef37a197738e47cbfea3899c2332f05a4e0efa3849e61fb2671107f13585c46ffd1ef1951bba8244a4c9e1e51d9ae6513d41926dd8fb7105d3702755c48ab72a0b26d16408806a1e86affa8ddd17a627e1dd4d24d35832e924bd6274d88bff7ccb9680b583df97643278bd8edaaedbd16a6183166fe9833ee0fb4770f1a52867ceba88c0947867f553b2795990b96bb5d4ec324c9551b247ed6861cb313cdc2e74e0240a4bc45cbf96ee2c9cd896d6ab42e7e6e50ffd8d7ebf3fae39f7abc42ab5f8435732334b22dc4564203cb568c3d7e923aed8b57f1d198c2fc6c1a64453edaa46f5fd96c949158025b39a1c4179bcdc9a883726cf5bf8cc8f97b312658a5075a5fe608fdeed594687c9bbfe489e8d36a88480d66ef3fa0d4507e67e0e2a89a827b1f5c0d081f89b665074c3d7bf109253116c41693aba4d9d9d8d3d8ccc5fb2f682b7f25cfd4c3fd028d8a6303d995c41478d24049c04e6a14488343e2c8e14e615546aa9aa1f61242d6e5467725187a0f53913c8d0fb892a4fffb4c16c095907f77069ca95f434a76007748513a833b3ef8c852e0a9d03e830b3d6bcc773128d5c06e1faef88b1adb7adad7e33fc802f0203fd022f8cf15462aa10cc2118d7ec16fdee0c733990f07b9dd8524d52b70deb364aabe68b8a5a2cf175c9b05d4f4d8396c8578ec1a95d36e6b958cb4f061983eba17aee73537b2c34e3a548554158aeb3f8c858bc045b088d30fc48140d67a9203b6e6ed4b1b29cbdf2abb0148b5245feef29e3a7a410203d9aa723d11c14c86e23fbdd0f2d48bb6b51cdd087262ddcd10d98b516c7417d076ec45ad2717a230941c3d6edbdd887bbe4e1ec014629df148f7619c00c888678d74d22a1968c5ee79e8d200aaa083fb134938406a0d70797fcdf6afa7c1ec1b124b4101674dc19cd7b6ff9c106e642e2d9f8635f4b4af9ff2a089199c5386abadc2dd309a25faae25f6b7bd3cb7cf54145546fab613fbdbfdef0eec57bbce4286f9e60bd2b88bce750a1f6330e9be29bcd7f258b06d787122ddc7d89e56444856f34ccabec492b0ace4804ebd05a41869554a3f890e648bd056ea5f54555eff7b0f1d3f6fbe1801b86943b3c63bc43cc0f00775ae396d69f3086c37d9f8b0ca42f9b6160700308559bb844825e98c02ab590384508245c3d6184c7feaac8df34208d8d675f385dc6af3e56e452b0a582452d93ce6beed61a218257510bc982797433a58077938a463a4a1c0ed2ed644132b728a617dfaa4fa2e246b0456a7ddf18d530e2fa462a755ecffa56a2674db2f5428180064f5fee020407aeca8c2f0e53d6f6d681938b42c5cfb1a429586398fc559ce2ce355400c40a8ee6e74d4683eab99a800c31e0accbdc1e9d3186ae7d1d7db517adbb7936ee0794c4989de729264b2e8ee0c79be37184d6fc5283e967b2c5a41e7ae2bb81bb030e4cf82bd3864a3469919c9fc866fd48fe147ab547526f57d4b7fc49f17b3f89c2b601c08c5b9773bed7b26afc9fb9bd91cf4c49558b709046b57c3fb345163df2df7d94a39bc42303ac1cf6999ef7a0ee8d402fc5bfc2c2612f6492caae7d3f22aa0af3d500e434c953d38bd18c29e8da239c9916a9e4f863d2a30d94b00c86fb154027df0be8e5de3a9e89bf66d4682fe1af105852033e418cfddeb3b059b603f90c35516dba2752dfd6efdee3e411ac683748edb95f175d68b55dee42e9584a410314890c58cd939f9d01cc559ddeba5ce68bb84f89fecaa0ed2813ca4318cca4d35f3abe2bf2a9b5742e856a76a274a9f06018b849c0aecc1e80b2d4cbed19e8a882366b8eeb9dd792e33b527197ddd69b1e9f165a684cfeaff38b72e517f633ec8c38dada750bdb8a12476e923588b9ac4873df69e98147c12e26ce03c32a8e43a007f91c0f884a75420e212c8f0c18426de07768a998b868e3de3b674de6276f4ed4e698639ae55208bd8b3c695413e8da0350bff4d38e6459034ccd5a0afd9259e32ddcac762563ccde12a8ff071ef52050d05effcff849407be31530af5cd8decf5220ca40b5d2ece408cf20ce5ba934ce873ec4b39d2b9b9f8623963fdd5044885687e33ea36611ccee6f5161598cbea9efc19920ba557e331e583bb17aeabc93a9ea2e551f8166894edd92cd1d4b9760140b8ac19983010d93d4bd62417f082c36a4d82f54ccd4e6ec5eeae906796ea6dd7492d8cc8f08a57e2a7f7ffec8c36de114c14eb0d50434899ca6a9b4cb354d2ebaab2665e16bcd7b3c92a2407a40273f7c63766c415a93b9b6b84da40de9d578111933922beb00be0417528678e80a7a6e028b128de5fcee9d29524e202f7976551bec6995044e47e9bad76796659656e75d8bb350f1ce2fd96e1b6e2f9dcc67a097919d6354f213cbc3120fac2340bb5ed88e716df7e699325ffc81fa1f8e48ec1d164e6695b4886cd498aaab46c2581560b00093df46ca0abcec9294e0aa6b94e54a53b6c66d6b9ee9afc04ddf6e12f104547b233b37078816c4e33c16627f573fedebc226924a0bd37b0a71509e9858a4d68faa8dbf60c3dff4de490c1404facd708b3a45480131f54115d56d8e080daca59f9e0a2b8da1eefd821f85c1eec13ea0a838cd9a371916df2c3c6f3ab20e9bba5bd3a473ba3abaf551c67986deef715fcbe17037d494b305f469a8cd6c859aed02bbcd4792b3f3bc05215ccd3da5a9ec52f26ccc3d84979aaa0b6d785221181dc167c0368f276baa5fc34ee39f02906d3bad86459300434b360b01d3cfe535c10998c8212bba685db02520b4c1451fdfcd2aa293a559c2c8ae661f40a9bf34707e66e0b113e0c6086581eb86dff3197d807ede2e08703c75a191a46afc5f1cd121c371e2de32cc603ee156063ccab7a53976fb1968dfe329d5c79a6d41a7ff610818bb6d0974c8b92ee3beb7dc708392780a0da0978bec1a1b6ec0a5b1167b994e32d9099e350e67fe8e809546deb36e2532ed043a921f6d5798af89e8d8bfcfa016dad87d5b264dd096a691fc7751106149b0252c70e6fa33b7deedff4d8793addfb8da5e2ec242ad1d9fd30582beb9e4d59f01a887d92db852be2319c382217aeabc78fe5a31657fd92f2fb0c2910edd49fc366c75ac831125ab5e2531d5072575185814af7c13ce68e702b52f278f125fa2b338a7704913e0c41fd9100c2c6e53a488a7bed8b50847303ec64b0ddf509a28d04f82fb082101d382397e9455c96725461f58719d412396c5ce85f8b4f15708a7c391aadf6969be8713991a74bc2d6d04f15734b732cd7713a6e1c921ac50331f60199b54a2c363d63674b00823edbf5c0f96be4fb9de38c59f6c9f17eaacf8902b4d30399a5e9f460e203549bbfb628dafe698602ca9954982886ff98ab1327e39eff6e7319ccb1cffb1fbef01a5ef584cbec6793e39e2f9a036dcae2f8aca1717a2ccc75dad8cfa47c9b16df7dd1eec80e7c1355f1c2af36eb75a1577e6af523e6ee9c28151695db97ad2c8317996b02ba50bd96d874e8c6b1fb6e914799b157dbc9b7b2bc8f307bf41863a951835b9a3fc56cf58b9482461adf67fb9126e6a4d3b8b78b01dd206d69b4abf12d3f04dd310d2c500f16d33fca651e58bed6ff46fa1b969e4b445db46842e0ceb48bb9ac6c89b467d25462e29de10620bb2505219da2f00a5c1233316776ff853b2520d39724428d491eda3200da33ab90d8efc4d73f4ad30944171dbe88b01d2d36e3347d034d849bf62c2aab491942267ef9c02aa2accc83b55a90008d3892c63aea0f9aa0016c49329e21f6726640546866c201780696608a53e45db7c8f895b5efa27b05d3a9eb4e79d9ff61b7edc7be02242085d369740dfd272ddcd0a84bd2f45891e517f670982bb69f07909218e3ba7d6a52fad0d57520b7751333abe206bd5122cc6aff0b230af7ff8a6169b971a635ae2c5d9c837985a1115cd993d03f2b737a47e0ed35d9b991593f5d74f142ab696686e7bf13dbbab6784265cd026d7e7f58fb83d83090a5998c2415f4dedc55d5eda683c7bc302f004467be1d858e15e9f9f2583f0bc9e6f0d7a606d2f45fcbd39afb9638043d221cabb741276b2b2e98dbdfe9cde0b1e7bbe5afc9148d5a6fca095dcdf2687d85b4a223ebbb054641a88fbb3208949291cbda92141a40b3e1dc7f469c6cb8b3fda249434473bcb7640ffe9da8e2e22807f1adb937850b42078af7801e3af4d229a6862b914c4391f256b9b6e2527008e4f355a2739c3a52dc1da0934141635420b2e06fbd781ef561e54d44daa536eb6874ecfc98416abece471286cbd8048fa28decf8b0725e4d99b67a3b04287da35536debafbd6077c623c399a458b3c000db6a10f75e8a40536a66ece577a95a39005954e93cb019390303f036ca7ae536369001c78da48b7fb538261d4a624a52f329c0708f157926eca7fc1dadb856b5f9aeb7fbbeaa0a7b10eaa141d689e91ef0d0708d5ee9bcc81b0f615b5e2d6771b7e7ff73afb55969837af92c7d4a70dcfbeddb5cd1d3297808aeb96fb3ad5f91d8c19f28c3b94f2d24fcb8e47e1f7f757dad18fc9f6070d918c7cb4144182be6df04cb83d4af89500a3948c09e5be90cb74b19f9f7cb70519f57e84d5cded9f3517a85809d201fbe02eca94203f7f34fbe1cc282fd31eda275d2d310b62f2bc679a06462d8b100a02ae8903523cd9d438d533faf1ce93d6cc000566af3da755b16ac53f5c0ac2067f7cae33766c324b064c7b08f76f3a43b285707e747657ee239f0b24f6ef332f2ae902bad7e9d99e117d0f3377ecafa733e75dc1cc2ef3cba1b76e9ed305fb325d567e4594185922e46a07223a9ec0c7b5f18dbc1aa0a4e924f1548ac7fde96d7536f668af6e83a5fe399842fe97bea8d1bbfc8a5844f9891b97f204161d279d433e913552b26ac712036939c805026d159afec28842fa4c6796e15b614f9a0e4f87c35ce17a89f3465eb3e28f079612a9bb07c5cd5e0f30f96946dffc129ce607a5a9f49fbad62b36e53b2301ed536f5ebcf595d857eb81fea8a43bda021edce089ae2fc57697b05ed3346f4ff69a0f69d349f089ee5ec70cd9bb5974dba105025c7254c26cba9d3c581507da4bfa6712981ed7eb42d72372561f060d336dc9e34f09ae407c16b8a8c773286b4d672ccd8b6b31a6349953798bb9322fe7faab3fd3c5c24ca973ea40742e226b17932465d29d622a7dc99e97cff7f6d0364492da66d23290b849c5d47d040801f3ed55d87f97d6c317dcda2e7c7ffa4b0b61f605244523dfb5e4f9e4ea9cd46d10e3d0f76bbb495538f2aaa1190663db5a10ddc403481c4c6dcfcc9d31a93b2fd2c330a162e1b69ae172f0a32f395c7298988da8eab5ed9aafc8dd21e80ad06dfb763a4f0a3ad28f9e643743713b8558394f8f451d6d3219cdb612c74f1353204a4111d27e798ab72a148066feae3f1aaa016a7bff4e3e94777920bda043c76713a993f5ad2e83ccf802b246c64914c1b338b22d0d62eb567f6e3e7c0117b8832b4b130bb56df93d2dfccc8b1b8d2c988c6c3284c9dd7d4168c1520c0f30daa56081229bf6a9ec79cfc3bcfd361aae70525676b46ef35741216ee4a694b3574fe1a898071cedfe9034f49cb0af77ca841146c8f4645c9f96ded15e5aa278f9e52b86a11434e4a68588d6bc78b072b67836093d5f93261ab100736c269a1ce92b32a2ab583905cff79aa6e5b238d7c712ee241512e7a78624ef84bf40c65b87ffcd89ff32495b3bc6fb80c105a3b2fad37cb01a62db5c6cbb8b46b5375c8ecc35fcb3ea1928ed7a9ed87baa105cddc67c56007a32624ebc2d02225adfa3d7f66e503b592cd3373d4cde24ed87ce15b6ac3678c0af8804eecb8c572810ad4689a2a1478e3c44d0836460a9bed48b6d3f072db78f92717fb65173a4a76af99ce26b1a6cf6bbdca4abd0c6ce56ab647247920761a0fd8056a086797ddb904891638e8b04e1272e0662fa8ba36cf524319d5226ba393b48d06f45ca9e7ceb0f0adab70e6f9ddf124409d9824dfc266de5ec6059f7ea7592e06d7dd059140b93852b45fadbaf4c0e4bf57fa293f5ddef66f0251de51d89f58588981fbf04e721c9bf093e2da177ca45a5ec445ad765dead2bff66846434b97d715b6b8c726b781ac7fb5c8a8b97d8bb9070de7501d597237366e68887667a6ced46196782f53f1cf588cb25512ef7f1b55633d15c73eda4bcb4c8778ec8170ab4eb385564bccbf514102e7c139bbe6748defc4eb643c12717844379d22895e0c51bbc1a9cf0f61aea6107a5bece50e4fd6ae30b19c2d1f568576fcb97cd75887c976f8cd34432b28b44f021ebfebeab74283c74d3fa597988f710959ae4077eb9334b255c179e334eb32633fe8cccab302a0946ded1cd18b323ea412f62727672d51ae978facdbeab11ff7b2f587932a44ffd67e3d1f159a9f88de6788619cc6b8c6719e6865730b6b165c6aaa12f1d0a2a9071110193b52a3df40db68a55e6b65a994c0b2b9f403776dd6d2e7a1592230f221072108a33e2df2fb3fdfd4671aa9856b42961eca2f7472324b8333cfa7ac8c72e93dc81d875995566fe0f6d8a50a7a8a0902ca423aacd91b774742af9f669348b4ca5abab3ef3aae643fcd27329d17557f199ad0a224fefe0d5c20c15eebb3af37396022f46f9b25c0defe3030d758f8ced6547dfd4f2ba99b59716cf2f469e9b538fe12a1787fd9c89687480fbd2e2bfb9a8d35cfac8fcc13a267c63632586aa28c3aa72d78885f0508178cca72b9563326d9bea29fa2b81f23a841bd2dce44fd41ec71ed24037c47347563480583986c05f965b6ccfe605d4dc431cda587f2e4f77141c279cdaa83c2a7c54e4a301680ac1016472fb7f40f6efe06ac8133fd0a04a5ec21badbeaab33da0117050452597f70c55b56495c3c3a3cf0b88eae70b9511f72569bbe8b811a2a07fa66ee284b1d61df9c3816ea4e650ec92f0cc791ef6b672be5155d8a91139c105bf61fd04a6722d258bdfa961ffe976cd710202c8f6e58c784657292af7dc5f476406b65c907e1ee1aefcb109089cab74b8679fbe79f476a2cd7b9d85b900433d03e615c7777df8f373da0410ee00371389d8e06e6ac16c9e4ba50c8a4a02fa9beaa07dc10bd87dc7f64c93954c99a8bdd77b7facadb6f03a643625c97b5a3563aaa5a9062232cff2ca5cc301616b6add7a400ccace30c0ad8412d7cde41b0a5d2c0c75475c7d65dd6d1cbd93d4ee99de5c52607e4fa7c536d8803fefcd2aab199c4d3dc7cad52e39414d4df83dd5f9efba5b974993d2ca83e3f3b3acbfeb26eb7628fe7656a634a7c9ce723bf2724756e3bca728fa0826fbf4679978ae9b81554fc8f70969d9a940c0c9d4ccd258c428b89446f21deeab6949f1b8d983a2f488a080a8e648668f6f0a79fc27a1e3d7bac65840e9a3de432f330548901f1554e888a281521def10bd8585cc1113e6e1a962687a57fff464bd933b88c1312be85eb536c7502b4aa62d18180bd6f41a67b282877de78b05e2b097f3d9c2809acf78bc453b6fa3eca3f90150fd360e091aaf16e134b6e7e53c9611f42709afcb400c803ce4b20c8a81339062990a1a5a01eb7ad7e204a57d8d3b4ff356b8c1992aa310506f0910f5dfcd425e678a9d8aec255c606886331091b7f6d114db43eea31c260fd1265b6359102b14869557a2e3a07884c12ab9beb4b287e195b75efe23ff5cb0a79cacec9b89e47ae87eed62137827f16981da2aaff897ac742debcbe1c1837b3ba1dd55546557c3b1abdc624143642d9a2d36f90c8e760685dd1c00b52f41c7a46a0d7973dff07a19c907e41c9226b032c24d8d8c4d4b36e3831a410c7cabaf75bd0521b94cc648090190bf5c0beaf9e9f85d1cd02ea2e84bdf21c5dbea08530ac3ef80efdf15e4aace80c0b2014c0c18935a3ce2c7b4a9ca73acc5d31910a978493813cce031bddf1b0c938a7778120e08d5221981828e2ccc35f5e246e6d5e6431663a24d608c2be329c0597cfa116011b5d39ca6336b00915f1d722a7f5860476ccaeb124c1de10372b7069468c5fcd4b8e5bbed0f46f4703b112fe78e2e1a7852804e747f3f1bfbe01227dd6f1767813f087b02b13e7afdc4564ad21070b9f16135341d977b49157539e829d1aacd02790b093ee34b4de6d754a4b9b75b00803b3895d09954e406800c1d6851850cf2c5ef5d7c404296be877ca0c72ac4d851db1a24b94993ff1d30745960670a0e10362f5e438155daaa576932f7064995bd025b332f7e4e66d77c323bb0e8f048f12a8e12cf6e958e3129a0a4646679f0c0d9127fc46cedb178133c96dbb8700cece349752133a6bdc291df10066b71939486d71c26622bb2d5cee8a7c2932205362443928e20c6b613b5712cd0a1d668a61810231968c7d0863fa1d1a3b963fc517c83414a3c476926153ac985030d148f2a32cae794cc950996f078f71f036deea373fa670173e9f23dc20b25a779dd39936c9f32fbb4a7f08a0354ffd63ec73182b311c78e44f6b4fd8d91e26e0e8fe83d6059c0b9520320591d40a0c174e8aac5b3c59f2ccecb45a4bf203549268a13764cd8061af52499ffcae31e56e1a541e031d1df80bae01bf3c5dd311b05f5c52f6c72e3aebc27052e3782ba8a96b4032eed8a8088c61d58e44c573683e53beb13e25e8286abe9af2159a1089a9fba2d231df7bc27c94d9d5bfeb3eee4328ccc29d73943f250e3c69f6322f8f15578d825abc2636c46139fcfbe5d6daed182663d53394d88e0c2331369cdab13e9fa86aaa0ebe2a243bfd0b40fc030e834b82471e2295e1b28a763606ac21635794edd82e119015c264677a7abe772b83732d4d53059b9ccde48230eb036a5fcd5d716a93aec90d4c4f85853849ba8f64122539019323ecd57bd1f7005634328ffc5b9fdb1d4f17abef8924860d62b25dbb04cd8af280b314a471acc762b272da273c8d549a5066bede41f1114bc7379862eb5c5cb0427cfd65da5a3b98a6cbcfeea9d6106df97f95b1f9e6bdf3cdeda88820e548a274de766f7585feeafea2b33a49299840044df2d46aa4238785082e73600eca3c9e7a7cc2fa3080c9fef712bc00944827d444bff6eb27a426c387853e8a5393e92e1ba180b386e68ea086ac66f4076669a7ba4481574336c7dd89391d9c6a5a23304d70ed40f80ace5cb5fc11cf3f53b1da9c9569d4cf91db17d9e90377dcd5ad860c4a8b13638f08400c2570d16dd4a90cd25241eeffec8a6bfaddd19e3142915dfbd8ac0c5c31375310709c4eb358e5c0346df86e1350bcb7eac4d88dcca90170d94231eb6a10113ad7695218274dd2d420f607635a7987261d165a0dc8cb18620ba7c3025775f0e26c99f436ef3fa9005990149ee941f5c2c4eb49f0b0bd820b7030202cda8954e55edcbc8f6930a75c467d7b71501bff864599e76e89fb801ffdefa5bd273ee07c57bb44db120e813ca872a6037296c73d0dd872c23f7f0775b190fe42e3f942fb4f75cc651acf9dd6126633ad577602e7fb6ca43910116835d4c52d64304a6db68faf775410a04ee6afd9683ca3bf0f07fe5ede696903df317f1e4c771e68f13afb5d9f01961ada3df12c9f361c7eea542127cf745996d3681ae3db1fa50842cf0175dcdd0daba9256c243e9131e82d8cee7a4fc04f6d459127a786b9a8fd0ae4f21a196d155eec4045059eba383dec728cbc4fcd39f033502a8436a3140f849aa2d89992c524a958d2f152f8690303139a127ddbe5c8b24e75d38c48cb47291b8b1c47a3248a4cc600777fa3f262d796d91f09ac82c8f57ac3b43ab97f8bc7e3c2dad010d69710ab57ff495e178a4dca65438e30f5e923b930e037d912516d9ba33454957d11f36b74ab2e78788ba1d60fbb9833c967320c2ac1ffa77a327f107c01d80fcdb2841937faf831921846c708e44103a326331b608a94d3334ef08ff04d2ccc533a6fa01b7ea8c8797d2ef4caf3bfe0b278f25dd7fc9f438bd37b03ee8e9f1b0073973f680f92adb3687a5ba706469aba114ff3cd5e775480e5cc4d7a722a45eeb97bfa1c989eebcaf8431d255e28154931622c1d621a011d324c0423c16d8a529ef79293fd57d48f71b8c33366ebc3a93e7c4368a5ff8b8f1da648c6aab732eae9f7088861081570c938c62ca44476934a016735e0c8fedf14de4af3a12e3522034566535bc25213c15945bbc5e9c2639f22091e48a3fd6b5f0e7cd0d4e599190c348cb45b047640f6129a8356efee11dfe77d7e070f3febd7f542f55c1d33153f22942fbb0068b4911b3181b80c0e44b43e2bb5a72133fc5fa9eb68c5fd5a057a700f7edd93408459472967168962de1bc8591dda5455ba83406f414e91134fe9057c83663be44141961b41ed28e280490ef371ae94689a75bd9b8ca5716926f666508a19d2bedc00914ccb04c75fd8ff1c71a3f44a6ee483e064713b59da72ece49a5662283619147d1435230a27ae0b3e04fe05a32d86cd55f292b3e68a10565792d4731ffdc5a45acb73feaf9f4d3777298fb7b81e3600d1d95fe81ab31cae3515097ba3605b239b905e0fc1d7627f3481c5a1ad4bd28a1ca20987a9a502d1ee2a0fb7f3f097bf45d4b74268e4fbc577a3f69d013e3b7eeec7e6485cf854598199177e5717f8b0c4d7da227f5f2ee4e5b30b0924299539d9970470a06f8fd1dba222f83e13be9975b7f3b860de3c51a5c82b06be6f0c34a5f0f5174521846046b94166a674e775fdc751dae3eef48f4bd2f019d7dd364719813e71d43559b50c793db9a396fdecb583c2dca9ff87243b48d8816e5e2cd31e5c48613f82215d5c2895d7cd8648021c63525e096cf1601792c8f3ef84e5abec2699102299183e7542b87dd59a8db98c42216cbec769a4351eb0840bc19a194a016de7928f2fa8b21e7d034866056bbaf0c2f2dad1e5ccd4d38a3fc9ba6c02e6d77f3e540518daea63d64252ee6f82fc3d9f7c3547c445136f313f737da02cb87658cbb705f285591d86570f713f7ac96e2aa0538938221ba3c40b9cc2e675ae99f390456c7acc377dec22fb1f07a14179af21f104d1e2bf54e21c35153436ad274f64f2316afe0fe515fe428d622826cbc5e393b1493c619b72a3031ce470bf188733145c81f64c85ff823b3e06309d918305e2725f545bcee105dc3309141a4dc390e3a155c5a35817d4bfaff7925f054b295ec98e2bf8b91e822a602b43d59e4767e051d111b967bd6ba415caec297a4eba9f549aae941add0bfac8d79fcf05b3b25ee9a3763c35a051296c46c07b21a214f7e6b31f5908ee97ae2ce670dc05298244ed70bcb0f557198737c3f3e1d13b80f80dd38cbb518c868596782a0bdcca0428d5839026b19657b29fd568646b4fa0e8082cb5db6fac5333bb81f16ac160ae05a3f274314e37156985baa1089f7e6b02b9737b5e24781f28101a595a33f42b3fc6df36f928b131f8654ff48c1547975902336c43ace779fa8c5e5294b9493fec3602773456e2a55698b3cb8bb5e3f37c68dd5b1b4383048b6a5a1675e7b619701ec92f77b7bf4ede3972db61fdf08541e0285a707c927858856911b12eab1f30a2507fb4f508bc7c7f4e0932e377af21d789c623c7f141474627b3f002303bc749aa7e80496e36fb43bf0d242681da6bf583f634a079929cd01a31a075eccc566786e63882dc30dd3e05bca3dc973a66d4dd6cbe65eebfbc6427957bb90c69157f203f220b449e1e88eaccc88a3b8ac13f49ee8ea8669e1441407a37aec0e5fd1a52575750ab230789cd93cc35080fcadcf39215933b5a332c210b6e0a426d23af2116d6d91e627e76e0753a5de68f105818cb65ba5ecb4ee01176d61126130caf8a55657d7c2533a9f45555ea184d1e8b5b519789cd0e8a511cc0e972694d2f3768370d5b9dc42d6487fc82d465c1d500476bf6a48d5b1d1070c4711619814f8d5e63b7d1cfa0317c094e7af79819150c212f34708b385114af91ad6caacf37d22ba668ade4322d2fc65d8c5009c806538ea384ab8668fb63c5589156d6177eaf61e84d2caaa098c1e2609bac82cfa266d267e61862d79a061aa04e096b8d1c925daedfdf492df2be18c14b90d6e7be07d97ee81e7bd3debe5a58d714a2a7305fe278a1b2581c0122a3bcf7653d1753739bb1639ae89e907b8e9ff5d0a4ec43277269f8a250ea42d6c0cc4c613810e93bf849550e428610d31386b5483417dc0fb539c0b4947131ffbaffb9fac35eb04b1e970e82f13ac03b85383f258ab84671ef1f4d8297e781f313f3798456efff841aba6e98c3f6088a12a8fcbfda17e6afcb6193d8f2a37f8a51a37615aad300f4dcee4a78c09d352890560456b9b43d5a060b2b01cf9b7b2f290d524dee7532c04991e5f79d40682aa1e503622baf4ddf7e2cb63e1da21bdf7c38daf276652d6fdaaacc7b075b15c4c9a95ff188ac751405550afb7e069109977eddb9f09d60457a74a2b558984e784d883fa13046211ff3536b392f4497ea962d243df005a7e612aca03c8c803160f0e2d7dce07f30cc68edb54517f0069aa60052317dd4758abf02b038ae8f2336a927b653327d800912fada8f32a6145b608bf7941e9b08bb69f78974f613d2dc3a9d21c803604ba3313dd298c5272128388b8564fe6b331a3ad733ce7d9ec20c607ae91065e028a490cec499916b753a30ea6ddf10ef862f74088a0779ce349f5e24e1667e0651f3e9cad2628059a6ce9d8602f8d11bb9b40dc78186d32dfc1e414eea91853fb361d88a62113a902cf9022d353503713d084847705334b817ad7f6553a69950265bb3be5c03790e02064d755a2a35825be96f1a0b151231bfd645c1ae6f1064ed3c96a56fd043ea33ae3f860253108c42a4215500a2b748062546a2f16a18ad602ce76a7c73a5f37b888298dd94048aa67454f8e0fbe25ced7b78a43b3d41ebc6fb1ac896eb3f9059a39e50057e5b4960440fccdedf1200679c9571004f0e2efed124db1e9a65ff9ce28503cd0b5bbc9b5690a29776581f60c03a570f1bfefd8c994258d0509d7a16d213a2e73a7333b42e5e1e21aa18ef77fb5d23ea0b2bec3a2e3c5f790a32877c7ff2ec5de68de142b6387342b2429af751b1dbe3fbbc87ed7fb6b802f284444e646828c3de0ffc98f7f9f4a427a5ed85671d87f061e0baa4c8339c496030c04e50bec020466a21a00fafad9f43181352ee8f3286cfbbc2a3249a6d5c010097a912a9087b76d89d505a88dcf769656497687063b343fb4a69a45236f7c2b8bda2ee40776adeb98c8bd68a4c4309e9b3fbb93cc6237397d11e5dd746b55c5162306baea00f1dd282b03606122fa8f57e02db51b455719de12324b64bb9eda76c90ed93d560c7c3d017383fb0459e94d982e5808287d241305bf774daa987f3db895da027042870a2da9be6a199860357764ce5fdb5415c0c617de03b928d9986252b53fe0491681a8efffcd5030c40d490724a57ac4d6135d0da379ad2a4c08e0e842d5a7c67e4c828f17ba2531f5328d10a6baf47f4b0c49578c5359c1a658f0bc2b9fc27db46a21f5b2a4e7bbb793a7311a602332c73ec959994e326ef40622c77451cc4044e6c6c1ac0fc945a64c1381cc2fc6a6b2af9b7f14b8c255c4c914928ff1309b6412696efe57b85041d620a7c686956db25bb86a1aee141bc26d5ae5d76a32515aedca78f7db3a4b2fac646d5b1acbb85bbe06947eb8aac821ad20b45327d77712c7f12481508250ee0e84a419e007407ed</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Robot</category>
        <category>ROS</category>
        <category>ros_control</category>
      </categories>
      <tags>
        <tag>ROS</tag>
        <tag>ros_control</tag>
      </tags>
  </entry>
  <entry>
    <title>configure_file</title>
    <url>/2024/09/15/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/%E8%84%9A%E6%9C%AC%E6%8C%87%E4%BB%A4/configure_file/</url>
    <content><![CDATA[<h1 id="指令格式"><a href="#指令格式" class="headerlink" title="指令格式"></a>指令格式</h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">configure_file</span>(&lt;input&gt; &lt;output&gt;</span><br><span class="line">               [NO_SOURCE_PERMISSIONS | USE_SOURCE_PERMISSIONS |</span><br><span class="line">                FILE_PERMISSIONS &lt;permissions&gt;...]</span><br><span class="line">               [COPYONLY] [ESCAPE_QUOTES] [@ONLY]</span><br><span class="line">               [NEWLINE_STYLE [UNIX|DOS|WIN32|LF|CRLF] ])</span><br></pre></td></tr></table></figure>

<p>configure_file 主要作用：</p>
<ul>
<li>将 <code>&lt;input&gt;</code> 文件内容复制到 <code>&lt;output&gt;</code></li>
<li>根据参数规则，替换 <code>@VAR@</code> 及 <code>$&#123;VAR&#125;</code> 变量</li>
</ul>
<p>此外，会对 <strong>cmakedefine</strong> 进行替换</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cmakedefine VAR ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 被替换为</span></span><br><span class="line"><span class="comment">#define VAR ...  </span></span><br><span class="line">或</span><br><span class="line">/* <span class="comment">#undef VAR*/</span></span><br></pre></td></tr></table></figure>

<p>取决于是否在 CMake 中将 VAR 设置为任何未被 if() 命令视为 false 常量的值。即：cmakedefine 会根据变量是否为真来变换。</p>
<p>与 <em><code>#cmakedefine VAR ...</code></em> 形式不同，在 <em><code>#cmakedefine01 VAR</code></em> 形式中，VAR 本身将扩展为 VAR 0 或 VAR 1 而不是被赋值 … 因此：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cmakedefine01 VAR</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 将被替换为</span></span><br><span class="line"><span class="comment">#define VAR 0</span></span><br><span class="line">或</span><br><span class="line"><span class="comment">#define VAR 1</span></span><br></pre></td></tr></table></figure>



<p><em><code>#cmakedefine01 VAR ...</code></em> 形式的输入行将扩展为 <em><code>#cmakedefine01 VAR ... 0</code></em> 或 *#<code>cmakedefine01 VAR ... 0</code>*，这可能会导致未定义的行为。 </p>
<p>3.10 版中的新功能：结束行（#undef 注释除外）可以在 # 字符和 cmakedefine 或 cmakedefine01 单词之间使用空格或制表符进行缩进。 此空白缩进将保留在输出行中：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  cmakedefine VAR</span></span><br><span class="line"><span class="comment">#  cmakedefine01 VAR</span></span><br><span class="line"></span><br><span class="line">若定义了 VAR, 则将被替换为：</span><br><span class="line"><span class="comment">#  define VAR</span></span><br><span class="line"><span class="comment">#  define VAR 1</span></span><br></pre></td></tr></table></figure>

<p>如果输入文件被修改，构建系统将重新运行 CMake 以重新配置文件并再次生成构建系统。生成的文件会被修改，并且只有在其内容发生更改时才会在后续 cmake 运行时更新其时间戳。</p>
<h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a><strong>参数</strong></h1><ul>
<li><strong>input</strong>：input 文件路径。相对路径是根据 CMAKE_CURRENT_SOURCE_DIR 进行处理。 路径必须是文件，不能是目录</li>
<li><strong>output</strong>：输出文件或路径。相对路径是根据 CMAKE_CURRENT_BINARY_DIR 进行处理</li>
<li><strong>NO_SOURCE_PERMISSIONS</strong>: V 3.19 新增。不保留  文件的权限。默认为 644(即: -rw-r–r–)</li>
<li><strong>USE_SOURCE_PERMISSIONS</strong>: V 3.20 新增。保留  文件的权限。当不指定三个权限相关参数时，默认执行改选项</li>
<li><strong>FILE_PERMISSIONS</strong> : V 3.20 新增。忽略  文件的权限，并设置为 permissions 指定的权限</li>
<li><strong>COPY</strong>: 仅拷贝  文件的内容到  文件，不进行变量替换</li>
<li><strong>ESCAPE_QUOTES</strong>: 使用反斜杠来进行转义</li>
<li><strong>@ONLY</strong>: 限制替换，仅替换 @VAR@ 变量，不替换 ${VAR} 变量</li>
<li>**<code>NEWLINE_STYLE &lt;style&gt;</code>**：指定  文件的新行格式，如：Unix 中使用 <code>\n</code>，windows 中使用 <code>\r\n</code></li>
</ul>
<p>注意: <strong><code>COPYONLY</code> 和 <code>NEWLINE_STYLE</code> 冲突，不能同时使用</strong>。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h2 id="例一"><a href="#例一" class="headerlink" title="例一"></a>例一</h2><p>假设源码目录中包含 foo.h.in 文件：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cmakedefine FOO_ENABLE</span></span><br><span class="line"><span class="comment">#cmakedefine FOO_STRING &quot;@FOO_STRING@&quot;</span></span><br></pre></td></tr></table></figure>

<p>CMakeLists.txt 中使用 <code>configure_file</code> 来配置该头文件：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">option</span>(FOO_ENABLE <span class="string">&quot;Enable Foo&quot;</span> <span class="keyword">ON</span>)</span><br><span class="line"><span class="keyword">if</span>(FOO_ENABLE)</span><br><span class="line">  <span class="keyword">set</span>(FOO_STRING <span class="string">&quot;foo&quot;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"><span class="keyword">configure_file</span>(foo.h.in foo.h @ONLY)</span><br></pre></td></tr></table></figure>

<p>若 <code>FOO_ENABLE</code> 设置为 ON，则输出的 foo.h 内容为：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* #undef FOO_ENABLE */</span></span><br><span class="line"><span class="comment">/* #undef FOO_STRING */</span></span><br></pre></td></tr></table></figure>



<h2 id="例二"><a href="#例二" class="headerlink" title="例二"></a>例二</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(CMAKEDEFINE_VAR1 <span class="number">1</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKEDEFINE_VAR2 <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(DEFINE_VAR1 <span class="number">1</span>)</span><br><span class="line"><span class="keyword">set</span>(DEFINE_VAR2 <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">configure_file</span> (</span><br><span class="line">  <span class="string">&quot;$&#123;PROJECT_SOURCE_DIR&#125;/Config.h.in&quot;</span></span><br><span class="line">  <span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;/Config.h&quot;</span></span><br><span class="line">  )</span><br></pre></td></tr></table></figure>

<p>Config.h.in 内容为：             </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * cmakedefine 会根据变量的值是否为真（类似 if）</span></span><br><span class="line"><span class="comment"> * 来变换为 #define VAR ... 或  #undef VAR </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#cmakedefine CMAKEDEFINE_VAR1 @CMAKEDEFINE_VAR1@</span></span><br><span class="line"><span class="meta">#cmakedefine CMAKEDEFINE_VAR2 @CMAKEDEFINE_VAR2@</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEFINE_VAR1 @DEFINE_VAR1@</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEFINE_VAR2 $&#123;DEFINE_VAR2&#125;</span></span><br></pre></td></tr></table></figure>

<p>输出 Config.h 内容为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> CMAKEDEFINE_VAR1 1</span></span><br><span class="line"><span class="comment">/* #undef CMAKEDEFINE_VAR2 */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEFINE_VAR1 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEFINE_VAR2 0</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编译工具</category>
        <category>CMake</category>
        <category>脚本指令</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>configure_file</title>
    <url>/2024/09/15/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/%E8%84%9A%E6%9C%AC%E6%8C%87%E4%BB%A4/file/</url>
    <content><![CDATA[<p>文件操作命令。专门用于需要访问文件系统的文件和路径操作。 </p>
<p>对于其他仅处理语法方面(syntactic aspects)的路径操作，请查看 <code>cmake_path()</code> 命令。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reading  </span></span><br><span class="line"><span class="keyword">file</span>(READ &lt;filename&gt; &lt;out-var&gt; [...])  <span class="comment"># 从&lt;filename&gt;中读取内容</span></span><br><span class="line"><span class="keyword">file</span>(STRINGS &lt;filename&gt; &lt;out-var&gt; [...])  <span class="comment"># 解析&lt;filename&gt;中的ASCII字符串列表</span></span><br><span class="line"><span class="keyword">file</span>(&lt;HASH&gt; &lt;filename&gt; &lt;out-var&gt;)  <span class="comment"># 计算&lt;filename&gt;内容的加密hash</span></span><br><span class="line"><span class="keyword">file</span>(TIMESTAMP &lt;filename&gt; &lt;out-var&gt; [...])  <span class="comment"># 计算&lt;filename&gt;修改时间的字符串表示时间</span></span><br><span class="line"><span class="keyword">file</span>(GET_RUNTIME_DEPENDENCIES [...]) <span class="comment"># 递归地获取给定文件所依赖的库列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing  </span></span><br><span class="line"><span class="keyword">file</span>(&#123;WRITE | APPEND&#125; &lt;filename&gt; &lt;content&gt;...)  <span class="comment"># :将&lt;content&gt;写入&lt;filename&gt;文件</span></span><br><span class="line"><span class="keyword">file</span>(&#123;TOUCH | TOUCH_NOCREATE&#125; [&lt;<span class="keyword">file</span>&gt;...])  <span class="comment"># 如果&lt;file&gt;不存在，则创建一个不包含任何内容的&lt;file&gt;</span></span><br><span class="line"><span class="keyword">file</span>(GENERATE OUTPUT &lt;output-<span class="keyword">file</span>&gt; [...])  <span class="comment"># 为当前CMake Generator支持的每个构建配置(build configuration)生成一个输出文件</span></span><br><span class="line"><span class="keyword">file</span>(CONFIGURE OUTPUT &lt;output-<span class="keyword">file</span>&gt; CONTENT &lt;content&gt; [...]) <span class="comment"># 使用CONTENT给出的输入生成一个输出文件，并替换其中包含的@VAR@或$&#123;VAR&#125;变量值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Filesystem  </span></span><br><span class="line"><span class="keyword">file</span>(&#123;GLOB | GLOB_RECURSE&#125; &lt;out-var&gt; [...] [&lt;globbing-expr&gt;...])  <span class="comment"># 生成与&lt;globbing-expr&gt;匹配的文件列表</span></span><br><span class="line"><span class="keyword">file</span>(<span class="keyword">MAKE_DIRECTORY</span> [&lt;dir&gt;...])  <span class="comment"># 根据需要创建给定的目录及其父目录</span></span><br><span class="line"><span class="keyword">file</span>(&#123;<span class="keyword">REMOVE</span> | REMOVE_RECURSE &#125; [&lt;files&gt;...])  <span class="comment"># 删除指定文件</span></span><br><span class="line"><span class="keyword">file</span>(RENAME &lt;oldname&gt; &lt;newname&gt; [...])  <span class="comment"># 文件/目录重命名</span></span><br><span class="line"><span class="keyword">file</span>(COPY_FILE &lt;oldname&gt; &lt;newname&gt; [...])  <span class="comment"># 文件拷贝.不支持目录拷贝.符号链接被忽略</span></span><br><span class="line"><span class="keyword">file</span>(&#123;COPY | <span class="keyword">INSTALL</span>&#125; &lt;<span class="keyword">file</span>&gt;... DESTINATION &lt;dir&gt; [...])  <span class="comment"># 将文件、目录和符号链接拷贝到目标文件夹</span></span><br><span class="line"><span class="keyword">file</span>(SIZE &lt;filename&gt; &lt;out-var&gt;)  <span class="comment"># 获取文件大小</span></span><br><span class="line"><span class="keyword">file</span>(READ_SYMLINK &lt;linkname&gt; &lt;out-var&gt;)  <span class="comment"># 查询符号链接&lt;linkname&gt;并将其指向的路径存储在&lt;out-var&gt;中</span></span><br><span class="line"><span class="keyword">file</span>(CREATE_LINK &lt;original&gt; &lt;linkname&gt; [...])  <span class="comment"># 创建指向&lt;original&gt;的链接&lt;linkname&gt;</span></span><br><span class="line"><span class="keyword">file</span>(CHMOD &lt;files&gt;... &lt;directories&gt;... PERMISSIONS &lt;permissions&gt;... [...])  <span class="comment"># 为&lt;files&gt;和&lt;directories&gt;指定权限</span></span><br><span class="line"><span class="keyword">file</span>(CHMOD_RECURSE &lt;files&gt;... &lt;directories&gt;... PERMISSIONS &lt;permissions&gt;... [...]) <span class="comment"># 递归修改权限</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Path Conversion  </span></span><br><span class="line"><span class="keyword">file</span>(REAL_PATH &lt;path&gt; &lt;out-var&gt; [BASE_DIRECTORY &lt;dir&gt;] [EXPAND_TILDE])  <span class="comment"># 获取现有文件或目录的绝对路径,并解析符号链接</span></span><br><span class="line"><span class="keyword">file</span>(RELATIVE_PATH &lt;out-var&gt; &lt;directory&gt; &lt;<span class="keyword">file</span>&gt;)  <span class="comment"># 获取从&lt;directory&gt;到&lt;file&gt;的相对路径</span></span><br><span class="line"><span class="keyword">file</span>(&#123;TO_CMAKE_PATH | TO_NATIVE_PATH&#125; &lt;path&gt; &lt;out-var&gt;) <span class="comment"># 将native &lt;path&gt;转换为正斜杠(/)的cmake-style路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Transfer  </span></span><br><span class="line"><span class="keyword">file</span>(DOWNLOAD &lt;url&gt; [&lt;<span class="keyword">file</span>&gt;] [...])  <span class="comment"># 下载指定的&lt;url&gt;到本地的&lt;file&gt;</span></span><br><span class="line"><span class="keyword">file</span>(UPLOAD &lt;<span class="keyword">file</span>&gt; &lt;url&gt; [...]) <span class="comment"># 上传本地的&lt;file&gt;到指定的&lt;url&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Locking. 如果不存在DIRECTORY选项，则锁定由&lt;path&gt;指定的文件，否则锁定&lt;path&gt;/cmake.lock文件  </span></span><br><span class="line"><span class="keyword">file</span>(LOCK &lt;path&gt; [...])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Archiving  </span></span><br><span class="line"><span class="keyword">file</span>(ARCHIVE_CREATE OUTPUT &lt;archive&gt; PATHS &lt;paths&gt;... [...])  <span class="comment"># 用&lt;paths&gt;中列出的文件和目录创建指定的&lt;archive&gt;文件</span></span><br><span class="line"><span class="keyword">file</span>(ARCHIVE_EXTRACT INPUT &lt;archive&gt; [...]) <span class="comment"># 提取或列出指定的&lt;archive&gt;的内容</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>编译工具</category>
        <category>CMake</category>
        <category>脚本指令</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>configure_file</title>
    <url>/2024/09/15/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/%E5%9F%BA%E7%A1%80%E6%8C%87%E4%BB%A4/properties%E5%B1%9E%E6%80%A7/</url>
    <content><![CDATA[<p>[target properties</p>
<p><a href="https://cmake.org/cmake/help/latest/manual/cmake-properties.7.html#target-properties"></a></p>
<h1 id="SET-TARGET-PROPERTIES"><a href="#SET-TARGET-PROPERTIES" class="headerlink" title="SET_TARGET_PROPERTIES"></a>SET_TARGET_PROPERTIES</h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置目标属性。可使用任意想要的 Properties 键值对，然后使用</span></span><br><span class="line"><span class="comment"># get_property/get_target_property 获取这些属性。</span></span><br><span class="line"><span class="keyword">set_target_properties</span>(&lt;targets&gt; ...</span><br><span class="line">                      PROPERTIES &lt;prop1&gt; &lt;value1&gt;</span><br><span class="line">                      [&lt;prop2&gt; &lt;value2&gt;] ...)</span><br></pre></td></tr></table></figure>

<p>常用属性包括：</p>
<ul>
<li><code>CXX_STANDARD/C_STANDARD</code> : 设置 C&#x2F;C++ 版本</li>
<li><code>CXX_EXTENSIONS/C_EXTENSIONS</code> : 设置是否启用 C&#x2F;C++ 标准库扩展</li>
<li><code>OUTPUT_NAME</code> : 设置生成的文件的名称</li>
<li><code>RUNTIME_OUTPUT_DIRECTORY</code> : 设置文件运行时的输出目录  </li>
<li><code>INCLUDE_DIRECTORIES</code> : 设置目标的包含目录</li>
<li><code>COMPILE_DEFINITIONS</code> : 为目标设置编译时宏定义</li>
</ul>
<h1 id="GET-TARGET-PROPERTY"><a href="#GET-TARGET-PROPERTY" class="headerlink" title="GET_TARGET_PROPERTY"></a>GET_TARGET_PROPERTY</h1><p>从 target 获取属性。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET_TARGET_PROPERTY</span>(&lt;VAR&gt; <span class="keyword">target</span> property)</span><br></pre></td></tr></table></figure>

<p>该属性的值存储在变量 <code>&lt;var&gt;</code> 中。如果没有找到目标属性，则行为取决于它是否被定义为 <code>INHERITED</code> 属性(参见 <a href="https://cmake.org/cmake/help/latest/command/define_property.html#command:define_property">define_property()</a>)。非继承属性将 <code>&lt;var&gt;</code> 设置为 <code>&lt;var&gt;-NOTFOUND</code>，而继承属性将按照 <code>define_property()</code> 命令的描述搜索相关的父范围，如果仍然无法找到该属性，则将 <code>&lt;var&gt;</code> 设置为空字符串。</p>
<p>使用 <code>set_target_properties()</code> 设置 target 属性值。属性通常用于控制如何构建 target，但有些则用于查询 target。该命令可以获取到目前为止创建的任何 target 的属性。target 不需要在当前的 CMakeLists.txt 文件中。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET_TARGET_PROPERTY</span>(CAT_CUTIFIER_PUBLIC_HEADER_DIR CatCutifier INTERFACE_INCLUDE_DIRECTORIES)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编译工具</category>
        <category>CMake</category>
        <category>基础指令</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>find</title>
    <url>/2024/09/16/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/%E8%84%9A%E6%9C%AC%E6%8C%87%E4%BB%A4/find/</url>
    <content><![CDATA[<h1 id="FIND-PATH"><a href="#FIND-PATH" class="headerlink" title="FIND_PATH"></a>FIND_PATH</h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_path</span> (&lt;VAR&gt; name1 [path1 path2 ...])</span><br><span class="line"><span class="keyword">find_path</span> (</span><br><span class="line">          &lt;VAR&gt;</span><br><span class="line">          name | NAMES name1 [name2 ...]</span><br><span class="line">          [HINTS path1 [path2 ... ENV var]]</span><br><span class="line">          [PATHS path1 [path2 ... ENV var]]</span><br><span class="line">          [PATH_SUFFIXES suffix1 [suffix2 ...]]</span><br><span class="line">          [DOC <span class="string">&quot;cache documentation string&quot;</span>]</span><br><span class="line">          [NO_DEFAULT_PATH]</span><br><span class="line">          [NO_PACKAGE_ROOT_PATH]</span><br><span class="line">          [NO_CMAKE_PATH]</span><br><span class="line">          [NO_CMAKE_ENVIRONMENT_PATH]</span><br><span class="line">          [NO_SYSTEM_ENVIRONMENT_PATH]</span><br><span class="line">          [NO_CMAKE_SYSTEM_PATH]</span><br><span class="line">          [CMAKE_FIND_ROOT_PATH_BOTH |</span><br><span class="line">           ONLY_CMAKE_FIND_ROOT_PATH |</span><br><span class="line">           NO_CMAKE_FIND_ROOT_PATH]</span><br><span class="line">         )</span><br></pre></td></tr></table></figure>

<p><code>&lt;var&gt;</code> 变量用于存储搜索结果。若未找到，则结果为 <code>&lt;var&gt;-NOTFOUND</code></p>
<h1 id="FIND-PACKAGE"><a href="#FIND-PACKAGE" class="headerlink" title="FIND_PACKAGE"></a>FIND_PACKAGE</h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span>( &lt;package&gt; [version] [EXACT] [QUIET] \</span><br><span class="line">    [MODULE][[REQUIRED|COMPONENTS] [components...]]    \</span><br><span class="line">    [OPTIONAL_COMPONENTS components...][NO_POLICY_SCOPE])</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>该函数会设置 <code>&lt;package&gt;_FOUND</code> 变量来指明是否找到该 。若找到了指定 package，则会设置该 package 的相关变量，通过这些变量及相应的 <a href="https://cmake.org/cmake/help/v3.0/manual/cmake-buildsystem.7.html#imported-targets">Imported Targets</a> 可获得该 package 的相关信息。</p>
<p>参数说明：</p>
<ul>
<li><strong>QUIET</strong> 选项将会关闭包未找到时的警告信息；</li>
<li><strong>REQUIRED</strong> 选项表示：如果包未找到，则 cmake 的过程会终止，并输出警告信息；</li>
<li><strong>EXACT</strong> 选项表示版本号必须精确匹配；</li>
<li><strong>COMPONENTS</strong> 选项(或未指定 REQUIRED 时)表示可以列出一些与包相关的部件清单；</li>
<li><strong>version</strong> 参数为版本信息，格式为: <code>major[.minor[.patch[.tweak]]]</code></li>
</ul>
<h2 id="module-与-config-模式"><a href="#module-与-config-模式" class="headerlink" title="module 与 config 模式"></a>module 与 config 模式</h2><p>find_package 在搜索 package 时，有两种模式：”<strong>Module</strong>“ 模式和 “<strong>Config</strong>“ 模式</p>
<img src="/2024/09/16/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/%E8%84%9A%E6%9C%AC%E6%8C%87%E4%BB%A4/find/image-20240916112611108.png" class="" title="image-20240916112611108">

<ul>
<li><p><strong>Module 模式</strong>：该模式下，cmake 搜索所有名为 <strong>Find.cmake</strong> 的文件（例如：FindProtobuf.cmake）。这些文件的路径由 <strong>CMAKE_MODULE_PATH</strong> 变量指定。若找到该文件，则读取并处理。该模式负责查找 package、检查版本并生成必要的信息。许多模块都只提供了有限的信息，而没有版本化相关的信息。<strong>若未找到任何模块，且未明确指定 MOUDLE 选项，则进入 Config 模式</strong></p>
</li>
<li><p><strong>Config 模式</strong>：完整的 Config 模式的命令格式为：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(&lt;package&gt; [version] [EXACT] [QUIET]</span><br><span class="line">       [REQUIRED] [[COMPONENTS] [components...]]</span><br><span class="line">       [CONFIG|NO_MODULE]</span><br><span class="line">       [NO_POLICY_SCOPE]</span><br><span class="line">       [NAMES name1 [name2 ...]]</span><br><span class="line">       [CONFIGS config1 [config2 ...]]</span><br><span class="line">       [HINTS path1 [path2 ... ]]</span><br><span class="line">       [PATHS path1 [path2 ... ]]</span><br><span class="line">       [PATH_SUFFIXES suffix1 [suffix2 ...]]</span><br><span class="line">       [NO_DEFAULT_PATH]</span><br><span class="line">       [NO_CMAKE_ENVIRONMENT_PATH]</span><br><span class="line">       [NO_CMAKE_PATH]</span><br><span class="line">       [NO_SYSTEM_ENVIRONMENT_PATH]</span><br><span class="line">       [NO_CMAKE_PACKAGE_REGISTRY]</span><br><span class="line">       [NO_CMAKE_BUILDS_PATH] <span class="comment"># Deprecated; does nothing.</span></span><br><span class="line">       [NO_CMAKE_SYSTEM_PATH]</span><br><span class="line">       [NO_CMAKE_SYSTEM_PACKAGE_REGISTRY]</span><br><span class="line">       [CMAKE_FIND_ROOT_PATH_BOTH |</span><br><span class="line">        ONLY_CMAKE_FIND_ROOT_PATH |</span><br><span class="line">        NO_CMAKE_FIND_ROOT_PATH])</span><br></pre></td></tr></table></figure>

<p><strong>CONFIG</strong> 选项可用于明确指定跳过 Module 模式，直接进入 Config 模式，<strong>NO_MODULE</strong> 选项与 CONFIG 选项类似。Config 模式尝试查找一个由待查找的包提供的配置文件的位置。包含该文件的路径会被存储在名为 <strong>_DIR</strong> 的缓存变量中。默认情况下，该命令搜索名为  的包。若指定了 NAMES 选项，则其后的 names 参数会替代 。该指令为每个指定的 name 参数搜索名为 <strong>Config.cmake</strong> 或 <strong>-config.cmake</strong> 的文件。<strong>可通过 CONFIGS 选项改变可能的配置文件的名字</strong>。如果找到了配置文件，它将会被 CMake 读取并处理。由于该文件是由包自身提供的，它已经知道包中内容的位置。配置文件的完整路径存储在 cmake 的 <strong>_CONFIG</strong> 变量中。所有 CMake 要处理的配置文件将会搜索对应包的安装信息，并且将该安装匹配的 appropriate version 存储在 cmake 变量 _CONSIDERED_CONFIGS 中，与之相关的版本号（associated version）将被存储在 _CONSIDERED_VERSIONS 中。</p>
<p>若未找到 package 的配置文件，cmake 会生成一个错误描述文件（除非指定了 QUIET 选项）。若设置了 <strong>_DIR</strong> 变量，但是该变量所指的路径下并没有包含配置文件信息，则会直接忽略该变量，并重新开始查找。</p>
<p>CMake3.12 新增了 <strong>_ROOT</strong> 变量，可通过设置 CMP0074 Policy 来关闭。若定义了 <strong>_DIR</strong> 变量，那么 <strong>_ROOT</strong> 不起作用。</p>
</li>
</ul>
<p>版本相关变量</p>
<table>
<thead>
<tr>
<th>PACKAGE_FIND_NAME</th>
<th>名字。</th>
</tr>
</thead>
<tbody><tr>
<td>PACKAGE_FIND_VERSION</td>
<td>请求的完整版本字符串</td>
</tr>
<tr>
<td>PACKAGE_FIND_VERSION_MAJOR</td>
<td>如果被请求了，那么它是major版本号，否则是0。</td>
</tr>
<tr>
<td>PACKAGE_FIND_VERSION_MINOR</td>
<td>如果被请求了，那么它是minor版本号，否则是0。</td>
</tr>
<tr>
<td>PACKAGE_FIND_VERSION_PATCH</td>
<td>如果被请求了，那么它是patch版本号，否则是0。</td>
</tr>
<tr>
<td>PACKAGE_FIND_VERSION_TWEAK</td>
<td>如果被请求了，那么它是tweak版本号，否则是0。</td>
</tr>
<tr>
<td>PACKAGE_FIND_VERSION_COUNT</td>
<td>版本号包含几部分，0到4。</td>
</tr>
</tbody></table>
<p>版本匹配规则</p>
<table>
<thead>
<tr>
<th>PACKAGE_VERSION</th>
<th>提供的完整的版本字符串。</th>
</tr>
</thead>
<tbody><tr>
<td>PACKAGE_VERSION_EXACT</td>
<td>如果版本号精确匹配，返回true。</td>
</tr>
<tr>
<td>PACKAGE_VERSION_COMPATIBLE</td>
<td>如果版本号相兼容，返回true。</td>
</tr>
<tr>
<td>PACKAGE_VERSION_UNSUITABLE</td>
<td>如果不适合任何版本，返回true。</td>
</tr>
</tbody></table>
<p>find_package 指令会使用上面的这些变量来检查版本是否可接受。在find_package 返回之后，上面这些变量就不再可用。若版本可接受，则会设置下面的变量：</p>
<table>
<thead>
<tr>
<th>_VERSION</th>
<th>提供的完整的版本字符串</th>
</tr>
</thead>
<tbody><tr>
<td>_VERSION_MAJOR</td>
<td>major版本号，否则是0</td>
</tr>
<tr>
<td>_VERSION_MINOR</td>
<td>minor版本号，否则是0</td>
</tr>
<tr>
<td>_VERSION_PATCH</td>
<td>patch版本号，否则是0</td>
</tr>
<tr>
<td>_VERSION_TWEAK</td>
<td>tweak版本号，否则是0</td>
</tr>
<tr>
<td>_VERSION_COUNT</td>
<td>版本号包含几部分，0到4</td>
</tr>
</tbody></table>
<p>当有多个版本满足要求时，选择使用哪个包是不确定的。此时可以使用 <strong>CMAKE_FIND_PACKAGE_SORT_ORDER</strong> 和 <strong>CMAKE_FIND_PACKAGE_SORT_DIRECTION</strong> 指令来设置选择顺序。例如，如下指令可以设置优先选择最高版本（需写在 find_package 之前，且 cmake 3 之前的版本未必支持该指令）：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span>(CMAKE_FIND_PACKAGE_SORT_ORDER NATURAL)</span><br><span class="line"><span class="keyword">SET</span>(CMAKE_FIND_PACKAGE_SORT_DIRECTION DEC)</span><br></pre></td></tr></table></figure>

<p>Config 模式提供了精细的接口和搜索过程。提供的大部分接口都是为了完整性，并由 Module 模式加载的 find-modules 内部使用。大多数用户代码应该只是调用：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(&lt;package&gt; [major[.minor]] [EXACT] [REQUIRED|QUIET])</span><br></pre></td></tr></table></figure>

<p>（建议提供 CMake 软件包配置文件的软件包维护者命名和安装它们，以便下面列出的过程可以找到它们而无需使用其他选项）</p>
<h2 id="package-前缀及查找路径"><a href="#package-前缀及查找路径" class="headerlink" title="package 前缀及查找路径"></a>package 前缀及查找路径</h2><p>CMake 为 package 构造了一组可能的安装前缀。在每个前缀下，多个目录会被搜索，用来查找配置文件。下述的表格展示了待搜索的路径。每个条目都是专门为Windows(W)，UNIX(U)或者Apple(A)约定的安装树指定的：</p>
<table>
<thead>
<tr>
<th>路径</th>
<th>OS</th>
</tr>
</thead>
<tbody><tr>
<td><prefix>&#x2F;</td>
<td>(W)</td>
</tr>
<tr>
<td><prefix>&#x2F;(cmake|CMake)&#x2F;</td>
<td>(W)</td>
</tr>
<tr>
<td><prefix>&#x2F;<name>*&#x2F;</td>
<td>(W)</td>
</tr>
<tr>
<td><strong>&lt;<strong><strong>prefix</strong><strong>&gt;&#x2F;&lt;****name****&gt;*&#x2F;</strong></strong>(cmake**</strong>|<strong><strong>CMake)</strong></strong>&#x2F;**</td>
<td>(W)</td>
</tr>
<tr>
<td><strong>&lt;<strong><strong>prefix</strong><strong>&gt;&#x2F;</strong></strong>(lib**</strong>&#x2F;&lt;***<em>arch****&gt;|<strong><strong>lib</strong></strong>|<strong><strong>share)</strong></strong>&#x2F;<strong><strong>cmake</strong></strong>&#x2F;&lt;****name****&gt;*&#x2F;</em>*</td>
<td>(U)</td>
</tr>
<tr>
<td><strong>&lt;<strong><strong>prefix</strong><strong>&gt;&#x2F;</strong></strong>(lib**</strong>&#x2F;&lt;***<em>arch****&gt;|<strong><strong>lib</strong></strong>|<strong><strong>share)</strong></strong>&#x2F;&lt;****name****&gt;*&#x2F;</em>*</td>
<td>(U)</td>
</tr>
<tr>
<td><strong>&lt;<strong><strong>prefix</strong><strong>&gt;&#x2F;</strong></strong>(lib**</strong>&#x2F;&lt;<strong><strong>arch</strong>**&gt;|<strong><strong>lib</strong></strong>|<strong><strong>share)</strong></strong>&#x2F;&lt;**<strong>name****&gt;*&#x2F;</strong></strong>(cmake****|<strong><strong>CMake)</strong></strong>&#x2F;**</td>
<td>(U)</td>
</tr>
<tr>
<td><prefix>&#x2F;<name><em>&#x2F;(lib&#x2F;<arch>|lib|share)&#x2F;cmake&#x2F;<name></em>&#x2F;</td>
<td>(W&#x2F;U)</td>
</tr>
<tr>
<td><prefix>&#x2F;<name><em>&#x2F;(lib&#x2F;<arch>|lib|share)&#x2F;<name></em>&#x2F;</td>
<td>(W&#x2F;U)</td>
</tr>
<tr>
<td><prefix>&#x2F;<name><em>&#x2F;(lib&#x2F;<arch>|lib|share)&#x2F;<name></em>&#x2F;(cmake|CMake)&#x2F;</td>
<td>(W&#x2F;U)</td>
</tr>
<tr>
<td>&#x2F;.framework&#x2F;Resources&#x2F;</td>
<td>(A)</td>
</tr>
<tr>
<td>&#x2F;.framework&#x2F;Resources&#x2F;CMake&#x2F;</td>
<td>(A)</td>
</tr>
<tr>
<td>&#x2F;.framework&#x2F;Versions&#x2F;*&#x2F;Resources&#x2F;</td>
<td>(A)</td>
</tr>
<tr>
<td>&#x2F;.framework&#x2F;Versions&#x2F;*&#x2F;Resources&#x2F;CMake&#x2F;</td>
<td>(A)</td>
</tr>
<tr>
<td>&#x2F;.app&#x2F;Contents&#x2F;Resources&#x2F;</td>
<td>(A)</td>
</tr>
<tr>
<td>&#x2F;.app&#x2F;Contents&#x2F;Resources&#x2F;CMake&#x2F;</td>
<td>(A)</td>
</tr>
</tbody></table>
<p>安装前缀  通过以下步骤构建，若指定了 <strong>NO_DEFAULT_PATH</strong> 选项，所有 NO_* 选项都会被激活：</p>
<p>①、搜索 cmake-specific 缓存变量指定的路径。这些变量是为了在命令行中用 -DVAR&#x3D;value 选项而设计的。通过指定 NO_CMAKE_PATH 选项可以跳过该搜索路径。搜索路径还包括：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">CMAKE_PREFIX_PATH</span><br><span class="line">CMAKE_FRAMEWORK_PATH</span><br><span class="line">CMAKE_APPBUNDLE_PATH</span><br></pre></td></tr></table></figure>

<p>②、搜索 cmake-specific 环境变量指定的路径。这些变量是为了用户在 shell 中进行配置而设计的。通过指定NO_CMAKE_ENVIRONMENT_PATH选项可以跳过该路径。搜索的路径包括：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">&lt;package&gt;_DIR</span><br><span class="line">CMAKE_PREFIX_PATH</span><br><span class="line">CMAKE_FRAMEWORK_PATH</span><br><span class="line">CMAKE_APPBUNDLE_PATH</span><br></pre></td></tr></table></figure>

<p>③、搜索 <strong>HINTS</strong> 选项指定的路径。</p>
<p>④、搜索**标准的系统环境变量(eg.PATH)**。可通过设置 NO_SYSTEM_ENVIRONMENT_PATH 选项跳过该路径。PATH 中以 “&#x2F;bin” 或 “&#x2F;sbin” 结尾的路径会被自动转换为它们的父路径。例如：PATH 中包含 &#x2F;usr&#x2F;bin，则cmake会自动到 &#x2F;usr&#x2F;(lib&#x2F;|lib|share)&#x2F;cmake&#x2F;&#x2F; 目录下进行搜索</p>
<p>⑤、搜索在 CMake GUI 中最新配置过的工程的构建树。可通过 NO_CMAKE_BUILDS_PATH 跳过该路径</p>
<p>⑥、搜索存储在 CMake <a href="https://cmake.org/cmake/help/v3.0/manual/cmake-packages.7.html#user-package-registry">User Package Registry</a> 中的路径。可通过 NO_CMAKE_PACKAGE_REGISTRY 跳过该路径</p>
<p>⑦、搜索当前系统中定义的 cmake 变量指定的路径。可通过 NO_CMAKE_SYSTEM_PATH 跳过该路径</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CMAKE_SYSTEM_PREFIX_PATH</span><br><span class="line">CMAKE_SYSTEM_FRAMEWORK_PATH</span><br><span class="line">CMAKE_SYSTEM_APPBUNDLE_PATH</span><br></pre></td></tr></table></figure>

<p>⑧、搜索存储在 CMake System Package Registry 中的路径。可通过 NO_CMAKE_SYSTEM_PACKAGE_REGISTRY 跳过该路径</p>
<p>⑨、搜索 PATHS 选项指定的路径</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(PCL REQUIRED</span><br><span class="line">             PATHS /home/xxx/<span class="number">3</span>rdlibs/pcl/pcl-<span class="number">1.8</span> <span class="comment"># look here</span></span><br><span class="line">             NO_DEFAULT_PATH)</span><br><span class="line">             </span><br><span class="line"><span class="comment"># 指定路径，同时通过 EXACT 来匹配特定版本      </span></span><br><span class="line"><span class="keyword">find_package</span>(OpenCV <span class="number">3.1</span> EXACT REQUIRED PATHS /usr/local/opencv3.<span class="number">1</span>)             </span><br></pre></td></tr></table></figure>



<p>总结：根据上面描述，主要包括以下几个重要查找目录：</p>
<ul>
<li><p><code>&lt;package&gt;_DIR</code></p>
</li>
<li><p><code>CMAKE_PREFIX_PATH</code></p>
</li>
<li><p>&#96;&#96;CMAKE_FRAMEWORK_PATH&#96;</p>
</li>
<li><p><code>CMAKE_APPBUNDLE_PATH PATH</code></p>
</li>
</ul>
<p>优先级最高的是 <code>&lt;package&gt;_DIR</code> 路径。该路径可在调用 cmake 时传入。</p>
<p>例如：假设在 &#x2F;usr&#x2F;local&#x2F;share 目录下编译了 OpenCV3.3.4:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">OpenCV_DIR=/usr/local/share/opencv-3.3.4/build/ cmake</span></span><br></pre></td></tr></table></figure>

<p>也可在 CMakeLists.txt 中通过 <strong><code>set(OpenCV_DIR &quot;/usr/local/share/opencv-3.3.4/build&quot;)</code></strong> 语句指定 <strong>_DIR 可解决系统中包含不同版本的包的问题</strong> </p>
<p>由于 &#x2F;usr&#x2F;bin 通常都包含在环境变量 PATH 之中，因此 cmake 会自动到 &#x2F;usr&#x2F;(lib&#x2F;|lib|share)&#x2F;cmake&#x2F;&#x2F; 目录下查找模块，因而大部分通过 apt-get 安装的库都可以被找到</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># VTK_DIR是一个缓存变量，它在CMake调用中保持其状态。</span></span><br><span class="line"><span class="keyword">SET</span>(VTK_DIR <span class="string">&quot;/usr/include/vtk-5.8&quot;</span> CACHE PATH <span class="string">&quot;VTK directory override&quot;</span> FORCE)  </span><br></pre></td></tr></table></figure>



<p>module 模式下，首先会在模块路径中寻找 Find.cmake，这是查找库的一个典型方式。具体查找路径依次为CMake：</p>
<ul>
<li>变量 ${CMAKE_MODULE_PATH} 中的所有目录。</li>
<li>如果没有，然后再查看它自己的模块目录&#x2F;share&#x2F;cmake-x.y&#x2F;Modules&#x2F;（可通过 CMAKE_ROOT 变量查看. 例如：ubuntu上为 &#x2F;usr&#x2F;share&#x2F;cmake-3.5&#x2F;Modules&#x2F;）。</li>
</ul>
<p>(可通过 <strong>SET(CMAKE_MODULE_PATH dir)</strong> 设置查找路径)</p>
<p>示例：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span> (&lt;package&gt; PATHS paths... NO_DEFAULT_PATH)</span><br><span class="line"><span class="comment"># eg. </span></span><br><span class="line"><span class="keyword">find_package</span>(OpenCV <span class="number">3.1</span> EXACT REQUIRED PATHS /usr/local/opencv3.<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(OpenCV_DIR /usr/local/opencv-<span class="number">4.5</span>.<span class="number">5</span>/lib/cmake/opencv4)</span><br><span class="line"><span class="keyword">find_package</span>( OpenCV <span class="number">4.5</span>.<span class="number">5</span> REQUIRED )</span><br><span class="line"><span class="comment">#set(OpenCV_DIR /opt/ros/kinetic/share/OpenCV-3.3.1-dev)</span></span><br><span class="line"><span class="comment">#find_package( OpenCV 3.3.1 REQUIRED )</span></span><br></pre></td></tr></table></figure>



<p>总结：</p>
<ul>
<li><p>判断 find_package() 执行的是 module 模式还是 config 模式</p>
<ul>
<li><p>要看 CMAKE_MODULE_PATH 或 cmake 安装路径下是否有 Find.cmake 脚本存在，并且这个脚本能否正确找到包；如果不存在，或这个脚本执行失败，则进入 config 模式</p>
</li>
<li><p>通过 CONFIG、NO_MODULE、CONFIG 模式特有字段设定 config 模式</p>
</li>
</ul>
</li>
<li><p><strong>_DIR</strong> 是 config 模式特有的缓存变量</p>
<ul>
<li><p>可在 find_package() 前设定 _DIR，指向包含Config.cmake 或 -config.cmake 的目录</p>
</li>
<li><p>module 模式下在 find_package() 前设定 _DIR，并不能用来帮助 find_package() 找到包；并且在 find_package() 后，也没有 _DIR 变量自动存在</p>
</li>
</ul>
</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="protobuf-版本"><a href="#protobuf-版本" class="headerlink" title="protobuf 版本"></a><strong>protobuf 版本</strong></h3><p>假设系统中有两个版本的 protobuf</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. apt 安装</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install libprotobuf-dev protobuf-compiler</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 源码编译</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">/home/test/thirdlibs/protobuf-3.14.0</span></span><br></pre></td></tr></table></figure>



<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(Protobuf_PREFIX_PATH</span><br><span class="line">    <span class="string">&quot;/home/zz/soft/protobuf-3.8.0/include&quot;</span></span><br><span class="line">    <span class="string">&quot;/home/zz/soft/protobuf-3.8.0/lib&quot;</span></span><br><span class="line">    <span class="string">&quot;/home/zz/soft/protobuf-3.8.0/bin&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">list</span>(APPEND CMAKE_PREFIX_PATH <span class="string">&quot;$&#123;Protobuf_PREFIX_PATH&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">find_package</span>(Protobuf REQUIRED)</span><br></pre></td></tr></table></figure>



<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 错误示例</span></span><br><span class="line"><span class="keyword">set</span>(Protobuf_DIR <span class="string">&quot;/home/zz/soft/protobuf-3.8.0/lib/cmake/protobuf&quot;</span>)</span><br><span class="line"><span class="keyword">find_package</span>(Protobuf REQUIRED)</span><br></pre></td></tr></table></figure>



<p>需注意 find_package 工作在 module 还是 config 模式。当 cmake 安装路径下提供了 FindProtobuf.cmake 时，工作在 module 模式；而不设定 CMAKE_PREFIX_PATH 等预定义变量，仅设置 Protobuf_DIR 的情况下，并不能进入 config 模式，此时 Protobuf_DIR 并未起作用。</p>
<h1 id="FIND-LIBRARY"><a href="#FIND-LIBRARY" class="headerlink" title="FIND_LIBRARY"></a>FIND_LIBRARY</h1>]]></content>
      <categories>
        <category>编译工具</category>
        <category>CMake</category>
        <category>脚本指令</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>cmake</tag>
      </tags>
  </entry>
  <entry>
    <title>list</title>
    <url>/2024/09/16/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/%E8%84%9A%E6%9C%AC%E6%8C%87%E4%BB%A4/list/</url>
    <content><![CDATA[<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">list</span>(LENGTH &lt;<span class="keyword">list</span>&gt; &lt;output variable&gt;)</span><br><span class="line"><span class="keyword">list</span>(GET &lt;<span class="keyword">list</span>&gt; &lt;element index&gt; [&lt;element index&gt; ...]</span><br><span class="line">     &lt;output variable&gt;)</span><br><span class="line"><span class="keyword">list</span>(APPEND &lt;<span class="keyword">list</span>&gt; [&lt;element&gt; ...])</span><br><span class="line"><span class="keyword">list</span>(FIND &lt;<span class="keyword">list</span>&gt; &lt;value&gt; &lt;output variable&gt;)</span><br><span class="line"><span class="keyword">list</span>(INSERT &lt;<span class="keyword">list</span>&gt; &lt;element_index&gt; &lt;element&gt; [&lt;element&gt; ...])</span><br><span class="line"><span class="keyword">list</span>(REMOVE_ITEM &lt;<span class="keyword">list</span>&gt; &lt;value&gt; [&lt;value&gt; ...])</span><br><span class="line"><span class="keyword">list</span>(REMOVE_AT &lt;<span class="keyword">list</span>&gt; &lt;index&gt; [&lt;index&gt; ...])</span><br><span class="line"><span class="keyword">list</span>(REMOVE_DUPLICATES &lt;<span class="keyword">list</span>&gt;)</span><br><span class="line"><span class="keyword">list</span>(REVERSE &lt;<span class="keyword">list</span>&gt;)</span><br><span class="line"><span class="keyword">list</span>(SORT &lt;<span class="keyword">list</span>&gt;)</span><br></pre></td></tr></table></figure>



<table>
<thead>
<tr>
<th>LENGTH</th>
<th>返回list的长度</th>
</tr>
</thead>
<tbody><tr>
<td>GET</td>
<td>返回list中index的element到value中</td>
</tr>
<tr>
<td>APPEND</td>
<td>添加新element到list中</td>
</tr>
<tr>
<td>FIND</td>
<td>返回list中element的index,未找到返回-1</td>
</tr>
<tr>
<td>INSERT</td>
<td>将新element插入到list中index的位置</td>
</tr>
<tr>
<td>REMOVE_ITEM</td>
<td>从list中删除某个element</td>
</tr>
<tr>
<td>REMOVE_AT</td>
<td>从list中删除指定index的element</td>
</tr>
<tr>
<td>REMOVE_DUPLICATES</td>
<td>从list中删除重复的element</td>
</tr>
<tr>
<td>REVERSE</td>
<td>将list的内容反转</td>
</tr>
<tr>
<td>SORT</td>
<td>将list按字母顺序排序</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>编译工具</category>
        <category>CMake</category>
        <category>脚本指令</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>cmake</tag>
      </tags>
  </entry>
  <entry>
    <title>target</title>
    <url>/2024/09/16/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/CMake/%E8%84%9A%E6%9C%AC%E6%8C%87%E4%BB%A4/target/</url>
    <content><![CDATA[<h1 id="target-include-directories"><a href="#target-include-directories" class="headerlink" title="target_include_directories"></a>target_include_directories</h1><p>指定编译参数给定的 target 时需要包含的目录。该 target 必须经过 <code>add_executable</code> 或 <code>add_library</code> 命令编译，不能是 <code>IMPORTED target</code>。</p>
<h2 id="与-include-dirctories-区别"><a href="#与-include-dirctories-区别" class="headerlink" title="与 include_dirctories 区别"></a>与 include_dirctories 区别</h2><p><strong><code>include_directories</code></strong> 影响目录范围。该 CMakeLists.txt 中的所有 targets，以及在其调用点之后添加的所有子目录中的目标，均会将 <code>include_directories</code> 指定的目录包含到其路径中</p>
<p><strong><code>target_include_directories(target x/y)</code></strong> 则具有目标范围，将目录 x&#x2F;y 添加到目标 target 的包含路径。</p>
<p>如果所有目标使用相关的包含目录，则需要用 <code>include_directories</code>，如果路径特定于某个目标，或想更好地控制路径的可见性，则需要 <code>target_include_directories</code>。</p>
<h1 id="target-sources"><a href="#target-sources" class="headerlink" title="target_sources"></a>target_sources</h1><p>指定编译给定 target 时用到的源文件。其中 target 必须由 <code>add_executable</code> 或 <code>add_library</code> 之类的命令创建，不能为 <code>ALIASA</code> 目标。</p>
<h2 id="ADD-CUSTOM-TARGET"><a href="#ADD-CUSTOM-TARGET" class="headerlink" title="ADD_CUSTOM_TARGET"></a>ADD_CUSTOM_TARGET</h2><p>增加一个没有输出的目标，使得它总是被构建</p>
<h2 id="ADD-CUSTOM-COMMAND"><a href="#ADD-CUSTOM-COMMAND" class="headerlink" title="ADD_CUSTOM_COMMAND"></a>ADD_CUSTOM_COMMAND</h2><p>向生成的构建系统添加自定义构建规则。</p>
<p><code>ADD_CUSTOM_COMMAND</code> 有两个限制：</p>
<ul>
<li>只有在相同的 CMakeLists.txt 中，指定了所有依赖于其输出的目标时才有效</li>
<li>对于不同的独立目标，使用 <code>ADD_CUSTOM_COMMAND</code>的输出可以重新执行定制命令。这可能会导致冲突，应该避免这种情况的发生</li>
</ul>
<p>只有当构建的目标以 <code>ADD_CUSTOM_COMMAND</code> 生成的OUTPUT文件为源代码的情况下，<code>ADD_CUSTOM_COMMAND</code> 中指定的命令才会才会执行。</p>
<p><a href="https://www.jianshu.com/p/dcb26b24806b">https://www.jianshu.com/p/dcb26b24806b</a></p>
<p>该命令主要用于两种场景下。</p>
<h3 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h3><p>添加自定义命令来生成文件。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add_custom_command</span>(OUTPUT output1 [output2 ...]</span><br><span class="line">                   <span class="keyword">COMMAND</span> command1 [ARGS] [args1...]</span><br><span class="line">                   [<span class="keyword">COMMAND</span> command2 [ARGS] [args2...] ...]</span><br><span class="line">                   [MAIN_DEPENDENCY depend]</span><br><span class="line">                   [DEPENDS [depends...]]</span><br><span class="line">                   [BYPRODUCTS [files...]]</span><br><span class="line">                   [IMPLICIT_DEPENDS &lt;lang1&gt; depend1</span><br><span class="line">                                    [&lt;lang2&gt; depend2] ...]</span><br><span class="line">                   [WORKING_DIRECTORY dir]</span><br><span class="line">                   [COMMENT comment]</span><br><span class="line">                   [DEPFILE depfile]</span><br><span class="line">                   [VERBATIM] [APPEND] [USES_TERMINAL]</span><br><span class="line">                   [COMMAND_EXPAND_LISTS])</span><br></pre></td></tr></table></figure>

<p>定义了一个命令来生成指定的 OUTPUT 文件。在 CMakeLists.txt 同一目录中创建的目标(该目标指定自定义命令的任何输出作为源文件)将获得一个规则，以便在构建时使用该命令生成该文件。不要在多个可能并行构建的独立目标中列出输出，或者规则的两个实例可能冲突(而是使用add_custom_target()命令来驱动该命令，并使其他目标依赖于该命令)。在 makefile 术语中，这会以以下形式创建一个新目标:</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">OUTPUT: MAIN_DEPENDENCY DEPENDS</span></span><br><span class="line">        COMMAND</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.0</span>)</span><br><span class="line"><span class="keyword">project</span>(<span class="keyword">test</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_custom_command</span>(OUTPUT COPY_RES</span><br><span class="line">  <span class="keyword">COMMAND</span> <span class="variable">$&#123;CMAKE_COMMAND&#125;</span> -E copy_directory <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/config <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/etc</span><br><span class="line">  <span class="keyword">COMMAND</span> <span class="variable">$&#123;CMAKE_COMMAND&#125;</span> -E copy <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/log.txt <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/etc</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_custom_target</span>(CopyTask ALL DEPENDS COPY_RES)</span><br></pre></td></tr></table></figure>

<p><code>add_custom_target</code>：生成一个目标 CopyTask，该目标依赖 COPY_RES。而 COPY_RES 实际上是用来复制文件夹或复制文件，也就是 COMMAND 中定义的操作。</p>
<p><strong>options</strong>：</p>
<ul>
<li><strong>APPEND</strong>：将 COMMAND 和 DEPENDS 选项值附加到指定的第一个输出的自定义命令。之前必须已经调用过具有相同输出的此命令</li>
<li><strong>BYPRODUCTS</strong>：指定命令预期生成的文件。如果副产品(byproduct)名是相对路径，它将相对于当前源目录相对应的构建树目录进行解释。每个副产品文件都将自动标记为GENERATED源文件属性</li>
<li><strong>COMMAND</strong>：指定要执行的命令。如果指定了多个 COMMAND，它们将按顺序执行，但不一定组成有状态的 shell 或 batch 脚本。可选的 ARGS 参数是为了向后兼容。</li>
<li><strong>COMMENT</strong>：在构建时执行命令之前显示给定的消息</li>
<li><strong>DEPENDS</strong>：指定命令所依赖的文件。每个参数都转换为依赖项。如果未指定 DEPENDS，则只要缺少 OUTPUT，该命令就会运行；如果该命令实际上并未创建 OUTPUT，则该规则将始终运行</li>
<li><strong>COMMAND_EXPAND_LISTS</strong>：</li>
<li><strong>IMPLICIT_DEPENDS</strong>：请求扫描输入文件的隐式依赖项。给定的语言指定应使用其相应依赖扫描器的编程语言(programming language).目前仅支持C和CXX语言扫描器。必须为IMPLICIT_DEPENDS列表中的每个文件指定语言。IMPLICIT_DEPENDS选项目前仅支持Makefile生成器，其它生成器将忽略该选项。此选项<strong>不能与DEPFILE选项同时指定</strong>。</li>
<li><strong>JOB_POOL</strong>：为 Ninja 生成器指定一个 pool。不能与 USES_TERMINAL 一起使用(暗含 console pool)。</li>
<li><strong>MAIN_DEPENDENCY</strong>：指定命令的主要输入源文件。每个源文件最多可以有一个命令将其指定为其主要依赖项。编译命令(即用于库或可执行文件)算作隐式主要依赖项，它会被自定义命令规范覆盖</li>
<li><strong>OUTPUT</strong>：指定命令预期生成的输出文件。每个输出文件将自动标记为生成的源文件属性。如果自定义命令的输出实际上没有作为磁盘上的文件创建，则应该使用 SYMBOLIC 源文件属性对其进行标记。如果输出名称是相对路径，则其绝对路径将解析为相对于与当前源目录对应的构建树目录(<a href="https://cmake.org/cmake/help/latest/variable/CMAKE_CURRENT_BINARY_DIR.html#variable:CMAKE_CURRENT_BINARY_DIR"><strong>CMAKE_CURRENT_BINARY_DIR</strong></a>)或当前源目录(<a href="https://cmake.org/cmake/help/latest/variable/CMAKE_CURRENT_SOURCE_DIR.html#variable:CMAKE_CURRENT_SOURCE_DIR"><strong>CMAKE_CURRENT_SOURCE_DIR</strong></a>)。3.20 版本以后，输出参数可使用一组受限的生成器表达式</li>
<li>USES_TERMINAL：如果可能，该命令将被授予直接访问终端(terminal)的权限</li>
<li>VERBATIM：命令的所有参数都将为构建工具正确转义(escaped),以便调用的命令接收每个参数不变。建议使用VERBATIM，因为它可以实现正确的行为。当没有给出VERBATIM时，行为是特定于平台的</li>
<li>WORKING_DIRECTORY：使用给定的当前工作目录执行命令。如果是相对路径，会被解释为相对于当前源目录对应的构建树目录</li>
<li>DEPFILE：指定一个包含自定义命令依赖项的depfile。它通常由自定义命令本身发出。这个关键字只能在生成器支持的情况下使用</li>
</ul>
<p>例一</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加自定义命令来运行 someTool 以生产 out.c 文件，然后将该文件编译为库。当 in.txt 文件发生变化时，会自动重新运行该生成规则。</span></span><br><span class="line"><span class="keyword">add_custom_command</span>(</span><br><span class="line">  OUTPUT out.c</span><br><span class="line">  <span class="keyword">COMMAND</span> someTool -i <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/in.txt</span><br><span class="line">                   -o out.c</span><br><span class="line">  DEPENDS <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/in.txt</span><br><span class="line">  VERBATIM)</span><br><span class="line"><span class="keyword">add_library</span>(myLib out.c)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.20 版本可以使用生成器表达式来指定每个配置的输出。例如</span></span><br><span class="line"><span class="keyword">add_custom_command</span>(</span><br><span class="line">  OUTPUT <span class="string">&quot;out-$&lt;CONFIG&gt;.c&quot;</span></span><br><span class="line">  <span class="keyword">COMMAND</span> someTool -i <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/in.txt</span><br><span class="line">                   -o <span class="string">&quot;out-$&lt;CONFIG&gt;.c&quot;</span></span><br><span class="line">                   -c <span class="string">&quot;$&lt;CONFIG&gt;&quot;</span></span><br><span class="line">  DEPENDS <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/in.txt</span><br><span class="line">  VERBATIM)</span><br><span class="line"><span class="keyword">add_library</span>(myLib <span class="string">&quot;out-$&lt;CONFIG&gt;.c&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>运行 someTool 指令生成 out-.c 文件，config 是编译选项。</p>
<p>例二：为多个 targets 生成文件</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果多个独立 targets 需要相同的自定义命令输出，则必须将其附加到它们都依赖的单个自定义 target</span></span><br><span class="line"><span class="keyword">add_custom_command</span>(</span><br><span class="line">  OUTPUT table.csv</span><br><span class="line">  <span class="keyword">COMMAND</span> makeTable -i <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/input.dat</span><br><span class="line">                    -o table.csv</span><br><span class="line">  DEPENDS <span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/input.dat</span><br><span class="line">  VERBATIM)</span><br><span class="line"><span class="keyword">add_custom_target</span>(generate_table_csv DEPENDS table.csv)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_custom_command</span>(</span><br><span class="line">  OUTPUT foo.cxx</span><br><span class="line">  <span class="keyword">COMMAND</span> genFromTable -i table.csv -case foo -o foo.cxx</span><br><span class="line">  DEPENDS table.csv           <span class="comment"># file-level dependency</span></span><br><span class="line">          generate_table_csv  <span class="comment"># target-level dependency</span></span><br><span class="line">  VERBATIM)</span><br><span class="line"><span class="keyword">add_library</span>(foo foo.cxx)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_custom_command</span>(</span><br><span class="line">  OUTPUT bar.cxx</span><br><span class="line">  <span class="keyword">COMMAND</span> genFromTable -i table.csv -case bar -o bar.cxx</span><br><span class="line">  DEPENDS table.csv           <span class="comment"># file-level dependency</span></span><br><span class="line">          generate_table_csv  <span class="comment"># target-level dependency</span></span><br><span class="line">  VERBATIM)</span><br><span class="line"><span class="keyword">add_library</span>(bar bar.cxx)</span><br></pre></td></tr></table></figure>

<p>foo.cxx 只被 foo 使用，bar.cxx 只被 bar 使用。但两个 target 都需要 table.csv。由于 foo 和 bar 是可以并发构建的独立目标，因此通过将其自定义命令放在单独的目标 generate_table_csv 中来防止它们竞相生成 table.csv。生成 foo.cxx 和 bar.cxx 的自定义指令均指定 target-level 依赖 generate_table_csv。</p>
<h3 id="Build-Events"><a href="#Build-Events" class="headerlink" title="Build Events"></a>Build Events</h3><p>将自定义命令添加到 target，如库或可执行文件。这对于在构建 target 之前或之后执行操作非常有用。该命令将成为 target 的一部分，并且仅在构建 target 本身时执行。如果 target 已构建，则不会执行该命令。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add_custom_command</span>(<span class="keyword">TARGET</span> &lt;<span class="keyword">target</span>&gt;</span><br><span class="line">                   PRE_BUILD | PRE_LINK | POST_BUILD</span><br><span class="line">                   <span class="keyword">COMMAND</span> command1 [ARGS] [args1...]</span><br><span class="line">                   [<span class="keyword">COMMAND</span> command2 [ARGS] [args2...] ...]</span><br><span class="line">                   [BYPRODUCTS [files...]]</span><br><span class="line">                   [WORKING_DIRECTORY dir]</span><br><span class="line">                   [COMMENT comment]</span><br><span class="line">                   [VERBATIM] [USES_TERMINAL])</span><br></pre></td></tr></table></figure>

<p>这将定义一个新命令，该命令将与构建指定的 <code>&lt;target&gt;</code> 关联。 必须在当前目录中定义；不能指定在其它目录中定义的 target。</p>
<p>命令何时执行由以下指定的选项决定:</p>
<ul>
<li><strong>PRE_BUILD</strong>：在 Visual Studio Generators 上，在 target 中执行任何其它规则之前运行。在其它生成器(generator)上,在 PRE_LINK 命令之前运行</li>
<li><strong>PRE_LINK</strong>：在编译源代码之后但在链接二进制文件(binary)或运行静态库的库管理员(librarian)或存档器工具(archiver tool)之前运行。这不是为 add_custom_target 命令创建的 target 定义的</li>
<li><strong>POST_BUILD</strong>：在执行 target 中的所有其它规则后运行</li>
</ul>
<p>使用 TARGET 格式时，project 应始终指定上述三个关键字之一。出于向后兼容性(backward compatibility)的原因，如果没有给出这样的关键字，则假定为 POST_BUILD，但 project 应明确提供其中一个关键字以明确他们期望的行为。</p>
<p>例一</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># POST_BUILD 事件可用于在链接后对二进制文件进行后处理,例如</span></span><br><span class="line"><span class="keyword">add_executable</span>(myExe myExe.c)</span><br><span class="line"><span class="keyword">add_custom_command</span>(</span><br><span class="line">  <span class="keyword">TARGET</span> myExe POST_BUILD</span><br><span class="line">  <span class="keyword">COMMAND</span> someHasher -i <span class="string">&quot;$&lt;TARGET_FILE:myExe&gt;&quot;</span></span><br><span class="line">                     -o <span class="string">&quot;$&lt;TARGET_FILE:myExe&gt;.hash&quot;</span></span><br><span class="line">  VERBATIM)</span><br><span class="line"><span class="comment"># 在链接后，将会运行 someHasher 来生成 .hash 文件</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 3.20 版本</span></span><br><span class="line"><span class="keyword">add_library</span>(myPlugin MODULE myPlugin.c)</span><br><span class="line"><span class="keyword">add_custom_command</span>(</span><br><span class="line">  <span class="keyword">TARGET</span> myPlugin POST_BUILD</span><br><span class="line">  <span class="keyword">COMMAND</span> someHasher -i <span class="string">&quot;$&lt;TARGET_FILE:myPlugin&gt;&quot;</span></span><br><span class="line">                     --as-code <span class="string">&quot;myPlugin-hash-$&lt;CONFIG&gt;.c&quot;</span></span><br><span class="line">  BYPRODUCTS <span class="string">&quot;myPlugin-hash-$&lt;CONFIG&gt;.c&quot;</span></span><br><span class="line">  VERBATIM)</span><br><span class="line"><span class="keyword">add_executable</span>(myExe myExe.c <span class="string">&quot;myPlugin-hash-$&lt;CONFIG&gt;.c&quot;</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编译工具</category>
        <category>CMake</category>
        <category>脚本指令</category>
      </categories>
      <tags>
        <tag>编译工具</tag>
        <tag>cmake</tag>
      </tags>
  </entry>
  <entry>
    <title>motion planning</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/motion%20planning/</url>
    <content><![CDATA[<p>MoveIt 中，motion planners 是使用插件加载的。<strong>允许 MoveIt 在运行时加载 motion planners</strong>。</p>
<h1 id="Planning-Pipeline"><a href="#Planning-Pipeline" class="headerlink" title="Planning Pipeline"></a>Planning Pipeline</h1><p>MoveIt 中，motion planners 用于规划路径。然而，很多时候可能需要对<strong>运动规划请求进行预处理</strong>，或者对<strong>规划路径进行后处理</strong>(例如，时间参数化)。在这种情况下，使用 <strong>planning pipeline，将 motion planners 与预处理和后处理阶段连接起来</strong>。**预处理和后处理阶段称为 planning request adapters(规划请求适配器)**，可以从 ROS 参数服务器按名称配置。</p>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/motion%20planning/image-20240917205013991.png" class="" title="image-20240917205013991">

<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/motion%20planning/image-20240917205121451.png" class="" title="image-20240917205121451">

<p>move_group 发送运动规划请求给 OMPL，可以指定一些约束条件。请求包括关节位置约束、姿态约束、可见性约束、关节约束、用户自定义约束等。</p>
<p>规划请求适配器（Plan Request Adapters）能够对规划请求做预处理（pre-processing）、对规划响应做后处理（post-processing）。</p>
<p>Moveit!提供了一组默认的运动规划适配器，其中每个适配器都具有特定的功能：</p>
<p>FixStartStateBound：修复joint的初始极限</p>
<p>FixWorkspaceBound：设置默认尺寸的工作空间</p>
<p>FixStartStateCollision：如果已有的joint配置文件会导致碰撞，则adapter可以采样新的碰撞配置文件，并且根据jiggle-factor因子修改已有的配置文件</p>
<p>FixStartStatePathConstraint：如果机器人的初始姿态不满足路径约束，则adapter可以找到附近满足约束的姿态作为机器人的初始姿态</p>
<p>AddTimeParameterization（重点掌握）：为OMPL生成的点序列添加速度和加速度等信息（按距等分）</p>
<h1 id="Planner"><a href="#Planner" class="headerlink" title="Planner"></a>Planner</h1><h2 id="motion-planner-结构"><a href="#motion-planner-结构" class="headerlink" title="motion planner 结构"></a><strong>motion planner 结构</strong></h2><p>在 MoveIt 中，motion planner 用于规划路径。但是，有时可能希望<strong>对运动规划请求进行预处理</strong>或<strong>对规划路径进行后处理</strong>（例如，用于时间参数化）。在这种情况下，使用 planning pipeline 将运动规划器与预处理和后处理阶段(pre and pose-processing stages)连接起来。预处理和后处理阶段，称为 <strong>planning request adapters</strong>，可以通过 ROS 参数服务器进行配置。</p>
<p>约束条件：</p>
<ul>
<li>位置约束：限制 link 的运动区域</li>
<li>方向约束：限制 link 的运动方向</li>
<li>可见性约束：限制 link 上某点在某区域内的可见性(通过视觉传感器)</li>
<li>joint 约束：限制 joint 的运动范围</li>
<li>用户自定义约束：用户通过回调函数自定义所需的约束条件</li>
</ul>
<p>适配器：</p>
<ul>
<li><strong>FixStartStateBounds</strong>：修复 joint 的初始限制</li>
<li><strong>FixWorkspaceBounds</strong>：设置一个默认尺寸的工作空间</li>
<li><strong>FixStartStateCollision</strong>：修复碰撞配置文件。如果已有的joint配置文件会导致碰撞，则adapter可以采样新的碰撞配置文件，并且根据jiggle-factor因子修改已有的配置文件</li>
<li><strong>FixStartStatePathConstraints</strong>：找到满足约束的姿态作为机器人的初始位姿</li>
<li><strong>AddTimeParameterization</strong>：为空间轨迹进行速度、加速度约束，为每个轨迹点加入速度、加速度、时间等参数</li>
</ul>
<h2 id="STOMP、CHOMP-及-OMPL-差异"><a href="#STOMP、CHOMP-及-OMPL-差异" class="headerlink" title="STOMP、CHOMP 及 OMPL 差异"></a><strong>STOMP、CHOMP 及 OMPL 差异</strong></h2><p>在本节中，对从 <strong>STOMP</strong>、<strong>CHOMP</strong> 和 <strong>OMPL</strong> 获得的路径进行了区分。 一些 moveIt planner 往往会产生不稳定的轨迹，并可能引入不必要的机器人运动。通常需要后处理平滑步骤。相比之下，由于 STOMP 倾向于在短时间内生成平滑且表现良好的运动计划，因此不需要像其他一些 motion planner 所要求的后处理平滑步骤。 CHOMP 基于协变和函数梯度方法优化给定的初始初始轨迹。CHOMP 完全基于轨迹优化。OMPL 是一个开源库，用于基于采样&#x2F;随机运动规划算法。基于采样的算法在概率上是完整的：如果存在解决方案，最终将找到解决方案，但无法报告不存在解决方案。这些算法是高效的，通常可以快速找到解决方案。现在对以下这些 planner 进行定性分析：</p>
<ul>
<li><strong>Local Minima Handling</strong>：由于其随机特性，STOMP 可以避免局部极小值。然而，CHOMP 很容易并经常陷入局部最小值，从而错过最优解决方案。根据 STOMP 和 CHOMP 论文，STOMP 性能更好。然而，CHOMP 由于其基于梯度的性质，会陷入局部最小值，往往无法找到解决方案或返回次优解</li>
<li><strong>Time requirements</strong>：尽管 CHOMP 比 STOMP 需要更多的迭代才能获得成功，但执行时间是可以比较的。这主要是因为 STOMP 的每次迭代都需要进行多个轨迹代价的评估，但与 CHOMP 梯度更新规则相比，可以实现更大的步长且更稳定。OMPL 算法是有效的，通常可以快速找到解决方案</li>
<li><strong>Parameter tuning</strong>：为了获得成功的解决方案，CHOMP 通常需要比 STOMP 更多的参数调优。OMPL 不需要很多参数调优，默认参数在大多数情况下都很好</li>
<li><strong>Obstacle Handling</strong>：对于包含障碍的场景，由于其随机性，STOMP 通常能够成功避开障碍。然而，CHOMP 通过在机器人的动力学量(如加速度、速度)的代价函数中添加一些噪声(ridge_factor)来生成不喜欢平滑轨迹的路径。OMPL 还可以在存在障碍物的情况下生成无碰撞的平滑路径</li>
</ul>
<p><strong>STOMP 只能用于机械臂关节空间的路径规划</strong>,不能用于空间末端的运动轨迹规划；CHOMP 可以用作 STOMP 获得的计划的后处理优化技术；STOMP 为 CHOMP 生成初始路径。然后 CHOMP 采用这条初始路径并进一步优化这一轨迹</p>
<h1 id="Planning-adapter"><a href="#Planning-adapter" class="headerlink" title="Planning adapter"></a>Planning adapter</h1><p>规划请求适配器可用于修改运动规划器的轨迹（预处理和&#x2F;或后处理）。MoveIt! 中现有规划适配器的一些示例包括：</p>
<ul>
<li><strong>AddTimeParameterization</strong></li>
<li><strong>FixWorkspaceBounds</strong></li>
<li><strong>FixStartBounds</strong></li>
<li><strong>FixStartStateCollision</strong></li>
<li><strong>FixStartStatePathConstraints</strong></li>
<li><strong>CHOMPOptimizerAdapter</strong></li>
</ul>
<p>使用规划适配器的概念，可以在管道中使用多种运动规划算法来生成稳健的轨迹。例如，简单的运动规划管道可能包括由 OMPL 生成的初始计划，然后可以由 CHOMP 优化以生成可能比单独由 OMPL 或 CHOMP 生成的路径更好的运动规划。同样，使用规划适配器的概念，其他运动规划器可以根据机器人运行的环境进行混合和匹配。</p>
<p>使用规划请求适配器概念可能的其他运动规划管道包括：</p>
<ul>
<li><strong>CHOMP + STOMP</strong></li>
<li><strong>OMPL + STOMP</strong></li>
<li><strong>STOMP + CHOMP</strong></li>
<li><strong>OMPL + CHOMP</strong></li>
</ul>
<p>其中前两个涉及使用 <strong>STOMP Smoothing Planning Request</strong>，后两个使用 <strong>CHOMP Optimization Adapter</strong>。这些规划请求适配器的使用方式很简单，并记录在 moveit_tutorials 存储库中的计划请求适配器教程页面中。</p>
<p>注意：kinetic 版本需要通过源码安装 moveit! 才能使用 CHOMP 和 STOMP。</p>
<h2 id="OMPL-CHOMP"><a href="#OMPL-CHOMP" class="headerlink" title="OMPL + CHOMP"></a><strong>OMPL + CHOMP</strong></h2><p>该节证明了 CHOMP 可以作为其他规划算法得到的规划的后处理优化技术。即：一些随机规划算法产生了 CHOMP 的初始猜测。CHOMP 根据这个最初的猜测，进一步优化轨迹。要做到这一点，请遵循以下步骤:</p>
<p>① ompl_planning_pipeline.launch，将 planning_adapters 修改为</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;planning_adapters&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">value</span>=<span class="string">&quot;default_planner_request_adapters/AddTimeParameterization</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixWorkspaceBounds</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixStartStateBounds</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixStartStateCollision</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixStartStatePathConstraints</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/CHOMPOptimizerAdapter&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>即：在最后添加 CHOMP 适配器</p>
<p>② planning_adapters 的值是上述适配器被调用的顺序。顺序很重要。在 CHOMP 适配器内部，在调用 CHOMP 优化求解器之前调用 OMPL，因此 CHOMP 将 OMPL 计算的初始路径作为进一步优化的起点。</p>
<p>③ 在 launch 文件(通常为 ompl_planning_pipeline.launch.xml)中 ompl_planning.yaml 后面添加 chomp_planning.yaml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/config/ompl_planning.yaml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/config/chomp_planning.yaml&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>



<p>④ 确保 move_group.launch 文件中默认 planner 是 ompl</p>
<p>⑤ chomp_planning.yaml 文件中，添加以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">trajectory_initialization_method: &quot;fillTrajectory&quot;  </span><br></pre></td></tr></table></figure>



<p>在 RViz motion planning 面板 Context 下选择 OMPL。</p>
<h2 id="STOMP-CHOMP"><a href="#STOMP-CHOMP" class="headerlink" title="STOMP + CHOMP"></a><strong>STOMP + CHOMP</strong></h2><p>CHOMP 作为 STOMP 得到的方案的后处理优化技术。</p>
<p>使用步骤：</p>
<p>① stomp_planning_pipeline.launch 中，修改 planning_adapter 为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;planning_adapters&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">value</span>=<span class="string">&quot;default_planner_request_adapters/AddTimeParameterization</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixWorkspaceBounds</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixStartStateBounds</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixStartStateCollision</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixStartStatePathConstraints</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/CHOMPOptimizationAdapter&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>



<p>② 同样，也是顺序调用，因此顺序也很重要</p>
<p>③ 在 stomp_planning_pipeline.launch.xml 中 stomp_planning.yaml 后面添加 chomp_planning.yaml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/config/stomp_planning.yaml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/config/chomp_planning.yaml&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>



<p>④ 确保 move_group.launch 文件中默认 planner 是 stomp</p>
<p>⑤ chomp_planning.yaml 文件中，添加以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">trajectory_initialization_method: &quot;fillTrajectory&quot;</span><br></pre></td></tr></table></figure>



<h2 id="OMPL-STOMP"><a href="#OMPL-STOMP" class="headerlink" title="OMPL + STOMP"></a><strong>OMPL + STOMP</strong></h2><p>STOMP 作为 OMPL 得到的方案的后处理优化技术。</p>
<p>① ompl_planning_pipeline.launch，将 planning_adapters 修改为</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;planning_adapters&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">value</span>=<span class="string">&quot;default_planner_request_adapters/AddTimeParameterization</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixWorkspaceBounds</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixStartStateBounds</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixStartStateCollision</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/FixStartStatePathConstraints</span></span></span><br><span class="line"><span class="string"><span class="tag">           default_planner_request_adapters/STOMPSmoothingAdapter&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>即：在最后添加 STOMP 适配器</p>
<p>② planning_adapters 的值是上述适配器被调用的顺序。顺序很重要</p>
<p>③ 在 launch 文件(通常为 ompl_planning_pipeline.launch.xml)中 ompl_planning.yaml 后面添加 stomp_planning.yaml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/config/ompl_planning.yaml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/config/stomp_planning.yaml&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>



<p>④ 确保 move_group.launch 文件中默认 planner 是 ompl</p>
<p>⑤ stomp_planning.yaml 文件中，添加以下内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">initialization_method:</span> <span class="number">1</span> <span class="comment"># [ 1 : LINEAR_INTERPOLATION, </span></span><br><span class="line">                         <span class="comment">#   2 : CUBIC_POLYNOMIAL, </span></span><br><span class="line">                         <span class="comment">#   3 : MININUM_CONTROL_COST,</span></span><br><span class="line">                         <span class="comment">#   4 : FILL_TRACJECTORY]</span></span><br><span class="line"><span class="comment"># 替换为</span></span><br><span class="line"><span class="attr">initialization_method:</span> <span class="number">4</span>                         </span><br></pre></td></tr></table></figure>



<h2 id="CHOMP-STOMP"><a href="#CHOMP-STOMP" class="headerlink" title="CHOMP + STOMP"></a><strong>CHOMP + STOMP</strong></h2><p>注意：STOMP 平滑适配器是一项正在进行中的工作。</p>
<p>STOMP 作为 CHOMP 得到的方案的后处理优化技术。CHOMP 可用于生成路径，然后 STOMP 可用于平滑路径。这有助于摆脱在存在障碍物的情况下单独由 CHOMP 产生的轨迹的不稳定运动。</p>
<p>① chom_planning_pipeline.launch，将 planning_adapters 修改为</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;planning_adapters&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">value</span>=<span class="string">&quot;default_planner_request_adapters/STOMPSmoothingAdapter&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;request_adapters&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$(arg planning_adapters)&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>​        </p>
<p>② planning_adapters 的值是上述适配器被调用的顺序。顺序很重要</p>
<p>③ 在 launch 文件(通常为chomp_planning_pipeline.launch.xml)中 chomp_planning.yaml 后面添加 stomp_planning.yaml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/config/chomp_planning.yaml&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/config/stomp_planning.yaml&quot;</span>/&gt;</span> </span><br></pre></td></tr></table></figure>

<p>​      </p>
<p>④ 确保 move_group.launch 文件中默认 planner 是 chomp</p>
<p>⑤ stomp_planning.yaml 文件中，添加以下内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">initialization_method:</span> <span class="number">1</span> <span class="comment"># [ 1 : LINEAR_INTERPOLATION, </span></span><br><span class="line">                         <span class="comment">#   2 : CUBIC_POLYNOMIAL, </span></span><br><span class="line">                         <span class="comment">#   3 : MININUM_CONTROL_COST,</span></span><br><span class="line">                         <span class="comment">#   4 : FILL_TRACJECTORY]</span></span><br><span class="line"><span class="comment"># 替换为</span></span><br><span class="line"><span class="attr">initialization_method:</span> <span class="number">4</span>                         </span><br></pre></td></tr></table></figure>



<h2 id="planner-选择"><a href="#planner-选择" class="headerlink" title="planner 选择"></a>planner 选择</h2><p>本节将深入了解何时使用哪个规划器，以及如何在某个管道中使用某个规划请求适配器，从而生成健壮的总体路径。这里考虑分别使用 OMPL、STOMP、CHOMP 及一起使用来生成鲁棒的平滑优化路径。</p>
<ul>
<li><a href="https://github.com/ros-planning/moveit_tutorials/blob/kinetic-devel/doc/chomp_planner/chomp_planner_tutorial.html"><strong>CHOMP</strong></a>: <strong>是一种优化算法，对给定的初始轨迹进行优化</strong>。基于所处的环境，CHOMP 会迅速尝试将初始轨迹从碰撞中拉出。但是这里需要注意的一点是，为了避开障碍物，参数 <strong>ridge_factor</strong> 需要大于或等于 0.001。使用 CHOMP 可以在避开障碍物的同时找到路径。这里需要指出的是，尽管 CHOMP 可以成功地避开障碍，但它<strong>不能提供平滑的路径</strong>，<strong>在存在障碍的情况下往往会导致路径不稳定。对于 CHOMP 来说，避免碰撞是以轨迹的速度平滑为代价的</strong>。</li>
<li><a href="https://github.com/ros-planning/moveit_tutorials/blob/kinetic-devel/doc/stomp_planner/stomp_planner_tutorial.html"><strong>STOMP</strong></a>: 在合理的时间内产生光滑的表现良好的无碰撞路径。该方法依赖于生成噪声轨迹来探索初始(可能不可行)轨迹周围的空间，然后结合这些轨迹生成成本更低的更新轨迹。</li>
<li><a href="https://github.com/ros-planning/moveit_tutorials/blob/kinetic-devel/doc/ompl_interface/ompl_interface_tutorial.html"><strong>OMPL</strong></a>: 是一个开源库，用于<strong>基于采样&#x2F;随机化</strong>的运动规划算法。基于抽样的算法是<strong>概率完整的</strong>: 如果存在解，则一定能求解到，但不会报告不存在的解决方案。这些算法是有效的，通常能很快找到解决方案。</li>
</ul>
<p>组合使用：</p>
<ul>
<li><strong>OMPL + CHOMP</strong>：OMPL 可以作为 base planner 来产生一个初始运动规划，该规划可以作为 CHOMP 的初始猜测。然后 CHOMP 可以生成优化的路径。在大多数情况下，这样生成的路径的质量应该优于单独 OMPL 或单独 CHOMP 生成的路径</li>
<li><strong>OMPL + STOMP</strong>：由于 STOMP 可以作为一种平滑算法，它可以用来平滑其他运动规划器生成的计划。OMPL 首先生成一个路径，然后 STOMP 可以生成该路径的平滑版本。在大多数情况下，这样的路径应该比仅由 OMPL 或 STOMP 生成的路径更好</li>
<li><strong>STOMP + CHOMP</strong>：在这种情况下，STOMP 可以初始生成一条路径，CHOMP 可以将其作为初始猜测，并生成 STOMP 生成的平滑路径的优化版本</li>
<li><strong>CHOMP + STOMP</strong>：CHOMP 可用于生成路径，然后 STOMP 可用于平滑路径。这有助于摆脱由 CHOMP 单独在障碍物存在时产生的轨迹的颠簸运动</li>
</ul>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Multiple robto arms</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E5%8F%8C%E8%87%82%E6%8E%A7%E5%88%B6/Multiple%20robto%20arms/</url>
    <content><![CDATA[<p>使用 MoveIt 运动规划设置多臂环境的步骤如下:</p>
<ul>
<li>构建多臂 xacro&#x2F;URDF 模型</li>
<li>使用 MoveIt Setup Assistant 生成 moveit config 包</li>
<li>编写多臂的 ros controllers 配置及 launch 文件</li>
<li>集成仿真环境</li>
<li>规划机械臂运动</li>
</ul>
<h1 id="构建-xacro-URDF"><a href="#构建-xacro-URDF" class="headerlink" title="构建 xacro&#x2F;URDF"></a>构建 xacro&#x2F;URDF</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">robot name is: panda_multiple_arms</span><br><span class="line">---------- Successfully Parsed XML ---------------</span><br><span class="line">root Link: world has 1 child(ren)</span><br><span class="line">    child(1):  base</span><br><span class="line">        child(1):  left_arm_link0</span><br><span class="line">            child(1):  left_arm_link1</span><br><span class="line">                child(1):  left_arm_link2</span><br><span class="line">                    child(1):  left_arm_link3</span><br><span class="line">                        child(1):  left_arm_link4</span><br><span class="line">                            child(1):  left_arm_link5</span><br><span class="line">                                child(1):  left_arm_link6</span><br><span class="line">                                    child(1):  left_arm_link7</span><br><span class="line">                                        child(1):  left_arm_link8</span><br><span class="line">                                            child(1):  left_arm_hand</span><br><span class="line">                                                child(1):  left_arm_leftfinger</span><br><span class="line">                                                child(2):  left_arm_rightfinger</span><br><span class="line">                                                child(3):  left_arm_hand_sc</span><br><span class="line">                                                child(4):  left_arm_hand_tcp</span><br><span class="line">                                        child(2):  left_arm_link7_sc</span><br><span class="line">                                    child(2):  left_arm_link6_sc</span><br><span class="line">                                child(2):  left_arm_link5_sc</span><br><span class="line">                            child(2):  left_arm_link4_sc</span><br><span class="line">                        child(2):  left_arm_link3_sc</span><br><span class="line">                    child(2):  left_arm_link2_sc</span><br><span class="line">                child(2):  left_arm_link1_sc</span><br><span class="line">            child(2):  left_arm_link0_sc</span><br><span class="line">        child(2):  right_arm_link0</span><br><span class="line">            child(1):  right_arm_link1</span><br><span class="line">                child(1):  right_arm_link2</span><br><span class="line">                    child(1):  right_arm_link3</span><br><span class="line">                        child(1):  right_arm_link4</span><br><span class="line">                            child(1):  right_arm_link5</span><br><span class="line">                                child(1):  right_arm_link6</span><br><span class="line">                                    child(1):  right_arm_link7</span><br><span class="line">                                        child(1):  right_arm_link8</span><br><span class="line">                                            child(1):  right_arm_hand</span><br><span class="line">                                                child(1):  right_arm_leftfinger</span><br><span class="line">                                                child(2):  right_arm_rightfinger</span><br><span class="line">                                                child(3):  right_arm_hand_sc</span><br><span class="line">                                                child(4):  right_arm_hand_tcp</span><br><span class="line">                                        child(2):  right_arm_link7_sc</span><br><span class="line">                                    child(2):  right_arm_link6_sc</span><br><span class="line">                                child(2):  right_arm_link5_sc</span><br><span class="line">                            child(2):  right_arm_link4_sc</span><br><span class="line">                        child(2):  right_arm_link3_sc</span><br><span class="line">                    child(2):  right_arm_link2_sc</span><br><span class="line">                child(2):  right_arm_link1_sc</span><br><span class="line">            child(2):  right_arm_link0_sc</span><br></pre></td></tr></table></figure>



<h1 id="MoveIt-config-包"><a href="#MoveIt-config-包" class="headerlink" title="MoveIt config 包"></a>MoveIt config 包</h1><img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E5%8F%8C%E8%87%82%E6%8E%A7%E5%88%B6/Multiple%20robto%20arms/image-20240917201538357.png" class="" title="image-20240917201538357">

<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E5%8F%8C%E8%87%82%E6%8E%A7%E5%88%B6/Multiple%20robto%20arms/image-20240917201550345.png" class="" title="image-20240917201550345">



<h1 id="配置-controllers-及-launch"><a href="#配置-controllers-及-launch" class="headerlink" title="配置 controllers 及 launch"></a>配置 controllers 及 launch</h1><p>需要两种类型的 controllers：</p>
<ul>
<li>joint state controller：发布所有关节状态</li>
<li>joint trajectory controller：执行关节空间轨迹</li>
</ul>
<p>此例中，controllers 包括：joint_state_controller、right_arm_trajectory_controller 和 left_arm_trajectory_controller（未考虑夹持器）。</p>
<p>创建 joint_state_controller.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">joint_state_controller:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">joint_state_controller/JointStateController</span></span><br><span class="line">    <span class="attr">publish_rate:</span> <span class="number">50</span></span><br></pre></td></tr></table></figure>

<p>创建 trajectory_controller.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">right_arm_trajectory_controller:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;position_controllers/JointTrajectoryController&quot;</span></span><br><span class="line">    <span class="attr">joints:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">right_arm_joint1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">right_arm_joint2</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">right_arm_joint3</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">right_arm_joint4</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">right_arm_joint5</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">right_arm_joint6</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">right_arm_joint7</span></span><br><span class="line">    <span class="attr">constraints:</span></span><br><span class="line">        <span class="attr">goal_time:</span> <span class="number">0.6</span></span><br><span class="line">        <span class="attr">stopped_velocity_tolerance:</span> <span class="number">0.05</span></span><br><span class="line">        <span class="attr">right_arm_joint1:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">right_arm_joint2:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">right_arm_joint3:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">right_arm_joint4:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">right_arm_joint5:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">right_arm_joint6:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">right_arm_joint7:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">    <span class="attr">stop_trajectory_duration:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">state_publish_rate:</span>  <span class="number">25</span></span><br><span class="line">    <span class="attr">action_monitor_rate:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="attr">left_arm_trajectory_controller:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;position_controllers/JointTrajectoryController&quot;</span></span><br><span class="line">    <span class="attr">joints:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">left_arm_joint1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">left_arm_joint2</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">left_arm_joint3</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">left_arm_joint4</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">left_arm_joint5</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">left_arm_joint6</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">left_arm_joint7</span></span><br><span class="line">    <span class="attr">constraints:</span></span><br><span class="line">        <span class="attr">goal_time:</span> <span class="number">0.6</span></span><br><span class="line">        <span class="attr">stopped_velocity_tolerance:</span> <span class="number">0.05</span></span><br><span class="line">        <span class="attr">left_arm_joint1:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">left_arm_joint2:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">left_arm_joint3:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">left_arm_joint4:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">left_arm_joint5:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">left_arm_joint6:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">        <span class="attr">left_arm_joint7:</span> &#123;<span class="attr">trajectory:</span> <span class="number">0.1</span>, <span class="attr">goal:</span> <span class="number">0.1</span>&#125;</span><br><span class="line">    <span class="attr">stop_trajectory_duration:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">state_publish_rate:</span>  <span class="number">25</span></span><br><span class="line">    <span class="attr">action_monitor_rate:</span> <span class="number">10</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">#notice that the grippers joint2 mimics joint1</span></span><br><span class="line">  <span class="comment">#this is why it is not listed under the hand controllers</span></span><br><span class="line">  <span class="attr">right_hand_controller:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;effort_controllers/JointTrajectoryController&quot;</span></span><br><span class="line">    <span class="attr">joints:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">right_arm_finger_joint1</span></span><br><span class="line">    <span class="attr">gains:</span></span><br><span class="line">        <span class="attr">right_arm_finger_joint1:</span>  &#123;<span class="attr">p:</span> <span class="number">50.0</span>, <span class="attr">d:</span> <span class="number">1.0</span>, <span class="attr">i:</span> <span class="number">0.01</span>, <span class="attr">i_clamp:</span> <span class="number">1.0</span>&#125;</span><br><span class="line"></span><br><span class="line">  <span class="attr">left_hand_controller:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;effort_controllers/JointTrajectoryController&quot;</span></span><br><span class="line">    <span class="attr">joints:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">left_arm_finger_joint1</span></span><br><span class="line">    <span class="attr">gains:</span></span><br><span class="line">        <span class="attr">left_arm_finger_joint1:</span>  &#123;<span class="attr">p:</span> <span class="number">50.0</span>, <span class="attr">d:</span> <span class="number">1.0</span>, <span class="attr">i:</span> <span class="number">0.01</span>, <span class="attr">i_clamp:</span> <span class="number">1.0</span>&#125;    </span><br></pre></td></tr></table></figure>

<p>创建 control_utils.launch</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Robot state publisher --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;robot_state_publisher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;robot_state_publisher&quot;</span> <span class="attr">name</span>=<span class="string">&quot;robot_state_publisher&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;publish_frequency&quot;</span> <span class="attr">type</span>=<span class="string">&quot;double&quot;</span> <span class="attr">value</span>=<span class="string">&quot;50.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;tf_prefix&quot;</span> <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Joint state controller --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_multiple_arms)/config/joint_state_controller.yaml&quot;</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;joint_state_controller_spawner&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;controller_manager&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">&quot;spawner&quot;</span> <span class="attr">args</span>=<span class="string">&quot;joint_state_controller&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;false&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Joint trajectory controller --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_multiple_arms)/config/trajectory_controller.yaml&quot;</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;arms_trajectory_controller_spawner&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;controller_manager&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">&quot;spawner&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;false&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">args</span>=<span class="string">&quot;right_arm_trajectory_controller left_arm_trajectory_controller </span></span></span><br><span class="line"><span class="string"><span class="tag">            right_hand_controller left_hand_controller&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>joint state controller 在 &#x2F;joint_states 主题发布关节状态信息。robot state publisher 使用该主题数据来计算正运动学并发布机器人 link 的姿态&#x2F;变换。joint trajectory controller 能够在一组关节上执行关节空间轨迹。</p>
<h1 id="集成-gazebo-仿真"><a href="#集成-gazebo-仿真" class="headerlink" title="集成 gazebo 仿真"></a>集成 gazebo 仿真</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install ros-noetic-ros-control ros-noetic-ros-controllers \</span></span><br><span class="line"><span class="language-bash">    ros-noetic-joint-state-controller ros-noetic-effort-controllers \</span></span><br><span class="line"><span class="language-bash">    ros-noetic-position-controllers ros-noetic-velocity-controllers \</span></span><br><span class="line"><span class="language-bash">    ros-noetic-gazebo-ros ros-noetic-gazebo-ros-control \</span></span><br><span class="line"><span class="language-bash">    ros-noetic-moveit-ros-control-interface \</span></span><br><span class="line"><span class="language-bash">    ros-noetic-moveit-simple-controller-manager \</span></span><br><span class="line"><span class="language-bash">    ros-noetic-moveit-fake-controller-manager ros-noetic-moveit-planners</span></span><br></pre></td></tr></table></figure>

<p>启动 gazebo 并加载模型</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Launch empty Gazebo world --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find gazebo_ros)/launch/empty_world.launch&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;use_sim_time&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;gui&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;paused&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;debug&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Find my robot Description--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;robot_description&quot;</span> <span class="attr">command</span>=<span class="string">&quot;$(find xacro)/xacro  &#x27;$(find panda_multiple_arms)/robot_description/panda_multiple_arms.xacro&#x27;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spawn The robot over the robot_description param--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;urdf_spawner&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;gazebo_ros&quot;</span> <span class="attr">type</span>=<span class="string">&quot;spawn_model&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;false&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span> <span class="attr">args</span>=<span class="string">&quot;-urdf -param robot_description -model panda_multiple_arms&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>启动 moveit</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Run the main MoveIt executable with trajectory execution --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_multiple_arms_moveit_config)/launch/move_group.launch&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;allow_trajectory_execution&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;moveit_controller_manager&quot;</span> <span class="attr">value</span>=<span class="string">&quot;ros_control&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;fake_execution_type&quot;</span> <span class="attr">value</span>=<span class="string">&quot;interpolate&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;debug&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;pipeline&quot;</span> <span class="attr">value</span>=<span class="string">&quot;ompl&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;load_robot_description&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Start the simulated robot in an empty Gazebo world --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_multiple_arms)/launch/panda_multiple_arms_empty_world.launch&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Start the controllers and robot state publisher--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_multiple_arms)/launch/control_utils.launch&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Start moveit_rviz with the motion planning plugin --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_multiple_arms_moveit_config)/launch/moveit_rviz.launch&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;rviz_config&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$(find panda_multiple_arms_moveit_config)/launch/moveit.rviz&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>双臂控制</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>使用近似约束流形进行规划</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/%E4%BD%BF%E7%94%A8%E8%BF%91%E4%BC%BC%E7%BA%A6%E6%9D%9F%E6%B5%81%E5%BD%A2%E8%BF%9B%E8%A1%8C%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<p>Planning with Approximated Constraint Manifolds。即：使用近似约束流形进行规划。</p>
<p>OMPL 支持自定义约束，以支持遵循期望行为的规划轨迹。约束可以在关节空间和笛卡尔空间中定义，后者基于方向或位置。在规划轨迹时，每个关节状态都需要遵循所有设置的约束，默认情况下通过拒绝采样(rejection sampling)来执行。然而，这可能会导致规划时间过长，特别是当约束非常严格并且拒绝率相应较高时。</p>
<p>Sucan 等人提出了一种方法，<strong>预先计算约束流形(constraint manifold)的近似值</strong>并在其中执行轨迹规划。OMPL 插件包含针对给定约束集执行此操作并将其保存在数据库中的功能。在以后的实例中，可以加载数据库以使用任何 OMPL 规划器进行受限规划，从而大大减少规划时间。</p>
<p>有关如何规划路径约束的更多信息，请查看<a href="http://docs.ros.org/en/melodic/api/moveit_tutorials/html/doc/move_group_interface/move_group_interface_tutorial.html#planning-with-path-constraints">此处</a>。</p>
<h1 id="创建-constraints-database"><a href="#创建-constraints-database" class="headerlink" title="创建 constraints database"></a><strong>创建 constraints database</strong></h1><p>在 demo_construct_state_database.cpp 中可以找到一个关于如何从一个约束构造一个近似数据库的示例。</p>
<p>主要功能在 ConstraintsLibrary 类中。</p>
<p>通过调用 <strong>addConstraintsApproximation(</strong>) 方法添加 Constraints，可多次调用添加多个约束。该函数参数：</p>
<ul>
<li>constraints message(moveit_msgs::Constraints)</li>
<li>robot description</li>
<li>planning scene(planning_scene::PlanningScenePtr)</li>
<li>constraints options</li>
</ul>
<h2 id="定义-constraints"><a href="#定义-constraints" class="headerlink" title="定义 constraints"></a><strong>定义 constraints</strong></h2><p>generate_state_database 从 ROS 参数服务器中的  &#x2F;constraints上读取约束。</p>
<p>可以在 rosparam 中定义这些，以便将它们一起加载到一个文件中。例如：X_moveit_config&#x2F;config&#x2F;constraints.yaml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">path_constraint:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">some_constraints</span></span><br><span class="line">  <span class="attr">constraints:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">orientation</span></span><br><span class="line">    <span class="attr">frame_id:</span> <span class="string">world</span></span><br><span class="line">    <span class="comment"># etc, as described below</span></span><br></pre></td></tr></table></figure>

<p>​            </p>
<h3 id="JointConstraint"><a href="#JointConstraint" class="headerlink" title="JointConstraint"></a><strong>JointConstraint</strong></h3><p>限制关节位置。有三种方法可以简洁地指定这个参数</p>
<ul>
<li>position + a single tolerance</li>
<li>position + lower an upper tolerance</li>
<li>upper and lower bound</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">joint</span></span><br><span class="line">  <span class="attr">joint_name:</span> <span class="string">first_joint</span></span><br><span class="line">  <span class="attr">position:</span> <span class="number">0.1</span></span><br><span class="line">  <span class="attr">tolerance:</span> <span class="number">0.2</span></span><br><span class="line">  <span class="attr">weight:</span> <span class="number">1.0</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">joint</span></span><br><span class="line">  <span class="attr">joint_name:</span> <span class="string">second_joint</span></span><br><span class="line">  <span class="attr">position:</span> <span class="number">0.1</span></span><br><span class="line">  <span class="attr">tolerances:</span> [<span class="number">0.1</span>, <span class="number">0.2</span>]</span><br><span class="line">  <span class="attr">weight:</span> <span class="number">1.0</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">joint</span></span><br><span class="line">  <span class="attr">joint_name:</span> <span class="string">third_joint</span></span><br><span class="line">  <span class="attr">bounds:</span> [<span class="number">-0.5</span>, <span class="number">1.0</span>]</span><br><span class="line">  <span class="attr">weight:</span> <span class="number">1.0</span></span><br></pre></td></tr></table></figure>

<p>​         </p>
<h3 id="PoseConstraints"><a href="#PoseConstraints" class="headerlink" title="PoseConstraints"></a><strong>PoseConstraints</strong></h3><p>约束 link 的允许位置。</p>
<p>target_offset 是一个 link 的相对位置。例如，末端执行器的尖端相对于它的安装点或其他原点定义。通过沿着每个轴指定上界和下界，这个区域(仅在这个紧凑定义中为方框)是紧凑定义的。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">position</span></span><br><span class="line">  <span class="attr">frame_id:</span> <span class="string">base_link</span></span><br><span class="line">  <span class="attr">link_name:</span> <span class="string">gripper_link</span></span><br><span class="line">  <span class="attr">target_offset:</span> [<span class="number">0.01</span>, <span class="number">0.01</span>, <span class="number">0.01</span>]</span><br><span class="line">  <span class="attr">region:</span></span><br><span class="line">    <span class="attr">x:</span> [<span class="number">0</span>, <span class="number">1.0</span>] <span class="comment"># [start, end]</span></span><br><span class="line">    <span class="attr">y:</span> [<span class="number">0</span>, <span class="number">1.0</span>] <span class="comment"># [start, end]</span></span><br><span class="line">    <span class="attr">z:</span> [<span class="number">0</span>, <span class="number">1.0</span>] <span class="comment"># [start, end]</span></span><br><span class="line">  <span class="attr">weight:</span> <span class="number">1.0</span></span><br></pre></td></tr></table></figure>

<p>​           </p>
<h3 id="OrientationConstraints"><a href="#OrientationConstraints" class="headerlink" title="OrientationConstraints"></a><strong>OrientationConstraints</strong></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">orientation</span></span><br><span class="line">  <span class="attr">frame_id:</span> <span class="string">base_link</span></span><br><span class="line">  <span class="attr">link_name:</span> <span class="string">gripper_link</span></span><br><span class="line">  <span class="attr">orientation:</span> [<span class="number">-3.1415269</span>, <span class="number">-1.57079632</span>, <span class="number">0</span>] <span class="comment">#RPY</span></span><br><span class="line">  <span class="attr">tolerances:</span> [<span class="number">6.28318531</span>, <span class="number">0.2</span>, <span class="number">6.28318531</span>]</span><br><span class="line">  <span class="attr">weight:</span> <span class="number">1.0</span></span><br></pre></td></tr></table></figure>

<p>​           </p>
<h3 id="VisibilityConstraints"><a href="#VisibilityConstraints" class="headerlink" title="VisibilityConstraints"></a><strong>VisibilityConstraints</strong></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">visibility</span></span><br><span class="line">  <span class="attr">target_radius:</span> <span class="number">0.5</span></span><br><span class="line">  <span class="attr">target_pose:</span></span><br><span class="line">    <span class="attr">frame_id:</span> <span class="string">&#x27;base_link&#x27;</span></span><br><span class="line">    <span class="attr">position:</span> [<span class="number">1.2</span>, <span class="number">3.4</span>, <span class="number">5.6</span>]</span><br><span class="line">    <span class="attr">orientation:</span> [<span class="number">-3.1415269</span>, <span class="number">-1.57079632</span>, <span class="number">0</span>] <span class="comment">#RPY</span></span><br><span class="line">  <span class="attr">cone_sides:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">sensor_pose:</span></span><br><span class="line">    <span class="attr">frame_id:</span> <span class="string">&#x27;gripper_cam_link&#x27;</span></span><br><span class="line">    <span class="attr">position:</span> [<span class="number">1.2</span>, <span class="number">3.4</span>, <span class="number">5.6</span>]</span><br><span class="line">    <span class="attr">orientation:</span> [<span class="number">-3.1415269</span>, <span class="number">-1.57079632</span>, <span class="number">0</span>] <span class="comment">#RPY</span></span><br><span class="line">  <span class="attr">max_view_angle:</span> <span class="number">1.1</span></span><br><span class="line">  <span class="attr">max_range_angle:</span> <span class="number">0.55</span></span><br><span class="line">  <span class="attr">weight:</span> <span class="number">1.0</span></span><br></pre></td></tr></table></figure>



<h2 id="运行-database-generator"><a href="#运行-database-generator" class="headerlink" title="运行 database generator"></a><strong>运行 database generator</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需先启动 demo.launch</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch ompl_interface generate_state_database.launch \</span></span><br><span class="line"><span class="language-bash">    constraints_file:=$(rospack find X_moveit_config)/config/constraints.yaml \</span></span><br><span class="line"><span class="language-bash">    planning_group:=arm</span></span><br></pre></td></tr></table></figure>

<p>​              </p>
<h2 id="Internals"><a href="#Internals" class="headerlink" title="Internals"></a><strong>Internals</strong></h2><p>约束是通过调用 <strong>addConstraintApproximation()</strong> 来添加的，后续可以调用它来在近似中包含多个约束。该函数需要四个参数:</p>
<ul>
<li>constraints message</li>
<li>robot description(std::string)</li>
<li>planning scene(planning_scene::PlanningScenePtr)</li>
<li>construction options</li>
</ul>
<h2 id="Constraints-message"><a href="#Constraints-message" class="headerlink" title="Constraints message"></a><strong>Constraints message</strong></h2><p>约束消息对象可以像往常一样以任何类型和所需的容差(tolerances)初始化。关键的一点是，消息的名称应该是描述性的，并且对约束是唯一的。稍后在规划使用近似数据库时，将使用该名称来引用相应的约束。</p>
<h2 id="Constraints-options"><a href="#Constraints-options" class="headerlink" title="Constraints options"></a><strong>Constraints options</strong></h2><p>ompl_interface::constraintationconstructionoptions 对象指定了近似流形(approximation manifold)的各种特征，例如：实例大小、密度、空间参数化类型等。以下是每个选项的概述:</p>
<ul>
<li>unsigned int <strong>samples</strong> - 近似图的大小</li>
<li>unsigned int <strong>edges_per_sample</strong> - 近似图的度</li>
<li>double <strong>max_edge_length</strong> - 边缘插入的距离阈值</li>
<li>bool <strong>explicit_motions</strong> - 定义边界是否应遵循约束</li>
<li>double <strong>explicit_points_resolution</strong> - 边缘插值分辨率的约束检查</li>
<li>unsigned int <strong>max_explicit_points</strong> - edge 要检查的最大点数</li>
</ul>
<h3 id="Graph-size"><a href="#Graph-size" class="headerlink" title="Graph size"></a><strong>Graph size</strong></h3><p>显然，稳定的规划结果需要详细的近似，因此 samples 越高，性能越可靠。然而，较高的值会导致数据库的构建时间线性增加。找到一个合适的流形大小是一个高度依赖于约束有多严格的问题。对于大多数约束，使用范围在 1000 到 10000 之间的值就足够了。</p>
<h3 id="Edges"><a href="#Edges" class="headerlink" title="Edges"></a><strong>Edges</strong></h3><p>向流形(manifold)添加边是可选的，可以通过将 edges_per_sample 设置为 0 来禁用。在大多数情况下，轨迹规划在没有边的情况下也可以正常工作，因为采样过程只需要状态来运行。<strong>max_edge_length</strong> 定义允许添加边的两个状态的最大距离。通过将 explicit_motions 设置为 true，还可以强制边缘匹配约束，使它们表示相邻状态之间的有效路径。这在具有许多难以到达的区域非常稀疏的近似值中是尤其有利的，因为绝对距离不是可达性的度量。通过测试状态对之间的线性插值点来检查边是否匹配约束。这些插值点的数量设置为 <strong>explicit_points_resolution 乘以边缘长度</strong>，<strong>并受max_explicit_points 限制</strong>。</p>
<p>添加边会极大地增加数据库的构建时间，而增加显式运动检查甚至会对此产生额外的影响。在测试边缘时，请记住应调整 edges_per_sample 和 max_edge_length 值，以便始终有足够接近的状态可以连接。这需要根据密度和适应状态之间的实际距离来分析近似空间的大小。</p>
<h2 id="Database-Construction"><a href="#Database-Construction" class="headerlink" title="Database Construction"></a><strong>Database Construction</strong></h2><p>在将约束添加到 ConstraintsLibrary 对象之后，数据库可以通过调用 saveApproximationConstraints() 来构建，它只接受数据库应该保存的相对目录。</p>
<h1 id="数据库加载和使用"><a href="#数据库加载和使用" class="headerlink" title="数据库加载和使用"></a><strong>数据库加载和使用</strong></h1><p>约束数据库必须在启动 move group 节点时通过设置 ros 参数来加载:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;move_group/constraint_approximations_path&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;path_to_database&gt;&quot;</span>/&gt;</span>   </span><br></pre></td></tr></table></figure>

<p>​           </p>
<p>要验证是否找到了数据库，请检查是否在日志中显示了命名的约束。</p>
<p>为了进行规划，只需像往常一样初始化约束消息，并将消息名称设置为用于构建数据库的确切名称。另外，需要再次指定相同的值和公差，因为默认情况下规划器只是在状态上采样，但在路径规划插值期间没有必要遵循约束。没有初始化约束的正确命名的约束消息将使用数据库，但因此可能导致无效的轨迹。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>双臂控制</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E5%8F%8C%E8%87%82%E6%8E%A7%E5%88%B6/%E5%8F%8C%E8%87%82%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">group</span> <span class="attr">name</span>=<span class="string">&quot;a_bot&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;a_bot_shoulder_pan_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;a_bot_shoulder_lift_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;a_bot_elbow_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;a_bot_wrist_1_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;a_bot_wrist_2_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;a_bot_wrist_3_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">chain</span> <span class="attr">base_link</span>=<span class="string">&quot;a_bot_base_link&quot;</span> <span class="attr">tip_link</span>=<span class="string">&quot;a_bot_gripper_tip_link&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">group</span> <span class="attr">name</span>=<span class="string">&quot;b_bot&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;b_bot_shoulder_pan_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;b_bot_shoulder_lift_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;b_bot_elbow_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;b_bot_wrist_1_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;b_bot_wrist_2_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">joint</span> <span class="attr">name</span>=<span class="string">&quot;b_bot_wrist_3_joint&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">chain</span> <span class="attr">base_link</span>=<span class="string">&quot;b_bot_base_link&quot;</span> <span class="attr">tip_link</span>=<span class="string">&quot;b_bot_robotiq_85_tip_link&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">group</span> <span class="attr">name</span>=<span class="string">&quot;both_bots&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">group</span> <span class="attr">name</span>=<span class="string">&quot;a_bot&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">group</span> <span class="attr">name</span>=<span class="string">&quot;b_bot&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>保留了多个 end-effector 信息，因此，可以如下设置多个目标</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// c++</span></span><br><span class="line">group.<span class="built_in">setPoseTarget</span>(home1, ee_link_a);  </span><br><span class="line">group.<span class="built_in">setPoseTarget</span>(targetpose, ee_link_b);</span><br><span class="line">success_plan = group.<span class="built_in">plan</span>(myplan);</span><br><span class="line"></span><br><span class="line"><span class="meta"># python</span></span><br><span class="line">self.both_move_group.<span class="built_in">set_pose_target</span>(front_wpose, self.front_eef_link)</span><br><span class="line">self.both_move_group.<span class="built_in">set_pose_target</span>(rear_wpose, self.rear_eef_link)</span><br><span class="line">plan = self.both_move_group.<span class="built_in">go</span>(wait=True)</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dual_arm_plan</span>(<span class="params">self, scale=<span class="number">1</span></span>):</span><br><span class="line">    front_wpose = <span class="variable language_">self</span>.front_move_group.get_current_pose().pose</span><br><span class="line">    rear_wpose = <span class="variable language_">self</span>.rear_move_group.get_current_pose().pose</span><br><span class="line"></span><br><span class="line">    front_wpose.position.z -= scale * <span class="number">0.1</span>  <span class="comment"># First move up (z)</span></span><br><span class="line">    front_wpose.position.y += scale * <span class="number">0.2</span></span><br><span class="line"></span><br><span class="line">    rear_wpose.position.z += scale * <span class="number">0.1</span>  <span class="comment"># First move up (z)</span></span><br><span class="line">    rear_wpose.position.y -= scale * <span class="number">0.2</span></span><br><span class="line"></span><br><span class="line">    <span class="variable language_">self</span>.both_move_group.set_pose_target(front_wpose, <span class="variable language_">self</span>.front_eef_link)</span><br><span class="line">    <span class="variable language_">self</span>.both_move_group.set_pose_target(rear_wpose, <span class="variable language_">self</span>.rear_eef_link)</span><br><span class="line">    plan = <span class="variable language_">self</span>.both_move_group.go(wait=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># Calling `stop()` ensures that there is no residual movement</span></span><br><span class="line">    <span class="variable language_">self</span>.both_move_group.stop()</span><br><span class="line">    <span class="variable language_">self</span>.both_move_group.clear_pose_targets()</span><br></pre></td></tr></table></figure>





<p>注意：computeCartesianPath 不支持指定 EEF，因此，可以为每个手臂分别生成笛卡尔路径，然后<a href="https://pastebin.com/embed_js/sqPdMPzU">合并轨迹</a>。</p>
<p>当有新轨迹要执行时，用户需要对该轨迹与当前正在执行的轨迹进行碰撞检测。检测方法</p>
<ul>
<li><p>简单方法</p>
</li>
<li><ul>
<li>创建一个新的 merged 机器人轨迹，仅用于碰撞检查</li>
<li>该 merged 轨迹许包含当前轨迹的剩余部分和新的轨迹</li>
<li>merged 轨迹可通过 PlanningScene 中的 <a href="http://docs.ros.org/en/api/moveit_core/html/classplanning__scene_1_1PlanningScene.html#a6970c04a1d7bcaebcc64f7221ac343e7">isPathValid</a> 方法来进行碰撞检测</li>
</ul>
</li>
<li><p>只对轨迹上每个点进行碰撞检测，所以不能严格保证安全。(Bullet 提供连续碰撞检查)。应该使用 padding</p>
</li>
<li><p>由于每个控制器和物理执行的延迟，执行轨迹的机器人的位置不会完全准确。这是使用 padding 的另一个原因</p>
</li>
<li><p>padding 可能会导致与环境的碰撞，即使进入的轨迹应该已经检查过了。可以通过修改 PlanningScene 对象的 <strong>AllowedCollisionMatrix</strong> 来忽略环境碰撞(这里的“环境”指的是固定的机器人链接)</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// declare type aliases</span></span><br><span class="line"><span class="keyword">using</span> ExecStatus = moveit_controller_manager::ExecutionStatus;</span><br><span class="line"></span><br><span class="line"><span class="comment">// declare and initialize moveitcpp</span></span><br><span class="line"> moveit::planning_interface::MoveItCppPtr planning_interface_ = ... ; <span class="comment">// MoveItCpp is only used to gain access to the robot model and planning scene monitor</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// declare trajectories and controller names</span></span><br><span class="line">std::vector&lt;moveit_msgs::RobotTrajectory&gt; trajectories = ...</span><br><span class="line">std::vector&lt;std::string&gt; controller_name = &#123;<span class="string">&quot;fake_arm1_controller&quot;</span>, <span class="string">&quot;fake_arm2_controller&quot;</span>, ...&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// declare vector for storing futures</span></span><br><span class="line">std::vector&lt;std::shared_future&lt;ExecStatus&gt;&gt; exec_futures;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(std::<span class="type">size_t</span> i =<span class="number">0</span>; i &lt; trajectories.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> traj = trajectories[i];</span><br><span class="line">std::string controller_name = controller_names[i];</span><br><span class="line"></span><br><span class="line"><span class="comment">// instantiate controller</span></span><br><span class="line">trajectory_execution_manager::TrajectoryExecutionManagerPtr traj_exec_mngr = std::<span class="built_in">make_shared</span>&lt; trajectory_execution_manager::TrajectoryExecutionManager&gt;(</span><br><span class="line">            planning_interface_-&gt;<span class="built_in">getRobotModel</span>(), planning_interface_-&gt;<span class="built_in">getPlanningSceneMonitorNonConst</span>()-&gt;<span class="built_in">getStateMonitorNonConst</span>(), <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// create packaged task with lambda that executes the trajectory</span></span><br><span class="line"><span class="function">std::packaged_task&lt; <span class="title">ExecStatus</span> <span class="params">()</span>&gt; <span class="title">async_task</span> <span class="params">([traj_exec_mngr, traj, controller_name]() -&gt; ExecStatus&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">  traj_exec_mngr-&gt;push(traj.joint_trajectory, controller_name);</span></span></span><br><span class="line"><span class="params"><span class="function">  traj_exec_mngr-&gt;execute([](<span class="type">const</span> moveit_controller_manager::ExecutionStatus&amp; st)&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">    ROS_INFO_COND(st,<span class="string">&quot;&gt;&gt;&gt;&gt; Trajectory completed&quot;</span>);</span></span></span><br><span class="line"><span class="params"><span class="function">    ROS_ERROR_COND(!st,<span class="string">&quot;Trajectory failed&quot;</span>);</span></span></span><br><span class="line"><span class="params"><span class="function">  &#125;);</span></span></span><br><span class="line"><span class="params"><span class="function">  moveit_controller_manager::ExecutionStatus st = traj_exec_mngr-&gt;waitForExecution();</span></span></span><br><span class="line"><span class="params"><span class="function">  traj_exec_mngr-&gt;stopExecution(<span class="literal">true</span>); <span class="comment">// don&#x27;t know if this is necessary</span></span></span></span><br><span class="line"><span class="params"><span class="function">  traj_exec_mngr-&gt;clear();</span></span></span><br><span class="line"><span class="params"><span class="function">  <span class="keyword">return</span> st;</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get shared future and store </span></span><br><span class="line">exec_futures.<span class="built_in">push_back</span>(std::<span class="built_in">shared_future</span>&lt;ExecStatus&gt;(async_task.<span class="built_in">get_future</span>()));</span><br><span class="line"></span><br><span class="line"><span class="comment">// move task into new thread</span></span><br><span class="line"><span class="function">std::thread <span class="title">t</span><span class="params">(std::move(async_task))</span></span>;</span><br><span class="line">t.<span class="built_in">detach</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// wait for threads to complete</span></span><br><span class="line"><span class="keyword">while</span>(ros::<span class="built_in">ok</span>() &amp;&amp; loop_pause.<span class="built_in">sleep</span>())</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(std::<span class="built_in">all_of</span>(exec_futures.<span class="built_in">begin</span>(), exec_futures.<span class="built_in">end</span>(),[](std::shared_future&lt;ExecStatus&gt;&amp; f)&#123;</span><br><span class="line">    std::future_status st = f.<span class="built_in">wait_for</span>(std::chrono::<span class="built_in">duration</span>&lt;<span class="type">double</span>&gt;(<span class="number">0.01</span>));</span><br><span class="line">    <span class="keyword">return</span> st == std::future_status::ready;</span><br><span class="line">  &#125;))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>参考：</p>
<ul>
<li><a href="http://wiki.ros.org/Robots/TIAGo%2B%2B/Tutorials/MoveIt/Planning_joint_space">TIAGo++ Planning in joint space</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch tiago_dual_gazebo tiago_dual_gazebo.launch public_sim:=<span class="literal">true</span> end_effector_left:=pal-gripper end_effector_right:=pal-gripper</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">分别控制左右臂</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun tiago_dual_moveit_tutorial plan_dual_arm_torso_fk left 0.15 1.5 0.58 0.06 1.0 -1.70 0.0 0.0</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun tiago_dual_moveit_tutorial plan_dual_arm_torso_fk right 0.15 1.5 0.58 0.06 1.0 -1.70 0.0 0.0</span></span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://github.com/pablomalvido/Advanced_manipulation_moveit">Advanced_manipulation_moveit</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">未连接机械臂</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch motoman_sda10f_moveit_config demo_no_gripper.launch</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">若连接了机械臂</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch motoman_sda10f_moveit_config moveit_planning_execution_no_gripper.launch</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动 Dual-arm/left arm/right arm</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch advanced_manipulation_pkg plot_dual_arm_speeds.launch</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch advanced_manipulation_pkg plot\left_arm_speed.launch</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch advanced_manipulation_pkg plot\left_arm_angular_speed.launch</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">最后启动</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch advanced_manipulation_pkg advanced_manipulation.launch</span></span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://answers.ros.org/question/370136/planning-for-a-dual-arm-robot-in-moveit/">Planning for a dual arm robot in MoveIt</a></li>
<li><a href="https://github.com/cambel/dual_ur3e.git">dual_ur3e</a></li>
<li><a href="https://github.com/Infinity8sailor/multiple_arm_setup">multiple_arm_setup</a></li>
<li><a href="https://github.com/ros-planning/moveit/pull/2810">Draft: Simultaneous execution of trajectories</a></li>
</ul>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>双臂控制</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Deep Grasps</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E7%A4%BA%E4%BE%8B/Deep%20Grasps/</url>
    <content><![CDATA[<p>演示在 MoveIt Task Constructor 中使用 <a href="https://github.com/atenpas/gpd">GPD(Grasp Pose Detection)</a> 和 <a href="https://berkeleyautomation.github.io/dex-net/">Dex-Net</a> 进行抓取。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>示例</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Grasps</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E7%A4%BA%E4%BE%8B/Grasps/</url>
    <content><![CDATA[<p><a href="https://github.com/ros-planning/moveit_grasps.git">MoveIt Grasps </a>是一个 grasp generator。可以用作 MoveIt pick and place 的替代品。MoveIt Grasps 提供了基于可达性和笛卡尔式的接近、提升和撤退运动的抓取过滤功能。</p>
<p>抓取生成算法<strong>基于简单的长方体形状</strong>，不考虑摩擦锥或其他抓取动态。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> -b <span class="variable">$ROS_DISTRO</span>-devel https://github.com/ros-planning/moveit_grasps.git</span>   </span><br></pre></td></tr></table></figure>

<p>​           </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行 demos 前，需启动 rviz.launch.默认使用两指夹持器,也可切换为 suction 夹持器</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch moveit_grasps rviz.launch roslaunch moveit_grasps rviz.launch gripper:=suction</span></span><br></pre></td></tr></table></figure>

<p>注意：panda_moveit_config 的发布版本可能会滞后。如果 demo 运行有问题，可下载 panda_moveit_config 源码。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">完整demo.需修改 launch 文件中的 ee_group_name 为 panda_hand</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch moveit_grasps grasp_pipeline_demo.launch</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可视化 gripper 参数</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch moveit_grasps grasp_poses_visualizer_demo.launch</span> </span><br></pre></td></tr></table></figure>

<p>​             </p>
<p>Visualize Grasp Generation</p>
<p>该工具演示了在抓取生成过程中如何打分的几个概念。它基于所选择的抓取使用以下方法:</p>
<ul>
<li>Ideal TCP Grasp Pose：</li>
<li>Pose-Based Grasp Score Weighting：</li>
<li>Depth-Based Grasp Score Weighting：</li>
<li>Width-Based Grasp Score Weighting：</li>
<li>Overhange Grasp Score Weighting：</li>
</ul>
<p>Grasp Filter</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"> roslaunch moveit_grasps grasp_filter_demo.launch</span> </span><br></pre></td></tr></table></figure>

<p>​             </p>
<ul>
<li>RED：由ik过滤的抓取</li>
<li>PINK：碰撞过滤抓取</li>
<li>MAGENTA：cutting 平面过滤的抓取</li>
<li>YELLOW：方向过滤的抓取</li>
<li>BLUE：IK 过滤的预抓取</li>
<li>CYAN：碰撞过滤的预抓取</li>
<li>GGEEN：可用</li>
</ul>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>示例</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Mobile Manipulation</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E7%A4%BA%E4%BE%8B/Mobile%20Manipulation/</url>
    <content><![CDATA[<p>参考：<a href="https://jderobot.github.io/RoboticsAcademy/exercises/IndustrialRobots/mobile_manipulation">Robotics-Academy Mobile Manipulation</a></p>
<p>两种运行方式：</p>
<ul>
<li>ROSNode Templates</li>
<li>Web Templates</li>
</ul>
<p>使用移动机械手(AGV+机械臂+夹持器)在一个传送带上拾取物体，并将其放置在其他三个传送带(<strong>conveyors</strong>)上。</p>
<p>本例使用 Neobotix：MMO-500。包含 MPO-500 移动底盘 + UR10 机械臂。</p>
<p>1、介绍</p>
<p>1）安装</p>
<p>windows 用户应选择 WSL2 backend Docker 安装，因为它的性能优于Hyper-V。</p>
<p>下载 Academy Docker Image</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker pull jderobot/robotics-academy:2.4.2</span></span><br></pre></td></tr></table></figure>

<p>为了获得最佳性能，Docker 应该使用多个 CPU 内核。</p>
<p>2）使能 GPU 加速</p>
<p>安装 <a href="https://virtualgl.org/">VirtualGL</a>，然后执行以下指令运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --<span class="built_in">rm</span> -it --device /dev/dri -p 8000:8000 -p 2303:2303 -p 1905:1905 -p 8765:8765 -p 6080:6080 -p 1108:1108 jderobot/robotics-academy:2.4.2 ./start.sh</span></span><br></pre></td></tr></table></figure>



<p>3）测试</p>
<p>后台启动新的 docker 容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker run --<span class="built_in">rm</span> -it -p 8000:8000 -p 2303:2303 -p 1905:1905 -p 8765:8765 -p 6080:6080 -p 1108:1108 jderobot/robotics-academy:2.4.2 ./start.sh</span></span><br></pre></td></tr></table></figure>

<p>本机浏览器进入 127.0.0.1：8000，连接。</p>
<p>2、ROSNode Templates</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ros-melodic-eband-local-planner</span><br><span class="line">sudo apt-get install ros-melodic-amcl</span><br><span class="line">sudo apt-get install ros-melodic-openslam-gmapping</span><br><span class="line">sudo apt-get install ros-melodic-navigation</span><br><span class="line"></span><br><span class="line">mkdir -p catkin_ws/src</span><br><span class="line">cd catkin_ws/src</span><br><span class="line">git clone https://github.com/JdeRobot/IndustrialRobotics.git -b melodic_devel</span><br><span class="line">cd ..</span><br><span class="line"></span><br><span class="line">rosdep update</span><br><span class="line">rosdep check --from-paths . --ignore-src --rosdistro melodic</span><br><span class="line">rosdep install --from-paths . --ignore-src --rosdistro melodic -y</span><br><span class="line"></span><br><span class="line">catkin build</span><br><span class="line"></span><br><span class="line">echo &#x27;source &#x27;$PWD&#x27;/devel/setup.bash&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;export GAZEBO_MODEL_PATH=$&#123;GAZEBO_MODEL_PATH&#125;:&#x27;$PWD&#x27;/src/IndustrialRobotics/assets/models&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>



<p>3、使用</p>
<p>进入 exercises 目录中的 mobile_manipulation 包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch mobile_manipulation.launch</span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动 mobile manupulator teleoprator</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch mobile_manipulation_gui.launch</span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python MyAlgorithm.py</span></span><br></pre></td></tr></table></figure>

<p>该练习必须编辑 MyAlgorithm.py文件并在 <code>myalgorithm()</code> 函数中插入控制逻辑。在编写主要逻辑之前，应该实现 <code>move_to()</code> 函数来导航移动机器人并将其移动到给定的目标。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>示例</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Pick and Place</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E7%A4%BA%E4%BE%8B/Pick%20and%20Place/</url>
    <content><![CDATA[<p>MoveIt 中，grasp 是使用 MoveGroup 接口完成的。为了抓住一个对象，需要创建 moveit_msgs::Grasp 消息，该消息允许定义抓取操作中涉及的各种姿势和姿势。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch panda_moveit_config demo.launch</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun moveit_tutorials pick_place_tutorial</span></span><br></pre></td></tr></table></figure>

<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E7%A4%BA%E4%BE%8B/Pick%20and%20Place/image-20240917202430106.png" class="" title="image-20240917202430106">

<p>创建 vector 用于存放在 rviz 上显示的三个目标(table1、table2 及 抓取目标)</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">std::vector&lt;moveit_msgs::CollisionObject&gt; collision_objects;</span><br><span class="line">collision_objects.<span class="built_in">resize</span>(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"># table1</span><br><span class="line">collision_objects[<span class="number">0</span>].id = <span class="string">&quot;table1&quot;</span>;</span><br><span class="line">collision_objects[<span class="number">0</span>].header.frame_id = <span class="string">&quot;panda_link0&quot;</span>;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"># table2</span><br><span class="line">collision_objects[<span class="number">1</span>].id = <span class="string">&quot;table2&quot;</span>;</span><br><span class="line">collision_objects[<span class="number">1</span>].header.frame_id = <span class="string">&quot;panda_link0&quot;</span>;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"># 抓取目标</span><br><span class="line">collision_objects[<span class="number">2</span>].header.frame_id = <span class="string">&quot;panda_link0&quot;</span>;</span><br><span class="line">collision_objects[<span class="number">2</span>].id = <span class="string">&quot;object&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>其中，panda_link0 为 panda 机械臂的 base 坐标系。</p>
<p>Pick Pipeline</p>
<p>创建要尝试的 grasp 向量，当前仅创建单个 grasp。当使用 grasp 生成器生成和测试 multiple grasps 时很有用</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">std::vector&lt;moveit_msgs::Grasp&gt; grasps;</span><br><span class="line">grasps.<span class="built_in">resize</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure>



<p>设置 grasp 位姿</p>
<p>即：panda_link8(即:末端法兰 TCP) 的位姿。本例中，从 panda_link8 到 EEF(end effector) 的手掌的距离为 0.058， the cube starts 0.01 before 5.0 (half of the length of the cube - 立方体长度的一半)。</p>
<p>因此， panda_link8 的位置为：</p>
<p>panda_link8 &#x3D; 5 - (length of cube&#x2F;2 - distance b&#x2F;w panda_link8 and palm of eef - some extra padding)，即：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">panda_link8 = 5 - (立方体长度/2 - 距离b/w panda_link8 与 eef 手掌之间的裕度)</span><br></pre></td></tr></table></figure>



<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">grasps[<span class="number">0</span>].grasp_pose.header.frame_id = <span class="string">&quot;panda_link0&quot;</span>;</span><br><span class="line">tf2::Quaternion orientation;</span><br><span class="line">orientation.<span class="built_in">setRPY</span>(-M_PI / <span class="number">2</span>, -M_PI / <span class="number">4</span>, -M_PI / <span class="number">2</span>);</span><br><span class="line">grasps[<span class="number">0</span>].grasp_pose.pose.orientation = tf2::<span class="built_in">toMsg</span>(orientation);</span><br><span class="line">grasps[<span class="number">0</span>].grasp_pose.pose.position.x = <span class="number">0.415</span>;</span><br><span class="line">grasps[<span class="number">0</span>].grasp_pose.pose.position.y = <span class="number">0</span>;</span><br><span class="line">grasps[<span class="number">0</span>].grasp_pose.pose.position.z = <span class="number">0.5</span>;</span><br></pre></td></tr></table></figure>



<p>设置 pre-grasp 方法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Defined with respect to frame_id */</span></span><br><span class="line">grasps[<span class="number">0</span>].pre_grasp_approach.direction.header.frame_id = <span class="string">&quot;panda_link0&quot;</span>;</span><br><span class="line"><span class="comment">/* Direction is set as positive x axis */</span></span><br><span class="line">grasps[<span class="number">0</span>].pre_grasp_approach.direction.vector.x = <span class="number">1.0</span>;</span><br><span class="line">grasps[<span class="number">0</span>].pre_grasp_approach.min_distance = <span class="number">0.095</span>;</span><br><span class="line">grasps[<span class="number">0</span>].pre_grasp_approach.desired_distance = <span class="number">0.115</span>;</span><br></pre></td></tr></table></figure>



<p>设置 post-grasp retreat</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Defined with respect to frame_id */</span></span><br><span class="line">grasps[<span class="number">0</span>].post_grasp_retreat.direction.header.frame_id = <span class="string">&quot;panda_link0&quot;</span>;</span><br><span class="line"><span class="comment">/* Direction is set as positive z axis */</span></span><br><span class="line">grasps[<span class="number">0</span>].post_grasp_retreat.direction.vector.z = <span class="number">1.0</span>;</span><br><span class="line">grasps[<span class="number">0</span>].post_grasp_retreat.min_distance = <span class="number">0.1</span>;</span><br><span class="line">grasps[<span class="number">0</span>].post_grasp_retreat.desired_distance = <span class="number">0.25</span>;</span><br></pre></td></tr></table></figure>



<p>在抓取前设置 EEF 的 posture</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">openGripper</span>(grasps[<span class="number">0</span>].pre_grasp_posture);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Add both finger joints of panda robot. */</span></span><br><span class="line">posture.joint_names.<span class="built_in">resize</span>(<span class="number">2</span>);</span><br><span class="line">posture.joint_names[<span class="number">0</span>] = <span class="string">&quot;panda_finger_joint1&quot;</span>;</span><br><span class="line">posture.joint_names[<span class="number">1</span>] = <span class="string">&quot;panda_finger_joint2&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Set them as open, wide enough for the object to fit. */</span></span><br><span class="line">posture.points.<span class="built_in">resize</span>(<span class="number">1</span>);</span><br><span class="line">posture.points[<span class="number">0</span>].positions.<span class="built_in">resize</span>(<span class="number">2</span>);</span><br><span class="line">posture.points[<span class="number">0</span>].positions[<span class="number">0</span>] = <span class="number">0.04</span>;</span><br><span class="line">posture.points[<span class="number">0</span>].positions[<span class="number">1</span>] = <span class="number">0.04</span>;</span><br><span class="line">posture.points[<span class="number">0</span>].time_from_start = ros::<span class="built_in">Duration</span>(<span class="number">0.5</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>示例</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>画圆弧</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E7%A4%BA%E4%BE%8B/%E7%94%BB%E5%9C%86%E5%BC%A7/</url>
    <content><![CDATA[<p>将圆弧轨迹微分为一段段的小直线段，作为 waypoint，再调用 compute_cartesian_path</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">geometry_msgs::Pose target_pose;</span><br><span class="line">target_pose.orientation.x = <span class="number">0.14858</span>;</span><br><span class="line">target_pose.orientation.y = <span class="number">0.73236</span>;</span><br><span class="line">target_pose.orientation.z = -<span class="number">0.03444</span>;</span><br><span class="line">target_pose.orientation.w = <span class="number">0.66362</span>;</span><br><span class="line"></span><br><span class="line">target_pose.position.x = -<span class="number">0.050308</span>;</span><br><span class="line">target_pose.position.y = -<span class="number">0.039851</span>;</span><br><span class="line">target_pose.position.z = <span class="number">0.78264</span>;</span><br><span class="line"></span><br><span class="line">arm.setPoseTarget(target_pose);</span><br><span class="line">arm.move();//首先运动到圆心的位置</span><br><span class="line"></span><br><span class="line">std::vector&lt;geometry_msgs::Pose&gt; waypoints;</span><br><span class="line">waypoints.push_back(target_pose); // 将初始位姿加入路点列表</span><br><span class="line"></span><br><span class="line">double centerA = target_pose.position.x;</span><br><span class="line">double centerB = target_pose.position.z;</span><br><span class="line">double radius = <span class="number">0.13</span>;</span><br><span class="line"><span class="keyword">for</span>(double th=<span class="number">0.0</span>; th&lt;<span class="number">6.28</span>; th=th+<span class="number">0.01</span>) // 圆心角间隔 <span class="number">0.01</span></span><br><span class="line">&#123;</span><br><span class="line">    target_pose.position.y = centerA + radius * cos(th);</span><br><span class="line">    target_pose.position.z = centerB + radius * sin(th);</span><br><span class="line">    waypoints.push_back(target_pose);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">moveit_msgs::RobotTrajectory trajectory;</span><br><span class="line">double fraction = <span class="number">0.0</span>;</span><br><span class="line"><span class="built_in">int</span> maxtries = <span class="number">100</span>;   //最大尝试规划次数</span><br><span class="line"><span class="built_in">int</span> attempts = <span class="number">0</span>;     //已经尝试规划次数</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(fraction &lt; <span class="number">1.0</span> &amp;&amp; attempts &lt; maxtries) &#123;</span><br><span class="line">    fraction = arm.computeCartesianPath(waypoints, <span class="number">0.01</span>, <span class="number">0.0</span>, trajectory);</span><br><span class="line">    attempts++;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(attempts % <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">        ROS_INFO(<span class="string">&quot;Still trying after %d attempts...&quot;</span>, attempts);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(fraction == <span class="number">1</span>) &#123;</span><br><span class="line">    moveit::planning_interface::MoveGroupInterface::Plan plan;</span><br><span class="line">    plan.trajectory_ = trajectory;</span><br><span class="line">    </span><br><span class="line">    // 可根据需要对要执行的轨迹进行其它处理,如: 轨迹插值等</span><br><span class="line">    </span><br><span class="line">    arm.execute(plan);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>参考：<a href="https://blog.csdn.net/huangjunsheng123/article/details/114760366">https://blog.csdn.net/huangjunsheng123/article/details/114760366</a></p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>双臂控制</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>MoveitSimpleControllerManager</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/MoveitSimpleControllerManager/</url>
    <content><![CDATA[<p>读取 controller_list 参数，若参数不存在，则异常退出。注意：每个 controller 需包含 name、joints(关节列表，数组类型)、action_ns 及 type 参数，否则跳过。</p>
<p>遍历 controller_list</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>源码分析</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>源码分析</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="MoveIt-软件结构"><a href="#MoveIt-软件结构" class="headerlink" title="MoveIt! 软件结构"></a>MoveIt! 软件结构</h1><p>主要包括：</p>
<ul>
<li><a href="https://github.com/ros-planning/moveit">moveit</a>：</li>
<li><ul>
<li><strong>moveit_core</strong>：核心功能，包括了 MoveIt 中用于运动学，规划场景，约束，运动规划，碰撞检查和插件界面的核心组件</li>
<li><strong>moveit_ros_planning</strong>：规划组件，执行管理器，插件加载器</li>
<li><strong>moveit_ros_move_group</strong>：move_group 主节点，用于通过 ROS 消息使用 MoveIt</li>
<li><strong>moveit_ros_planning_interface</strong>：与 move_group 通信的 Python 及 ROS 消息接口</li>
<li><strong>moveit_ros_perception</strong>：Octomap 和其它感知插件</li>
<li><strong>moveit_ros_manipulation</strong>：高级 pick and place pipeline</li>
<li><strong>moveit_ros_robot_interaction</strong>：Interactive marker tools for Rviz</li>
<li><strong>moveit_ros_visualization</strong>：Rviz tools</li>
<li><strong>moveit_ros_warehouse</strong>：用于存储场景和配置数据的数据库插件</li>
<li><strong>moveit_ros_benchmarks</strong>：使用 PlannerArena 进行压测</li>
<li><strong>moveit_ros</strong>：Metapackage</li>
<li><strong>moveit_planners</strong>：Metapackage</li>
<li><strong>moveit_planners_ompl</strong>：OMPL 插件</li>
<li><strong>moveit_commander</strong>：终端控制接口</li>
<li><strong>moveit_setup_assistant</strong>：</li>
<li><strong>moveit_plugins</strong>：controller managers 插件</li>
<li><strong>chomp_motion_planner</strong>：高效运动规划的梯度优化技术</li>
<li><strong>chomp_interface</strong>：用于在 MoveIt! 中使用 CHOMP 的adapter</li>
</ul>
</li>
<li><a href="https://github.com/ros-planning/moveit_msgs">moveit_msgs</a>：</li>
<li><a href="https://github.com/ros-planning/moveit_task_constructor">moveit_task_constructor</a>：一种分层、多阶段操作规划方法</li>
<li><a href="https://github.com/ros-planning/moveit_grasps">moveit_grasps</a>：A geometric-based grasp generation library for manipulation</li>
<li><a href="https://github.com/ros-planning/moveit_visual_tools">moveit_visual_tools</a>：RViz 插件</li>
<li><a href="https://github.com/ros-planning/moveit_resources">moveit_resources</a>：大型文件资产，如测试机器人</li>
<li><a href="https://github.com/ros-planning/moveit_calibration">moveit_calibration</a>：手眼标定程序</li>
<li><a href="https://github.com/ros-planning/moveit_advanced">moveit_advanced</a>：实验性先进功能</li>
<li><a href="https://github.com/ros-planning/moveit_ci">moveit_ci</a>：script to run with Travis for continuous integration</li>
<li><a href="https://github.com/ros-visualization/rqt_moveit/">rqt_moveit</a>：</li>
<li><a href="https://github.com/ros-planning/srdfdom">srdfdom</a>：</li>
</ul>
<p>由 ros-planning MoveIt 团队维护的依赖项:</p>
<ul>
<li><a href="https://github.com/ros-planning/warehouse_ros">warehouse_ros</a>：Abstract interface for persisting ROS message data</li>
<li><a href="https://github.com/ros-planning/random_numbers">random_numbers</a>：package for generating random numbers</li>
</ul>
<p>其它代码仓库：</p>
<ul>
<li><a href="https://github.com/ros-planning/moveit_tutorials">moveit_tutorials</a> - step by step examples for learning MoveIt</li>
<li><a href="https://github.com/ros-planning/moveit_example_apps">moveit_example_apps</a> - sandbox of example high level application code</li>
</ul>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/image-20240917203345782.png" class="" title="image-20240917203345782">

<p>提供四个 API：</p>
<ul>
<li>Move Group Interface：包括</li>
<li><ul>
<li><a href="http://docs.ros.org/en/noetic/api/moveit_ros_planning/html/classmoveit__cpp_1_1MoveItCpp.html">MoveItCpp class</a>：主要的，新的，更快的 C++ 接口。推荐使用这个接口给需要更多实时控制的高级用户或工业应用程序</li>
<li><a href="http://docs.ros.org/noetic/api/moveit_ros_planning_interface/html/classmoveit_1_1planning__interface_1_1MoveGroupInterface.html">MoveGroupInterface class</a>：move_group_node 的 main  c++ 接口。MoveGroupInterface 是旧版本中 MoveGroup 类的继承者，现在已弃用</li>
<li><a href="http://docs.ros.org/noetic/api/moveit_ros_planning_interface/html/classmoveit_1_1planning__interface_1_1PlanningSceneInterface.html">PlanningSceneInterface class</a>：</li>
<li><a href="http://docs.ros.org/noetic/api/moveit_commander/html/index.html">MoveIt commander</a>：</li>
</ul>
</li>
<li>MoveIt ROS：适用于高级开发人员</li>
<li><ul>
<li><a href="http://docs.ros.org/noetic/api/moveit_ros_planning/html">Planning</a>：planning 组件，特别是规划场景、运动学和监视器</li>
<li><a href="http://docs.ros.org/noetic/api/moveit_ros_move_group/html">Move Group</a>：<em>move_group_node</em></li>
<li><a href="http://docs.ros.org/noetic/api/moveit_ros_perception/html">Perception</a>：感知组件</li>
<li><a href="http://docs.ros.org/noetic/api/moveit_ros_robot_interaction/html">Robot Interaction</a>：交互组件</li>
</ul>
</li>
<li>MoveIt Core：适用于高级开发人员</li>
<li><ul>
<li><a href="http://docs.ros.org/noetic/api/moveit_core/html">Core</a>：MoveIt 的核心组件为运动学，规划场景，约束，运动规划，碰撞检查和插件接口</li>
</ul>
</li>
<li>MoveIt OMPL Interface：适用于高级开发人员</li>
<li><ul>
<li><a href="http://docs.ros.org/noetic/api/moveit_planners_ompl/html">OMPL Interface</a>：允许MoveIt与OMPL对话的类集</li>
</ul>
</li>
</ul>
<h1 id="发送轨迹"><a href="#发送轨迹" class="headerlink" title="发送轨迹"></a>发送轨迹</h1><p><code>FollowJointTrajectoryControllerHandle::sendTrajectory</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">FollowJointTrajectoryControllerHandle::sendTrajectory</span><span class="params">(<span class="type">const</span> moveit_msgs::RobotTrajectory&amp; trajectory)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">ROS_DEBUG_STREAM_NAMED</span>(LOGNAME, <span class="string">&quot;new trajectory to &quot;</span> &lt;&lt; name_);</span><br><span class="line">  <span class="comment">// </span></span><br><span class="line">  <span class="keyword">if</span> (!controller_action_client_)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!trajectory.multi_dof_joint_trajectory.points.<span class="built_in">empty</span>())</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">ROS_WARN_NAMED</span>(LOGNAME, <span class="string">&quot;%s cannot execute multi-dof trajectories.&quot;</span>, name_.<span class="built_in">c_str</span>());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (done_)</span><br><span class="line">    <span class="built_in">ROS_DEBUG_STREAM_NAMED</span>(LOGNAME, <span class="string">&quot;sending trajectory to &quot;</span> &lt;&lt; name_);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">ROS_DEBUG_STREAM_NAMED</span>(LOGNAME, <span class="string">&quot;sending continuation for the currently executed trajectory to &quot;</span> &lt;&lt; name_);</span><br><span class="line"></span><br><span class="line">  control_msgs::FollowJointTrajectoryGoal goal = goal_template_;</span><br><span class="line">  goal.trajectory = trajectory.joint_trajectory;</span><br><span class="line">  <span class="comment">// 通过 follow_joint_trajectory actionlib 发送 goal</span></span><br><span class="line">  controller_action_client_-&gt;<span class="built_in">sendGoal</span>(</span><br><span class="line">      goal, boost::<span class="built_in">bind</span>(&amp;FollowJointTrajectoryControllerHandle::controllerDoneCallback, <span class="keyword">this</span>, _1, _2),</span><br><span class="line">      boost::<span class="built_in">bind</span>(&amp;FollowJointTrajectoryControllerHandle::controllerActiveCallback, <span class="keyword">this</span>),</span><br><span class="line">      boost::<span class="built_in">bind</span>(&amp;FollowJointTrajectoryControllerHandle::controllerFeedbackCallback, <span class="keyword">this</span>, _1));</span><br><span class="line">  done_ = <span class="literal">false</span>;</span><br><span class="line">  last_exec_ = moveit_controller_manager::ExecutionStatus::RUNNING;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>机械臂驱动程序(如：kinova_driver 包中的 joint_trajectory_action_server.cpp)中实现 follow_joint_trajectory action server。此处还注册了轨迹执行完成回调函数及轨迹执行过程 feedback 回调函数。</p>
<p>轨迹执行完成(成功&#x2F;失败)回调函数 controllerDoneCallback：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">FollowJointTrajectoryControllerHandle::controllerDoneCallback</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> actionlib::SimpleClientGoalState&amp; state, <span class="type">const</span> control_msgs::FollowJointTrajectoryResultConstPtr&amp; result)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// Output custom error message for FollowJointTrajectoryResult if necessary</span></span><br><span class="line">  <span class="keyword">if</span> (!result)</span><br><span class="line">    <span class="built_in">ROS_WARN_STREAM_NAMED</span>(LOGNAME, <span class="string">&quot;Controller &quot;</span> &lt;&lt; name_ &lt;&lt; <span class="string">&quot; done, no result returned&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (result-&gt;error_code == control_msgs::FollowJointTrajectoryResult::SUCCESSFUL)</span><br><span class="line">    <span class="built_in">ROS_INFO_STREAM_NAMED</span>(LOGNAME, <span class="string">&quot;Controller &quot;</span> &lt;&lt; name_ &lt;&lt; <span class="string">&quot; successfully finished&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">ROS_WARN_STREAM_NAMED</span>(LOGNAME, <span class="string">&quot;Controller &quot;</span> &lt;&lt; name_ &lt;&lt; <span class="string">&quot; failed with error &quot;</span></span><br><span class="line">                                                 &lt;&lt; <span class="built_in">errorCodeToMessage</span>(result-&gt;error_code) &lt;&lt; <span class="string">&quot;: &quot;</span></span><br><span class="line">                                                 &lt;&lt; result-&gt;error_string);</span><br><span class="line">  <span class="comment">// 结束轨迹执行                                             </span></span><br><span class="line">  <span class="built_in">finishControllerExecution</span>(state);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>finishControllerExecution</code> 接口中设置 <code>last_exec_</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">finishControllerExecution</span><span class="params">(<span class="type">const</span> actionlib::SimpleClientGoalState&amp; state)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">ROS_DEBUG_STREAM_NAMED</span>(<span class="string">&quot;ActionBasedController&quot;</span>, <span class="string">&quot;Controller &quot;</span> &lt;&lt; name_ &lt;&lt; <span class="string">&quot; is done with state &quot;</span> &lt;&lt; state.<span class="built_in">toString</span>()</span><br><span class="line">                                                                  &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; state.<span class="built_in">getText</span>());</span><br><span class="line">    <span class="keyword">if</span> (state == actionlib::SimpleClientGoalState::SUCCEEDED)</span><br><span class="line">      last_exec_ = moveit_controller_manager::ExecutionStatus::SUCCEEDED;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == actionlib::SimpleClientGoalState::ABORTED)</span><br><span class="line">      last_exec_ = moveit_controller_manager::ExecutionStatus::ABORTED;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == actionlib::SimpleClientGoalState::PREEMPTED)</span><br><span class="line">      last_exec_ = moveit_controller_manager::ExecutionStatus::PREEMPTED;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      last_exec_ = moveit_controller_manager::ExecutionStatus::FAILED;</span><br><span class="line">    done_ = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>并通过 <code>getLastExecutionStatus</code> 方法为上层调用(如：trajectory_execution_manager.cpp 中的 <code>continuousExecutionThread</code> 接口)返回轨迹执行状态。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>源码分析</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>trajectory_execution_manager</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/trajectory_execution_manager/</url>
    <content><![CDATA[<p>订阅 trajectory_execution_event 主题消息</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">event_topic_subscriber_ =</span><br><span class="line">      root_node_handle_.<span class="built_in">subscribe</span>(EXECUTION_EVENT_TOPIC, <span class="number">100</span>, </span><br><span class="line">                  &amp;TrajectoryExecutionManager::receiveEvent, <span class="keyword">this</span>);</span><br></pre></td></tr></table></figure>

<p><img src="D:\workspace\my-notes\blog\source_posts\机械臂\MoveIt\源码分析\trajectory_execution_manager\image-20240917203858720.png" alt="image-20240917203858720"></p>
<p>receiveEvent 函数处理接收到的事件</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">TrajectoryExecutionManager::receiveEvent</span><span class="params">(<span class="type">const</span> std_msgs::StringConstPtr&amp; event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">ROS_INFO_STREAM_NAMED</span>(name_, <span class="string">&quot;Received event &#x27;&quot;</span> &lt;&lt; event-&gt;data &lt;&lt; <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">  <span class="built_in">processEvent</span>(event-&gt;data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">TrajectoryExecutionManager::processEvent</span><span class="params">(<span class="type">const</span> std::string&amp; event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (event == <span class="string">&quot;stop&quot;</span>)</span><br><span class="line">    <span class="built_in">stopExecution</span>(<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">ROS_WARN_STREAM_NAMED</span>(name_, <span class="string">&quot;Unknown event type: &#x27;&quot;</span> &lt;&lt; event &lt;&lt; <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>若接收到 stop 事件，则调佣 stopExecution(true) 停止执行轨迹。</p>
<p>stopExecution 函数中</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">TrajectoryExecutionManager::stopExecution</span><span class="params">(<span class="type">bool</span> auto_clear)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  stop_continuous_execution_ = <span class="literal">true</span>;</span><br><span class="line">  continuous_execution_condition_.<span class="built_in">notify_all</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!execution_complete_)</span><br><span class="line">  &#123;</span><br><span class="line">    execution_state_mutex_.<span class="built_in">lock</span>();</span><br><span class="line">    <span class="keyword">if</span> (!execution_complete_)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// we call cancel for all active handles; we know these are not being modified as we loop through them because of</span></span><br><span class="line">      <span class="comment">// the lock</span></span><br><span class="line">      <span class="comment">// we mark execution_complete_ as true ahead of time. Using this flag, executePart() will know that an external</span></span><br><span class="line">      <span class="comment">// trigger to stop has been received</span></span><br><span class="line">      execution_complete_ = <span class="literal">true</span>;</span><br><span class="line">      <span class="built_in">stopExecutionInternal</span>();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// we set the status here; executePart() will not set status when execution_complete_ is true ahead of time</span></span><br><span class="line">      last_execution_status_ = moveit_controller_manager::ExecutionStatus::PREEMPTED;</span><br><span class="line">      execution_state_mutex_.<span class="built_in">unlock</span>();</span><br><span class="line">      <span class="built_in">ROS_INFO_NAMED</span>(name_, <span class="string">&quot;Stopped trajectory execution.&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// wait for the execution thread to finish</span></span><br><span class="line">      boost::<span class="function">mutex::scoped_lock <span class="title">lock</span><span class="params">(execution_thread_mutex_)</span></span>;</span><br><span class="line">      <span class="keyword">if</span> (execution_thread_)</span><br><span class="line">      &#123;</span><br><span class="line">        execution_thread_-&gt;<span class="built_in">join</span>();</span><br><span class="line">        execution_thread_.<span class="built_in">reset</span>();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (auto_clear)</span><br><span class="line">        <span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      execution_state_mutex_.<span class="built_in">unlock</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (execution_thread_)  <span class="comment">// just in case we have some thread waiting to be joined from some point in the past, we</span></span><br><span class="line">                               <span class="comment">// join it now</span></span><br><span class="line">  &#123;</span><br><span class="line">    boost::mutex::scoped_lock <span class="built_in">lock</span>(execution_thread_mutex_);</span><br><span class="line">    <span class="keyword">if</span> (execution_thread_)</span><br><span class="line">    &#123;</span><br><span class="line">      execution_thread_-&gt;<span class="built_in">join</span>();</span><br><span class="line">      execution_thread_.<span class="built_in">reset</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><code>continuousExecutionThread</code> 函数</p>
<p>负责执行任务的线程。当 stop_continuous_execution_ 为 false，即：未停止任务时，循环判断 continuous_execution_queue_ 是否为空，同时线程是否仍在执行，即：run_continuous_execution_thread_ 为 true，则阻塞等待条件变量 continuous_execution_condition_</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!stop_continuous_execution_)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="function">boost::unique_lock&lt;boost::mutex&gt; <span class="title">ulock</span><span class="params">(continuous_execution_mutex_)</span></span>;</span><br><span class="line">  <span class="keyword">while</span> (continuous_execution_queue_.<span class="built_in">empty</span>() <span class="comment">// 任务队列为空,则表示任务执行完</span></span><br><span class="line">          &amp;&amp; run_continuous_execution_thread_ <span class="comment">// 线程仍在执行</span></span><br><span class="line">          &amp;&amp; !stop_continuous_execution_) <span class="comment">// 接收到 stop 事件</span></span><br><span class="line">    <span class="comment">// 阻塞等待条件变量      </span></span><br><span class="line">    continuous_execution_condition_.<span class="built_in">wait</span>(ulock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>若接收到 stop 事件，或条件变量 continuous_execution_condition_ 触发，同时线程退出(即 run_continuous_execution_thread_ 为 false) 则清空轨迹队列</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (stop_continuous_execution_ || !run_continuous_execution_thread_)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">const</span> moveit_controller_manager::MoveItControllerHandlePtr&amp; used_handle : used_handles)</span><br><span class="line">    <span class="comment">// 上一次执行状态，即: last_execution_status_. </span></span><br><span class="line">    <span class="comment">// 若有任务正在执行,则先取消当前执行</span></span><br><span class="line">    <span class="keyword">if</span> (used_handle-&gt;<span class="built_in">getLastExecutionStatus</span>() == moveit_controller_manager::ExecutionStatus::RUNNING)</span><br><span class="line">      used_handle-&gt;<span class="built_in">cancelExecution</span>();</span><br><span class="line">  used_handles.<span class="built_in">clear</span>();</span><br><span class="line">  <span class="comment">// 清空 continous_execution_queue_ 队列</span></span><br><span class="line">  <span class="keyword">while</span> (!continuous_execution_queue_.<span class="built_in">empty</span>())</span><br><span class="line">  &#123;</span><br><span class="line">    TrajectoryExecutionContext* context = continuous_execution_queue_.<span class="built_in">front</span>();</span><br><span class="line">    continuous_execution_queue_.<span class="built_in">pop_front</span>();</span><br><span class="line">    <span class="keyword">delete</span> context;</span><br><span class="line">  &#125;</span><br><span class="line">  stop_continuous_execution_ = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>若未接收到 stop 事件，线程正常运行，且 continuous_execution_queue_ 队列不为空，则开始执行轨迹</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (!continuous_execution_queue_.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">  TrajectoryExecutionContext* context = <span class="literal">nullptr</span>;</span><br><span class="line">  &#123;</span><br><span class="line">    boost::<span class="function">mutex::scoped_lock <span class="title">slock</span><span class="params">(continuous_execution_mutex_)</span></span>;</span><br><span class="line">    <span class="comment">// 若队列为空则直接退出</span></span><br><span class="line">    <span class="keyword">if</span> (continuous_execution_queue_.<span class="built_in">empty</span>())</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    context = continuous_execution_queue_.<span class="built_in">front</span>();</span><br><span class="line">    continuous_execution_queue_.<span class="built_in">pop_front</span>();</span><br><span class="line">    <span class="comment">// 若队列执行完，触发 continuous_execution_condition_ 条件变量</span></span><br><span class="line">    <span class="keyword">if</span> (continuous_execution_queue_.<span class="built_in">empty</span>())</span><br><span class="line">      continuous_execution_condition_.<span class="built_in">notify_all</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// remove handles we no longer need</span></span><br><span class="line">  std::set&lt;moveit_controller_manager::MoveItControllerHandlePtr&gt;::iterator uit = used_handles.<span class="built_in">begin</span>();</span><br><span class="line">  <span class="keyword">while</span> (uit != used_handles.<span class="built_in">end</span>())</span><br><span class="line">    <span class="comment">// 删除已结束的 handles</span></span><br><span class="line">    <span class="keyword">if</span> ((*uit)-&gt;<span class="built_in">getLastExecutionStatus</span>() != moveit_controller_manager::ExecutionStatus::RUNNING)</span><br><span class="line">    &#123;</span><br><span class="line">      std::set&lt;moveit_controller_manager::MoveItControllerHandlePtr&gt;::iterator to_erase = uit;</span><br><span class="line">      ++uit;</span><br><span class="line">      used_handles.<span class="built_in">erase</span>(to_erase);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      ++uit;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// now send stuff to controllers</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// first make sure desired controllers are active.</span></span><br><span class="line">  <span class="comment">// 首先确保对应的 controller 运行正常</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">areControllersActive</span>(context-&gt;controllers_))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// get the controller handles needed to execute the new trajectory</span></span><br><span class="line">    <span class="function">std::vector&lt;moveit_controller_manager::MoveItControllerHandlePtr&gt; <span class="title">handles</span><span class="params">(context-&gt;controllers_.size())</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (std::<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; context-&gt;controllers_.<span class="built_in">size</span>(); ++i)</span><br><span class="line">    &#123;</span><br><span class="line">      moveit_controller_manager::MoveItControllerHandlePtr h;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        h = controller_manager_-&gt;<span class="built_in">getControllerHandle</span>(context-&gt;controllers_[i]);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">catch</span> (std::exception&amp; ex)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">ROS_ERROR_NAMED</span>(name_, <span class="string">&quot;%s caught when retrieving controller handle&quot;</span>, ex.<span class="built_in">what</span>());</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!h)</span><br><span class="line">      &#123;</span><br><span class="line">        last_execution_status_ = moveit_controller_manager::ExecutionStatus::ABORTED;</span><br><span class="line">        <span class="built_in">ROS_ERROR_NAMED</span>(name_, <span class="string">&quot;No controller handle for controller &#x27;%s&#x27;. Aborting.&quot;</span>,</span><br><span class="line">                        context-&gt;controllers_[i].<span class="built_in">c_str</span>());</span><br><span class="line">        handles.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      handles[i] = h;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 过程中接收到 stop 事件或线程停止运行,则中断执行</span></span><br><span class="line">    <span class="keyword">if</span> (stop_continuous_execution_ || !run_continuous_execution_thread_)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">delete</span> context;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// push all trajectories to all controllers simultaneously</span></span><br><span class="line">    <span class="keyword">if</span> (!handles.<span class="built_in">empty</span>())</span><br><span class="line">      <span class="keyword">for</span> (std::<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; context-&gt;trajectory_parts_.<span class="built_in">size</span>(); ++i)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="type">bool</span> ok = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">          ok = handles[i]-&gt;<span class="built_in">sendTrajectory</span>(context-&gt;trajectory_parts_[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">catch</span> (std::exception&amp; ex)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">ROS_ERROR_NAMED</span>(name_, <span class="string">&quot;Caught %s when sending trajectory to controller&quot;</span>, ex.<span class="built_in">what</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!ok)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">for</span> (std::<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; i; ++j)</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">              handles[j]-&gt;<span class="built_in">cancelExecution</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">catch</span> (std::exception&amp; ex)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">ROS_ERROR_NAMED</span>(name_, <span class="string">&quot;Caught %s when canceling execution&quot;</span>, ex.<span class="built_in">what</span>());</span><br><span class="line">            &#125;</span><br><span class="line">          <span class="built_in">ROS_ERROR_NAMED</span>(name_, <span class="string">&quot;Failed to send trajectory part %zu of %zu to controller %s&quot;</span>, i + <span class="number">1</span>,</span><br><span class="line">                          context-&gt;trajectory_parts_.<span class="built_in">size</span>(), handles[i]-&gt;<span class="built_in">getName</span>().<span class="built_in">c_str</span>());</span><br><span class="line">          <span class="keyword">if</span> (i &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">ROS_ERROR_NAMED</span>(name_, <span class="string">&quot;Cancelling previously sent trajectory parts&quot;</span>);</span><br><span class="line">          last_execution_status_ = moveit_controller_manager::ExecutionStatus::ABORTED;</span><br><span class="line">          handles.<span class="built_in">clear</span>();</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">delete</span> context;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// remember which handles we used</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> moveit_controller_manager::MoveItControllerHandlePtr&amp; handle : handles)</span><br><span class="line">      used_handles.<span class="built_in">insert</span>(handle);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">ROS_ERROR_NAMED</span>(name_, <span class="string">&quot;Not all needed controllers are active. Cannot push and execute. You can try &quot;</span></span><br><span class="line">                           <span class="string">&quot;calling ensureActiveControllers() before pushAndExecute()&quot;</span>);</span><br><span class="line">    last_execution_status_ = moveit_controller_manager::ExecutionStatus::ABORTED;</span><br><span class="line">    <span class="keyword">delete</span> context;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>executeThread 接口</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">TrajectoryExecutionManager::executeThread</span><span class="params">(<span class="type">const</span> ExecutionCompleteCallback&amp; callback,</span></span></span><br><span class="line"><span class="params"><span class="function">                                               <span class="type">const</span> PathSegmentCompleteCallback&amp; part_callback, <span class="type">bool</span> auto_clear)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// if we already got a stop request before we even started anything, we abort</span></span><br><span class="line">  <span class="keyword">if</span> (execution_complete_)</span><br><span class="line">  &#123;</span><br><span class="line">    last_execution_status_ = moveit_controller_manager::ExecutionStatus::ABORTED;</span><br><span class="line">    <span class="keyword">if</span> (callback)</span><br><span class="line">      <span class="built_in">callback</span>(last_execution_status_);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">ROS_DEBUG_NAMED</span>(name_, <span class="string">&quot;Starting trajectory execution ...&quot;</span>);</span><br><span class="line">  <span class="comment">// assume everything will be OK</span></span><br><span class="line">  last_execution_status_ = moveit_controller_manager::ExecutionStatus::SUCCEEDED;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// execute each trajectory, one after the other (executePart() is blocking) or until one fails.</span></span><br><span class="line">  <span class="comment">// on failure, the status is set by executePart(). Otherwise, it will remain as set above (success)</span></span><br><span class="line">  std::<span class="type">size_t</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (; i &lt; trajectories_.<span class="built_in">size</span>(); ++i)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 最终调用 MoveItControllerHandlePtr 中的 sendTrajectory </span></span><br><span class="line">    <span class="comment">//     -&gt; FollowJointTrajectoryControllerHandle::sendTrajectory 通过</span></span><br><span class="line">    <span class="comment">//     follow_joint_trajectory actionlib 发布 goal</span></span><br><span class="line">    <span class="type">bool</span> epart = <span class="built_in">executePart</span>(i);</span><br><span class="line">    <span class="keyword">if</span> (epart &amp;&amp; part_callback)</span><br><span class="line">      <span class="built_in">part_callback</span>(i);</span><br><span class="line">    <span class="keyword">if</span> (!epart || execution_complete_)</span><br><span class="line">    &#123;</span><br><span class="line">      ++i;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// only report that execution finished successfully when the robot actually stopped moving</span></span><br><span class="line">  <span class="keyword">if</span> (last_execution_status_ == moveit_controller_manager::ExecutionStatus::SUCCEEDED)</span><br><span class="line">    <span class="built_in">waitForRobotToStop</span>(*trajectories_[i - <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">ROS_INFO_NAMED</span>(name_, <span class="string">&quot;Completed trajectory execution with status %s ...&quot;</span>, last_execution_status_.<span class="built_in">asString</span>().<span class="built_in">c_str</span>());</span><br><span class="line"></span><br><span class="line">  <span class="comment">// notify whoever is waiting for the event of trajectory completion</span></span><br><span class="line">  execution_state_mutex_.<span class="built_in">lock</span>();</span><br><span class="line">  execution_complete_ = <span class="literal">true</span>;</span><br><span class="line">  execution_state_mutex_.<span class="built_in">unlock</span>();</span><br><span class="line">  execution_complete_condition_.<span class="built_in">notify_all</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// clear the paths just executed, if needed</span></span><br><span class="line">  <span class="keyword">if</span> (auto_clear)</span><br><span class="line">    <span class="built_in">clear</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// call user-specified callback</span></span><br><span class="line">  <span class="keyword">if</span> (callback)</span><br><span class="line">    <span class="built_in">callback</span>(last_execution_status_);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>源码分析</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>API</title>
    <url>/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/API/</url>
    <content><![CDATA[<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/API/image-20240905213329902.png" class="" title="image-20240905213329902">

<p>BT::TheadedAction 会在 executeTick() 中创建线程(std::async)执行 tick()，通过 halt_requested_ 变量监控节点是否被终止。用户需在子类的 tick() 中周期检查 isHaltRequested() 返回值，以便及时终止执行</p>
<p>BT::StateFulActionNode 类似状态机运行方式。若节点为 IDLE 状态，调用 onStart()；若为 RUNNING 状态，则调用 onRunning()；若为 halt() 则调用 onHalted()。参考：reactive</p>
<h1 id="注册节点"><a href="#注册节点" class="headerlink" title="注册节点"></a>注册节点</h1><ul>
<li>静态注册</li>
<li>动态注册：从动态库(插件)加载节点</li>
</ul>
<p>相关接口</p>
<ul>
<li><code>registerBuilder</code></li>
<li><code>registerSimpleCondition</code></li>
<li><code>registerSimpleAction</code>：注册的是 <code>SyncActionNode</code>，此类节点不支持返回 <code>RUNNING</code></li>
<li><code>registerSimpleDecorator</code></li>
<li><code>registerFromPlugin</code></li>
<li><code>registerNodeType</code></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">BehaviorTreeFactory factory;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态注册，通过 BehaviorTreeFactory 相关接口一个个注册</span></span><br><span class="line">factory.<span class="built_in">registerNodeType</span>&lt;ApproachObject&gt;(<span class="string">&quot;ApproachObject&quot;</span>);</span><br><span class="line">factory.<span class="built_in">registerNodeType</span>&lt;Action_A&gt;(<span class="string">&quot;Action_A&quot;</span>, <span class="number">42</span>, <span class="string">&quot;hello world&quot;</span>,</span><br><span class="line">                                     std::<span class="built_in">ref</span>(non_copyable)); <span class="comment">// 支持传入参数</span></span><br><span class="line">factory.<span class="built_in">registerSimpleCondition</span>(<span class="string">&quot;CheckBattery&quot;</span>, [&amp;](TreeNode&amp;) &#123; <span class="keyword">return</span> <span class="built_in">CheckBattery</span>(); &#125;);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态注册</span></span><br><span class="line">factory.<span class="built_in">registerFromPlugin</span>(<span class="string">&quot;../sample_nodes/bin/libdummy_nodes_dyn.so&quot;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="registerSimpleAction"><a href="#registerSimpleAction" class="headerlink" title="registerSimpleAction"></a><code>registerSimpleAction</code></h2><p>注册的是 <code>SyncActionNode</code>，此类节点不支持返回 <code>RUNNING</code>。<strong>实际是将其注册为回调函数 TickFunctor，然后在 SimpleActionNode::tick 中调用</strong>  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">BehaviorTreeFactory::registerSimpleAction</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="type">const</span> std::string&amp; ID, <span class="type">const</span> SimpleActionNode::TickFunctor&amp; tick_functor,</span></span></span><br><span class="line"><span class="params"><span class="function">    PortsList ports)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 内部调用 registerBuilder</span></span><br><span class="line">  NodeBuilder builder = [tick_functor, ID](<span class="type">const</span> std::string&amp; name,</span><br><span class="line">                                           <span class="type">const</span> NodeConfig&amp; config) &#123;</span><br><span class="line">    <span class="keyword">return</span> std::<span class="built_in">make_unique</span>&lt;SimpleActionNode&gt;(name, tick_functor, config);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  TreeNodeManifest manifest = &#123; NodeType::ACTION, ID, std::<span class="built_in">move</span>(ports), &#123;&#125; &#125;;</span><br><span class="line">  <span class="built_in">registerBuilder</span>(manifest, builder);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">NodeStatus <span class="title">SimpleActionNode::tick</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  NodeStatus prev_status = <span class="built_in">status</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置运行状态为 RUNNING</span></span><br><span class="line">  <span class="keyword">if</span>(prev_status == NodeStatus::IDLE)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">setStatus</span>(NodeStatus::RUNNING);</span><br><span class="line">    prev_status = NodeStatus::RUNNING;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用注册的函数。当函数返回状态发生变化，则将更新节点状态</span></span><br><span class="line">  NodeStatus status = <span class="built_in">tick_functor_</span>(*<span class="keyword">this</span>);</span><br><span class="line">  <span class="keyword">if</span>(status != prev_status)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">setStatus</span>(status);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">NodeStatus <span class="title">SyncActionNode::executeTick</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">auto</span> stat = ActionNodeBase::<span class="built_in">executeTick</span>();</span><br><span class="line">  <span class="keyword">if</span>(stat == NodeStatus::RUNNING)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="built_in">LogicError</span>(<span class="string">&quot;SyncActionNode MUST never return RUNNING&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> stat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>使用方法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.h </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>: <span class="keyword">public</span> RosActionNode&lt;TestAction&gt; <span class="comment">// 使用 ROS action，消息类型为 TestAction</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">NodeStatus <span class="title">testFunc1</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">NodeStatus <span class="title">testFunc2</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">NodeStatus <span class="title">testFunc3</span><span class="params">(TreeNode&amp; self)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">RegisterManipulatorNode</span><span class="params">(BT::BehaviorTreeFactory&amp; factory, </span></span></span><br><span class="line"><span class="params"><span class="function">                                ros::NodeHandle&amp; node_handle, </span></span></span><br><span class="line"><span class="params"><span class="function">                                <span class="type">const</span> BT::NodeConfiguration &amp; config)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 实例化 Test 类对象</span></span><br><span class="line">    <span class="function"><span class="type">static</span> Test <span class="title">test_singleton</span><span class="params">(node_handle, </span></span></span><br><span class="line"><span class="params"><span class="function">                          <span class="string">&quot;Test&quot;</span>, <span class="string">&quot;test_control&quot;</span>, config)</span></span>;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">// 注册 Test::testFunc1, 指定 bt action name 未 Test1</span></span><br><span class="line">    factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;Test1&quot;</span>, </span><br><span class="line">        std::<span class="built_in">bind</span>(&amp;Test::testFunc1, &amp;test_singleton));</span><br><span class="line">    factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;Test2&quot;</span>, [&amp;test_singleton](TreeNode&amp; self) -&gt; NodeStatus &#123;</span><br><span class="line">        <span class="keyword">return</span> test_singleton.<span class="built_in">testFunc2</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">	<span class="comment">// 指定 InputPort，xml 中可传入参数,例如 &lt;Test3 predef_pose=&quot;home&quot;/&gt;</span></span><br><span class="line">    factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;Test3&quot;</span>, </span><br><span class="line">        std::<span class="built_in">bind</span>(&amp;Test::testFunc3, &amp;test_singleton, std::placeholders::_1), </span><br><span class="line">        &#123; BT::<span class="built_in">InputPort</span>&lt;string&gt;(<span class="string">&quot;predef_pose&quot;</span>) &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="registerFromPlugin"><a href="#registerFromPlugin" class="headerlink" title="registerFromPlugin"></a><code>registerFromPlugin</code></h2><p>将行为节点编译为 so 库，然后通过 <strong><code>registerFromPlugin</code></strong> 进行注册。该方式调用 <strong><code>BT_REGISTER_NODES</code></strong> 进行注册。</p>
<p>例如：CrossDoor</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CrossDoor::registerNodes</span><span class="params">(BT::BehaviorTreeFactory&amp; factory)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// isDoorClosed 为 CrossDoor 类成员函数</span></span><br><span class="line">  factory.<span class="built_in">registerSimpleCondition</span>(<span class="string">&quot;IsDoorClosed&quot;</span>,</span><br><span class="line">                                  std::<span class="built_in">bind</span>(&amp;CrossDoor::isDoorClosed, <span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">  factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;PassThroughDoor&quot;</span>,</span><br><span class="line">                               std::<span class="built_in">bind</span>(&amp;CrossDoor::passThroughDoor, <span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">  factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;OpenDoor&quot;</span>, std::<span class="built_in">bind</span>(&amp;CrossDoor::openDoor, <span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">  factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;PickLock&quot;</span>, std::<span class="built_in">bind</span>(&amp;CrossDoor::pickLock, <span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">  factory.<span class="built_in">registerSimpleCondition</span>(<span class="string">&quot;SmashDoor&quot;</span>, std::<span class="built_in">bind</span>(&amp;CrossDoor::smashDoor, <span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 使用 registerBuilder</span></span><br><span class="line">  factory.<span class="built_in">registerBuilder</span>&lt;SyncActionNode&gt;(<span class="string">&quot;OpenDoor&quot;</span>, </span><br><span class="line">        [&amp;robot](<span class="type">const</span> std::string&amp; name, <span class="type">const</span> NodeConfiguration&amp; config) &#123;</span><br><span class="line">            <span class="keyword">return</span> std::<span class="built_in">make_unique</span>&lt;SyncActionNode&gt;(</span><br><span class="line">                name, config, std::<span class="built_in">bind</span>(&amp;CrossDoor::openDoor, <span class="keyword">this</span>));</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">BT_REGISTER_NODES</span>(factory)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">static</span> CrossDoor cross_door;</span><br><span class="line">  cross_door.<span class="built_in">registerNodes</span>(factory);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="BT-REGISTER-NODES"><a href="#BT-REGISTER-NODES" class="headerlink" title="BT_REGISTER_NODES"></a><code>BT_REGISTER_NODES</code></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BT_REGISTER_NODES(factory)  \</span></span><br><span class="line"><span class="meta"> 	BTCPP_EXPORT void BT_RegisterNodesFromPlugin(BT::BehaviorTreeFactory&amp; factory)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">const</span> <span class="type">char</span>* PLUGIN_SYMBOL = <span class="string">&quot;BT_RegisterNodesFromPlugin&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BehaviorTreeFactory::registerFromPlugin</span><span class="params">(<span class="type">const</span> std::string&amp; file_path)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BT::SharedLibrary loader;</span><br><span class="line">    loader.<span class="built_in">load</span>(file_path);</span><br><span class="line">    <span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*Func)</span><span class="params">(BehaviorTreeFactory&amp;)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(loader.<span class="built_in">hasSymbol</span>(PLUGIN_SYMBOL))</span><br><span class="line">    &#123;</span><br><span class="line">        Func func = (Func)loader.<span class="built_in">getSymbol</span>(PLUGIN_SYMBOL);</span><br><span class="line">        <span class="built_in">func</span>(*<span class="keyword">this</span>); <span class="comment">// 即 BT_REGISTER_NODES 定义的函数 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;ERROR loading library [&quot;</span> &lt;&lt; file_path &lt;&lt; <span class="string">&quot;]: can&#x27;t find symbol [&quot;</span></span><br><span class="line">           &lt;&lt; PLUGIN_SYMBOL &lt;&lt; <span class="string">&quot;]&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用 <code>registerFromPlugin</code> 时，会执行 <code>BT_REGISTER_NODES</code> 定义的函数。</p>
<h1 id="创建-tree"><a href="#创建-tree" class="headerlink" title="创建 tree"></a>创建 tree</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">auto</span> tree = factory.<span class="built_in">createTreeFromText</span>(xml_text);</span><br><span class="line"><span class="keyword">auto</span> tree = factory.<span class="built_in">createTreeFromFile</span>(xml_file);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载行为树,注意只加载不实例化</span></span><br><span class="line">factory.<span class="built_in">registerBehaviorTreeFromFile</span>(file);</span><br><span class="line"><span class="comment">// 实例化行为树</span></span><br><span class="line">tree = factory.<span class="built_in">createTree</span>(tree_id);</span><br></pre></td></tr></table></figure>











<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 写 XML ⽂件</span></span><br><span class="line">BT::BehaviorTreeFactory factory;</span><br><span class="line">std::string xml_models = BT::<span class="built_in">writeTreeNodesModelXML</span>(factory);</span><br><span class="line"><span class="comment">// helper function to print the tree</span></span><br><span class="line">BT::<span class="built_in">printTreeRecursively</span>(tree.<span class="built_in">rootNode</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印 blackboard 信息</span></span><br><span class="line">tree.<span class="built_in">rootBlackboard</span>()-&gt;<span class="built_in">debugMessage</span>()</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;\n------ First BB ------&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">tree.subtrees[<span class="number">0</span>]-&gt;blackboard-&gt;<span class="built_in">debugMessage</span>();</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;\n------ Second BB------&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">tree.subtrees[<span class="number">1</span>]-&gt;blackboard-&gt;<span class="built_in">debugMessage</span>();</span><br><span class="line"><span class="comment">// 遍历已注册的⾏为树</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">const</span> std::string&amp; bt_name : factory.<span class="built_in">registeredBehaviorTrees</span>())</span><br><span class="line">&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot; - &quot;</span> &lt;&lt; bt_name &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使⽤ lambda 注册简单⾏为。只打印 name，并返回 SUCCESS</span></span><br><span class="line">factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;DummyAction&quot;</span>, [](BT::TreeNode&amp; self)&#123;</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;DummyAction substituting: &quot;</span>&lt;&lt; self.<span class="built_in">name</span>() &lt;&lt; std::endl;</span><br><span class="line">	<span class="keyword">return</span> BT::NodeStatus::SUCCESS;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 BT::TreeObserver, 并打印 UID 及统计信息</span></span><br><span class="line"><span class="function">BT::TreeObserver <span class="title">observer</span><span class="params">(tree)</span></span>;</span><br><span class="line">std::map&lt;<span class="type">uint16_t</span>, std::string&gt; ordered_UID_to_path;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">const</span> <span class="keyword">auto</span>&amp; [name, uid]: observer.<span class="built_in">pathToUID</span>()) &#123;</span><br><span class="line">	ordered_UID_to_path[uid] = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">const</span> <span class="keyword">auto</span>&amp; [uid, name]: ordered_UID_to_path) &#123;</span><br><span class="line">	std::cout &lt;&lt; uid &lt;&lt; <span class="string">&quot; -&gt; &quot;</span> &lt;&lt; name &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line">tree.<span class="built_in">tickWhileRunning</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// getStatistics() ⽅法可使⽤ UID 或 path 获取统计信息</span></span><br><span class="line"><span class="comment">// last_action_stats = observer.getStatistics(&quot;last_action&quot;)</span></span><br><span class="line"><span class="comment">// print all the statistics</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">const</span> <span class="keyword">auto</span>&amp; [uid, name]: ordered_UID_to_path) &#123;</span><br><span class="line">	<span class="type">const</span> <span class="keyword">auto</span>&amp; stats = observer.<span class="built_in">getStatistics</span>(uid); <span class="comment">// getStatistics() ⽅法</span></span><br><span class="line"> std::cout &lt;&lt; <span class="string">&quot;[&quot;</span> &lt;&lt; name</span><br><span class="line">    &lt;&lt; <span class="string">&quot;] \tT/S/F: &quot;</span> &lt;&lt; stats.transitions_count</span><br><span class="line">    &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; stats.success_count</span><br><span class="line">    &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; stats.failure_count</span><br><span class="line">    &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">auto</span> visitor = [](TreeNode* node) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">auto</span> action_B_node = <span class="built_in">dynamic_cast</span>&lt;Action_B*&gt;(node))</span><br><span class="line">    &#123;</span><br><span class="line">      action_B_node-&gt;<span class="built_in">initialize</span>(<span class="number">69</span>, <span class="string">&quot;interesting_value&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="comment">// apply the visitor to all the nodes of the tree</span></span><br><span class="line">tree.<span class="built_in">applyVisitor</span>(visitor);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以 uid -&gt; path 形式输出行为树</span></span><br><span class="line">std::map&lt;<span class="type">int</span>, std::string&gt; UID_to_path;  </span><br><span class="line">tree.<span class="built_in">applyVisitor</span>([&amp;UID_to_path](BT::TreeNode* node) &#123;</span><br><span class="line">    UID_to_path[node-&gt;<span class="built_in">UID</span>()] = node-&gt;<span class="built_in">fullPath</span>();</span><br><span class="line">    std::cout &lt;&lt; node-&gt;<span class="built_in">UID</span>() &lt;&lt; <span class="string">&quot; -&gt; &quot;</span> &lt;&lt; node-&gt;<span class="built_in">fullPath</span>() &lt;&lt; std::endl;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>





<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">lifecycle_nodes = [<span class="string">&#x27;controller_server&#x27;</span>,</span><br><span class="line">        	<span class="string">&#x27;smoother_server&#x27;</span>,</span><br><span class="line">        	<span class="string">&#x27;planner_server&#x27;</span>,</span><br><span class="line">        	<span class="string">&#x27;behavior_server&#x27;</span>,</span><br><span class="line">        	<span class="string">&#x27;bt_navigator&#x27;</span>,</span><br><span class="line">        	<span class="string">&#x27;waypoint_follower&#x27;</span>,</span><br><span class="line">        	<span class="string">&#x27;velocity_smoother&#x27;</span>]</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>行为树</category>
      </categories>
      <tags>
        <tag>行为树</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
  <entry>
    <title>BehaviorTreeCPP使用</title>
    <url>/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>参考：</p>
<ul>
<li><a href="https://arxiv.org/pdf/1709.00084">Behavior Trees in Robotics and AI</a></li>
<li><a href="https://github.com/miccol/ROS-Behavior-Tree">ROS-Behavior-Tree</a></li>
</ul>
<p>BehaviorTree.CPP is now a more sophisticated version of the library Behavior-Tree（ROS-Behavior-Tree）。</p>
<p>提供创建 BT 的框架的 C++ 库。与其它的 BT 实现由如下优势：</p>
<ul>
<li>支持异步 actions，例如: non-blocking、a first-class citizen</li>
<li>可以构建同时执行多个 actions 的 reactive behaviors</li>
<li>允许使用 XML 在运行时创建 BT</li>
<li>可以静态连接 TreeNodes，或将其转换为运行时加载的插件</li>
<li>包括 logging&#x2F;profiling 基础结构，允许用户可视化、记录、回放和分析状态转换</li>
</ul>
<p>ROS2 navigation2 基于该库实现。</p>
<h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a><strong>编译</strong></h1><p>支持 catkin(ros)、colcon(ros2)、conan、cmake 编译</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> build; <span class="built_in">cd</span> build</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">若安装了 ZeroMQ 和 SQlite 等依赖项，则可以使用 cmake --build . --parallel</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake ..</span>  </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span></span><br></pre></td></tr></table></figure>

<p>Groot</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装依赖</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install qtbase5-dev libqt5svg5-dev libzmq3-dev libdw-dev</span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> --recurse-submodules https://github.com/BehaviorTree/Groot.git</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> Groot</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake -S . -B build</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake --build build</span></span><br></pre></td></tr></table></figure>



<h1 id="创建自定义节点"><a href="#创建自定义节点" class="headerlink" title="创建自定义节点"></a><strong>创建自定义节点</strong></h1><h2 id="继承-TreeNode"><a href="#继承-TreeNode" class="headerlink" title="继承 TreeNode"></a><strong>继承 <code>TreeNode</code></strong></h2><p>要创建自定义节点，默认方式（推荐方法）应继承 <code>TreeNode</code> 类。</p>
<p>实际通常是继承 <code>TreeNode</code> 的以下子类：</p>
<ul>
<li><code>ActionNodeBase</code></li>
<li><code>ConditionNode</code></li>
<li><code>DecoratorNode</code></li>
<li><code>SyncActionNode</code></li>
</ul>
<p>注意：</p>
<ul>
<li>所有 <code>TreeNode</code> 实例都有 <code>name</code>，其名字不要求唯一</li>
<li>必须重载子类虚函数 tick()，且返回值必须为 <code>SUCCESS/FAILURE/RUNNING</code></li>
<li><code>halt()</code> 用于暂停正在执行的 action。同步 action 可无需该方法</li>
<li>若有输入&#x2F;输出，还需定义静态方法 <code>providedPorts</code></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SaySomething</span> : <span class="keyword">public</span> SyncActionNode&#123;</span><br><span class="line"><span class="keyword">public</span></span><br><span class="line">    ......</span><br><span class="line">    <span class="function"><span class="type">static</span> PortsList <span class="title">providedPorts</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="built_in">InputPort</span>&lt;std::string&gt;(<span class="string">&quot;message&quot;</span>) &#125;;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">NodeStatus <span class="title">tick</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">        Expected&lt;std::string&gt; msg = <span class="built_in">getInput</span>&lt;std::string&gt;(<span class="string">&quot;message&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (msg) &#123; <span class="comment">// 出错时可以选择抛出异常,也可以选择返回 FAILURE</span></span><br><span class="line">          <span class="keyword">throw</span> BT::<span class="built_in">RuntimeError</span>(<span class="string">&quot;missing required input [message]: &quot;</span>, msg.<span class="built_in">error</span>() );            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> NodeStatus::SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<p><strong>建议在 <code>tick()</code> 函数中调用 <code>getInput()</code> 方法，而不是在类的构造函数中</strong>。</p>
<h2 id="使用依赖注入"><a href="#使用依赖注入" class="headerlink" title="使用依赖注入"></a><strong>使用依赖注入</strong></h2><p>除了继承 <code>TreeNode</code> 之外，也可以使用依赖注入方式(<strong>dependency injection</strong>)创建 <code>TreeNode</code> 并指定函数指针。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">BT::NodeStatus <span class="title">myFunction</span><span class="params">(BT::TreeNode&amp; self)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GripperInterface</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">GripperInterface</span>() &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">NodeStatus <span class="title">open</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;GripperInterface::open&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> NodeStatus::SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">NodeStatus <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;GripperInterface::close&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> NodeStatus::SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>



<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">factory.<span class="built_in">registerSimpleCondition</span>(<span class="string">&quot;CheckBattery&quot;</span>,</span><br><span class="line">                                std::<span class="built_in">bind</span>(CheckBattery));</span><br><span class="line"></span><br><span class="line">GripperInterface gripper; <span class="comment">// 构造 GripperInterface 类对象</span></span><br><span class="line">factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;OpenGripper&quot;</span>, </span><br><span class="line">                             std::<span class="built_in">bind</span>(&amp;GripperInterface::open, &amp;gripper));</span><br><span class="line">factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;CloseGripper&quot;</span>, </span><br><span class="line">                             std::<span class="built_in">bind</span>(&amp;GripperInterface::close, &amp;gripper));</span><br></pre></td></tr></table></figure>



<h3 id="使用依赖注入将-类成员函数-注册为异步行为"><a href="#使用依赖注入将-类成员函数-注册为异步行为" class="headerlink" title="使用依赖注入将 类成员函数 注册为异步行为"></a>使用依赖注入将 类成员函数 注册为异步行为</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;behaviortree_cpp_v3/bt_factory.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> BT;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyRobot</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyRobot</span>(<span class="type">const</span> std::string&amp; name) : <span class="built_in">name_</span>(name) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">NodeStatus <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Hello from &quot;</span> &lt;&lt; name_ &lt;&lt; <span class="string">&quot;!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> NodeStatus::SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">NodeStatus <span class="title">move</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; name_ &lt;&lt; <span class="string">&quot; is moving...&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> NodeStatus::RUNNING;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">NodeStatus <span class="title">stopMove</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; name_ &lt;&lt; <span class="string">&quot; has stopped moving.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> NodeStatus::SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    std::string name_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MoveAction 为异步节点。该节点 tick() 方法中调用 MyRobot::move() 方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MoveAction</span> : <span class="keyword">public</span> AsyncActionNode &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MoveAction</span>(<span class="type">const</span> std::string&amp; name, <span class="type">const</span> NodeConfiguration&amp; config, MyRobot&amp; robot)</span><br><span class="line">        : <span class="built_in">AsyncActionNode</span>(name, config), <span class="built_in">robot_</span>(robot), <span class="built_in">stop_requested_</span>(<span class="literal">false</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">static</span> PortsList <span class="title">providedPorts</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">NodeStatus <span class="title">tick</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (stop_requested_) &#123;</span><br><span class="line">            <span class="keyword">return</span> robot_.<span class="built_in">stopMove</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> robot_.<span class="built_in">move</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">halt</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">        stop_requested_ = <span class="literal">true</span>;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;MoveAction halted.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    MyRobot&amp; robot_;</span><br><span class="line">    <span class="type">bool</span> stop_requested_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    BehaviorTreeFactory factory;</span><br><span class="line">    <span class="function">MyRobot <span class="title">robot</span><span class="params">(<span class="string">&quot;Robo1&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用依赖注入。将 MyRobot 类对象传递到 MoveAction 中</span></span><br><span class="line">    factory.<span class="built_in">registerBuilder</span>&lt;MoveAction&gt;(<span class="string">&quot;MoveAction&quot;</span>, </span><br><span class="line">        [&amp;robot](<span class="type">const</span> std::string&amp; name, <span class="type">const</span> NodeConfiguration&amp; config) &#123;</span><br><span class="line">            <span class="keyword">return</span> std::<span class="built_in">make_unique</span>&lt;MoveAction&gt;(name, config, robot);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 类成员函数注册为节点，注意：只能为 SyncActionNode 类型</span></span><br><span class="line">    factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;SayHello&quot;</span>, std::<span class="built_in">bind</span>(&amp;MyRobot::sayHello, &amp;robot));</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">char</span>* xml_text = <span class="string">R&quot;(</span></span><br><span class="line"><span class="string">     &lt;root main_tree_to_execute=&quot;MainTree&quot;&gt;</span></span><br><span class="line"><span class="string">         &lt;BehaviorTree ID=&quot;MainTree&quot;&gt;</span></span><br><span class="line"><span class="string">             &lt;Sequence&gt;</span></span><br><span class="line"><span class="string">                 &lt;SayHello/&gt;</span></span><br><span class="line"><span class="string">                 &lt;MoveAction/&gt;</span></span><br><span class="line"><span class="string">             &lt;/Sequence&gt;</span></span><br><span class="line"><span class="string">         &lt;/BehaviorTree&gt;</span></span><br><span class="line"><span class="string">     &lt;/root&gt;</span></span><br><span class="line"><span class="string">    )&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> tree = factory.<span class="built_in">createTreeFromText</span>(xml_text);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行行为树</span></span><br><span class="line">    <span class="keyword">while</span> (tree.<span class="built_in">tickRoot</span>() == NodeStatus::RUNNING) &#123;</span><br><span class="line">        std::this_thread::<span class="built_in">sleep_for</span>(std::chrono::<span class="built_in">milliseconds</span>(<span class="number">100</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Dataflow-Ports及Blackboard"><a href="#Dataflow-Ports及Blackboard" class="headerlink" title="Dataflow,Ports及Blackboard"></a><strong>Dataflow,Ports及Blackboard</strong></h1><ul>
<li><strong>blackboard</strong>：是一种 key&#x2F;value 存储结构，用于在所有节点间共享数据</li>
<li><strong>Ports</strong>：是节点之间用来交换信息的一种机制</li>
<li>Ports 使用 blackboard 的相同 key 连接</li>
<li>一个节点的端口数量、名称和类型必须在编译时知道(c++);端口之间的连接是在部署时完成的(XML)</li>
<li><strong>value 可以是任何 C++ type</strong>(使用类似 std::any 的类型确认机制)</li>
</ul>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905214528697.png" class="" title="image-20240905214528697">

<ul>
<li><p>Input Port 可以为</p>
</li>
<li><ul>
<li>静态类型(如字符串)</li>
<li>一个 pointer, 指向 blackboard 上的一个条目, 由一个 key 标识</li>
<li>对于输入端口，可通过 <strong>getInput(key)</strong> 读取输入值</li>
<li>输入类型 <strong>InputPort</strong></li>
</ul>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--静态字符串--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SaySomething</span> <span class="attr">name</span>=<span class="string">&quot;fist&quot;</span>   <span class="attr">message</span>=<span class="string">&quot;hello world&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--pointer,使用该 key 在 blackboard 中查找数据--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SaySomething</span> <span class="attr">name</span>=<span class="string">&quot;second&quot;</span> <span class="attr">message</span>=<span class="string">&quot;&#123;greetings&#125;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>Output ports</p>
</li>
<li><ul>
<li>输出类型为 <strong>OutputPort</strong>  </li>
<li>对于输出端口，可通过 <strong>setOutput</strong> 设置输出值</li>
<li>此外，调试时，可以使用内置的动作 <a href="https://www.behaviortree.dev/docs/guides/scripting/">Script</a> 将静态值写入条目</li>
</ul>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Script</span> <span class="attr">code</span>=<span class="string">&quot; the_answer:=&#x27;The answer is 42&#x27; &quot;</span> /&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">/**</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"> * 自定义类型 struct Position2D &#123; double x; double y; &#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"> * 此例中，使用 string 类型来设置 OtherGoal(其类型为 struct Position2D),</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"> * 需定义定义模板特化函数 BT::convertFromString<span class="tag">&lt;<span class="name">Position2D</span>&gt;</span>(StringView) 实现从</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"> * 字符串初始化 struct Position2D 类型对象</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"> */</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">Script</span>        <span class="attr">code</span>=<span class="string">&quot; OtherGoal:=&#x27;-1;3&#x27; &quot;</span> /&gt;</span></span></span></span><br></pre></td></tr></table></figure>



<p><strong>Script 是 BT.CPP 3.X 版本中 SetBlackboard 的替代。SetBlackboard 已弃用</strong></p>
<h2 id="blackboard"><a href="#blackboard" class="headerlink" title="blackboard"></a><strong>blackboard</strong></h2><p><strong>Blackboard 是一个全局共享的数据存储空间</strong>。Blackboard 通常用于存储任务执行过程中的状态信息、目标、条件等数据, 供 Behavior Tree 节点进行读取和修改。</p>
<p><strong>在 Behavior Tree 中, Blackboard 可以用来实现任务之间的通信和共享数据</strong>。例如, 一个行为节点可以将某个条件的结果写入 Blackboard, 然后另一个行为节点可以读取这个条件的结果进行判断。</p>
<p>Blackboard 通常是一个<strong>键值对的数据结构</strong>, 可以存储各种类型的数据, 如布尔值、整数、浮点数、字符串等等。Behavior Tree 节点可以通过读取和修改 Blackboard 中的数据来实现任务的执行和决策。</p>
<p><strong>Blackboard 提供数据集中式设计。</strong></p>
<p>集中式设计会定义一个数据结构专门用于行为树的输入, 在行为树决策之前, 将需要的数据先从各模块中收集到该数据结构中, 然后传递给行为树。这种方式减少了输入和行为树之间的接口数量(只与预定义的数据结构通信), 但存在数据冗余的缺点。不过, 集中式的数据输入使得行为树的表现更像一个黑盒了。</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905214637993.png" class="" title="image-20240905214637993">

<p>该 Blackboard 对于行为树而言是只读的, 行为树不允许修改和添加任何信息到这块黑板上面。</p>
<p>但 BT 在使用过程中, 有时候确实需要在节点&#x2F;行为树之间传递数据, 例如 sequence 节点, 其子节点之间通常会涉及到节点通信问题。此时会定义另一个 blackboard, 负责行为树&#x2F;节点间的通信</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905214700719.png" class="" title="image-20240905214700719">

<p>这块 blackboard 是又可以读又可以写的, 为了防止黑板混乱的问题, 必须在使用时规定一些限制, 可以称之为黑板数据的“作用域”：</p>
<ul>
<li>全局域（G）：此数据可以给其他行为树访问</li>
<li>行为树域（T）：此数据可以给行为树内的任意节点访问</li>
<li>指定节点域（N）：此数据可以给指定的行为树内的某节点（可以是多个）访问</li>
</ul>
<p>Blackboard 的使用可以让 Behavior Tree 更加灵活和智能化, 使得任务的执行和决策能够根据实时的情境和条件进行动态调整。</p>
<h2 id="Ports"><a href="#Ports" class="headerlink" title="Ports"></a><strong>Ports</strong></h2><p>BT::InputPort</p>
<p>BT::BidirectionalPort</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> PortsList <span class="title">providedPorts</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; </span><br><span class="line">        BT::BidirectionalPort&lt;std::vector&lt;<span class="type">int</span>&gt;&gt;(<span class="string">&quot;vector&quot;</span>),</span><br><span class="line">        BT::<span class="built_in">InputPort</span>&lt;<span class="type">int</span>&gt;(<span class="string">&quot;value&quot;</span>) </span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="remapping"><a href="#remapping" class="headerlink" title="remapping"></a><strong>remapping</strong></h3><p>为了避免在非常大的树中发生名称冲突, 任何树和子树都使用 Blackboard 的不同实例。出于这个原因, 需要显式地将树的端口连接到它的子树的端口。</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905214734312.png" class="" title="image-20240905214734312">

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">BTCPP_format</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Sequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Script</span> <span class="attr">script</span>=<span class="string">&quot; move_goal=&#x27;1;2;3&#x27; &quot;</span> /&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">SubTree</span> <span class="attr">ID</span>=<span class="string">&quot;MoveRobot&quot;</span> <span class="attr">target</span>=<span class="string">&quot;&#123;move_goal&#125;&quot;</span></span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="language-handlebars">                                    <span class="attr">result</span>=<span class="string">&quot;&#123;move_result&#125;&quot;</span> /&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">SaySomething</span> <span class="attr">message</span>=<span class="string">&quot;&#123;move_result&#125;&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MoveRobot&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        <span class="tag">&lt;<span class="name">Fallback</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">Sequence</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;<span class="name">MoveBase</span>  <span class="attr">goal</span>=<span class="string">&quot;&#123;target&#125;&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;<span class="name">Script</span> <span class="attr">script</span>=<span class="string">&quot; result:=&#x27;goal reached&#x27; &quot;</span> /&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">ForceFailure</span>&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;<span class="name">Script</span> <span class="attr">script</span>=<span class="string">&quot; result:=&#x27;error&#x27; &quot;</span> /&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;/<span class="name">ForceFailure</span>&gt;</span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">        <span class="tag">&lt;/<span class="name">Fallback</span>&gt;</span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars"></span></span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>



<h3 id="通过引用访问Ports"><a href="#通过引用访问Ports" class="headerlink" title="通过引用访问Ports"></a><strong>通过引用访问Ports</strong></h3><p>参考：<a href="https://www.behaviortree.dev/docs/tutorial-advanced/tutorial_13_blackboard_reference">Zero-copy access to the blackboard | BehaviorTree.CPP</a></p>
<h4 id="Zero-Copy访问blackboard"><a href="#Zero-Copy访问blackboard" class="headerlink" title="Zero-Copy访问blackboard"></a><strong>Zero-Copy访问blackboard</strong></h4><p>Blackboard 使用 “值语义”，如 getInput 和 setOuput 获取或设置 Blackboard 中的值。</p>
<p>在某些情况下，可能需要使用 “引用语义”，即直接访问存储在 Blackboard 中的对象。当对象是:</p>
<ul>
<li>复杂数据结构</li>
<li>复制成本高</li>
<li>不可复制</li>
</ul>
<p>例如，建议使用引用语义的节点是 <strong>LoopNode</strong> 装饰器，它可以 in-place 修改对象向量。</p>
<p><strong>Method1：共享指针</strong></p>
<p>为了简单起见，以复制成本较高的对象，如 Pointcloud 为例</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">root</span> <span class="attr">BTCPP_format</span>=<span class="string">&quot;4&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;SegmentCup&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">Sequence</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- AcquirePointCloud 写入点云数据,而 SegmentObject 则读取点云数据 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">AcquirePointCloud</span>  <span class="attr">cloud</span>=<span class="string">&quot;&#123;pointcloud&#125;&quot;</span>/&gt;</span> </span><br><span class="line">           <span class="tag">&lt;<span class="name">SegmentObject</span>  <span class="attr">obj_name</span>=<span class="string">&quot;cup&quot;</span> <span class="attr">cloud</span>=<span class="string">&quot;&#123;pointcloud&#125;&quot;</span> <span class="attr">obj_pose</span>=<span class="string">&quot;&#123;pose&#125;&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此例中，建议的 Ports 类型为（使用 std::shared_ptr）：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">PortsList <span class="title">AcquirePointCloud::providedPorts</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; OutputPort&lt;std::shared_ptr&lt;Pointcloud&gt;&gt;(<span class="string">&quot;cloud&quot;</span>) &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">PortsList <span class="title">SegmentObject::providedPorts</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="built_in">InputPort</span>&lt;std::string&gt;(<span class="string">&quot;obj_name&quot;</span>),</span><br><span class="line">             InputPort&lt;std::shared_ptr&lt;Pointcloud&gt;&gt;(<span class="string">&quot;cloud&quot;</span>),</span><br><span class="line">             <span class="built_in">OutputPort</span>&lt;Pose3D&gt;(<span class="string">&quot;obj_pose&quot;</span>) &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Method2: 线程安全的castPtr</strong></p>
<p>4.5.1 及之后版本推荐的方式。</p>
<p><strong>当使用 shared_ptr 方法时，最值得注意的问题是它不是线程安全的</strong>。</p>
<p>如果自定义异步 Node 有自己的线程，那么实际对象可能同时被其他线程访问。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">PortsList <span class="title">AcquirePointCloud::providedPorts</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="built_in">OutputPort</span>&lt;Pointcloud&gt;(<span class="string">&quot;cloud&quot;</span>) &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">PortsList <span class="title">SegmentObject::providedPorts</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="built_in">InputPort</span>&lt;std::string&gt;(<span class="string">&quot;obj_name&quot;</span>),</span><br><span class="line">             <span class="built_in">InputPort</span>&lt;Pointcloud&gt;(<span class="string">&quot;cloud&quot;</span>),</span><br><span class="line">             <span class="built_in">OutputPort</span>&lt;Pose3D&gt;(<span class="string">&quot;obj_pose&quot;</span>) &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过指针&#x2F;引用访问Pointcloud的实例:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// inside the scope below, as long as &quot;any_locked&quot; exists, a mutex protecting </span></span><br><span class="line"><span class="comment">// the instance of &quot;cloud&quot; will remain locked</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">auto</span> any_locked = <span class="built_in">getLockedPortContent</span>(<span class="string">&quot;cloud&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(any_locked-&gt;<span class="built_in">empty</span>())</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// the entry in the blackboard hasn&#x27;t been initialized yet.</span></span><br><span class="line">    <span class="comment">// You can initialize it doing:</span></span><br><span class="line">    any_locked.<span class="built_in">assign</span>(my_initial_pointcloud);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(Pointcloud* cloud_ptr = any_locked-&gt;<span class="built_in">castPtr</span>&lt;Pointcloud&gt;())</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// Succesful cast to Pointcloud* (original type).</span></span><br><span class="line">    <span class="comment">// Modify the pointcloud instance, using cloud_ptr</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="全局-blackboard"><a href="#全局-blackboard" class="headerlink" title="全局 blackboard"></a><strong>全局 blackboard</strong></h3><p>在 BehaviorTree.CPP 4.6.0 版本引入。BT.CPP 使用 “scoped blackboards” 以隔离每个子树。</p>
<p>尽管如此，在某些情况下，有一个真正的 global blackboard 是可取的，它可以从每个子树直接访问，而不需要重新映射。</p>
<p>其用途：</p>
<ul>
<li>不能共享的单例对象和全局对象</li>
<li>机器人的全局状态</li>
<li>在行为树之外写入&#x2F;读取的数据，即在执行 tick 的主循环中</li>
</ul>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905214932130.png" class="" title="image-20240905214932130">

<p>每个子树有自己的 blackboard。Blackboard 的父子关系与行为树的父子关系相同。</p>
<p>私有 blackboard 的生命周期受其相关联的子树影响。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建全局 blackboard</span></span><br><span class="line"><span class="keyword">auto</span> global_bb = BT::Blackboard::<span class="built_in">create</span>();</span><br><span class="line"><span class="comment">// 创建子 blackboard</span></span><br><span class="line"><span class="keyword">auto</span> maintree_bb = BT::Blackboard::<span class="built_in">create</span>(global_bb);</span><br><span class="line"><span class="keyword">auto</span> tree = factory.<span class="built_in">createTree</span>(<span class="string">&quot;MainTree&quot;</span>, maintree_bb);</span><br></pre></td></tr></table></figure>

<p>上述代码实现</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905214952385.png" class="" title="image-20240905214952385">

<p>访问 top-level blackboard 数据</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- BT.CPP 4.6.0 新增方式. 使用 @ 表示从顶层 blackboard 查找 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PrintNumber</span> <span class="attr">val</span>=<span class="string">&quot;&#123;@value&#125;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">global_bb-&gt;<span class="built_in">set</span>(<span class="string">&quot;value&quot;</span>, i);</span><br><span class="line"><span class="keyword">auto</span> value_sqr = global_bb-&gt;<span class="built_in">get</span>&lt;<span class="type">int</span>&gt;(<span class="string">&quot;value_sqr&quot;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="ports-vs-blackboard"><a href="#ports-vs-blackboard" class="headerlink" title="ports vs blackboard"></a><strong>ports vs blackboard</strong></h2><p>BT.CPP 提出了 <strong>Input&#x2F;Output Ports</strong>，以替代 Blackboards。</p>
<p>更具体地说，Ports 是一种接口，它为 blackboard 添加了一层间接和额外的语义。</p>
<p>要理解为什么推荐使用 Ports 而不鼓励直接使用 Blackboard，应该首先了解 BehaviorTree.CPP 的一些核心原则。</p>
<h3 id="BT-CPP-目标"><a href="#BT-CPP-目标" class="headerlink" title="BT.CPP 目标"></a><strong>BT.CPP 目标</strong></h3><p><strong>Model Driven Development</strong></p>
<p>节点之间的数据流描述必须是模型的一部分。此外，希望能清楚地表达 blackboard 条目是被写入（输出）、读取（输入）还是两者都有。</p>
<p>例如：</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905215043094.png" class="" title="image-20240905215043094">

<p>在其他实现中，知道这两个节点是否相互通信和依赖的唯一方法是:</p>
<ul>
<li>inspecting the code：这是我们想要避免的</li>
<li>reading the documentation：但是文档不能保证是准确的和最新的</li>
</ul>
<p><code>即：需要查看代码或者文档</code></p>
<p>相反，若 Input&#x2F;Output ports 是模型的一部分，则节点的意图及其与其他端口的关系变得更加明确:</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905215055523.png" class="" title="image-20240905215055523">

<p><strong>节点组合及子树范围</strong></p>
<p>理想情况下，我们希望提供一个平台，允许行为设计师构建由不同供应商&#x2F;用户实现的树(即“组合节点”)。</p>
<p>但是，当直接使用 Blackboard 时，名称冲突将成为一个问题。</p>
<p>例如，节点 GraspObject 和 MoveBase 可能是由不同的人开发的，它们都是从 blackboard 取 target。不幸的是，它们有不同的含义，类型也不同：前者期望一个 3D 位姿，而后者是一个 2D 位姿。</p>
<p>Ports 提供了一个间接层次，也称为 remapping。意味着，无论在定义 Port 时使用哪个名称，都可以将其 remapping 到 XML 中的不同 blackboard 条目，而无需修改源代码。</p>
<h3 id="总结-不要直接使用-Blackboard"><a href="#总结-不要直接使用-Blackboard" class="headerlink" title="总结:不要直接使用 Blackboard"></a><strong>总结:不要直接使用 Blackboard</strong></h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// example code in your tick()</span></span><br><span class="line"><span class="built_in">getInput</span>(<span class="string">&quot;goal&quot;</span>, goal);</span><br><span class="line"><span class="built_in">setOutput</span>(<span class="string">&quot;result&quot;</span>, result);</span><br><span class="line"><span class="comment">// 避免使用以下方式</span></span><br><span class="line"><span class="built_in">config</span>().blackboard-&gt;<span class="built_in">get</span>(<span class="string">&quot;goal&quot;</span>, goal);</span><br><span class="line"><span class="built_in">config</span>().blackboard-&gt;<span class="built_in">set</span>(<span class="string">&quot;result&quot;</span>, result);</span><br></pre></td></tr></table></figure>



<h1 id="XML-schema"><a href="#XML-schema" class="headerlink" title="XML schema"></a><strong>XML schema</strong></h1><p>例如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">root</span> <span class="attr">BTCPP_format</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Sequence</span> <span class="attr">name</span>=<span class="string">&quot;root_sequence&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">SaySomething</span>   <span class="attr">name</span>=<span class="string">&quot;action_hello&quot;</span> <span class="attr">message</span>=<span class="string">&quot;Hello&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">OpenGripper</span>    <span class="attr">name</span>=<span class="string">&quot;open_gripper&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ApproachObject</span> <span class="attr">name</span>=<span class="string">&quot;approach_object&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">CloseGripper</span>   <span class="attr">name</span>=<span class="string">&quot;close_gripper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>第一个 tag 为 root，包含一个或多个  tag</p>
</li>
<li><p>tag 包含 ID 属性</p>
</li>
<li><p>root应包含 BTCPP_format 属性</p>
</li>
<li><p>每个 TreeNode 由单个 tag 表示。特别是:</p>
</li>
<li><ul>
<li>tag 的名称是用于在 factory 中注册 TreeNode 的 ID</li>
<li>属性 name 是实例的名称，是可选的</li>
<li>端口通过属性配置。在前面的示例中，SaySomething 操作需要输入端口 message</li>
</ul>
</li>
</ul>
<h2 id="端口映射及blackboard指针"><a href="#端口映射及blackboard指针" class="headerlink" title="端口映射及blackboard指针"></a><strong>端口映射及blackboard指针</strong></h2><p>输入&#x2F;输出 ports 可以通过 blackboard 实体的名字进行映射。</p>
<p>例如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">BTCPP_format</span>=<span class="string">&quot;4&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">Sequence</span> <span class="attr">name</span>=<span class="string">&quot;root_sequence&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">SaySomething</span> <span class="attr">message</span>=<span class="string">&quot;Hello&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">SaySomething</span> <span class="attr">message</span>=<span class="string">&quot;&#123;my_message&#125;&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Sequence 的第一个子节点输出 Hello</li>
<li>第二个子节点读取和修改 blackboard 实体中名为 my_message 的数据的值</li>
</ul>
<h2 id="紧凑表示及显式表示"><a href="#紧凑表示及显式表示" class="headerlink" title="紧凑表示及显式表示"></a><strong>紧凑表示及显式表示</strong></h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- 以下两种语法都支持. 前者为紧凑形式, 后者为显式表示 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">SaySomething</span>               <span class="attr">name</span>=<span class="string">&quot;action_hello&quot;</span> <span class="attr">message</span>=<span class="string">&quot;Hello World&quot;</span>/&gt;</span> <span class="tag">&lt;<span class="name">Action</span> <span class="attr">ID</span>=<span class="string">&quot;SaySomething&quot;</span>   <span class="attr">name</span>=<span class="string">&quot;action_hello&quot;</span> <span class="attr">message</span>=<span class="string">&quot;Hello World&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>紧凑语法更方便、更容易编写，但它提供的关于 TreeNode 模型的信息太少。像 Groot 这样的工具要么需要显式语法，要么需要附加信息。可以使用  标签添加此信息。</p>
<p>为了使前面的 BT 树的精简版本与 Groot 兼容，必须对 XML 进行如下修改:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">BTCPP_format</span>=<span class="string">&quot;4&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span> <span class="attr">ID</span>=<span class="string">&quot;MainTree&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">Sequence</span> <span class="attr">name</span>=<span class="string">&quot;root_sequence&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">SaySomething</span>   <span class="attr">name</span>=<span class="string">&quot;action_hello&quot;</span> <span class="attr">message</span>=<span class="string">&quot;Hello&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">OpenGripper</span>    <span class="attr">name</span>=<span class="string">&quot;open_gripper&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ApproachObject</span> <span class="attr">name</span>=<span class="string">&quot;approach_object&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">CloseGripper</span>   <span class="attr">name</span>=<span class="string">&quot;close_gripper&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">&lt;!-- the BT executor don&#x27;t require this, but Groot does --&gt;</span>     </span><br><span class="line">   <span class="tag">&lt;<span class="name">TreeNodeModel</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">Action</span> <span class="attr">ID</span>=<span class="string">&quot;SaySomething&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input_port</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span> <span class="attr">type</span>=<span class="string">&quot;std::string&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">Action</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">Action</span> <span class="attr">ID</span>=<span class="string">&quot;OpenGripper&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">Action</span> <span class="attr">ID</span>=<span class="string">&quot;ApproachObject&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">Action</span> <span class="attr">ID</span>=<span class="string">&quot;CloseGripper&quot;</span>/&gt;</span>      </span><br><span class="line">   <span class="tag">&lt;/<span class="name">TreeNodeModel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="subtrees"><a href="#subtrees" class="headerlink" title="subtrees"></a><strong>subtrees</strong></h2><p>树中支持引用子树。使用 SubTree 标签。</p>
<h2 id="包含文件"><a href="#包含文件" class="headerlink" title="包含文件"></a><strong>包含文件</strong></h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">path</span>=<span class="string">&quot;relative_or_absolute_path_to_file&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- ros 环境下,可使用 ros_pkg 指定要查找的包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">ros_pkg</span>=<span class="string">&quot;name_package&quot;</span>  <span class="attr">path</span>=<span class="string">&quot;path_relative_to_pkg/grasp.xml&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>



<h1 id="Script"><a href="#Script" class="headerlink" title="Script"></a><strong>Script</strong></h1><p>Behavior Tree 4.X 引入。</p>
<h2 id="赋值操作符-strings-数值"><a href="#赋值操作符-strings-数值" class="headerlink" title="赋值操作符&#x2F;strings&#x2F;数值"></a><strong>赋值操作符&#x2F;strings&#x2F;数值</strong></h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">param_A := <span class="number">42</span> <span class="comment">// 将 blackboard 中 param_A 赋值为 42</span></span><br><span class="line">param_B = <span class="number">3.14</span></span><br><span class="line"> <span class="comment">// 同上,将 param_B 赋值为 3.14</span></span><br><span class="line">message = <span class="string">&#x27;hello world&#x27;</span> <span class="comment">// 将 message 赋值为 hello world</span></span><br><span class="line">A:= <span class="number">42</span>; B:=<span class="number">24</span> <span class="comment">// 在一条script语句赋值多个entry</span></span><br></pre></td></tr></table></figure>



<p>操作符 :&#x3D; 和 &#x3D; 之间的区别在于，如果 blackboard 中不存在一个新条目，前者可以在 blackboard 上创建一个新条目，而后者则会在 blackboard 上不包含该条目时抛出异常。</p>
<h2 id="算术运算符和括号"><a href="#算术运算符和括号" class="headerlink" title="算术运算符和括号"></a><strong>算术运算符和括号</strong></h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 最终 param_B 为 10，param_C 为 31</span></span><br><span class="line">param_A := <span class="number">7</span></span><br><span class="line">param_B := <span class="number">5</span></span><br><span class="line">param_B *= <span class="number">2</span></span><br><span class="line">param_C := (param_A * <span class="number">3</span>) + param_B</span><br></pre></td></tr></table></figure>

<p>支持加减乘除运算符。且加法运算符是唯一可以处理 string(用于连接两个字符串)的运算符</p>
<h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a><strong>位运算符</strong></h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 最终 val_A 为 0x0F，val_B 为 0xFF</span></span><br><span class="line">value:= <span class="number">0x7F</span></span><br><span class="line">val_A:= value &amp; <span class="number">0x0F</span></span><br><span class="line">val_B:= value | <span class="number">0xF0</span></span><br></pre></td></tr></table></figure>

<p>支持 &amp;(与)、|(或)、~(非)、^(异或)。</p>
<h2 id="逻辑和比较运算符"><a href="#逻辑和比较运算符" class="headerlink" title="逻辑和比较运算符"></a><strong>逻辑和比较运算符</strong></h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">val_A := <span class="literal">true</span></span><br><span class="line">val_B := <span class="number">5</span> &gt; <span class="number">3</span></span><br><span class="line">val_C := (val_A == val_B)</span><br><span class="line">val_D := (val_A &amp;&amp; val_B) || !val_C</span><br></pre></td></tr></table></figure>

<p>支持：true&#x2F;false、&amp;&amp;、||、!、&#x3D;&#x3D;、!&#x3D;、&lt;、&lt;&#x3D;、&gt;、&gt;&#x3D;</p>
<h2 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a><strong>三目运算符</strong></h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">val_B = (val_A &gt; <span class="number">1</span>) ? <span class="number">42</span> : <span class="number">24</span></span><br></pre></td></tr></table></figure>



<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a><strong>示例</strong></h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Sequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Script</span> <span class="attr">code</span>=<span class="string">&quot; msg:=&#x27;hello world&#x27; &quot;</span> /&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">Script</span> <span class="attr">code</span>=<span class="string">&quot; A:=THE_ANSWER; B:=3.14; color:=RED &quot;</span> /&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">Precondition</span> <span class="attr">if</span>=<span class="string">&quot;A&gt;B &amp;&amp; color!=BLUE&quot;</span> <span class="attr">else</span>=<span class="string">&quot;FAILURE&quot;</span>&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;<span class="name">Sequence</span>&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">                  <span class="tag">&lt;<span class="name">SaySomething</span> <span class="attr">message</span>=<span class="string">&quot;&#123;A&#125;&quot;</span>/&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">                  <span class="tag">&lt;<span class="name">SaySomething</span> <span class="attr">message</span>=<span class="string">&quot;&#123;B&#125;&quot;</span>/&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">                  <span class="tag">&lt;<span class="name">SaySomething</span> <span class="attr">message</span>=<span class="string">&quot;&#123;msg&#125;&quot;</span>/&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">                  <span class="tag">&lt;<span class="name">SaySomething</span> <span class="attr">message</span>=<span class="string">&quot;&#123;color&#125;&quot;</span>/&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">                <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;/<span class="name">Precondition</span>&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">        <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span></span></span></span></span><br></pre></td></tr></table></figure>



<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// Simple tree: a sequence of two asynchronous actions,</span></span><br><span class="line">  <span class="comment">// but the second will be halted because of the timeout.</span></span><br><span class="line"></span><br><span class="line">  BehaviorTreeFactory factory;</span><br><span class="line">  factory.<span class="built_in">registerNodeType</span>&lt;SaySomething&gt;(<span class="string">&quot;SaySomething&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">enum</span> <span class="title class_">Color</span> &#123; RED=<span class="number">1</span>, BLUE=<span class="number">2</span>, GREEN=<span class="number">3</span> &#125;;</span><br><span class="line">  <span class="comment">// We can add these enums to the scripting language</span></span><br><span class="line">  factory.<span class="built_in">registerScriptingEnums</span>&lt;Color&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Or we can do it manually</span></span><br><span class="line">  factory.<span class="built_in">registerScriptingEnum</span>(<span class="string">&quot;THE_ANSWER&quot;</span>, <span class="number">42</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">auto</span> tree = factory.<span class="built_in">createTreeFromText</span>(xml_text);</span><br><span class="line">  tree.<span class="built_in">tickWhileRunning</span>();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="Pre-and-Post-conditions"><a href="#Pre-and-Post-conditions" class="headerlink" title="Pre and Post conditions"></a><strong>Pre and Post conditions</strong></h1><p>BT.CPP 4.x 引入。可以在Node的实际 tick() 之前或之后运行的脚本。</p>
<p>脚本的目标不是编写复杂的代码，而只是提高树的可读性，并在非常简单的用例中减少对自定义c++节点的需求。</p>
<p>如果脚本太长，可能需要重新考虑使用它们的决定。</p>
<h2 id="Pre-conditions"><a href="#Pre-conditions" class="headerlink" title="Pre conditions"></a><strong>Pre conditions</strong></h2><ul>
<li><strong>_skipIf</strong>: 若条件成立，则跳过该节点</li>
<li><strong>_failureIf</strong>: 若条件成立，则跳过并返回 FAILURE</li>
<li><strong>_successIf</strong>: 若条件成立，则跳过并返回 SUCCESS</li>
<li><strong>_while</strong>: 与 _skipIf 类似，但当条件变为 false 时，可能中断 RUNNING 节点</li>
</ul>
<p>例如：</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905215602833.png" class="" title="image-20240905215602833">

<p>即：若门非关闭状态，则跳过 OpenDoor。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">OpenDoor</span> <span class="attr">_skipIf</span>=<span class="string">&quot;!door_closed&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="Post-conditions"><a href="#Post-conditions" class="headerlink" title="Post conditions"></a><strong>Post conditions</strong></h2><ul>
<li><strong>_onSuccess</strong>: 若节点返回 SUCCESS，则执行该脚本</li>
<li><strong>_onFailure</strong>: 若节点返回 FAILURE，则执行该脚本</li>
<li><strong>_post</strong>: 节点返回 SUCCESS&#x2F;FAILURE，均执行该脚本</li>
<li><strong>_onHalted</strong>: 若 RUNNING 被 halted，则执行该脚本</li>
</ul>
<p>例如：</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905215625719.png" class="" title="image-20240905215625719">



<h2 id="设计模式：错误码"><a href="#设计模式：错误码" class="headerlink" title="设计模式：错误码"></a><strong>设计模式：错误码</strong></h2><p>与状态机相比，行为树可能存在的问题之一是，在那些应该根据动作的结果执行不同策略的模式中。</p>
<p>由于 BT 仅限于成功和失败，这可能是不直观的。</p>
<p>一种解决方案是将结果&#x2F;错误代码存储在 blackboard 中，但这在 3.X 版本中很麻烦。</p>
<p>Pre conditions 可以帮助实现更具可读性的代码，就像下面这样:</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905215637835.png" class="" title="image-20240905215637835">

<p>MoveBase 增加了 return 端口，Sequence 中后面的节点根据 error_code 执行相应动作。</p>
<h2 id="设计模式：状态和声明树"><a href="#设计模式：状态和声明树" class="headerlink" title="设计模式：状态和声明树"></a><strong>设计模式：状态和声明树</strong></h2><p>即使行为树的承诺是将我们从状态的暴政中解放出来，但事实是，有时没有状态很难对我们的应用程序进行推理。</p>
<p>使用状态可以使我们的树更简单。例如，只有当机器人(或子系统)处于特定状态时，才能取树的某个分支。</p>
<p>例如：</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240905215651319.png" class="" title="image-20240905215651319">

<p>该节点只字状态为 DO_LANDING 时才会执行，且一旦 altitude 的值 ≤ 0.1 时，状态切换为 LANDED。</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a><strong>使用</strong></h1><ul>
<li>注册自定义 TreeNode 到 BehaviorTreeFactory  </li>
<li>加载 XML</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;behaviortree_cpp/bt_factory.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// file that contains the custom nodes definitions</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dummy_nodes.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> DummyNodes;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  BehaviorTreeFactory factory;</span><br><span class="line">  <span class="comment">// 创建节点的推荐方式是使用继承</span></span><br><span class="line">  factory.<span class="built_in">registerNodeType</span>&lt;ApproachObject&gt;(<span class="string">&quot;ApproachObject&quot;</span>); </span><br><span class="line">  <span class="comment">// 使用依赖注入方式注册 SimpleActionNode</span></span><br><span class="line">  factory.<span class="built_in">registerSimpleCondition</span>(<span class="string">&quot;CheckBattery&quot;</span>, [&amp;](TreeNode&amp;) &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="built_in">CheckBattery</span>(); &#125;</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  GripperInterface gripper; <span class="comment">// 也可通过类构造函数创建自定义节点</span></span><br><span class="line">  factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;OpenGripper&quot;</span>, [&amp;](TreeNode&amp;)&#123; <span class="keyword">return</span> gripper.<span class="built_in">open</span>(); &#125; );</span><br><span class="line">  factory.<span class="built_in">registerSimpleAction</span>(<span class="string">&quot;CloseGripper&quot;</span>, [&amp;](TreeNode&amp;)&#123; <span class="keyword">return</span> gripper.<span class="built_in">close</span>(); &#125; );</span><br><span class="line">    </span><br><span class="line">  <span class="comment">// 注意: 若 tree 超出范围时(被析构),所有节点都会被删除</span></span><br><span class="line">   <span class="keyword">auto</span> tree = factory.<span class="built_in">createTreeFromFile</span>(<span class="string">&quot;./my_tree.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 执行 BT 树</span></span><br><span class="line"></span><br><span class="line">  tree.<span class="built_in">tickWhileRunning</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Expected output:</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">  [ Battery: OK ]</span></span><br><span class="line"><span class="comment">  GripperInterface::open</span></span><br><span class="line"><span class="comment">  ApproachObject: approach_object</span></span><br><span class="line"><span class="comment">  GripperInterface::close</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>



<h1 id="自定义-Behavior-流程"><a href="#自定义-Behavior-流程" class="headerlink" title="自定义 Behavior 流程"></a>自定义 Behavior 流程</h1><ul>
<li>创建⾃定义⾏为的 C++ 类</li>
<li>创建⼀个⾏为加载器插件，将您的⾃定义⾏为注册到⽬标服务器的⾏为树⼯⼚</li>
<li>将插件库的名称添加到您的机器⼈配置包的 YAML ⽂件中，以允许该类型的机器⼈在运⾏⽬标时加载这些⾏为</li>
</ul>
<p>若不使⽤ ROS，这些⾏为⽆需与 ROS 交互。则可直接从 <code>BT::SyncActionNode</code> 或 <code>BT::StatefulActionNode</code> 派⽣⽽来。</p>
<p>若使⽤ ROS，则需要与 ROS 交互的⾏为需从 <code>moveit_studio_behavior_interface</code> 包中提供的 <strong><code>SharedResourcesNode</code></strong> 类派⽣。此类添加了⼀个额外的构造函数参数，允许在创建时将其指向 ROS 节点的实例（以及⼀些额外的共享资源）。</p>
<p><code>SharedResourcesNode</code> 是⼀个模板，可传⼊任何基于 <code>BT::TreeNode</code> 的类型做为模板参数。该模板参数将被作为 <code>SharedResourcesNode</code> 的基类。例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">SharedResourcesNode&lt;BT::SyncActionNode&gt;</span><br><span class="line">SharedResourcesNode&lt;BT::StatefulActionNode&gt;</span><br></pre></td></tr></table></figure>

<p>此外，还提供了⼀系列基础⾏为，简化与 ROS 的交互：</p>
<ul>
<li><code>GetMessageFromTopicBehaviorBase</code>：从主题获取最新的消息，并赋值给 output port</li>
<li><code>ServiceClientBehaviorBase</code>：向 ROS service 发送请求，并等待结果</li>
<li><code>ActionClientBehaviorBase</code>：向 ROS action service 发送请求，并等待结果</li>
</ul>
<p>参考：<a href="https://docs.picknik.ai/doxygen/namespacemoveit__studio_1_1behaviors.html">https://docs.picknik.ai/doxygen/namespacemoveit__studio_1_1behaviors.html</a></p>
<h2 id="实现-behavior"><a href="#实现-behavior" class="headerlink" title="实现 behavior"></a>实现 <strong>behavior</strong></h2><p>创建⾃定义⾏为时需留意的关键内容。</p>
<p><strong>behavior不能阻塞 ticking</strong><br><code>tick()</code> 应能够⾮常快速地完成，以便从 <code>BT::SyncActionNode</code> 派⽣的⾏为不会在⾏为的 <code>tick()</code> 实现中执⾏⻓时间运⾏的进程。</p>
<p><strong>根据经验，运⾏时间超过 1 毫秒的进程应实现为异步操作节点。</strong><br>实现异步⾏为的⼀种⽅法是在单独的线程中或使⽤异步任务处理⻓时间运⾏的事情。这样，ticking 只会检查⻓时间运⾏的进程是否已完成。</p>
<p>从 <strong><code>BT::StatefulActionNode</code></strong> 继承提供了⼀种简单的⽅法，让⾏为检查这个⻓时间运⾏的进程的进度。同样，这些派⽣类的 <code>onStarted()</code> 和 <code>onRunning()</code> 函数也必须快速完成。或者，可以使⽤ MoveIt Pro 中的 <strong><code>AsyncBehaviorBase</code></strong> 类来定义此类过程的内容。</p>
<h2 id="创建⾏为加载插件"><a href="#创建⾏为加载插件" class="headerlink" title="创建⾏为加载插件"></a>创建⾏为加载插件</h2><p>⾃定义⾏为通过⾏为加载器插件向⽬标服务器⾏为树⼯⼚注册。这是⼀个在运⾏时使⽤插件库加载的类，在⽬标服务器中实例化，并调⽤来注册⾏为。</p>
<p>⾏为加载插件从 <strong><code>SharedResourcesNodeLoaderBase</code></strong> 类派⽣。</p>
<p>将加载器插件添加到 behavior_plugin.xml 中</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">objectives:</span></span><br><span class="line"><span class="attr">behavior_loader_plugins:</span></span><br><span class="line">    <span class="attr">my_package:</span></span><br><span class="line">    	<span class="bullet">-</span> <span class="string">&quot;my_package::MyPackageBehaviorsLoader&quot;</span></span><br></pre></td></tr></table></figure>

<p>创建⾏为处理⼀系列数据点</p>
<p>当创建⾏为时，如果其所需功能是处理⼀系列数据点（例如过滤），最好让⾏为继承⾃ **<code>BT::StatefulActionNode</code>**。<code>BT::StatefulActionNode</code> 允许⾏为在 ticks 之间保留状态，因此可以收集和处理多个数据点。如果处理有限数量的数据点，⾏为可以返回 SUCCESS，如果连续处理多个数据点，⾏为可以返回 RUNNING。</p>
<p>使⽤ <code>BT::StatefulActionNode</code> 处理数据点的⾏为的实现是平均姿势标记。</p>
<h1 id="与-ROS2-集成"><a href="#与-ROS2-集成" class="headerlink" title="与 ROS2 集成"></a>与 ROS2 集成</h1><p>提供了一组现成的封装 BehaviorTree.ROS2，可用于快速实现与 ROS2 交互的 treenode。</p>
<p>在系统架构方面，应该记住:</p>
<ul>
<li>应该有一个集中的 ROS 节点 Coordinator，负责执行行为。这将进一步被称为 Task Planner，它将与 BT.CPP 一起实现</li>
<li>系统的所有其他元素都应该是面向服务(service-oriented)的组件，并且应该将任何业务逻辑和决策委托给 Task Planner</li>
</ul>
<h2 id="异步BT-Action使用-rclcpp-action"><a href="#异步BT-Action使用-rclcpp-action" class="headerlink" title="异步BT::Action使用 rclcpp_action"></a><strong>异步BT::Action使用 <code>rclcpp_action</code></strong></h2><p>与 ROS 交互的推荐方式是使用 <code>rclcpp_action</code>。</p>
<p>他们完美匹配，因为:</p>
<ul>
<li>它们的 API 是异步的，也就是说用户不需要担心创建一个单独的线程</li>
<li>它们可以被中止，这是实现 <code>TreeNode::halt()</code> 和构建响应性行为所需要的功能</li>
</ul>
<p>使用 <code>rclcpp_action</code> 实现 <code>Asyncchronous BT::Action</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 参考 https://docs.ros.org/en/humble/Tutorials/Intermediate/Writing-an-Action-Server-Client/Cpp.html#writing-an-action-client</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FibonacciActionServer</span> : <span class="keyword">public</span> rclcpp::Node</span><br></pre></td></tr></table></figure>

<p>或使用 <code>RosActionNode</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// https://github.com/BehaviorTree/BehaviorTree.ROS</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FibonacciAction</span>: <span class="keyword">public</span> RosActionNode&lt;Fibonacci&gt;</span><br><span class="line"></span><br><span class="line">RosNodeParams params; </span><br><span class="line">params.nh = node;</span><br><span class="line">params.default_port_value = <span class="string">&quot;fibonacci&quot;</span>;</span><br><span class="line">factory.<span class="built_in">registerNodeType</span>&lt;FibonacciAction&gt;(<span class="string">&quot;Fibonacci&quot;</span>, params);</span><br></pre></td></tr></table></figure>





<h2 id="异步BT-Action使用-rclcpp-Client"><a href="#异步BT-Action使用-rclcpp-Client" class="headerlink" title="异步BT::Action使用 rclcpp::Client"></a><strong>异步BT::Action使用 <code>rclcpp::Client</code></strong></h2><h1 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h1><h2 id="例一"><a href="#例一" class="headerlink" title="例一"></a>例一</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ReactiveFallback</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">IsPaused</span> <span class="attr">name</span>=<span class="string">&quot;check_pause&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">SequenceStar</span> <span class="attr">name</span>=<span class="string">&quot;sequenceStar&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">MyAsyncAction</span> <span class="attr">name</span>=<span class="string">&quot;action_A&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">MyAsyncAction</span> <span class="attr">name</span>=<span class="string">&quot;action_B&quot;</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">SequenceStar</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ReactiveSequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BehaviorTree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>IsPaused</code> 在暂停时返回 <code>SUCCESS</code>，否则返回 <code>FAILURE</code></li>
</ul>
<h2 id="例二"><a href="#例二" class="headerlink" title="例二"></a>例二</h2><img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/BehaviorTreeCPP%E4%BD%BF%E7%94%A8/image-20240917095051939.png" class="" title="image-20240917095051939">

<p>来源：<a href="https://roboticseabass.com/2021/05/08/introduction-to-behavior-trees/">https://roboticseabass.com/2021/05/08/introduction-to-behavior-trees/</a></p>
<ul>
<li><p><code>GoToX</code> 行为节点，表示前往指定目标点，在执行过程中返回 <code>RUNNING</code> 状态</p>
</li>
<li><p><code>AtA</code> 判断是否到达目标点 A；若当前在 A 点，则返回 <code>SUCCESS</code>，其父节点 <code>Fallback</code> 直接返回 <code>SUCCESS</code>，不再执行 <code>GoToA</code>；若当前不在 A 点，则返回 <code>FAILURE</code>，则执行 <code>GoToA</code></p>
</li>
<li><p>到达指定目标点后，并行执行 <code>FoundApple</code> 和 <code>FoundOrange</code>（假设设置 <code>Parallel</code> 的 <code>THRESHOLD_SUCCESS</code> 为 1），任意一个成功即返回成功，即无论找到苹果还是橘子都正常结束并行节点，并返回 <code>SUCCESS</code></p>
</li>
</ul>
<p><a href="https://blog.csdn.net/weixin_45710350/article/details/109718775">https://blog.csdn.net/weixin_45710350/article/details/109718775</a></p>
<h2 id="其它示例"><a href="#其它示例" class="headerlink" title="其它示例"></a>其它示例</h2><p>BTPG：<a href="https://github.com/DIDS-EI/BTPG?tab=readme-ov-file#readme">https://github.com/DIDS-EI/BTPG?tab=readme-ov-file#readme</a></p>
<p>RoboWaiter：<a href="https://github.com/HPCL-EI/RoboWaiter?tab=readme-ov-file">https://github.com/HPCL-EI/RoboWaiter?tab=readme-ov-file</a></p>
<p><a href="https://www.cnblogs.com/ting1/p/18047008">https://www.cnblogs.com/ting1/p/18047008</a></p>
<p><a href="https://github.com/huggingface/lerobot">https://github.com/huggingface/lerobot</a></p>
<p><a href="https://robohub.org/anatomy-of-a-robotic-system/">https://robohub.org/anatomy-of-a-robotic-system/</a></p>
]]></content>
      <categories>
        <category>行为树</category>
      </categories>
      <tags>
        <tag>行为树</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
  <entry>
    <title>Substitution</title>
    <url>/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/Substitution/</url>
    <content><![CDATA[<p>有时，特别是在实现集成和单元测试时，需要有⼀种机制，允许⽤“测试”版本(mock)快速替换特定的 Node 或整个 Node 类。</p>
<p>从版本4.1开始，引⼊了⼀种名为 <code>substitution rules</code>的新机制，使这个过程更容易。它由 <code>BehaviorTreeFactory</code> 类中的其他⽅法组成，这些⽅法应该在节点注册之后和实际树实例化之前调⽤。</p>
<p>例如，给定 XML</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">SaySomething</span> <span class="attr">name</span>=<span class="string">&quot;talk&quot;</span> <span class="attr">message</span>=<span class="string">&quot;hello world&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>



<p>可能想⽤另⼀个称为 <code>TestMessage</code> 的节点替代这个节点。相应的替换是⽤命令完成的:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">factory.<span class="built_in">addSubstitutionRule</span>(<span class="string">&quot;talk&quot;</span>, <span class="string">&quot;TestMessage&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>第⼀个参数包含将与 <code>TreeNode::fullPath</code> 匹配的通配符字符串。</p>
]]></content>
      <categories>
        <category>行为树</category>
      </categories>
      <tags>
        <tag>行为树</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
  <entry>
    <title>logger</title>
    <url>/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/logger/</url>
    <content><![CDATA[<p>BT.cpp 提供了⼀种在运⾏时将 logger 添加到树的⽅法，通常是在树创建之后和开始 ticking 之前。 logger 是⼀个类，每次 TreeNode 改变状态时都会调⽤⼀个回调函数; 它是所谓观察者模式的⾮侵⼊式实现。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">callback</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    BT::Duration timestamp, <span class="comment">// When the transition happened</span></span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="type">const</span> TreeNode&amp; node, <span class="comment">// the node that changed its status</span></span></span></span><br><span class="line"><span class="params"><span class="function">    NodeStatus prev_status, <span class="comment">// the previous status</span></span></span></span><br><span class="line"><span class="params"><span class="function">    NodeStatus status)</span></span>; <span class="comment">// the new status</span></span><br></pre></td></tr></table></figure>

<p><code>TreeObserver</code> 是⼀个简单的⽇志实现，它为树的每个节点收集以下统计信息:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">NodeStatistics</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Last valid result, either SUCCESS or FAILURE</span></span><br><span class="line">    NodeStatus last_result;</span><br><span class="line">    <span class="comment">// Last status. Can be any status, including IDLE or SKIPPED</span></span><br><span class="line">    NodeStatus current_status;</span><br><span class="line">    <span class="comment">// count status transitions, excluding transition to IDLE</span></span><br><span class="line">    <span class="type">unsigned</span> transitions_count;</span><br><span class="line">    <span class="comment">// count number of transitions to SUCCESS</span></span><br><span class="line">    <span class="type">unsigned</span> success_count;</span><br><span class="line">    <span class="comment">// count number of transitions to FAILURE</span></span><br><span class="line">    <span class="type">unsigned</span> failure_count;</span><br><span class="line">    <span class="comment">// count number of transitions to SKIPPED</span></span><br><span class="line">    <span class="type">unsigned</span> skip_count;</span><br><span class="line">    <span class="comment">// timestamp of the last transition</span></span><br><span class="line">    Duration last_timestamp;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>由于观察者允许收集特定节点的统计信息，需要⼀种唯⼀标识该节点的⽅法。</p>
<p>可以使⽤两种机制:</p>
<ul>
<li><code>TreeNode::UID()</code>，它是⼀个唯⼀的数字，对应于树的深度优先遍历。</li>
<li><code>TreeNode::fullPath()</code>，旨在成为特定节点的唯⼀但⼈类可读的标识符。</li>
</ul>
<h1 id="StdCoutLogger"><a href="#StdCoutLogger" class="headerlink" title="StdCoutLogger"></a><strong>StdCoutLogger</strong></h1><p>在终端打印行为树中的节点执行状态变化。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">StdCoutLogger <span class="title">logger_cout</span><span class="params">(tree)</span></span>;</span><br></pre></td></tr></table></figure>



<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 该 logger 在终端输出状态转变</span></span><br><span class="line"><span class="function">StdCoutLogger <span class="title">logger_cout</span><span class="params">(tree)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该 logger 保存状态转变到指定文件</span></span><br><span class="line"><span class="function">FileLogger <span class="title">logger_file</span><span class="params">(tree, <span class="string">&quot;bt_trace.fbl&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该 logger 保存每个节点的执行时间</span></span><br><span class="line"><span class="function">MinitraceLogger <span class="title">logger_minitrace</span><span class="params">(tree, <span class="string">&quot;bt_trace.json&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ZMQ_FOUND</span></span><br><span class="line">    <span class="comment">// 使用 ZeroMQ 发布状态转变。Groot 使用该数据</span></span><br><span class="line">    <span class="function">PublisherZMQ <span class="title">publisher_zmq</span><span class="params">(tree)</span></span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>行为树</category>
      </categories>
      <tags>
        <tag>行为树</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
  <entry>
    <title>节点</title>
    <url>/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/%E8%8A%82%E7%82%B9/</url>
    <content><![CDATA[<p>BehaviorTree.CPP 四个主要 node 类型：</p>
<ul>
<li><p><code>BT::ActionNode</code></p>
</li>
<li><p><code>BT::ConditionNode</code></p>
</li>
<li><p><code>BT::ControlNode</code></p>
</li>
<li><p><code>BT::DecoratorNode</code></p>
</li>
</ul>
<p>均继承 <code>BT::TreeNode</code></p>
<h1 id="ActionNodeBase"><a href="#ActionNodeBase" class="headerlink" title="ActionNodeBase"></a><code>ActionNodeBase</code></h1><p>最通用的 action node 基类，子类需实现 <code>executeTick()</code>、<code>tick()</code>、<code>halt()</code> 等函数。</p>
<h1 id="序列节点"><a href="#序列节点" class="headerlink" title="序列节点"></a>序列节点</h1><ul>
<li>一个子节点返回成功后，则继续 ticks 下一个子节点</li>
<li>若最后一个子节点返回成功，则所有子节点执行完成，序列节点返回成功</li>
</ul>
<p>当前有三类序列节点：</p>
<table>
<thead>
<tr>
<th>Type of ControlNode</th>
<th>Child returns FAILURE</th>
<th>Child returns RUNNING</th>
</tr>
</thead>
<tbody><tr>
<td><code>Sequence</code></td>
<td>Restart</td>
<td>Tick again</td>
</tr>
<tr>
<td><code>ReactiveSequence</code></td>
<td>Restart</td>
<td>Restart</td>
</tr>
<tr>
<td><code>SequenceWithMemory</code></td>
<td>Tick again</td>
<td>Tick again</td>
</tr>
</tbody></table>
<p><strong>Restart</strong>：整个序列从列表的第一个子项重新开始</p>
<p><strong>Tick again</strong>：下次 <code>tick</code> 序列时，会再次 <code>tick</code> 同一个子节点。已经返回 <code>SUCCESS</code> 的前一个子节点不再被 <code>tick</code>。</p>
<h2 id="SequenceNode"><a href="#SequenceNode" class="headerlink" title="SequenceNode"></a><code>SequenceNode</code></h2><p>所有字节点都返回成功，则序列节点成功，若任一字节点失败，则序列失败。失败时，Restart。</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/%E8%8A%82%E7%82%B9/image-20240907182855276.png" class="" title="image-20240907182855276">

<ul>
<li><code>IsEnemyVisible</code>：是否发现敌人</li>
<li><code>isRifleLoaded</code>：步枪是否上膛</li>
<li><code>AimAtEnemy</code>：瞄准敌人</li>
<li><code>Shoot</code>：射击</li>
</ul>
<p>执行流程</p>
<ul>
<li>若未发现敌人，则 <code>IsEnemyVisible</code> 返回 failure，Sequence 重新开始</li>
<li><code>IsEnemyVisible</code> 返回 SUCCESS，表示发现敌人，下次 tick 执行下一个子节点</li>
<li>发现敌人后，<code>isRifleLoaded</code> 检查步枪是否上膛，若未上膛，则返回 failure，Sequence 从头开始</li>
<li>若 <code>isRifleLoaded</code> 返回 SUCCESS，表示已上膛，下次 tick 执行下一个子节点</li>
<li>若 <code>AimAtEnemy</code> 返回 failure，表示瞄准失败，Sequence 重新开始</li>
<li>若 <code>AimAtEnemy</code> 返回 SUCCESS，表示已瞄准，下次 tick 执行下一个子节点</li>
<li>开枪射击，若击中，返回 SUCCESS，则 Sequence 返回成功</li>
</ul>
<h2 id="ReactiveSequence"><a href="#ReactiveSequence" class="headerlink" title="ReactiveSequence"></a><code>ReactiveSequence</code></h2><p>该节点<strong>对于连续检查条件特别有用</strong>；但用户在使用异步子项时也应该小心，以确保它们不会比预期更频繁地被 tick。</p>
<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/%E8%8A%82%E7%82%B9/wps1.jpg" class="" title="wps1"> 

<ul>
<li><code>ApproachEnemy</code>：接近敌人。是一个异步行为(asynchronous)，该节点执行过程中始终返回 <code>RUNNING</code>，直到最终完成</li>
<li>若 <code>IsEnemyVisible</code> 返回 FAUILED，则 <code>ApproachEnemy</code> 被暂停</li>
<li><code>ApproachEnemy</code> 在完成前始终返回 RUNNING，因此该序列会一直 Restart。</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">status = RUNNING;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> index=<span class="number">0</span>; index &lt; number_of_children; index++)</span><br><span class="line">&#123;</span><br><span class="line">    child_status = child[index]-&gt;<span class="built_in">tick</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( child_status == RUNNING ) &#123;</span><br><span class="line">        <span class="keyword">return</span> RUNNING;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( child_status == FAILURE ) &#123;</span><br><span class="line">        <span class="built_in">HaltAllChildren</span>();</span><br><span class="line">        <span class="keyword">return</span> FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// all the children returned success. Return SUCCESS too.</span></span><br><span class="line"><span class="built_in">HaltAllChildren</span>();</span><br><span class="line"><span class="keyword">return</span> SUCCESS;</span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://www.cnblogs.com/gary-guo/p/14700313.html">https://www.cnblogs.com/gary-guo/p/14700313.html</a></p>
<h1 id="BT-SyncActionNode-BT-AsyncActionNode"><a href="#BT-SyncActionNode-BT-AsyncActionNode" class="headerlink" title="BT::SyncActionNode &amp; BT::AsyncActionNode"></a><code>BT::SyncActionNode</code> &amp; <code>BT::AsyncActionNode</code></h1><p>均继承 <code>BT::ActionNodeBase</code> 节点。</p>
<p> <code>SyncActionNode</code> 同步节点，不会返回 <code>RUNNING</code>，无需实现 <code>halt()</code></p>
<p><code>BT::AsyncActionNode</code> 创建线程来执行操作（使用 <code>std::async</code>）。使用注意：</p>
<ul>
<li>在 <code>tick()</code> 方法中，必须定期检查 <code>isHaltRequested()</code> 的结果</li>
<li>在 <code>halt()</code> 方法中，可进行清理，但需主动调用基类方法 <code>AsyncActionNode::halt()</code></li>
<li>除少数特例外，暂停的 <code>AsyncAction</code> 必须返回 <code>NodeStatus::IDLE</code></li>
</ul>
<p>注意：当线程完成时，即 <code>tick()</code> 返回其状态时，将调用 <code>TreeNode::emitStateChanged()</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">NodeStatus BT::AsyncActionNode::<span class="built_in">executeTick</span>()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">using</span> lock_type = std::unique_lock&lt;std::mutex&gt;;</span><br><span class="line">  <span class="comment">//send signal to other thread.</span></span><br><span class="line">  <span class="comment">// The other thread is in charge for changing the status</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">status</span>() == NodeStatus::IDLE)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">setStatus</span>(NodeStatus::RUNNING);</span><br><span class="line">    halt_requested_ = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 使用  std::async 实现异步操作</span></span><br><span class="line">    thread_handle_ = std::<span class="built_in">async</span>(std::launch::async, [<span class="keyword">this</span>]() &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">auto</span> status = <span class="built_in">tick</span>();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">isHaltRequested</span>()) <span class="comment">// 检查 isHaltRequested() 的结果</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">setStatus</span>(status);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">catch</span> (std::exception&amp;)</span><br><span class="line">      &#123;</span><br><span class="line">        std::cerr &lt;&lt; <span class="string">&quot;\nUncaught exception from the method tick(): [&quot;</span></span><br><span class="line">                  &lt;&lt; <span class="built_in">registrationName</span>() &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; <span class="built_in">name</span>() &lt;&lt; <span class="string">&quot;]\n&quot;</span></span><br><span class="line">                  &lt;&lt; std::endl;</span><br><span class="line">        <span class="comment">// Set the exception pointer and the status atomically.</span></span><br><span class="line">        lock_type <span class="built_in">l</span>(mutex_);</span><br><span class="line">        exptr_ = std::<span class="built_in">current_exception</span>();</span><br><span class="line">        <span class="built_in">setStatus</span>(BT::NodeStatus::IDLE); <span class="comment">// 切换为 IDLE</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">emitStateChanged</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">lock_type <span class="title">l</span><span class="params">(mutex_)</span></span>;</span><br><span class="line">  <span class="keyword">if</span> (exptr_)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// The official interface of std::exception_ptr does not define any move</span></span><br><span class="line">    <span class="comment">// semantics. Thus, we copy and reset exptr_ manually.</span></span><br><span class="line">    <span class="type">const</span> <span class="keyword">auto</span> exptr_copy = exptr_;</span><br><span class="line">    exptr_ = <span class="literal">nullptr</span>;</span><br><span class="line">    std::<span class="built_in">rethrow_exception</span>(exptr_copy);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">status</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<img src="/2024/09/05/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/%E8%8A%82%E7%82%B9/image-20240907183423591.png" class="" title="image-20240907183423591">



<h1 id="LoopNode"><a href="#LoopNode" class="headerlink" title="LoopNode"></a><strong><code>LoopNode</code></strong></h1><p>该节点继承自 <code>DecoratorNode</code> 节点。从 <code>std::deque</code> 中 <code>pop_front</code> 获取队列首元素，将该元素拷贝到 value port，并执行子节点。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span>* xml_tree = <span class="string">R&quot;(</span></span><br><span class="line"><span class="string"> &lt;root BTCPP_format=&quot;4&quot; &gt;</span></span><br><span class="line"><span class="string">     &lt;BehaviorTree ID=&quot;TreeA&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;Sequence&gt;</span></span><br><span class="line"><span class="string">            &lt;LoopDouble queue=&quot;1;2;3&quot;  value=&quot;&#123;number&#125;&quot;&gt;</span></span><br><span class="line"><span class="string">              &lt;PrintNumber value=&quot;&#123;number&#125;&quot; /&gt;</span></span><br><span class="line"><span class="string">            &lt;/LoopDouble&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &lt;GenerateWaypoints waypoints=&quot;&#123;waypoints&#125;&quot; /&gt;</span></span><br><span class="line"><span class="string">            &lt;LoopPose queue=&quot;&#123;waypoints&#125;&quot;  value=&quot;&#123;wp&#125;&quot;&gt;</span></span><br><span class="line"><span class="string">              &lt;UseWaypoint waypoint=&quot;&#123;wp&#125;&quot; /&gt;</span></span><br><span class="line"><span class="string">            &lt;/LoopPose&gt;</span></span><br><span class="line"><span class="string">        &lt;/Sequence&gt;</span></span><br><span class="line"><span class="string">     &lt;/BehaviorTree&gt;</span></span><br><span class="line"><span class="string"> &lt;/root&gt;</span></span><br><span class="line"><span class="string"> )&quot;</span>;</span><br></pre></td></tr></table></figure>

<p><code>GenerateWaypoints</code> 生成 <code>std::queue</code>，并拷贝到输出 port waypoints 中。<code>LoopPose</code> 依次从 waypoints port 中读取生成的元素，并拷贝到 value 中。</p>
<h1 id="Fallback-vs-Parallel"><a href="#Fallback-vs-Parallel" class="headerlink" title="Fallback vs Parallel"></a><strong><code>Fallback</code> vs <code>Parallel</code></strong></h1><ul>
<li><code>ReactiveFallback</code> 类似于 <code>ParallelNode</code>。依次 tick 所有的子节点：<ul>
<li>如果一个子节点返回 <code>RUNNING</code>，则继续到下一个子节点</li>
<li>如果一个子节点返回 <code>FAILURE</code>，则继续处理下一个子节点</li>
<li>如果子节点返回 <code>SUCCESS</code>，则停止并返回 <code>SUCCESS</code></li>
<li>如果所有子节点都失败，则该节点返回 <code>FAILURE</code></li>
</ul>
</li>
</ul>
<p>重要提示：要正常工作，该节点不应有多个异步子节点。</p>
<ul>
<li><code>Parallel</code> 的子节点并行执行，看起来与 <code>ReactiveSequence</code> 相似，但此控制节点是唯一可以同时运行多个子节点的节点<ul>
<li>当达到 <code>THRESHOLD_SUCCESS</code> 或 <code>THRESHOLD_FAILURE</code> 数时（均使用端口配置），节点完成</li>
<li>如果达到任何阈值，而其他子节点仍在运行，则它们将被停止</li>
<li>阈值 -1 表示所有子节点</li>
</ul>
</li>
</ul>
<h1 id="Decorator"><a href="#Decorator" class="headerlink" title="Decorator"></a>Decorator</h1><h2 id="TimeoutNode"><a href="#TimeoutNode" class="headerlink" title="TimeoutNode"></a><strong>TimeoutNode</strong></h2><p>如果正在运行的子节点的运行时间超过给定时间，<code>TimeoutNode</code> 将 <code>halt()</code> 暂停该子节点。超时以毫秒为单位，并使用端口 <code>msec</code> 传递</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Timeout</span> <span class="attr">msec</span>=<span class="string">&quot;5000&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">KeepYourBreath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Timeout</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="RepeatNode"><a href="#RepeatNode" class="headerlink" title="RepeatNode"></a>RepeatNode</h2><p>重复执行子节点。若子节点返回 <code>SUCCESS</code>，则重复执行 <code>num_cycles</code> 次；若子节点返回 <code>FAILURE</code>，则终止重复过程，并返回 <code>FAILURE</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Repeat</span> <span class="attr">num_cycles</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ClapYourHandsOnce</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Repeat</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 循环抓取 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Repeat</span> <span class="attr">num_cycles</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Sequence</span> <span class="attr">name</span>=<span class="string">&quot;root_sequence&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">GripperAction</span>   <span class="attr">name</span>=<span class="string">&quot;open_gripper&quot;</span> <span class="attr">command</span>=<span class="string">&quot;open&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">GripperAction</span>   <span class="attr">name</span>=<span class="string">&quot;close_gripper&quot;</span> <span class="attr">command</span>=<span class="string">&quot;close&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Sequence</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Repeat</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="DelayNode"><a href="#DelayNode" class="headerlink" title="DelayNode"></a>DelayNode</h2><p>该节点将引入延迟，然后 tick 子节点，返回子节点完成后的状态。延迟以毫秒为单位，并使用端口 <code>delay_msec</code> 传递。 在延迟期间，节点将状态更改为 <code>RUNNING</code>。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Delay</span> <span class="attr">delay_msec</span>=<span class="string">&quot;5000&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">KeepYourBreath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Delay</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h1 id="ConditionNode"><a href="#ConditionNode" class="headerlink" title="ConditionNode"></a>ConditionNode</h1><p>没有子节点，条件满足返回 <code>SUCCESS</code> ，否则返回 <code>FAILURE</code></p>
<p>ConditionNodes 相当于 ActionNodes，但它们始终是原子核同步的，即它们<strong>不能返回 <code>RUNNING</code></strong></p>
<h2 id="Pre-and-Post-Condition"><a href="#Pre-and-Post-Condition" class="headerlink" title="Pre and Post Condition"></a>Pre and Post Condition</h2><p>利用脚本语言的强大功能，BT.CPP 4.X 引入了前置条件和后置条件的概念，即可在 Node 实际 <code>tick()</code> 之前&#x2F;之后运行的脚本。</p>
<h2 id="SimpleConditionNode"><a href="#SimpleConditionNode" class="headerlink" title="SimpleConditionNode"></a>SimpleConditionNode</h2><p>简化 <code>ConditionNode</code> 的使用，用户只需提供回调函数即可。</p>
]]></content>
      <categories>
        <category>行为树</category>
      </categories>
      <tags>
        <tag>行为树</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
  <entry>
    <title>reactive</title>
    <url>/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/reactive/</url>
    <content><![CDATA[<p>大多数自动化系统都要求 reactive 和 modular(模块化)。reactive：快速有效的对变化做出反应的能力，是一种异步编程范式。</p>
<p><strong>FSM 内部对 reactive 和 modularity 进行了平衡</strong>。这种权衡可通过早期编程语言中使用的 Goto statement 来理解。Goto statement 是 one-way control transfer(单向控制转移)的一个实例，程序执行过程中，遇到 goto 语句时，会跳转到指定位置并继续执行。现代编程语言倾向于通过诸如 函数调用 等方法实现 two-way control transfer(双向控制转移)，通过函数调用，跳转去执行指定代码，执行完成之后，函数返回，跳转回函数调用的地方继续执行。</p>
<p>FSM 实际上就是一种 one-way control transfer。这就是 reactive 和 modularity 之间权衡的地方。对于要求 reactive 的系统，需要在各组件之间存在许多转换，意味着许多 one-way control transfer，这样会破坏程序的 modularity。例如：一个组件被删除，则所有与该组件之间的 transition 都需要修改。</p>
<h1 id="并发与并行"><a href="#并发与并行" class="headerlink" title="并发与并行"></a><strong>并发与并行</strong></h1><p>并发：一个 CPU 同时处理多个任务。宏观上是同时处理多个任务，微观上是 CPU 在多个任务之间快速交替执行。</p>
<p>并行：多个 CPU 同时处理多个任务。一个 CPU 执行某个任务时，另一个 CPU 可以执行另一个任务，两者互不干扰，同时进行。</p>
<p>并发在单核&#x2F;多核处理中都存在。但并行只在多核处理器中存在。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**BT.CPP 并发(concurrently)执行所有节点**。即：</span><br><span class="line"></span><br><span class="line">- 行为树的执行引擎是**单线程**的</span><br><span class="line">- 所有 **tick()** 顺序执行</span><br><span class="line">- 若任一 **tick()** 阻塞，则整个执行流程都会被阻塞</span><br></pre></td></tr></table></figure>



<p><strong>通过并发和异步执行来实现响应性行为</strong>(reactive **behaviors)**。</p>
<p>换句话说，需要很长时间执行的 Action 应该尽快返回 RUNNING 状态。</p>
<p>这告诉树执行器操作已经开始，需要更多的时间来返回状态 SUCCESS&#x2F;FAILURE。需要再次 tick 该节点，以了解状态是否发生了变化(轮询)。</p>
<p>异步节点可以将此长时间执行委托给另一个进程(使用进程间通信)或另一个线程。</p>
<h1 id="同步与异步"><a href="#同步与异步" class="headerlink" title="同步与异步"></a><strong>同步与异步</strong></h1><p>当树执行返回 RUNNING 的异步操作时，该状态通常向后传播(propagated backward)，并且整个树被认为处于 RUNNING 状态。</p>
<p>在下面的例子中，ActionE 是异步且正在 RUNNING；当节点处于 RUNNING 状态时，通常其父节点也会返回 RUNNING。</p>
<img src="/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/reactive/image-20240907190458206.png" class="" title="image-20240907190458206">



<h1 id="StatefulActionNode"><a href="#StatefulActionNode" class="headerlink" title="StatefulActionNode"></a><strong>StatefulActionNode</strong></h1><p>该节点是异步行为的最佳实现。该节点继承自 ActionNodeBase，运行方式类似状态机。若节点处于 IDLE 状态，则调用 onStart()；若处于 RUNNING 状态，则调用 onRunning()；若被 halt() 则调用 onHalted()</p>
<img src="/2024/09/07/%E8%A1%8C%E4%B8%BA%E6%A0%91%E4%B8%8E%E7%8A%B6%E6%80%81%E6%9C%BA/BT/BehaviorTree.CPP/reactive/image-20240907190442091.png" class="" title="image-20240907190442091">



<p>StatefulActionNode 的派生类必须重载以下虚函数：</p>
<ul>
<li>NodeStatus onStart(): 当节点处于 IDLE 状态时调用</li>
<li>NodeStatus onRunning(): 当节点处于 RUNNING 状态时调用</li>
<li>void onHalted(): 当节点被树中其它节点中断时调用</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Custom type</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Pose2D</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> x, y, theta;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> chr = std::chrono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MoveBaseAction</span> : <span class="keyword">public</span> BT::StatefulActionNode</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 任何具有端口的 TreeNode 都必须具有具有此签名的构造函数</span></span><br><span class="line">    <span class="built_in">MoveBaseAction</span>(<span class="type">const</span> std::string&amp; name, <span class="type">const</span> BT::NodeConfiguration&amp; config)</span><br><span class="line">      : <span class="built_in">StatefulActionNode</span>(name, config)</span><br><span class="line">    &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// It is mandatory to define this static method.</span></span><br><span class="line">    <span class="function"><span class="type">static</span> BT::PortsList <span class="title">providedPorts</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123; BT::<span class="built_in">InputPort</span>&lt;Pose2D&gt;(<span class="string">&quot;goal&quot;</span>) &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 该方法在启动时调用</span></span><br><span class="line">    <span class="function">BT::NodeStatus <span class="title">onStart</span><span class="params">()</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 若为 RUNNING 状态, 将调用 onRunning 方法</span></span><br><span class="line">    <span class="function">BT::NodeStatus <span class="title">onRunning</span><span class="params">()</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 若节点被其他节点终止时调用该方法</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">onHalted</span><span class="params">()</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    Pose2D _goal;</span><br><span class="line">    chr::system_clock::time_point _completion_time;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function">BT::NodeStatus <span class="title">MoveBaseAction::onStart</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">getInput</span>&lt;Pose2D&gt;(<span class="string">&quot;goal&quot;</span>, _goal))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">throw</span> BT::<span class="built_in">RuntimeError</span>(<span class="string">&quot;missing required input [goal]&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;[ MoveBase: SEND REQUEST ]. goal: x=%f y=%f theta=%f\n&quot;</span>,</span><br><span class="line">         _goal.x, _goal.y, _goal.theta);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 模拟需要执行一段时间（此例中为 200ms）的操作</span></span><br><span class="line">  _completion_time = chr::system_clock::<span class="built_in">now</span>() + chr::<span class="built_in">milliseconds</span>(<span class="number">220</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> BT::NodeStatus::RUNNING;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BT::NodeStatus <span class="title">MoveBaseAction::onRunning</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  std::this_thread::<span class="built_in">sleep_for</span>(chr::<span class="built_in">milliseconds</span>(<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 超过设定时间，则返回 SUCCESS，即 模拟耗时操作</span></span><br><span class="line">  <span class="keyword">if</span>(chr::system_clock::<span class="built_in">now</span>() &gt;= _completion_time)</span><br><span class="line">  &#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;[ MoveBase: FINISHED ]&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> BT::NodeStatus::SUCCESS;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> BT::NodeStatus::RUNNING;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MoveBaseAction::onHalted</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;[ MoveBase: ABORTED ]&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;behaviortree_cpp/action_node.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;std_msgs/String.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PublishTopicNode</span> : <span class="keyword">public</span> BT::StatefulActionNode</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">PublishTopicNode</span>(<span class="type">const</span> std::string &amp;name, <span class="type">const</span> BT::NodeConfiguration &amp;config)</span><br><span class="line">        : BT::<span class="built_in">StatefulActionNode</span>(name, config), <span class="built_in">nh_</span>(<span class="string">&quot;~&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        pub_ = nh_.<span class="built_in">advertise</span>&lt;std_msgs::String&gt;(<span class="string">&quot;your_topic&quot;</span>, <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">static</span> BT::PortsList <span class="title">providedPorts</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Called once at the beginning.</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BT::NodeStatus <span class="title">onStart</span><span class="params">()</span> <span class="keyword">override</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BT::NodeStatus::RUNNING;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This method is invoked at each tick.</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> BT::NodeStatus <span class="title">onRunning</span><span class="params">()</span> <span class="keyword">override</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        std_msgs::String msg;</span><br><span class="line">        msg.data = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">        pub_.<span class="built_in">publish</span>(msg);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Simulate work by sleeping for a short duration (set according to your needs)</span></span><br><span class="line">        ros::<span class="built_in">Duration</span>(<span class="number">0.1</span>).<span class="built_in">sleep</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Continue running</span></span><br><span class="line">        <span class="keyword">return</span> BT::NodeStatus::RUNNING;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Called once at the end.</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">onHalted</span><span class="params">()</span> <span class="keyword">override</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">ROS_INFO</span>(<span class="string">&quot;Halting PublishTopicNode&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    ros::NodeHandle nh_;</span><br><span class="line">    ros::Publisher pub_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Register node with factory</span></span><br><span class="line"><span class="built_in">BT_REGISTER_NODES</span>(factory)</span><br><span class="line">&#123;</span><br><span class="line">    factory.<span class="built_in">registerNodeType</span>&lt;PublishTopicNode&gt;(<span class="string">&quot;PublishTopic&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="Sequence与ReactiveSequence"><a href="#Sequence与ReactiveSequence" class="headerlink" title="Sequence与ReactiveSequence"></a><strong>Sequence与ReactiveSequence</strong></h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span>* xml_text_sequence = <span class="string">R&quot;(</span></span><br><span class="line"><span class="string"> &lt;root BTCPP_format=&quot;4&quot; &gt;</span></span><br><span class="line"><span class="string">     &lt;BehaviorTree ID=&quot;MainTree&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;Sequence name=&quot;root&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;BatteryOK/&gt;</span></span><br><span class="line"><span class="string">            &lt;SaySomething   message=&quot;mission started...&quot; /&gt;</span></span><br><span class="line"><span class="string">            &lt;MoveBase       goal=&quot;1;2;3&quot;/&gt;</span></span><br><span class="line"><span class="string">            &lt;SaySomething   message=&quot;mission completed!&quot; /&gt;</span></span><br><span class="line"><span class="string">        &lt;/Sequence&gt;</span></span><br><span class="line"><span class="string">     &lt;/BehaviorTree&gt;</span></span><br><span class="line"><span class="string"> &lt;/root&gt;</span></span><br><span class="line"><span class="string"> )&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span>* xml_text_reactive = <span class="string">R&quot;(</span></span><br><span class="line"><span class="string"> &lt;root BTCPP_format=&quot;4&quot; &gt;</span></span><br><span class="line"><span class="string">     &lt;BehaviorTree ID=&quot;MainTree&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;ReactiveSequence name=&quot;root&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;BatteryOK/&gt;</span></span><br><span class="line"><span class="string">            &lt;Sequence&gt;</span></span><br><span class="line"><span class="string">                &lt;SaySomething   message=&quot;mission started...&quot; /&gt;</span></span><br><span class="line"><span class="string">                &lt;MoveBase       goal=&quot;1;2;3&quot;/&gt;</span></span><br><span class="line"><span class="string">                &lt;SaySomething   message=&quot;mission completed!&quot; /&gt;</span></span><br><span class="line"><span class="string">            &lt;/Sequence&gt;</span></span><br><span class="line"><span class="string">        &lt;/ReactiveSequence&gt;</span></span><br><span class="line"><span class="string">     &lt;/BehaviorTree&gt;</span></span><br><span class="line"><span class="string"> &lt;/root&gt;</span></span><br><span class="line"><span class="string"> )&quot;</span>;</span><br></pre></td></tr></table></figure>



<p>此例中，对于 ActiveSequence，当 MoveBase 返回 RUNNING 时，序列会被重新启动，BatteryOK 会被再次执行。</p>
<h1 id="事件驱动树"><a href="#事件驱动树" class="headerlink" title="事件驱动树"></a><strong>事件驱动树</strong></h1><p>使用 <code>tree.sleep()</code> 替代 <code>std::this_thread::sleep_for()</code>。<code>Tree::sleep()</code> 可被 <code>TreeNode::emitStateChanged()</code> 中断。</p>
]]></content>
      <categories>
        <category>行为树</category>
      </categories>
      <tags>
        <tag>行为树</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
  <entry>
    <title>RNDIS</title>
    <url>/2024/10/19/Linux/%E9%A9%B1%E5%8A%A8/USB/RNDIS/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="ba697c82890a0942ea3559d7ef28da6d07b43f1c83d045192db38d2c4d40dfd0"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Linux</category>
        <category>驱动</category>
        <category>USB</category>
      </categories>
      <tags>
        <tag>Linux驱动</tag>
      </tags>
  </entry>
  <entry>
    <title>OMPL</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/OMPL/OMPL/</url>
    <content><![CDATA[<p>OMPL：Open Motion Planning Library，是一个包含许多常用的<strong>基于采样</strong>的运动规划算法（以基于采样的算法，如RRT、PRM为主）的 C++ 库。也是 Moveit!(工具集) 默认采用的运动规划算法库。</p>
<p>OMPL.app 是 OMPL 的前端，它是一个包含 <a href="https://github.com/flexible-collision-library/fcl">FCL</a> 和 <a href="http://gamma.cs.unc.edu/SSV">PQP</a> 碰撞检测器和基于 PyQt&#x2F;PySide 的简单 GUI 用户界面的轻量级包。</p>
<p>特性：基于采样，概率完备，非最优&#x2F;渐进最优。</p>
<h1 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a><strong>核心概念</strong></h1><p>运动规划问题核心概念</p>
<ul>
<li><strong>状态空间</strong>：即 构型空间，内部的点表征着规划系统的特点状态。对于一个自有运动的刚体，其状态空间由三个平移状态和三个旋转状态构成；而对于具有 n 个转动关节的机械臂，状态空间可被表征为一个 n 维的圆环面</li>
<li><strong>控制空间</strong>：表征控制量空间的参数化。控制空间适用于动力学系统，对于集合层面的规划，无需考虑控制量问题</li>
<li><strong>采样器</strong>：用于从状态空间内产生不同的状态。对于基于控制的系统，使用独立的控制量采样机对控制空间进行采样</li>
<li><strong>状态有效性检测器</strong>：用于区分状态空间的有小部分和无效部分的算法。如：使用状态有效性检测器进行避障检测，以及速度和加速度超限检测等</li>
<li><strong>局部规划器</strong>：在集合层面进行规划时，局部规划用于进行状态点之间的插补</li>
</ul>
<p>OMPL 中的规划算法都是在非常抽象的<strong>状态空间</strong>中工作。OMPL 中已实现了多种常用状态空间，例如：</p>
<ul>
<li>SE(2)：平面平移及旋转</li>
<li>SE(3)：空间平移及旋转</li>
<li>R^n：<a href="http://ompl.kavrakilab.org/classompl_1_1base_1_1RealVectorStateSpace.html"><strong>ompl::base::RealVectorStateSpace</strong></a></li>
<li>SO(2)：平面旋转</li>
<li>SO(3)：空间旋转</li>
<li>Time</li>
<li>Discrete：离散状态</li>
<li>Dubins：Dubins car’s 状态空间</li>
<li>ReedsShepp：Reeds-Shepp car’s 状态空间</li>
<li>OpenDE：Open Dynamics Engine</li>
<li>Constrained state spaces：约束状态空间</li>
</ul>
<p>OMPL 中实现的控制空间包括：</p>
<ul>
<li>R^n：<a href="http://ompl.kavrakilab.org/classompl_1_1control_1_1RealVectorControlSpace.html"><strong>ompl::control::RealVectorControlSpace</strong></a></li>
<li>Discrete：<a href="http://ompl.kavrakilab.org/classompl_1_1control_1_1DiscreteControlSpace.html"><strong>ompl::control::DiscreteControlSpace</strong></a></li>
<li>OpenDE：<a href="http://ompl.kavrakilab.org/classompl_1_1control_1_1OpenDEControlSpace.html"><strong>ompl::control::OpenDEControlSpace</strong></a></li>
</ul>
<h1 id="OMPL-算法"><a href="#OMPL-算法" class="headerlink" title="OMPL 算法"></a><strong>OMPL 算法</strong></h1><p><strong>基于采样运动规划</strong>：基本思想是使用<strong>图结构</strong>近似搜索空间的连续性，然后对搜索空间进行采样并选择样本点作为近似图的顶点，近似图内各顶点之间的连线表示有效路径。</p>
<p>OMPL 包含许多基于采样的算法的实现：</p>
<ul>
<li>RPM</li>
<li>RRT</li>
<li>EST</li>
<li>SBL</li>
<li>KPIECE</li>
<li>SyCLOP</li>
</ul>
<p>OMPL 规划算法分为两类：</p>
<ul>
<li><strong>几何规划(Geometric planners)</strong></li>
<li><strong>控制规划(Control-based planners)</strong></li>
</ul>
<h2 id="几何规划"><a href="#几何规划" class="headerlink" title="几何规划"></a><strong>几何规划</strong></h2><p><strong>只考虑系统的几何和运动学约束</strong>。</p>
<ul>
<li><p><strong>多任务规划</strong>(Multi-query planners)：为整个任务空间建立 roadmap</p>
</li>
<li><ul>
<li><p>PRM(Probabilistic Roadmap Method)</p>
</li>
<li><p>LazyPRM</p>
</li>
<li><p>PRM*</p>
</li>
<li><p>LazyPRM</p>
</li>
<li><ul>
<li>SPARS(SPArse Roadmap Spanner algorithm)</li>
<li>SPARS2</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>单任务规划</strong>(Single-query planners)：通过可行的运动节点生成一棵树。他们的不同之处在于使用不同的启发式来生长树</p>
</li>
<li><ul>
<li><p>RRT(Rapidly-exploring Random Trees)</p>
</li>
<li><ul>
<li>RRT Connect(RRTConnect)</li>
<li>RRT*</li>
<li>Lower Bound Tree RRT(LBTRRT)</li>
<li>Sparse Stable RRT</li>
<li>T-RRT(Transition-based RRT)</li>
<li>Vector Field RRT</li>
<li>pRRT(Parallel RRT)</li>
<li>LazyRRT(Lazy RRT)</li>
</ul>
</li>
<li><p>EST(Expansive Space Trees)</p>
</li>
<li><p>KPIECE(Kinematic Planning by Interior-Exterior Cell Exploration)</p>
</li>
<li><p>PDST(Path-Directed Subdivision Trees)</p>
</li>
<li><p>FMT*(Fast Marching Tree algorithm)</p>
</li>
<li><p>BFMT*(Bidirectional Fast Marching Tree)</p>
</li>
</ul>
</li>
<li><p><strong>优化 planners</strong>(Optimizing planners)</p>
</li>
<li><ul>
<li>PRM*</li>
<li>LazyPRM*</li>
<li>RRT*</li>
<li>RRT#</li>
<li>RRTX</li>
<li>Informed RRT*</li>
<li>Batch Informed Trees(BIT*)</li>
<li>Sparse Stable RRT</li>
<li>T-RRT</li>
<li>SPARS</li>
<li>SPARS2</li>
<li>FMT*</li>
<li>CForest</li>
<li>APS(AnytimePathShortening)</li>
</ul>
</li>
</ul>
<h2 id="控制规划"><a href="#控制规划" class="headerlink" title="控制规划"></a><strong>控制规划</strong></h2><p>这类 planners 依靠状态传播(state propagation)而不是简单的插值(interpolation)来产生运动。</p>
<ul>
<li><p><strong>RRT</strong>(Rapidly-exploring Random Trees)</p>
</li>
<li><p><strong>SST</strong>(Sparse Stable RRT)</p>
</li>
<li><p><strong>EST</strong>(Expansive Space Trees)</p>
</li>
<li><p><strong>KPIECE</strong>(Kinodynamic Planning by Interior-Exterior Cell Exploration)</p>
</li>
<li><p><strong>PDST</strong>(Path-Directed Subdivision Trees)</p>
</li>
<li><p>Syclop</p>
</li>
<li><ul>
<li>Syclop using RRT as low-level planner</li>
<li>Syclop using EST as the low-level planner</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>OMPL</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>CHOMP</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/CHOMP/</url>
    <content><![CDATA[<p>Covariant Hamiltonian optimization for motion planning(即：<strong>协变哈密顿量优化</strong>)，基于<strong>梯度</strong>的轨迹优化方法，它使得许多日常的运动规划问题变得既简单又可训练。当大多数高维 motion planners 将轨迹生成划分为不同的 planning 和 optimization 阶段时，该算法在 optimization 阶段利用了协变梯度法和函数梯度法，设计了完全基于轨迹优化的运动规划算法。给定一个不可行的初始轨迹，CHOMP 通过对周围环境的反应，快速地将轨迹从碰撞中拉出，同时优化关节速度、加速度等动力学量。它迅速收敛到一个光滑的无碰撞的轨迹，可以有效地执行机器人。</p>
<h1 id="使用-CHOMP"><a href="#使用-CHOMP" class="headerlink" title="使用 CHOMP"></a><strong>使用 CHOMP</strong></h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a><strong>配置</strong></h2><p>首先需要使用 MoveIt Setup Assistant 创建机器人配置包 _moveit_config </p>
<p>注意：如果使用 ros-planning&#x2F;panda_moveit_config 进行演示，那么这些步骤已经完成了，可以跳过这一部分。</p>
<p>① 将 chomp_planning_pipeline.launch.xml 下载到 MoveIt 配置包的 launch 目录</p>
<p>② 下载 chomp_planning.yaml 文件，放入 _moveit_config&#x2F;config 目录中</p>
<p>③ 将 chomp_planning.yaml 中的 animate_endeffector_segment: “panda_rightfinger” 更改为机器人的适当 link</p>
<h2 id="运行-demo"><a href="#运行-demo" class="headerlink" title="运行 demo"></a><strong>运行 demo</strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch panda_moveit_config demo.launch pipeline:=chomp</span></span><br></pre></td></tr></table></figure>

<p>​              </p>
<h2 id="Running-CHOMP-with-Obstacles-in-the-Scene"><a href="#Running-CHOMP-with-Obstacles-in-the-Scene" class="headerlink" title="Running CHOMP with Obstacles in the Scene"></a><strong>Running CHOMP with Obstacles in the Scene</strong></h2><p>要在有障碍的环境中运行CHOMP，以运行Python脚本示例：<a href="https://github.com/ros-planning/moveit_tutorials/tree/melodic-devel/doc/collision_environments/scripts/collision_scene_example.py">collision_scene_example.py</a></p>
<p>该脚本创建一个有四个障碍物的杂乱场景，或者一个只有一个障碍物的简单场景（取决于脚本的参数）。也可以改变障碍物的位置&#x2F;大小来改变场景。</p>
<p>要在有障碍的场景运行 CHOMP planner，打开两个 shell。在第一个 shell 启动 RViz，等待一切完成加载：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch panda_moveit_config demo.launch pipeline:=chomp</span>   </span><br></pre></td></tr></table></figure>

<p>​           </p>
<p>在第二个 shell 中启动脚本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun moveit_tutorials collision_scene_example.py cluttered <span class="comment"># 或者 rosrun moveit_tutorials collision_scene_example.py sparse</span></span> </span><br></pre></td></tr></table></figure>

<p>​     </p>
<p>接下来，在 RViz 中，在MotionPlanning 面板的 Context 标签中选择 CHOMP。通过 imarker 移动末端执行器来设置所需的开始和目标状态，然后点击 MotionPlanning 面板中 Planning 标签下的 Plan 按钮来开始计划。Planner 将尝试在给定的开始和结束位置之间找到一个可行的解决方案。</p>
 <img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/CHOMP/image-20240917210733996.png" class="" title="image-20240917210733996">



<h1 id="调整-CHOMP-参数"><a href="#调整-CHOMP-参数" class="headerlink" title="调整 CHOMP 参数"></a><strong>调整 CHOMP 参数</strong></h1><p>CHOMP 有一些与之相关的优化参数。这些可以针对正在使用的特定环境&#x2F;机器人进行修改，这些参数通常在 chomp_planning.yaml 文件中。在工作的机器人的配置文件夹中。如果机器人不存在此文件，可以创建它并设置所需的参数值。例如：</p>
<ul>
<li><strong>planning_time_limit</strong>：最大规划时间</li>
<li><strong>max_iterations</strong>：最大迭代次数</li>
<li><strong>max_iterations_after_collision_free</strong>：找到无碰撞路径后要执行的最大迭代次数</li>
<li><strong>smoothness_cost_weight</strong>：该参数在 CHOMP 实际优化的最终成本中控制其权重</li>
<li><strong>obstacle_cost_weight</strong>：该参数控制了对 CHOMP 优化的最终成本所给予的障碍的权重。例如：0.0 有一些可以忽略的障碍，1.0 则是一个硬约束</li>
<li><strong>learning_rate</strong>：优化器用来在降低总成本的同时找到本地&#x2F;全局最小值的学习率</li>
<li><strong>smoothness_cost_velocity、smoothness_cost_acceleration、smoothness_cost_jerk</strong>：与velocity、acceleration 和 jerk 相关的变量</li>
<li><strong>ridge_factor</strong>：目标函数中 total quadratic cost matrix 对角线上的噪声。增加小的噪声[如0.001]可以使 CHOMP 避开障碍物，但代价是轨迹的平顺性</li>
<li><strong>use_pseudo_inverse</strong>：是否启用伪逆计算</li>
<li><strong>pseudo_inverse_ridge_factor</strong>：如果启用伪逆，则设置ridge因子</li>
<li><strong>joint_update_limit</strong>：设置关节的更新限制</li>
<li><strong>collision_clearance</strong>：为避开障碍物而需要保持的最小距离</li>
<li><strong>collision_threshold</strong>：为了避免碰撞，需要维护的碰撞阈值</li>
<li><strong>use_stochastic_descent</strong>：如果想在优化成本的同时使用随机下降，将其设置为 true&#x2F;false。在随机下降中，使用的是轨迹上的一个随机点，而不是所有的轨迹点。这样更快，并保证收敛，但在最坏的情况下可能需要更多的迭代</li>
<li><strong>enable_failure_recovery</strong>：若设置为 true，CHOMP 调整某些参数，希望在使用 chomp_planning.yaml 中指定的默认参数不存在解时找到解决方案</li>
<li><strong>max_recovery_attempts</strong>：这是第一次尝试使用默认参数后，使用不同参数集运行 CHOMP 的最大次数</li>
<li><strong>trajectory_initialization_method</strong>：为 CHOMP 提供轨迹初始化的类型，可以是 quintic-spline、linear、cubic 或 fillTrajectory。前三个选项是用于初始化起始和目标状态之间的轨迹的插值方法。fillTrajectory 提供了一个选项，可以从现有的运动规划器[如OMPL]计算出的路径初始化轨迹</li>
</ul>
<p>为 CHOMP 选择参数需要一些直觉，这是由规划环境提供的。例如，CHOMP 的默认参数在没有障碍的环境中工作得很好。然而，在有许多障碍的环境中，默认参数可能会导致 CHOMP 陷入局部最小值。通过调整参数，可以提高 CHOMP 生成的 plan 的质量。</p>
<p>一些未使用&#x2F;注释的参数是:</p>
<ul>
<li>hmc_stochasticity</li>
<li>hmc_annealing_factor</li>
<li>hmc_discretization</li>
<li>use_hamiltonian_montecarlo</li>
<li>animate_endeffector</li>
<li>animate_endeffector_segment</li>
<li>animate_path</li>
<li>random_jump_amount</li>
<li>add_randomness</li>
</ul>
<h1 id="CHOMP-与-OMPL-轨迹的区别"><a href="#CHOMP-与-OMPL-轨迹的区别" class="headerlink" title="CHOMP 与 OMPL 轨迹的区别"></a><strong>CHOMP 与 OMPL 轨迹的区别</strong></h1><p>Optimizing planners 优化成本函数，这有时可能会导致令人惊讶的结果: 通过一个薄薄的障碍可能比通过一个长而曲折的轨迹来避免所有碰撞的成本更低。在本节中，将对从 CHOMP 获得的路径进行区分，并将其与从 OMPL 获得的路径进行对比。</p>
<p>OMPL 是一个开放源码库，用于<strong>基于采样&#x2F;随机化</strong>的 motion planning 算法。基于抽样的算法在概率上是完整的：如果一个解决方案存在，那么它最终会被找到，但是解决方案的不存在是不能被报告的。这些算法是有效的，通常能快速找到解决方案。<strong>OMPL 不包含任何与碰撞检查或可视化相关的代码</strong>，因为 OMPL 的设计者不希望将其绑定到任何特定的碰撞检查器或可视化前端。这个库被设计成可以很容易地集成到提供附加组件的系统中。MoveIt 直接与 OMPL 集成，并使用 OMPL 中的 motion planner 作为默认的 planner 集。OMPL 中的 planner 是抽象的：也就是说，OMPL 没有机器人的概念。相反，MoveIt 配置 OMPL 并为 OMPL 提供后端以处理机器人技术中的问题。</p>
<p>CHOMP：虽然大多数高维 motion planners 将轨迹生成划分为不同的 <strong>planning 和 optimization 阶段</strong>，但 CHOMP 将<strong>协变梯度和函数梯度</strong>方法用于 optimization 阶段，设计一个完全基于轨迹优化的 motion planning 算法。给定一个不可行的初始轨迹，CHOMP 通过对周围环境的反应，快速地将轨迹从碰撞中拉出，同时优化关节速度、加速度等动力学量。它迅速收敛到一个光滑的无碰撞的轨迹，可以有效地执行机器人。协变更新规则确保 CHOMP 快速收敛到局部最优轨迹。</p>
<p>对于含有障碍物的场景，CHOMP 通常会在代价函数中加入一些噪声[<strong>ridge_factor</strong>]来计算机器人的动力学量[如加速度、速度]，从而生成不喜欢平滑轨迹的路径。CHOMP 在大多数情况下可以避开障碍物，但如果由于对轨迹的初始猜测错误而陷入局部极小值，则会失败。OMPL 可以用来为 CHOMP 生成无碰撞的 seed 轨迹来缓解这个问题。</p>
<h1 id="CHOMP-作为-OMPL-的-post-processor"><a href="#CHOMP-作为-OMPL-的-post-processor" class="headerlink" title="CHOMP 作为 OMPL 的 post-processor"></a><strong>CHOMP 作为 OMPL 的 post-processor</strong></h1><p>此节证明了 CHOMP 也可以作为其他规划算法得到的规划的后处理优化技术。这背后的直觉是，一些随机规划算法产生了 CHOMP 的初始猜测。CHOMP 然后根据这个初步猜测，进一步优化轨迹。要做到这一点，请遵循以下步骤:</p>
<p>① 创建 ompl-chomp_planning_pipeline.launch 文件中</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- load OMPL planning pipeline, but add the CHOMP planning adapter. --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/launch/ompl_planning_pipeline.launch.xml&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;planning_adapters&quot;</span> <span class="attr">value</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">       default_planner_request_adapters/AddTimeParameterization</span></span></span><br><span class="line"><span class="string"><span class="tag">       default_planner_request_adapters/FixWorkspaceBounds</span></span></span><br><span class="line"><span class="string"><span class="tag">       default_planner_request_adapters/FixStartStateBounds</span></span></span><br><span class="line"><span class="string"><span class="tag">       default_planner_request_adapters/FixStartStateCollision</span></span></span><br><span class="line"><span class="string"><span class="tag">       default_planner_request_adapters/FixStartStatePathConstraints</span></span></span><br><span class="line"><span class="string"><span class="tag">       chomp/OptimizerAdapter&quot;</span></span></span><br><span class="line"><span class="tag">       /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- load chomp config --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/config/chomp_planning.yaml&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- override trajectory_initialization_method --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;trajectory_initialization_method&quot;</span> <span class="attr">value</span>=<span class="string">&quot;fillTrajectory&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​           </p>
<p>② 该 launch 文件定义了新的 planning pipeline：ompl-CHOMP，它派生于 ompl pipeline，但是添加了 CHOMP pose-processor 作为规划适配器。此外，为了使用 ompl 生成的轨迹，将重写trajectory_initialization_method。</p>
<p>③ 启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch panda_moveit_config demo.launch pipeline:=ompl-chomp</span></span><br></pre></td></tr></table></figure>

<p>​              </p>
<p>将启动 RViz，在 context 选项卡下的运动规划面板中选择 OMPL。通过移动末端执行器来设置所需的起始和目标状态，方法与上面对 CHOMP 所做的相同。最后单击 Plan 按钮开始规划。规划器现在将首先运行 OMPL，然后在 OMPL 的输出上运行 CHOMP 以生成一个优化的路径。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
        <category>Planners</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>OMPL</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/OMPL/</url>
    <content><![CDATA[<p>Open Motion Planning Library 是一个强大的集合，包含了最先进的基于采样的运动规划算法，是 MoveIt 中的默认规划器。</p>
<h1 id="OMPL-设置"><a href="#OMPL-设置" class="headerlink" title="OMPL 设置"></a><strong>OMPL 设置</strong></h1><p>对应 ompl_planning.yaml 文件。例如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">planner_configs:</span><br><span class="line">  SBLkConfigDefault:</span><br><span class="line">    type: geometric::SBL</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">  ESTkConfigDefault:</span><br><span class="line">    type: geometric::EST</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0 setup()</span><br><span class="line">    goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05</span><br><span class="line">  LBKPIECEkConfigDefault:</span><br><span class="line">    type: geometric::LBKPIECE</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">    border_fraction: 0.9  # Fraction of time focused on boarder default: 0.9</span><br><span class="line">    min_valid_path_fraction: 0.5  # Accept partially valid moves above fraction. default: 0.5</span><br><span class="line">  BKPIECEkConfigDefault:</span><br><span class="line">    type: geometric::BKPIECE</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">    border_fraction: 0.9  # Fraction of time focused on boarder default: 0.9</span><br><span class="line">    failed_expansion_score_factor: 0.5  # When extending motion fails, scale score by factor. default: 0.5</span><br><span class="line">    min_valid_path_fraction: 0.5  # Accept partially valid moves above fraction. default: 0.5</span><br><span class="line">  KPIECEkConfigDefault:</span><br><span class="line">    type: geometric::KPIECE</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">    goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05</span><br><span class="line">    border_fraction: 0.9  # Fraction of time focused on boarder default: 0.9 (0.0,1.]</span><br><span class="line">    failed_expansion_score_factor: 0.5  # When extending motion fails, scale score by factor. default: 0.5</span><br><span class="line">    min_valid_path_fraction: 0.5  # Accept partially valid moves above fraction. default: 0.5</span><br><span class="line">  RRTkConfigDefault:</span><br><span class="line">    type: geometric::RRT</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">    goal_bias: 0.05  # When close to goal select goal, with this probability? default: 0.05</span><br><span class="line">  RRTConnectkConfigDefault:</span><br><span class="line">    type: geometric::RRTConnect</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">  RRTstarkConfigDefault:</span><br><span class="line">    type: geometric::RRTstar</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">    goal_bias: 0.05  # When close to goal select goal, with this probability? default: 0.05</span><br><span class="line">    delay_collision_checking: 1  # Stop collision checking as soon as C-free parent found. default 1</span><br><span class="line">  TRRTkConfigDefault:</span><br><span class="line">    type: geometric::TRRT</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">    goal_bias: 0.05  # When close to goal select goal, with this probability? default: 0.05</span><br><span class="line">    max_states_failed: 10  # when to start increasing temp. default: 10</span><br><span class="line">    temp_change_factor: 2.0  # how much to increase or decrease temp. default: 2.0</span><br><span class="line">    min_temperature: 10e-10  # lower limit of temp change. default: 10e-10</span><br><span class="line">    init_temperature: 10e-6  # initial temperature. default: 10e-6</span><br><span class="line">    frountier_threshold: 0.0  # dist new state to nearest neighbor to disqualify as frontier. default: 0.0 set in setup()</span><br><span class="line">    frountierNodeRatio: 0.1  # 1/10, or 1 nonfrontier for every 10 frontier. default: 0.1</span><br><span class="line">    k_constant: 0.0  # value used to normalize expresssion. default: 0.0 set in setup()</span><br><span class="line">  PRMkConfigDefault:</span><br><span class="line">    type: geometric::PRM</span><br><span class="line">    max_nearest_neighbors: 10  # use k nearest neighbors. default: 10</span><br><span class="line">  PRMstarkConfigDefault:</span><br><span class="line">    type: geometric::PRMstar</span><br><span class="line">  FMTkConfigDefault:</span><br><span class="line">    type: geometric::FMT</span><br><span class="line">    num_samples: 1000  # number of states that the planner should sample. default: 1000</span><br><span class="line">    radius_multiplier: 1.1  # multiplier used for the nearest neighbors search radius. default: 1.1</span><br><span class="line">    nearest_k: 1  # use Knearest strategy. default: 1</span><br><span class="line">    cache_cc: 1  # use collision checking cache. default: 1</span><br><span class="line">    heuristics: 0  # activate cost to go heuristics. default: 0</span><br><span class="line">    extended_fmt: 1  # activate the extended FMT*: adding new samples if planner does not finish successfully. default: 1</span><br><span class="line">  BFMTkConfigDefault:</span><br><span class="line">    type: geometric::BFMT</span><br><span class="line">    num_samples: 1000  # number of states that the planner should sample. default: 1000</span><br><span class="line">    radius_multiplier: 1.0  # multiplier used for the nearest neighbors search radius. default: 1.0</span><br><span class="line">    nearest_k: 1  # use the Knearest strategy. default: 1</span><br><span class="line">    balanced: 0  # exploration strategy: balanced true expands one tree every iteration. False will select the tree with lowest maximum cost to go. default: 1</span><br><span class="line">    optimality: 1  # termination strategy: optimality true finishes when the best possible path is found. Otherwise, the algorithm will finish when the first feasible path is found. default: 1</span><br><span class="line">    heuristics: 1  # activates cost to go heuristics. default: 1</span><br><span class="line">    cache_cc: 1  # use the collision checking cache. default: 1</span><br><span class="line">    extended_fmt: 1  # Activates the extended FMT*: adding new samples if planner does not finish successfully. default: 1</span><br><span class="line">  PDSTkConfigDefault:</span><br><span class="line">    type: geometric::PDST</span><br><span class="line">  STRIDEkConfigDefault:</span><br><span class="line">    type: geometric::STRIDE</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">    goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05</span><br><span class="line">    use_projected_distance: 0  # whether nearest neighbors are computed based on distances in a projection of the state rather distances in the state space itself. default: 0</span><br><span class="line">    degree: 16  # desired degree of a node in the Geometric Near-neightbor Access Tree (GNAT). default: 16</span><br><span class="line">    max_degree: 18  # max degree of a node in the GNAT. default: 12</span><br><span class="line">    min_degree: 12  # min degree of a node in the GNAT. default: 12</span><br><span class="line">    max_pts_per_leaf: 6  # max points per leaf in the GNAT. default: 6</span><br><span class="line">    estimated_dimension: 0.0  # estimated dimension of the free space. default: 0.0</span><br><span class="line">    min_valid_path_fraction: 0.2  # Accept partially valid moves above fraction. default: 0.2</span><br><span class="line">  BiTRRTkConfigDefault:</span><br><span class="line">    type: geometric::BiTRRT</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">    temp_change_factor: 0.1  # how much to increase or decrease temp. default: 0.1</span><br><span class="line">    init_temperature: 100  # initial temperature. default: 100</span><br><span class="line">    frountier_threshold: 0.0  # dist new state to nearest neighbor to disqualify as frontier. default: 0.0 set in setup()</span><br><span class="line">    frountier_node_ratio: 0.1  # 1/10, or 1 nonfrontier for every 10 frontier. default: 0.1</span><br><span class="line">    cost_threshold: 1e300  # the cost threshold. Any motion cost that is not better will not be expanded. default: inf</span><br><span class="line">  LBTRRTkConfigDefault:</span><br><span class="line">    type: geometric::LBTRRT</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">    goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05</span><br><span class="line">    epsilon: 0.4  # optimality approximation factor. default: 0.4</span><br><span class="line">  BiESTkConfigDefault:</span><br><span class="line">    type: geometric::BiEST</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">  ProjESTkConfigDefault:</span><br><span class="line">    type: geometric::ProjEST</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">    goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05</span><br><span class="line">  LazyPRMkConfigDefault:</span><br><span class="line">    type: geometric::LazyPRM</span><br><span class="line">    range: 0.0  # Max motion added to tree. ==&gt; maxDistance_ default: 0.0, if 0.0, set on setup()</span><br><span class="line">  LazyPRMstarkConfigDefault:</span><br><span class="line">    type: geometric::LazyPRMstar</span><br><span class="line">  SPARSkConfigDefault:</span><br><span class="line">    type: geometric::SPARS</span><br><span class="line">    stretch_factor: 3.0  # roadmap spanner stretch factor. multiplicative upper bound on path quality. It does not make sense to make this parameter more than 3. default: 3.0</span><br><span class="line">    sparse_delta_fraction: 0.25  # delta fraction for connection distance. This value represents the visibility range of sparse samples. default: 0.25</span><br><span class="line">    dense_delta_fraction: 0.001  # delta fraction for interface detection. default: 0.001</span><br><span class="line">    max_failures: 1000  # maximum consecutive failure limit. default: 1000</span><br><span class="line">  SPARStwokConfigDefault:</span><br><span class="line">    type: geometric::SPARStwo</span><br><span class="line">    stretch_factor: 3.0  # roadmap spanner stretch factor. multiplicative upper bound on path quality. It does not make sense to make this parameter more than 3. default: 3.0</span><br><span class="line">    sparse_delta_fraction: 0.25  # delta fraction for connection distance. This value represents the visibility range of sparse samples. default: 0.25</span><br><span class="line">    dense_delta_fraction: 0.001  # delta fraction for interface detection. default: 0.001</span><br><span class="line">    max_failures: 5000  # maximum consecutive failure limit. default: 5000</span><br><span class="line">  TrajOptDefault:</span><br><span class="line">    type: geometric::TrajOpt</span><br><span class="line"></span><br><span class="line">panda_arm:</span><br><span class="line">  planner_configs:</span><br><span class="line">    - SBLkConfigDefault</span><br><span class="line">    - ESTkConfigDefault</span><br><span class="line">    - LBKPIECEkConfigDefault</span><br><span class="line">    - BKPIECEkConfigDefault</span><br><span class="line">    - KPIECEkConfigDefault</span><br><span class="line">    - RRTkConfigDefault</span><br><span class="line">    - RRTConnectkConfigDefault</span><br><span class="line">    - RRTstarkConfigDefault</span><br><span class="line">    - TRRTkConfigDefault</span><br><span class="line">    - PRMkConfigDefault</span><br><span class="line">    - PRMstarkConfigDefault</span><br><span class="line">    - FMTkConfigDefault</span><br><span class="line">    - BFMTkConfigDefault</span><br><span class="line">    - PDSTkConfigDefault</span><br><span class="line">    - STRIDEkConfigDefault</span><br><span class="line">    - BiTRRTkConfigDefault</span><br><span class="line">    - LBTRRTkConfigDefault</span><br><span class="line">    - BiESTkConfigDefault</span><br><span class="line">    - ProjESTkConfigDefault</span><br><span class="line">    - LazyPRMkConfigDefault</span><br><span class="line">    - LazyPRMstarkConfigDefault</span><br><span class="line">    - SPARSkConfigDefault</span><br><span class="line">    - SPARStwokConfigDefault</span><br><span class="line">    - TrajOptDefault</span><br><span class="line">panda_arm_hand:</span><br><span class="line">  planner_configs:</span><br><span class="line">    - SBLkConfigDefault</span><br><span class="line">    - ESTkConfigDefault</span><br><span class="line">    - LBKPIECEkConfigDefault</span><br><span class="line">    - BKPIECEkConfigDefault</span><br><span class="line">    - KPIECEkConfigDefault</span><br><span class="line">    - RRTkConfigDefault</span><br><span class="line">    - RRTConnectkConfigDefault</span><br><span class="line">    - RRTstarkConfigDefault</span><br><span class="line">    - TRRTkConfigDefault</span><br><span class="line">    - PRMkConfigDefault</span><br><span class="line">    - PRMstarkConfigDefault</span><br><span class="line">    - FMTkConfigDefault</span><br><span class="line">    - BFMTkConfigDefault</span><br><span class="line">    - PDSTkConfigDefault</span><br><span class="line">    - STRIDEkConfigDefault</span><br><span class="line">    - BiTRRTkConfigDefault</span><br><span class="line">    - LBTRRTkConfigDefault</span><br><span class="line">    - BiESTkConfigDefault</span><br><span class="line">    - ProjESTkConfigDefault</span><br><span class="line">    - LazyPRMkConfigDefault</span><br><span class="line">    - LazyPRMstarkConfigDefault</span><br><span class="line">    - SPARSkConfigDefault</span><br><span class="line">    - SPARStwokConfigDefault</span><br><span class="line">    - TrajOptDefault</span><br><span class="line">hand:</span><br><span class="line">  planner_configs:</span><br><span class="line">    - SBLkConfigDefault</span><br><span class="line">    - ESTkConfigDefault</span><br><span class="line">    - LBKPIECEkConfigDefault</span><br><span class="line">    - BKPIECEkConfigDefault</span><br><span class="line">    - KPIECEkConfigDefault</span><br><span class="line">    - RRTkConfigDefault</span><br><span class="line">    - RRTConnectkConfigDefault</span><br><span class="line">    - RRTstarkConfigDefault</span><br><span class="line">    - TRRTkConfigDefault</span><br><span class="line">    - PRMkConfigDefault</span><br><span class="line">    - PRMstarkConfigDefault</span><br><span class="line">    - FMTkConfigDefault</span><br><span class="line">    - BFMTkConfigDefault</span><br><span class="line">    - PDSTkConfigDefault</span><br><span class="line">    - STRIDEkConfigDefault</span><br><span class="line">    - BiTRRTkConfigDefault</span><br><span class="line">    - LBTRRTkConfigDefault</span><br><span class="line">    - BiESTkConfigDefault</span><br><span class="line">    - ProjESTkConfigDefault</span><br><span class="line">    - LazyPRMkConfigDefault</span><br><span class="line">    - LazyPRMstarkConfigDefault</span><br><span class="line">    - SPARSkConfigDefault</span><br><span class="line">    - SPARStwokConfigDefault</span><br><span class="line">    - TrajOptDefault</span><br></pre></td></tr></table></figure>



<h2 id="Longest-Valid-Segment-Fraction"><a href="#Longest-Valid-Segment-Fraction" class="headerlink" title="Longest Valid Segment Fraction"></a><strong>Longest Valid Segment Fraction</strong></h2><p>最长有效分段分数。<strong>longest_valid_segment_fraction</strong> 参数定义用于碰撞检测的机器人运动离散化程度，极大地影响了基于 ompl 的解决方案的性能和可靠性。本文中，motion 可以被认为是图中两个节点之间的边，其中节点是沿轨迹的路点。OMPL 中的默认运动碰撞检查器只是将边缘离散为许多子状态以进行碰撞检查。<strong>目前在 OMPL&#x2F;MoveIt 中没有可用的连续碰撞检查</strong>。</p>
<p>具体来说，<strong>longest_valid_segment_fraction</strong> 是机器人状态空间的一部分，假设机器人当前未处于碰撞中，假设机器人可以在保持无碰撞的情况下移动。例如，如果 <em>longest_valid_segment_fraction &#x3D; 0.01</em>，假设两个节点之间的边小于状态空间的 1&#x2F;100，那么不需要明确地检查沿这条边的任何子状态，只需要检查它连接的两个节点。</p>
<p>除了 ompl_planning.yaml 中的 longest_valid_segment_fraction 参数之外，还有 <strong>maximum_waypoint_distance</strong>，可在 dynamic reconfigure 文件中找到。maximum_waypoint_distance 为碰撞检查定义了相同的机器人运动离散化，但它是在绝对 level 上实现的，而不是使用状态空间的 fractions。例如，如果 maximum_waypoint_distance &#x3D; 0.1，那么如果一条状态空间距离小于 0.1 的边，那么不会显式地检查沿该边的任何子状态，而只需要检测两点。</p>
<p>如果同时设置了 longest_valid_segment_fraction 和 maximum_waypoint_distance，则选择产生最保守离散化的变量（在给定边缘上生成最多碰撞检查状态的变量）。</p>
<p>将 longest_valid_segment_fraction（或 maximum_waypoint_distance）设置得太低，碰撞检查&#x2F;运动规划会很慢。设置得太高，会错过小&#x2F;窄物体。此外，高碰撞检查分辨率会导致路径平滑器输出难以理解的运动，因为它们能够“捕捉”无效路径，然后尝试通过对其进行采样来修复它们，但并不完美。</p>
<p><a href="https://github.com/ros-planning/moveit/pull/337">此处记录了此参数对两个 MoveIt 教程示例的影响的快速分析</a>。</p>
<h2 id="Projection-Evaluator"><a href="#Projection-Evaluator" class="headerlink" title="Projection Evaluator"></a><strong>Projection Evaluator</strong></h2><p><strong>projection_evaluator</strong> 参数可以包含一个关节或 links 列表，以近似地覆盖配置空间。Planner 使用此设置，如:</p>
<ul>
<li>KPIECE</li>
<li>BKPIECE</li>
<li>LBKPIECE</li>
<li>PDST</li>
</ul>
<h2 id="Enforce-Planning-in-Joint-Space"><a href="#Enforce-Planning-in-Joint-Space" class="headerlink" title="Enforce Planning in Joint Space"></a><strong>Enforce Planning in Joint Space</strong></h2><p>根据 planning problem 的不同，MoveIt 在<strong>关节空间</strong>和<strong>笛卡尔空间</strong>之间进行选择，以表征规划问题。设置 group 参数 <strong>enforce_joint_model_state_space</strong> 将强制所有规划使用 joint space。</p>
<p><strong>默认情况下，带有方向路径约束的规划请求是在笛卡尔空间中采样的，因此调用 IK 作为生成采样器</strong>。</p>
<p>通过强制执行 joint space，规划过程将使用拒绝抽样来找到有效的请求。</p>
<h1 id="Smoothing-Paths"><a href="#Smoothing-Paths" class="headerlink" title="Smoothing Paths"></a><strong>Smoothing Paths</strong></h1><p>OMPL 中的许多 planners(包括默认的 planner)更倾向于寻找解决方案路径的速度而不是路径质量。在后处理阶段对可行路径进行平滑和缩短，以获得更接近最优路径。然而，由于 OMPL 中的算法是概率性的，因此不能保证每次都能找到全局最优解或相同的解。其他库，如基于搜索的规划库(Search Based Planning Library, SBPL)提供了确定性结果，即给定相同的环境、起点和目标，将始终得到相同的路径。SBPL 是基于 A* 的，因此将根据所选的搜索分辨率获得最佳结果。然而，SBPL 也有缺点，例如难以以适当的分辨率定义状态空间格(例如，如何定义关节角度或末端执行器姿态的良好离散化)和调整特殊的启发式。</p>
<p>在 OMPL 中有几个 planners 可以提供理论上的最优性保证，但通常只是渐近的:它们收敛到最优解，但收敛速度可能很慢。这些规划器使用的优化目标通常是路径长度的最小化，但也可以使用其他优化目标。</p>
<h2 id="OMPL-Optimization-Objectives"><a href="#OMPL-Optimization-Objectives" class="headerlink" title="OMPL Optimization Objectives"></a><strong>OMPL Optimization Objectives</strong></h2><p>OMPL 规划库中的几个 planners 能够针对指定的优化目标进行优化。目前可用于 MoveIt 的渐近最优 planner 是：</p>
<ul>
<li><p>RRT*</p>
</li>
<li><p>PRM*</p>
</li>
<li><p>LazyPRM*</p>
</li>
<li><p>BFMT</p>
</li>
<li><p>FMT</p>
</li>
<li><p>Lower Bound Tree RRT(LBTRRT)</p>
</li>
<li><p>SPARS</p>
</li>
<li><p>SPARS2</p>
</li>
<li><p>Transition-based RRT(T-RRT)</p>
</li>
</ul>
<p>OMPL 还提供了一种称为 <strong>AnytimePathShortening</strong> 的 meta-optimization 算法，该算法重复并行运行多个规划器，并与路径捷径和路径杂交(这两种技术用于局部优化解决方案路径)交织在一起。虽然没有被证明是最优的，但在实践中通常是获得渐近最优解路径的有效策略。</p>
<p>以及 OMPL 中的其他优化规划器，但尚未在 MoveIt 中公开：</p>
<ul>
<li>RRT#</li>
<li>RRTX</li>
<li>Informed RRT*</li>
<li>Batch Informed Trees(BIT*)</li>
<li>Sparse Stable RRT</li>
<li>FMT*</li>
<li>CForest</li>
</ul>
<p>以下优化目标是可用的:</p>
<ul>
<li>PathLengthOptimizationObjective (Default，路径长度)</li>
<li>MechanicalWorkOptimizationObjective</li>
<li>MaximizeMinClearanceObjective (最大化最小间隙)</li>
<li>StateCostIntegralObjective (状态代价积分)</li>
<li>MinimaxObjective</li>
</ul>
<p>这些优化目标的配置可以通过 ompl_planning.yaml 中的 <strong>optimization_objective</strong> 完成。该参数的值被设置为所选优化目标的名称。例如，要配置 RRTstar 以使用 maximizemclearanceobjective, ompl_planning.yaml 中的 planner entry:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">RRTstarkConfigDefault:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">geometric::RRTstar</span></span><br><span class="line">    <span class="attr">optimization_objective:</span> <span class="string">MaximizeMinClearanceObjective</span></span><br><span class="line">    <span class="attr">range:</span> <span class="number">0.0</span></span><br><span class="line">    <span class="attr">goal_bias:</span> <span class="number">0.05</span></span><br><span class="line">    <span class="attr">delay_collision_checking:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>有关 OMPL 最优规划者的更多信息，请参阅: <a href="http://ompl.kavrakilab.org/optimalPlanning.html">OMPL-最优规划文档</a>。</p>
<h2 id="OMPL-优化器停止条件"><a href="#OMPL-优化器停止条件" class="headerlink" title="OMPL 优化器停止条件"></a><strong>OMPL 优化器停止条件</strong></h2><p>当超过给定的时间限制时，OMPL 中的规划器会终止求解。但是，可以通过 <strong>termination_condition</strong> 参数(ompl_planning.yaml)为每个规划程序配置指定额外的规划程序终止条件。可能的值为：</p>
<ul>
<li>**Iteration [num]**：迭代 num 次后终止</li>
<li>**CostConvergence [solutionsWindow，epsilon]**：在代价（由优化目标指定）收敛之后终止。参数 solutionsWindow 指定的最小解决方案数，用于确认 planner 是否收敛。参数 ε 是要考虑收敛的阈值。应该是接近 0 的正数。如果在找到新的更好的解决方案后累积移动平均值没有以 ε 的相对分数变化，则已经达到收敛。OMPL 版本 ≥ 1.5.0</li>
<li><strong>ExactSolution</strong>：找到确切的解决方案或发生超时后立即终止。这修改了 anytime&#x2F;optimizing 规划器的逻辑，在发现第一个可行解决方案时终止</li>
</ul>
<p>在所有情况下，planner 将在满足用户指定的终止条件或达到 timeout 指定的时间限制时终止，两者中以先发生者为准。</p>
<p>例如，要指定 RRTstar 应该在收敛时终止，可以使用以下设置:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">RRTstarkConfigDefault:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">geometric::RRTstar</span></span><br><span class="line">    <span class="attr">termination_condition:</span> <span class="string">CostConvergence[10,.1]</span></span><br><span class="line">    <span class="attr">range:</span> <span class="number">0.0</span></span><br><span class="line">    <span class="attr">goal_bias:</span> <span class="number">0.05</span></span><br><span class="line">    <span class="attr">delay_collision_checking:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>注意，没有指定优化目标(optimization_objective)，因此将使用默认的 <strong>PathLengthOptimizationObjective</strong>。</p>
<h2 id="Post-Processing-Smoothing"><a href="#Post-Processing-Smoothing" class="headerlink" title="Post-Processing Smoothing"></a><strong>Post-Processing Smoothing</strong></h2><p>请注意，平滑对于减少间接路由的程度是有限度的。还要注意，这里只讨论基于几何（运动学）的平滑。速度&#x2F;加速度&#x2F;急动平滑在其他地方处理，参考：Time Parameterization。</p>
<p><strong>可以通过增加 planning time 来调整 MoveIt 在平滑上花费的时间</strong>。在找到初始规划之后但在 <strong>allowed_planning_time</strong> 用完之前的任何剩余时间都将用于平滑。MoveIt 还进行路径混合(path hybridization)，将 N 个不同规划运行的最佳部分拼接在一起。因此，<strong>num_planning_attempts</strong> 也会影响质量。</p>
<p>虽然目前未在 MoveIt 的顶层公开，但可以通过在 model_based_planning_context.cpp 中将简化持续时间(simplification duration)设置为 0（无限制）来实现更多平滑。这将启用 OMPL 的 simpleMax() 函数。</p>
<p>除了内部 OMPL 平滑器之外，最近还努力使用 STOMP&#x2F;CHOMP 进行后处理。请参考：<a href="https://moveit.ros.org/moveit!/ros/2018/10/25/gsoc-motion-planning-support.html">gsoc-motion-planning-support</a>。</p>
<h1 id="Persistent-Roadmaps"><a href="#Persistent-Roadmaps" class="headerlink" title="Persistent Roadmaps"></a><strong>Persistent Roadmaps</strong></h1><p>默认情况下，对于每个运动规划请求，规划算法均从头开始。但是，对于构建环境路线图的某些规划器，如果规划场景或多或少是静态的，则可以从先前的运动计划请求中重用路线图。请考虑以下计划配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">PersistentLazyPRMstar:</span> <span class="comment"># use this with a representative environment to create a roadmap</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">geometric::LazyPRMstar</span></span><br><span class="line">    <span class="attr">multi_query_planning_enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">store_planner_data:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">load_planner_data:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">planner_data_path:</span> <span class="string">/tmp/roadmap.graph</span></span><br><span class="line"><span class="attr">PersistentLazyPRM:</span> <span class="comment"># use this to load a previously created roadmap</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">geometric::LazyPRM</span></span><br><span class="line">    <span class="attr">multi_query_planning_enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">store_planner_data:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">load_planner_data:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">planner_data_path:</span> <span class="string">/tmp/roadmap.graph</span></span><br><span class="line"><span class="attr">SemiPersistentLazyPRMstar:</span> <span class="comment"># reuses roadmap during lifetime of node but doesn&#x27;t save/load roadmap to/from disk</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">geometric::LazyPRMstar</span></span><br><span class="line">    <span class="attr">multi_query_planning_enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">store_planner_data:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">load_planner_data:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">SemiPersistentLazyPRM:</span> <span class="comment"># reuses roadmap during lifetime of node but doesn&#x27;t save/load roadmap to/from disk</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">geometric::LazyPRM</span></span><br><span class="line">    <span class="attr">multi_query_planning_enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">store_planner_data:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">load_planner_data:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>第一个规划程序配置 <strong>PersistentLazyPRMstar</strong>，将使用 LazyPRM* 来随着每个运动计划请求，在采样的机器人配置之间不断发展渐近最优路径的路线图。销毁规划器实例后，它将把路线图保存到磁盘中。 <strong>PersistentLazyPRM</strong> 配置与之类似，不同之处在于它将从磁盘加载路线图，但销毁后不会将其保存。<strong>SemiPersistent</strong> 规划器配置不会加载&#x2F;保存路线图，但是会随着每个运动规划请求的进行而不断扩展路线图（而不是在规划之前清除路线图的默认行为）。**支持持续性规划功能的四个计划器是：PRM，PRM*，LazyPRM 和 LazyPRM***。它们之间的关键区别在于，当在路线图中搜索有效路径时，惰性变体将根据需要，重新验证节点和边的有效性。非惰性变体将不会检查路线图对于当前环境是否仍然有效。换句话说，对于静态环境，请使用非惰性变体；对于变化很小的环境，请使用惰性变体；如果环境可能发生重大变化，请使用非持久性计划器。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
        <category>Planners</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>Pilz Industrial</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/Pilz/</url>
    <content><![CDATA[<p>pilz_industrial_motion_planner 提供了一个轨迹生成器，以使用MoveIt PlanerManager 插件的接口，规划标准的机器人运动，如 PTP, LIN, CIRC。</p>
<p><strong>1、User Interface MoveGroup</strong></p>
<p>这个包实现了 MoveIt 的 planning_interface::PlannerManager 接口。通过加载相应的 planning pipeline(pilz_industrial_motion_planner_planning_pipeline.launch.xml)，轨迹生成功能可以通过用户界面访问(c++、python或rviz) move_group 提供的节点,例如 &#x2F;plan_kinematics_path 服务和 move_group action。参考 Move Group c++ Interface。</p>
<p><strong>2、Joint limits</strong></p>
<p>对于所有命令，planner 使用来自参数服务器的最大速度和加速度。使用 MoveIt setup assistant，文件 joint_limits.yaml 会使用适当的默认值自动生成并在启动期间加载。</p>
<p>参数服务器上的限制会覆盖来自 URDF 机器人描述的限制。请注意，虽然在 URDF 和参数服务器中都可以设置位置限制和速度限制，但<strong>只能通过参数服务器设置加速度限制</strong>。作为对常用 has_acceleration 和 max_acceleration 参数的扩展，添加了设置 has_deceleration 和 max_deceleration(&lt;0.0) 的功能。</p>
<p>限制合并的<strong>前提是来自参数服务器的限制必须更严格或至少等于 URDF 中设置的参数</strong>。</p>
<p>目前，计算的轨迹将通过使用所有限制的最严格组合作为所有关节的共同限制来遵守限制。</p>
<p><strong>3、Cartesian limits</strong></p>
<p>对于笛卡尔轨迹生成(LIN&#x2F;CIRC)，该 planner 需要三维笛卡尔空间中最大速度的信息。即平移&#x2F;旋转速度&#x2F;加速&#x2F;减速需要在参数服务器上进行如下设置:</p>
<p>​                cartesian_limits:  max_trans_vel: 1  max_trans_acc: 2.25  max_trans_dec: -5  max_rot_vel: 1.57              </p>
<p>对于平动梯形和旋转梯形，planner 假定相同的加速度比。因此，旋转加速度计算为 max_trans_acc &#x2F; max_trans_vel * max_rot_vel(相应的减速)。</p>
<p><strong>4、Planning Interface</strong></p>
<p>这个包使用 moveit_msgs::MotionPlanRequest 和 moveit_msgs::MotionPlanResponse 作为运动规划的输入和输出。</p>
<p><strong>5、PTP motion command</strong></p>
<p>该规划器生成具有梯形关节速度分布的完全同步的点对点轨迹。假设所有关节具有相同的最大关节速度&#x2F;加速度&#x2F;减速极限。如果没有，则采用最严格的限制。以达到目标时间最长的轴为导向轴(<strong>lead axis</strong>)。其他轴都是减速的，以便它们与导向轴共享相同的加速&#x2F;匀速&#x2F;减速阶段</p>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/Pilz/image-20240917211529434.png" class="" title="image-20240917211529434">

<p>1）输入参数</p>
<p>moveit_msgs::MotionPlanRequest</p>
<ul>
<li><p>planner_id：PTP</p>
</li>
<li><p>group_name：规划组名称</p>
</li>
<li><p>max_velocity_scaling_factor：</p>
</li>
<li><p>max_acceleration_scaling_factor：</p>
</li>
<li><p>start_state&#x2F;joint_state&#x2F;(name,position and velocity)：</p>
</li>
<li><p>goal_constraints：</p>
</li>
<li><p>关节空间目标点</p>
</li>
<li><ul>
<li>goal_constraints&#x2F;joint_constraints&#x2F;joint_name: goal joint name</li>
<li>goal_constraints&#x2F;joint_constraints&#x2F;position: goal joint position</li>
</ul>
</li>
<li><p>笛卡尔空间目标点</p>
</li>
<li><ul>
<li>goal_constraints&#x2F;position_constraints&#x2F;header&#x2F;frame_id: 该数据关联的坐标系</li>
<li>goal_constraints&#x2F;position_constraints&#x2F;link_name: target link name</li>
<li>goal_constraints&#x2F;position_constraints&#x2F;constraint_region: bounding volume of the target point</li>
<li>goal_constraints&#x2F;position_constraints&#x2F;target_point_offset: offset (in the link frame) for the target point on the target link (optional)</li>
</ul>
</li>
</ul>
<p><strong>6、LIN motion command</strong></p>
<p>该 planner 生成目标和开始位姿之间的线性笛卡尔轨迹。规划器使用笛卡尔限制在笛卡尔空间中生成梯形速度剖面。平移运动是起始位置向量与目标位置向量之间的线性插值。旋转运动是四元数 slerp 之间的开始和目标方向。</p>
<p>平动和旋转运动在时间上是同步的。这个计划器只接受零速度的开始状态。规划结果是一个关节轨迹。如果运动计划因违反关节空间限制而失败，用户需要调整笛卡尔速度&#x2F;加速度比例因子。</p>
<p><strong>7、CIRC motion command</strong></p>
<p><strong>8、示例</strong></p>
<p>​                sudo apt install ros-melodic-prbt-moveit-config roslaunch prbt_moveit_config demo.launch              </p>
<p><strong>9、使用 Planner</strong></p>
<p>pilz_industrial_motion_planner::CommandPlanner 是作为 MoveIt motion planning pipeline 提供的，因此，可以与使用 MoveIt 的所有其他 manipulators 一起使用。加载插件需要在 move_group 节点启动之前，将 &#x2F;move_group&#x2F;planning_plugin 参数设置为 pilz_industrial_motion_planner::CommandPlanner。</p>
<p>要使用 command planner，必须定义 cartesian limits。该限制应该在名称空间 _planning 下。其中 是指 URDF 加载的参数。例如，如果 URDF 被加载到 &#x2F;robot_description 中，cartesian limits 必须定义在 &#x2F;robot_description_planning。</p>
<p>参考：prbt_moveit_config 包</p>
<p><strong>1）Sequence of multiple segments</strong></p>
<p>要连接多个轨迹并一次规划轨迹，可以使用序列功能。这减少了规划开销，并允许遵循预先描述的路径，而无需在中间点停下来。</p>
<p>请注意:如果某个序列中的命令规划失败，则该顺序中的命令将全部不执行。</p>
<p>请注意:序列命令<strong>允许包含多个组的命令</strong>(例如“机械手”，“抓手”)</p>
<p><strong>2）User interface sequence capability</strong></p>
<p>接受 moveit_msgs::<strong>MotionSequenceRequest</strong> 作为输入。该请求包含上面描述的后续目标列表和一个额外的 blend_radius 参数。如果给定的blend_radius(meter)大于零，则对应的轨迹与下面的目标合并在一起，使机器人不停留在当前目标。</p>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/Pilz/image-20240917211548571.png" class="" title="image-20240917211548571">

<p>参考：<a href="https://github.com/ros-planning/moveit/blob/master/moveit_planners/pilz_industrial_motion_planner/doc/MotionBlendAlgorithmDescription.pdf">MotionBlendAlgorithmDescription.pdf</a></p>
<p>MotionSequenceRequest 的限制</p>
<ul>
<li>只有第一个魔表有 start state。后续轨迹以前一个目标点为起点</li>
<li>两个随后的 blend_radius 球体不能重叠。Blend_radius(i) + Blend_radius(i+1) 必须小于目标之间的距离</li>
</ul>
<p>用户可以通过 action server <strong>&#x2F;sequence_move_group</strong> 执行moveit_msgs::MotionSequenceRequest</p>
<p>在单个点上，MoveGroupSequenceAction 与标准 MoveGroup 能力不同:如果机器人已经在目标位置，路径仍然被执行。底层的 PlannerManager 可以检查单个 moveit_msgs::MotionPlanRequest 的约束是否已经满足，但 MoveGroupSequenceAction 功能没有实现这样的检查，以允许在圆形或类似的路径上移动。</p>
<p>参考：<a href="https://github.com/PilzDE/pilz_industrial_motion/blob/melodic-devel/pilz_robot_programming/examples/demo_program.py">pilz_robot_programming</a></p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
        <category>Planners</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>SBPL</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/SBPL/</url>
    <content><![CDATA[<p>基于搜索的规划库</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
        <category>Planners</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>STOMP</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/STOMP/</url>
    <content><![CDATA[<p><strong>Stochastic Trajectory Optimization for Motion Planning</strong>，是一种<strong>概率优化</strong>框架(Kalakrishnan et al. 2011)。STOMP 在合理的时间内产生平滑且性能良好的无碰撞路径。该方法依赖于生成噪声轨迹来探索初始（可能不可行）轨迹周围的空间，然后将其组合以产生成本更低的更新轨迹。在每次迭代中优化基于障碍和平滑成本组合的成本函数。使用的特定优化算法不需要梯度信息，因此可能无法获得 derivatives 的一般成本（例如，对应于约束和电机扭矩的成本）可以包含在成本函数中。 STOMP 的一些优势包括：它可以包含额外的目标函数，例如扭矩限制、能量和工具约束。STOMP  可以处理不需要可微分的成本函数。它使用距离场和球面近似来快速计算距离查询和碰撞成本。</p>
<p>使用要求</p>
<ul>
<li>必须安装最新版本的 MoveIt。在 ROS Melodic 上，需要从源代码构建 MoveIt。需要从源代码构建，因为 STOMP 还不是正式发布的一部分。因此，它不包含在二进制包中</li>
<li>要将 STOMP 与机器人一起使用，必须已经为机器人准备了一个MoveIt 配置包。例如，Panda 机器人，为 panda_moveit_config 包。这通常是使用 MoveIt setup assisant 构建的</li>
<li>还必须从源代码中构建 ros-industrial&#x2F;industrial_moveit 包。这需要从源代码构建，因为 industrial_moveit 还没有作为 debian 发布。只需要从 industrial_moveit 构建 stomp_core 包，因为使用 moveIt 的 STOMP 功能不需要其他包</li>
</ul>
<p><strong>1、使用 STMOP</strong></p>
<p>注意：如果正在使用此 panda_moveit_config，则可以跳过这些步骤，直接执行步骤 ③</p>
<p>① 下载 stomp_planning_pipeline.launch.xml 到 MoveIt config 包的 launch 目录。最新版的 MoveIt Setup Assistant 会默认生成该文件。该文件内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Stomp Plugin for MoveIt --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;planning_plugin&quot;</span> <span class="attr">value</span>=<span class="string">&quot;stomp_moveit/StompPlannerManager&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- The request adapters (plugins) ORDER MATTERS --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;planning_adapters&quot;</span> <span class="attr">value</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">       default_planner_request_adapters/AddTimeParameterization</span></span></span><br><span class="line"><span class="string"><span class="tag">       default_planner_request_adapters/FixWorkspaceBounds</span></span></span><br><span class="line"><span class="string"><span class="tag">       default_planner_request_adapters/FixStartStateBounds</span></span></span><br><span class="line"><span class="string"><span class="tag">       default_planner_request_adapters/FixStartStateCollision</span></span></span><br><span class="line"><span class="string"><span class="tag">       default_planner_request_adapters/FixStartStatePathConstraints&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;start_state_max_bounds_error&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;planning_plugin&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$(arg planning_plugin)&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;request_adapters&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$(arg planning_adapters)&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;start_state_max_bounds_error&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$(arg start_state_max_bounds_error)&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find panda_moveit_config)/config/stomp_planning.yaml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>② 下载 stomp_planning.yaml 文件到 MoveIt config 包的 config 目录。该文件包含 STOMP 所需的参数。这些参数特定于 SRDF 文件中定义的每个“planning group”。因此，如果有三个规划组，那么配置文件将为每个规划组定义一组特定的参数</p>
<p>③ 修改 move_group.launch 文件，将 pipeline 参数改为 stomp：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- move_group settings --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;allow_trajectory_execution&quot;</span> <span class="attr">default</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;fake_execution&quot;</span> <span class="attr">default</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;max_safe_path_cost&quot;</span> <span class="attr">default</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;jiggle_fraction&quot;</span> <span class="attr">default</span>=<span class="string">&quot;0.05&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;publish_monitored_planning_scene&quot;</span> <span class="attr">default</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Planning Functionality --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">ns</span>=<span class="string">&quot;move_group&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find myworkcell_moveit_config)/launch/planning_pipeline.launch.xml&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;pipeline&quot;</span> <span class="attr">value</span>=<span class="string">&quot;stomp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>运行 demo：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch panda_moveit_config demo.launch</span>     </span><br></pre></td></tr></table></figure>

<p>​         </p>
<p>运行带障碍物场景 demo：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">roslaunch panda_moveit_config demo_stomp.launch rosrun moveit_tutorials collision_scene_example.py cluttered</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun moveit_tutorials collision_scene_example.py sparse</span>              </span><br></pre></td></tr></table></figure>



<p><strong>2、调整 STOMP 参数</strong></p>
<p>STOMP 有一些与之相关的参数。这些可以针对正在使用的特定环境&#x2F;机器人进行修改，这些参数通常在 stomp_planning.yaml 文件中。在工作的机器人的配置文件夹中。如果机器人不存在此文件，可以创建它并设置所需的参数值。例如：</p>
<p><strong>1）Optimization 参数</strong></p>
<ul>
<li>num_timesteps：</li>
<li>num_iterations：</li>
<li>num_iterations_after_valid：</li>
<li>num_rollouts：</li>
<li>max_rollouts：</li>
<li>initialization method：</li>
<li>control_cost_weight：</li>
</ul>
<p><strong>2）Noise Generator 参数</strong></p>
<ul>
<li>class：可设置为：NormalDistributionSampling(默认值) 或 <a href="https://github.com/ros-industrial/industrial_moveit/blob/kinetic-devel/stomp_plugins/example_pages.dox">GoalGuidedMultivariateGaussian</a></li>
<li>stddev：关节噪声程度。该阵列中的每个值都是施加到该阵列中该位置的关节上的噪声的振幅。例如，数组中最左边的值将用于设置机器人第一个关节的噪声(在本例中为 panda_joint1)。该数组的维数应等于规划组名称中的关节数。较大的“stddev”值对应于较大的关节运动</li>
</ul>
<p><strong>3）Cost Function 参数</strong></p>
<ul>
<li>class：</li>
<li>collision_penalty：</li>
<li>cost_weight：</li>
<li>kernel_window_percentage：</li>
<li>longest_valid_joint_move：</li>
</ul>
<p><strong>4）Update Filter 参数</strong></p>
<ul>
<li>class：</li>
<li>poly_order：</li>
</ul>
<p><strong>3、STOMP 测试单元</strong></p>
<p>为了运行单元测试，必须从 ros-industrial&#x2F;industrial_moveit 中获得 stomp_core 包。如果这些测试成功运行，这意味着系统上成功构建并运行了 STOMP。运行 STOMP 单元测试:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">catkin_make run_tests_stomp_moveit stomp_moveit_utest</span>   </span><br></pre></td></tr></table></figure>

<p>​           </p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
        <category>Planners</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>trajOpt</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/trajOpt/</url>
    <content><![CDATA[<p><a href="https://ros-planning.github.io/moveit_tutorials/doc/trajopt_planner/trajopt_planner_tutorial.html">TrajOpt planner</a> 仍然是 MoveIt 2019 年夏季实习项目的 alpha 功能，需要进一步加强。</p>
<p>TrajOpt 是一种用于运动规划问题的序列凸优化算法，其中非凸、非仿射等式和非等式约束被放松、近似线性化和凸化以创建目标函数。这项工作是基于[<a href="https://ros-planning.github.io/moveit_tutorials/doc/trajopt_planner/trajopt_planner_tutorial.html#schulman2013">schulman2013</a>] 和<a href="https://github.com/ros-industrial-consortium/trajopt_ros">原始实现</a>完成的。顺序凸规划，简单地说就是使用一个凸模型并重复地最小化它。考虑以下非凸问题:</p>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/trajOpt/image-20240917211853088.png" class="" title="image-20240917211853088">

<p>其中 f(x) 是最小长度路径</p>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/trajOpt/image-20240917211910096.png" class="" title="image-20240917211910096">

<p>基本思想是通过维护一个解的估计和一个凸信任域来迭代，在这个凸信任域上信任解。这两个关键点是:</p>
<ul>
<li>f(x) 和 g(x) 在信赖域上的凸逼近。然后将近似值转换为惩罚函数</li>
<li>h(x) 在可信区域上的仿射逼近。然后通过考虑 h(x) 的绝对值，将近似 h(x) 转换为罚函数</li>
</ul>
<p>TrajOpt 算法流程：</p>
<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/Planners/trajOpt/image-20240917211931527.png" class="" title="image-20240917211931527">

<p>将关节空间或笛卡尔空间中的避障、关节限制、目标姿态等约束条件转化为惩罚函数，得到最终目标函数。最内环是用序列二次规划作为信赖域方法。它在盒子信赖域内计算二阶泰勒近似。</p>
<p>TrajOpt 的一个重要部分是如何制定避障约束。在离散情况下，约束基本是有符号距离(机器人与自身或与障碍物之间的链接)与安全值之间的差值，在连续情况下，有符号距离是两个路径点与障碍物之间的凸包。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
        <category>Planners</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>IKFast Kinematics Solver</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/%E8%BF%90%E5%8A%A8%E5%AD%A6%E6%B1%82%E8%A7%A3%E5%99%A8/IKFast%20Kinematics%20Solver/</url>
    <content><![CDATA[<p>机器人运动学编译器 IKFast 是 Rosen Diankov 的 OpenRAVE 运动规划软件中提供的一个强大的逆运动学求解器。与大多数逆运动学求解器不同，<strong>IKFast 可以解析任何复杂运动学链的运动学方程</strong>，并生成特定语言的文件(如c++)供以后使用。最终的结果是非常稳定的解决方案。</p>
<p>MoveIt IKFast 是使用 OpenRAVE 生成的 cpp 文件为 MoveIt 生成 IKFast 运动学插件的工具。本教程将引导设置机器人以利用 IKFast 的强大功能。MoveIt IKFast 插件生成器工具不适用于 &gt;7 DOF 的手臂。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><strong>方法一</strong></p>
<p>安装依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install cmake g++ git ipython minizip python-dev python-h5py python-numpy python-scipy qt4-dev-tools</span><br><span class="line"></span><br><span class="line">sudo apt-get install libassimp-dev libavcodec-dev libavformat-dev libavformat-dev libboost-all-dev libboost-date-time-dev libbullet-dev libfaac-dev libglew-dev libgsm1-dev liblapack-dev liblog4cxx-dev libmpfr-dev libode-dev libogg-dev libpcrecpp0v5 libpcre3-dev libqhull-dev libqt4-dev libsoqt-dev-common libsoqt4-dev libswscale-dev libswscale-dev libvorbis-dev libx264-dev libxml2-dev libxvidcore-dev</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 OpenSceneGraph-3.4 ,以使能 OpenRave viewer</span></span><br><span class="line">sudo apt-get install libcairo2-dev libjasper-dev libpoppler-glib-dev libsdl2-dev libtiff5-dev libxrandr-dev</span><br><span class="line">git clone https://github.com/openscenegraph/OpenSceneGraph.git --branch OpenSceneGraph-3.4</span><br><span class="line">cd OpenSceneGraph</span><br><span class="line">mkdir build; cd build</span><br><span class="line">cmake .. -DDESIRED_QT_VERSION=4</span><br><span class="line">make -j$(nproc)</span><br><span class="line">sudo make install</span><br><span class="line">sudo make install_ld_conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pip install --upgrade --user sympy==0.7.1</span></span><br><span class="line">pip install --upgrade --user sympy -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"></span><br><span class="line">sudo apt remove python-mpmath</span><br></pre></td></tr></table></figure>

<p>安装 MoveIt IKFast</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指令安装</span></span><br><span class="line">sudo apt-get install ros-melodic-moveit-kinematics</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">源码安装</span></span><br><span class="line">git clone https://github.com/ros-planning/moveit.git</span><br></pre></td></tr></table></figure>

<p>安装 openRAVE</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 OpenRAVE. 验证失败。使用源码安装</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">sudo</span> apt-get install ros-melodic-openrave</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">export</span> PYTHONPATH=<span class="variable">$PYTHONPATH</span>:`openrave-config --python-dir`</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">源码安装 OpenRAVE</span></span><br><span class="line">git clone --branch latest_stable https://github.com/rdiankov/openrave.git</span><br><span class="line">cd openrave &amp;&amp; mkdir build &amp;&amp; cd build</span><br><span class="line">cmake -DODE_USE_MULTITHREAD=ON -DOSG_DIR=/usr/local/lib64/ ..</span><br><span class="line">make -j$(nproc)</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<p>上述方法编译时失败，改用如下方法二</p>
<p><strong>方法二</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/crigroup/openrave-installation</span><br><span class="line">cd openrave-installation</span><br><span class="line">./install-dependencies.sh</span><br><span class="line">./install-osg.sh</span><br><span class="line">./install-fcl.sh</span><br><span class="line"></span><br><span class="line">./install-openrave.sh</span><br></pre></td></tr></table></figure>



<h1 id="创建-Collada-文件"><a href="#创建-Collada-文件" class="headerlink" title="创建 Collada 文件"></a><strong>创建 Collada 文件</strong></h1><p>参数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MYROBOT_NAME - name of robot as in your URDF</span><br><span class="line">PLANNING_GROUP - planning group 名, 在SRDF和kinematics.yam中引用</span><br><span class="line">MOVEIT_IK_PLUGIN_PKG - name of the new package you just created</span><br><span class="line">IKFAST_OUTPUT_PATH - 生成的 IKFast output.cpp 文件的位置</span><br></pre></td></tr></table></figure>

<p>为了使该示例的复制&#x2F;粘贴更加友好，设置一个 MYROBOT_NAME 环境变量为机器人的名字:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export MYROBOT_NAME=&quot;panda_arm&quot;</span><br></pre></td></tr></table></figure>



<p>首先，需要机器人描述文件，它是 Collada 或 OpenRAVE 机器人格式的。如果机器人不是这种格式，建议创建一个 ROS URDF 文件。</p>
<p>如果是 xacro 格式，则先转换为 urdf 格式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun xacro xacro --inorder -o <span class="string">&quot;<span class="variable">$MYROBOT_NAME</span>&quot;</span>.urdf <span class="string">&quot;<span class="variable">$MYROBOT_NAME</span>&quot;</span>.urdf.xacro</span></span><br></pre></td></tr></table></figure>



<p>将 URDF 转为 Collada(.dae) 文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rosrun collada_urdf urdf_to_collada <span class="string">&quot;<span class="variable">$MYROBOT_NAME</span>&quot;</span>.urdf <span class="string">&quot;<span class="variable">$MYROBOT_NAME</span>&quot;</span>.dae</span></span><br></pre></td></tr></table></figure>



<p>在将 URDF 文件转换为 Collada 文件时，经常会出现浮点问题，因此创建了一个脚本，将 .dae 文件中的所有数字四舍五入到小数点后 x 位。最好一开始就跳过这一步，看看 IKFast 是否可以用默认值生成一个解决方案，但如果生成器花费的时间超过了，比如说，一个小时，试试下面的方法:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export IKFAST_PRECISION=&quot;5&quot;</span><br><span class="line">cp &quot;$MYROBOT_NAME&quot;.dae &quot;$MYROBOT_NAME&quot;.backup.dae  # create a backup of your full precision dae.</span><br><span class="line">rosrun moveit_kinematics round_collada_numbers.py &quot;$MYROBOT_NAME&quot;.dae &quot;$MYROBOT_NAME&quot;.dae &quot;$IKFAST_PRECISION&quot;</span><br></pre></td></tr></table></figure>

<p>根据经验，推荐小数点后 5 位，但如果 OpenRAVE IKFast 生成器需要很长时间才能找到解决方案，可以降低小数点后的位数。</p>
<p>查看生成的 dae 文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果是一个 7DOF 的手臂，需要填写一个 -freeindex 参数</span></span><br><span class="line">openrave-robot.py &quot;$MYROBOT_NAME&quot;.dae --info links</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 dae 文件</span></span><br><span class="line">openrave &quot;$MYROBOT_NAME&quot;.dae</span><br></pre></td></tr></table></figure>

<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/%E8%BF%90%E5%8A%A8%E5%AD%A6%E6%B1%82%E8%A7%A3%E5%99%A8/IKFast%20Kinematics%20Solver/image-20240917212908429.png" class="" title="image-20240917212908429">



<p>例如：gen3</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rosrun xacro xacro --inorder -o gen3.urdf gen3.xacro</span><br><span class="line">rosrun collada_urdf urdf_to_collada gen3.urdf gen3.dae</span><br><span class="line">rosrun moveit_kinematics round_collada_numbers.py gen3.dae gen3.dae 5</span><br><span class="line">openrave gen3.dae</span><br></pre></td></tr></table></figure>

<img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/%E8%BF%90%E5%8A%A8%E5%AD%A6%E6%B1%82%E8%A7%A3%E5%99%A8/IKFast%20Kinematics%20Solver/image-20240917212932924.png" class="" title="image-20240917212932924">

<h1 id="创建-IKFast-Soulution-CPP-文件"><a href="#创建-IKFast-Soulution-CPP-文件" class="headerlink" title="创建 IKFast Soulution CPP 文件"></a><strong>创建 IKFast Soulution CPP 文件</strong></h1><h2 id="选择-IK-类型"><a href="#选择-IK-类型" class="headerlink" title="选择 IK 类型"></a><strong>选择 IK 类型</strong></h2><p>需要选择想要的 IK。最常见的 IK 类型是 transform6d。</p>
<p><a href="http://openrave.org/docs/latest_stable/openravepy/ikfast/#ik-types">IK types</a>：</p>
<ul>
<li><strong>Transform6D</strong>：end effector reaches desired 6D transformation</li>
<li><strong>Rotation3D</strong>：end effector reaches desired 3D rotation</li>
<li><strong>Translation3D</strong>：end effector origin reaches desired 3D translation</li>
<li><strong>Direction3D</strong>：末端执行器坐标系的方向达到预期方向 direction</li>
<li><strong>Ray4D</strong>：ray on end effector coordinate system reaches desired global ray</li>
<li><strong>Lookat3D</strong>：末端执行器坐标系统的方向指向期望的三维位置</li>
<li><strong>TranslationDirection5D</strong>：end effector origin and direction reaches desired 3D translation and direction. Can be thought of as Ray IK where the origin of the ray must coincide.</li>
<li><strong>TranslationXY2D</strong>：end effector origin reaches desired XY translation position, Z is ignored. The coordinate system with relative to the base link.</li>
<li><strong>TranslationLocalGlobal6D</strong>：local point on end effector origin reaches desired 3D global point. Because both local point and global point can be specified, there are 6 values</li>
<li><strong>TranslationXAxisAngle4D,TranslationYAxisAngle4D, TranslationZAxisAngle4D</strong>： end effector origin reaches desired 3D translation, manipulator direction makes a specific angle with x&#x2F;y&#x2F;z-axis (defined in the manipulator base link’s coordinate system)</li>
<li><strong>ranslationXAxisAngleZNorm4D，TranslationYAxisAngleXNorm4D，TranslationZAxisAngleYNorm4D</strong>：end effector origin reaches desired 3D translation, manipulator direction needs to be orthogonal to z, x, or y axis and be rotated at a certain angle starting from the x, y, or z axis (defined in the manipulator base link’s coordinate system)</li>
</ul>
<h2 id="选择-planning-group"><a href="#选择-planning-group" class="headerlink" title="选择 planning group"></a><strong>选择 planning group</strong></h2><p>如果希望为机器人生成 IKFast 解决方案，机器人有多个手臂或 planning  group ，需生成其中一个。例如，可能有两个 planning group:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;planning_group_name&gt; = &quot;left_arm&quot; &lt;planning_group_name&gt; = &quot;right_arm&quot;    </span><br></pre></td></tr></table></figure>

<p>​          </p>
<p>设置环境变量，方便使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PLANNING_GROUP=&quot;panda_arm&quot;   </span><br></pre></td></tr></table></figure>

<p>​           </p>
<h2 id="定义-Links-数目"><a href="#定义-Links-数目" class="headerlink" title="定义 Links 数目"></a><strong>定义 Links 数目</strong></h2><p>还需要 base_link 和 end_link 的 link index，在这两者之间计算IK。可以通过查看的模型中的 links 列表来计算链接的数量:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">openrave-robot.py <span class="string">&quot;<span class="variable">$MYROBOT_NAME</span>&quot;</span>.dae --info links</span>  </span><br></pre></td></tr></table></figure>

<p>​            </p>
<p>根据 ROS 规范的要求，一个典型的 6-DOF 机械手应该有 6 个 arm links + 一个虚拟的 base_link。如果模型中没有额外的 link，则得到: baselink&#x3D;0 和 eelink&#x3D;6。通常，会提供一个额外的 tool_link 来定位 grasp&#x2F;tool 坐标系，给出 eelink&#x3D;7。</p>
<p>下例中的机械手也有另一个 dummy mounting_link，给出 baselink&#x3D;1 和 eelink&#x3D;8</p>
<table>
<thead>
<tr>
<th>name</th>
<th>index</th>
<th>parents</th>
</tr>
</thead>
<tbody><tr>
<td>panda_link0</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>panda_link1</td>
<td>1</td>
<td>panda_link0</td>
</tr>
<tr>
<td>panda_link2</td>
<td>2</td>
<td>panda_link1</td>
</tr>
<tr>
<td>panda_link3</td>
<td>3</td>
<td>panda_link2</td>
</tr>
<tr>
<td>panda_link4</td>
<td>4</td>
<td>panda_link3</td>
</tr>
<tr>
<td>panda_link5</td>
<td>5</td>
<td>panda_link4</td>
</tr>
<tr>
<td>panda_link6</td>
<td>6</td>
<td>panda_link5</td>
</tr>
<tr>
<td>panda_link7</td>
<td>7</td>
<td>panda_link6</td>
</tr>
<tr>
<td>panda_link8</td>
<td>8</td>
<td>panda_link7</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export BASE_LINK=&quot;0&quot; export EEF_LINK=&quot;8&quot;  </span><br></pre></td></tr></table></figure>

<p>如果是 7-DOF 的手臂，需要指定一个自由关节。为 7-DOF 机器人选择正确的自由关节可以对运动学插件的性能产生重大影响。建议对自由关节进行不同选择的试验</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export FREE_INDEX=&quot;1&quot;     </span><br></pre></td></tr></table></figure>

<p>​         </p>
<p><strong>4）生成 IK Solver</strong></p>
<p>为了生成 6-DOF 机械手底座和工具框架之间的 IK 解决方案，使用以下命令格式。建议将输出命名为 ikfast61_”$PLANNING_GROUP”.cpp:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export IKFAST_OUTPUT_PATH=`pwd`/ikfast61_&quot;$PLANNING_GROUP&quot;.cpp   </span><br></pre></td></tr></table></figure>

<p>​           </p>
<p>对 6-DOF 机械臂：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python `openrave-config --python-dir`/openravepy/_openravepy_/ikfast.py --robot=<span class="string">&quot;<span class="variable">$MYROBOT_NAME</span>&quot;</span>.dae --iktype=transform6d --baselink=<span class="string">&quot;<span class="variable">$BASE_LINK</span>&quot;</span> --eelink=<span class="string">&quot;<span class="variable">$EEF_LINK</span>&quot;</span> --savefile=<span class="string">&quot;<span class="variable">$IKFAST_OUTPUT_PATH</span>&quot;</span></span> </span><br></pre></td></tr></table></figure>

<p>​             </p>
<p>对 7-DOF 机械臂，需要指定一个自由 link(–freeindex)：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python `openrave-config --python-dir`/openravepy/_openravepy_/ikfast.py --robot=<span class="string">&quot;<span class="variable">$MYROBOT_NAME</span>&quot;</span>.dae --iktype=transform6d --baselink=<span class="string">&quot;<span class="variable">$BASE_LINK</span>&quot;</span> --eelink=<span class="string">&quot;<span class="variable">$EEF_LINK</span>&quot;</span> --freeindex=<span class="string">&quot;<span class="variable">$FREE_INDEX</span>&quot;</span> --savefile=<span class="string">&quot;<span class="variable">$IKFAST_OUTPUT_PATH</span>&quot;</span></span>  </span><br></pre></td></tr></table></figure>

<p>​            </p>
<p>这个过程的速度和成功将取决于机器人的复杂性。一个典型的 6-DOF 机械手，在底部或手腕处有 3 个相交轴，只需要几分钟就可以生成 IK。</p>
<p>已知问题: freeindex 参数有一个错误，它不能正确处理树索引。假设 -baselink&#x3D;2 -eelink&#x3D;16, links index 从 3 到 9 与当前 planning group 链无关。在这种情况下 -freeindex 将期望索引2作为link 2，但是索引 3 作为link 10，索引 9 作为 link 16。</p>
<h1 id="创建插件"><a href="#创建插件" class="headerlink" title="创建插件"></a><strong>创建插件</strong></h1><p>建议插件包命名格式：”$MYROBOT_NAME”<em>ikfast</em>“$PLANNING_GROUP”_plugin:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export MOVEIT_IK_PLUGIN_PKG=&quot;$MYROBOT_NAME&quot;_ikfast_&quot;$PLANNING_GROUP&quot;_plugin cd ~/catkin_ws/src catkin_create_pkg &quot;$MOVEIT_IK_PLUGIN_PKG&quot; catkin build  </span><br></pre></td></tr></table></figure>

<p>​            </p>
<p>创建插件源码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rosrun moveit_kinematics create_ikfast_moveit_plugin.py &quot;$MYROBOT_NAME&quot; &quot;$PLANNING_GROUP&quot; &quot;$MOVEIT_IK_PLUGIN_PKG&quot; &quot;$IKFAST_OUTPUT_PATH&quot;       </span><br></pre></td></tr></table></figure>

<p>​       </p>
<p>或者，不使用 ROS：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python /path/to/create_ikfast_moveit_plugin.py &quot;$MYROBOT_NAME&quot; &quot;$PLANNING_GROUP&quot; &quot;$MOVEIT_IK_PLUGIN_PKG&quot; &quot;$IKFAST_OUTPUT_PATH&quot; </span><br></pre></td></tr></table></figure>

<p>​             </p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a><strong>使用</strong></h1><p>IKFast 插件的功能应该与默认的 KDL IK 求解器相同，但性能会大大提高。MoveIt 配置文件由 moveit_ikfast 脚本自动编辑，但是可以使用机器人运动学中的 kinematics_solver 参数在 KDL 和 IKFast 求解器之间切换。yaml文件:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rosed &quot;$MYROBOT_NAME&quot;_moveit_config kinematics.yaml     </span><br></pre></td></tr></table></figure>

<p>​         </p>
<p>编辑以下部分：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;planning_group&gt;:</span></span><br><span class="line">  <span class="attr">kinematics_solver:</span> <span class="string">&lt;myrobot_name&gt;_&lt;planning_group&gt;_kinematics/IKFastKinematicsPlugin</span></span><br><span class="line"><span class="string">-INSTEAD</span> <span class="string">OF-</span></span><br><span class="line">  <span class="attr">kinematics_solver:</span> <span class="string">kdl_kinematics_plugin/KDLKinematicsPlugin</span></span><br></pre></td></tr></table></figure>

<p>​    </p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
        <category>运动学求解器</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>OPW Kinematics Solver</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/%E8%BF%90%E5%8A%A8%E5%AD%A6%E6%B1%82%E8%A7%A3%E5%99%A8/OPW%20Kinematics%20Solver/</url>
    <content><![CDATA[<p>工业机械手 <strong>OPW</strong> 运动学求解器。</p>
<p>摘自 <a href="https://github.com/Jmeyer1292/opw_kinematics">opw_kinematics</a>：一个简单的解析逆运动学库，<strong>用于具有平行底座和球形手腕的工业机器人</strong>。基于 Mathias Brandstötter、Arthur Angerer 和 Michael Hofbaur 的论文(An Analytical Solution of the Inverse Kinematics Problem of Industrial Serial Manipulators with an Ortho-parallel Basis and a Spherical)。</p>
<p>该软件包旨在为具有平行底座和球形手腕的工业机器人提供一种更简单的替代方案，而不是基于 IK-Fast 的解决方案。这种配置在工业机器人中非常常见。</p>
<p>1、安装使用</p>
<p><a href="https://github.com/JeroenDM/moveit_opw_kinematics_plugin">opw_kinematics_plugin</a> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt install ros-noetic-moveit-opw-kinematics-plugin</span></span><br></pre></td></tr></table></figure>

<p>​            </p>
<p>替换 kinematics.yaml 中的 kinematics_solver</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin</span><br><span class="line">替换为</span><br><span class="line">kinematics_solver: moveit_opw_kinematics_plugin/MoveItOPWKinematicsPlugin</span><br></pre></td></tr></table></figure>

<p>​        </p>
<p>并设置参数来描述机械手的几何形状。参数可从机器人手册中查询。以下是KUKA KR 6 R700所需的参数示例</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">manipulator:</span></span><br><span class="line">  <span class="attr">kinematics_solver:</span> <span class="string">moveit_opw_kinematics_plugin/MoveItOPWKinematicsPlugin</span></span><br><span class="line">  <span class="attr">opw_kinematics_geometric_parameters:</span></span><br><span class="line">    <span class="attr">a1:</span>  <span class="number">0.025</span></span><br><span class="line">    <span class="attr">a2:</span> <span class="number">-0.035</span></span><br><span class="line">    <span class="attr">b:</span>   <span class="number">0.000</span></span><br><span class="line">    <span class="attr">c1:</span>  <span class="number">0.400</span></span><br><span class="line">    <span class="attr">c2:</span>  <span class="number">0.315</span></span><br><span class="line">    <span class="attr">c3:</span>  <span class="number">0.365</span></span><br><span class="line">    <span class="attr">c4:</span>  <span class="number">0.080</span></span><br><span class="line">  <span class="attr">opw_kinematics_joint_offsets:</span> [<span class="number">0.0</span>, <span class="number">-1.57079632679</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">  <span class="attr">opw_kinematics_joint_sign_corrections:</span> [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>]</span><br></pre></td></tr></table></figure>

<p>​           </p>
<p>参数的含义可以通过草图来最好地理解。如果与 URDF 不匹配，插件将在启动时报错:</p>
 <img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/%E8%BF%90%E5%8A%A8%E5%AD%A6%E6%B1%82%E8%A7%A3%E5%99%A8/OPW%20Kinematics%20Solver/image-20240917213358269.png" class="" title="image-20240917213358269">

<p>我们计划收集 OPW 参数集，作为 ros-industrial robot 支持包的一部分。发那科已经开始这样做了。以 <a href="https://github.com/ros-industrial/fanuc/blob/3ea2842baca3184cc621071b785cbf0c588a4046/fanuc_m10ia_support/config/opw_parameters_m10ia.yaml">M-10iA</a> 为例，kinematics.yaml 可精简为</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">manipulator:</span></span><br><span class="line">  <span class="attr">kinematics_solver:</span> <span class="string">moveit_opw_kinematics_plugin/MoveItOPWKinematicsPlugin</span></span><br></pre></td></tr></table></figure>



<p>然后在 launch&#x2F;planning_context.launch 中添加一条 rosparam load，使该文件中的参数被加载到参数服务器:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Load default settings for kinematics; these settings are overridden by settings in a node&#x27;s namespace --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">&quot;$(arg robot_description)_kinematics&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find opw_tutorial)/config/kinematics.yaml&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">ns</span>=<span class="string">&quot;manipulator&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find fanuc_lrmate200ib_support)/config/opw_parameters_lrmate200ib.yaml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>需先下载 fanuc_lrmate200ib_support 包。</p>
<p>注意：ns 参数需与 planning group 匹配。</p>
<p>MoveIt Setup Assistant 可以自动插入这一行，无需手动编辑planning_context.launch 文件。</p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
        <category>运动学求解器</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>kinematics配置</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/%E8%BF%90%E5%8A%A8%E5%AD%A6%E6%B1%82%E8%A7%A3%E5%99%A8/kinematics/</url>
    <content><![CDATA[<p><strong>MoveIt! 使用插件结构，尤其是允许用户编写自己的逆运动学算法。Forward kinematics（正向运动学） and finding jacobians（查找雅可比矩阵） 被整合到自己的 RobotState 类。默认逆运动学插件配置使用 KDL numerical jacobian-based solver。由 MoveIt! Setup Assistant 自动配置。</strong></p>
<p>用户可以选择执行自己的运动学求解器，例如 PR2 有自己的运动学求解器。要实现这样的求解的一种流行的方法是使用 ikfast 包产生需要与特定工作的机器人的 C++ 代码。</p>
<p>在规划场景中，冲突检测通过 CollisionWorld 对象来配置，由 FCL 包（主要的CC库）来执行。</p>
<p>Allowed Collision Matrix (ACM)（免检冲突矩阵），在运动规划里，冲突检测会耗费甚至达到 90% 的计算资源。ACM 编码需要检测的对象间的对应关系（机器人的或世界的）。如果在 ACM 关联两对象的值为1，那就不需要检测，这情况就比如两个对象相隔很远，永远不会发生碰撞。</p>
<h1 id="kinematics-配置"><a href="#kinematics-配置" class="headerlink" title="kinematics 配置"></a>kinematics 配置</h1><p>kinematics 配置参数位于 kinematics.yaml 文件中。例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">panda_arm:</span></span><br><span class="line">  <span class="attr">kinematics_solver:</span> <span class="string">kdl_kinematics_plugin/KDLKinematicsPlugin</span></span><br><span class="line">  <span class="attr">kinematics_solver_search_resolution:</span> <span class="number">0.005</span></span><br><span class="line">  <span class="attr">kinematics_solver_timeout:</span> <span class="number">0.05</span></span><br><span class="line">  <span class="attr">kinematics_solver_attempts:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure>



<h2 id="通用参数"><a href="#通用参数" class="headerlink" title="通用参数"></a>通用参数</h2><ul>
<li><strong>kinematics_solver</strong>：运动学求解器插件名。必须与 plugin description 文件中的名字一致</li>
<li><strong>kinematics_solver_search_resolution</strong>：指定求解器可能用于在冗余空间中搜索逆运动学的分辨率</li>
<li><strong>kinematics_solver_timeout</strong>：逆运动学求解器可能执行的每个内部迭代的默认超时(以秒为单位)。典型的迭代(例如，数值求解器)将包括从种子状态随机重新启动，然后是求解周期(适用于此超时)。解算器可以尝试多次重启。默认的重启次数由 kinematics_solver_attempts 参数定义</li>
<li><strong>kinematics_solver_attempts</strong>：重试次数。最好将超时设置得较低，并在单个解决方案周期中快速失败</li>
</ul>
<h2 id="KDL-Kinematics-插件"><a href="#KDL-Kinematics-插件" class="headerlink" title="KDL Kinematics 插件"></a>KDL Kinematics 插件</h2><p>KDL kinematics 插件封装了 Orocos KDL 包提供的数值逆运动学求解器。</p>
<ul>
<li>默认的运动学插件</li>
<li>遵守 URDF 中指定的关节限制(如果 URDF 中指定了 safety 限制，则将使用 safety 限制)</li>
<li>KDL 运动学插件目前只适用于串行链(serial chains)</li>
</ul>
<h2 id="LMA-Kinematic-插件"><a href="#LMA-Kinematic-插件" class="headerlink" title="LMA Kinematic 插件"></a>LMA Kinematic 插件</h2><p>LMA (Levenberg-Marquardt)运动学插件也是封装了 Orocos KDL 包提供的数值逆运动学求解器。</p>
<ul>
<li>遵守 URDF 中指定的关节限制(如果 URDF 中指定了 safety 限制，则将使用 safety 限制)</li>
<li>该插件目前只适用于串行链(serial chains)</li>
</ul>
<p>使用方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kinematics_solver: lma_kinematics_plugin/LMAKinematicsPlugin  </span><br></pre></td></tr></table></figure>



<h2 id="Cached-IK-插件"><a href="#Cached-IK-插件" class="headerlink" title="Cached IK 插件"></a><a href="https://github.com/ros-planning/moveit/blob/master/moveit_kinematics/cached_ik_kinematics_plugin/README.md">Cached IK 插件</a></h2><p>Cched IK 运动学插件创建 IK 解决方案的持久缓存。这个缓存然后被用来加速任何其他 IK 求解器。对 IK 求解器的调用将在缓存中使用类似的状态作为 IK 求解器的种子(seed)。如果不能返回一个解，则使用用户指定的 seed 状态再次调用 IK 求解器。若新的 IK 解决方案与缓存中的状态有很大不同，将被添加到缓存中。定期将缓存保存到磁盘。</p>
<p>要使用缓存 IK 运动学插件，需要修改文件 kinematics.yaml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">manipulator:</span></span><br><span class="line">  <span class="attr">kinematics_solver:</span> <span class="string">kdl_kinematics_plugin/KDLKinematicsPlugin</span></span><br></pre></td></tr></table></figure>

<p>修改为：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">manipulator:</span></span><br><span class="line">  <span class="attr">kinematics_solver:</span> <span class="string">cached_ik_kinematics_plugin/CachedKDLKinematicsPlugin</span></span><br><span class="line">  <span class="comment"># optional parameters for caching:</span></span><br><span class="line">  <span class="attr">max_cache_size:</span> <span class="number">10000</span></span><br><span class="line">  <span class="attr">min_pose_distance:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">min_joint_config_distance:</span> <span class="number">4</span></span><br></pre></td></tr></table></figure>



<p>kinematics_solver 的可能值包括：</p>
<ul>
<li><p><strong>cached_ik_kinematics_plugin&#x2F;CachedKDLKinematicsPlugin</strong>: 封装默认的 KDL IK 求解器</p>
</li>
<li><p><strong>cached_ik_kinematics_plugin&#x2F;CachedSrvKinematicsPlugin</strong>: 使用 ros service 调用与扩展 IK 求解器通信.</p>
</li>
<li><p><strong>cached_ik_kinematics_plugin&#x2F;CachedTRACKinematicsPlugin</strong>: 封装 <a href="https://bitbucket.org/traclabs/trac_ik">TRAC IK solver</a>。编译时必须能检测到 KDL IK 运动学插件</p>
</li>
<li><p><strong>cached_ik_kinematics_plugin&#x2F;CachedUR5KinematicsPlugin</strong>: 封装用于 UR5 机械臂的 <strong>analytic IK solver</strong>.</p>
</li>
</ul>
<h2 id="Position-Only-IK"><a href="#Position-Only-IK" class="headerlink" title="Position Only IK"></a><strong>Position Only IK</strong></h2><p>该求解器可以很容易地启用(只有当使用 KDL 运动学插件)通过添加以下行到 kinematics.yaml 文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">position_only_ik: True  </span><br></pre></td></tr></table></figure>



<h1 id="逆运动学求解算法对比"><a href="#逆运动学求解算法对比" class="headerlink" title="逆运动学求解算法对比"></a>逆运动学求解算法对比</h1><img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/%E8%BF%90%E5%8A%A8%E5%AD%A6%E6%B1%82%E8%A7%A3%E5%99%A8/kinematics/image-20240917213610685.png" class="" title="image-20240917213610685">

]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
        <category>运动学求解器</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>TRAC-IK Kinematics Solver</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/MotionPlanning/%E8%BF%90%E5%8A%A8%E5%AD%A6%E6%B1%82%E8%A7%A3%E5%99%A8/TRAC-IK%20Kinematics%20Solver/</url>
    <content><![CDATA[<p>TRAC-IK 是由 TRACLabs 开发的一款逆运动学求解器，它通过线程将两种 IK 实现结合在一起，以实现比常用的开源 IK 求解器更可靠的解决方案。从官方文档：(TRACK-ik)为 KDL 中流行的雅可比矩阵逆方法提供了一种可选的逆运动学求解器。具体地说，KDL 的收敛算法是基于牛顿方法的，这种方法在存在关节限制的情况下不能很好地工作——这在许多机器人平台中很常见。trac-IK 同时运行两种 IK 实现：</p>
<ul>
<li>一个是对 KDL 基于牛顿的 convergence 的简单扩展，该算法通过随机跳跃检测并缓解由于关节限制而导致的局部最小值</li>
<li>第二种是 SQP(Sequential Quadratic Programming,即:顺序二次规划)非线性优化方法。使用能够更好地处理关节限制的准牛顿(quasi-Newton)方法</li>
</ul>
<p>默认情况下，当这些算法中的任何一个收敛到一个解时，IK 搜索会立即返回。为了获得 “最佳” IK 解，还提供了距离和可操作性的次要约束条件。</p>
<p>trac_ik_kinematics_plugin 包提供了一个 KinematicsBase MoveIt 接口，可以替换默认的 KDL 求解器。目前不支持模拟关节。</p>
<p>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> apt-get install ros-melodic-trac-ik-kinematics-plugin</span> </span><br></pre></td></tr></table></figure>

<p>​             </p>
<p>使用</p>
<ul>
<li>安装 trac_ik_kinematics_plugin 和 trac_ik_lib 包</li>
<li>修改 MoveIt! kinematics.yaml 文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin</span><br><span class="line">替换为</span><br><span class="line">kinematics_solver: trac_ik_kinematics_plugin/TRAC_IKKinematicsPlugin</span><br></pre></td></tr></table></figure>

<p>​           </p>
<ul>
<li><p>设置参数</p>
</li>
<li><ul>
<li><p>kinematics_solver_timeout 及 position_only_ik</p>
</li>
<li><p>solve_type 可以是：</p>
</li>
<li><ul>
<li>Speed，默认值</li>
<li>Distance</li>
<li>Manipulation1</li>
<li>Manipulation2</li>
</ul>
</li>
<li><p>kinematics_solver_attempts：不需要，与 KDL 不同，Trac-IK 解析器失败时会自动重启</p>
</li>
<li><p>kinematic_solver_search_resolution</p>
</li>
</ul>
</li>
<li><p>注意：用于确定有效解决方案的笛卡尔误差距离是 1e-5，因为这是硬编码到 MoveIt 的 KDL 插件中的。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>MotionPlanning</category>
        <category>运动学求解器</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>planning scene API</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/PlanningScene/planning%20scene%20API/</url>
    <content><![CDATA[<p>本教程中，将研究使用 planning scene 差异来执行两个操作:</p>
<ul>
<li>向 world 中添加和删除对象</li>
<li>将物体附加到机器人上&#x2F;从机器人上分离</li>
</ul>
<p><strong>1、运行测试</strong></p>
<p>运行代码</p>
<p>​                roslaunch panda_moveit_config demo.launch roslaunch moveit_tutorials planning_scene_ros_api_tutorial.launch              </p>
<p>此时，在 RViz 中会看到：</p>
<ul>
<li>物体出现在 planning scene 中</li>
<li>物体附加到机器人上</li>
<li>物体从机器人上分离</li>
<li>从 planning scene 中删除物体</li>
</ul>
<p><strong>2、源码分析</strong></p>
<p>代码位于 <a href="https://github.com/ros-planning/moveit_tutorials/tree/melodic-devel/doc/planning_scene_ros_api">planning_scene_ros_api</a></p>
<p><strong>1）可视化</strong></p>
<p>MoveItVisualTools 包提供了许多在 RViz 中可视化物体、机器人和轨迹的功能，还提供了调试工具，例如 step-by-step introspection 脚本等。</p>
<p>​                moveit_visual_tools::MoveItVisualTools visual_tools(“panda_link0”); visual_tools.deleteAllMarkers();              </p>
<p><strong>2）ROS API</strong></p>
<p>Planning scene publisher 的 ROS API 是通过使用 diffs 主题接口实现的。Planning scene diff 是当前 planning scene(由move_group节点维护)与用户所需的新 planning scene 之间的差异。</p>
<p><strong>3）Advertise the required topic</strong></p>
<p>创建一个发布者并等待订阅者，请注意，这个主题可能需要在 launch 文件中重新映射。</p>
<p>​                &#x2F;&#x2F; 创建 Publisher ros::Publisher planning_scene_diff_publisher &#x3D; node_handle.advertise&lt;moveit_msgs::PlanningScene&gt;(“planning_scene”, 1); ros::WallDuration sleep_t(0.5); while (planning_scene_diff_publisher.getNumSubscribers() &lt; 1) {  sleep_t.sleep(); } visual_tools.prompt(“Press ‘next’ in the RvizVisualToolsGui window to start the demo”);              </p>
<p><strong>4）Define the attached object message</strong></p>
<p>将使用此消息向 world 中添加或删除物体，并将物体附加到机器人。</p>
<p>​                moveit_msgs::AttachedCollisionObject attached_object; attached_object.link_name &#x3D; “panda_leftfinger”; &#x2F;* The header must contain a valid TF frame*&#x2F; attached_object.object.header.frame_id &#x3D; “panda_leftfinger”; &#x2F;* The id of the object <em>&#x2F; attached_object.object.id &#x3D; “box”; &#x2F;</em> A default pose <em>&#x2F; geometry_msgs::Pose pose; pose.orientation.w &#x3D; 1.0; &#x2F;</em> Define a box to be attached *&#x2F; shape_msgs::SolidPrimitive primitive; primitive.type &#x3D; primitive.BOX; primitive.dimensions.resize(3); primitive.dimensions[0] &#x3D; 0.1; primitive.dimensions[1] &#x3D; 0.1; primitive.dimensions[2] &#x3D; 0.1; attached_object.object.primitives.push_back(primitive); attached_object.object.primitive_poses.push_back(pose);              </p>
<p>注意，将物体附加到机器人上需要将相应的操作指定为 ADD 操作</p>
<p>​                attached_object.object.operation &#x3D; attached_object.object.ADD;              </p>
<p>由于将对象连接到机械手以模拟拾取对象，所以希望碰撞检查器忽略添加的物体与机械手之间的碰撞</p>
<p>​                attached_object.touch_links &#x3D; std::vector<a href="std::string">std::string</a>{ “panda_hand”, “panda_leftfinger”, “panda_rightfinger” };              </p>
<p><strong>5）Add an object into the environment</strong></p>
<p>通过将物体添加到 planning scene 的 world 部分的碰撞物体集中，将物体添加到环境中。注意，这里只使用了 attached_object 消息的 “object” 字段。</p>
<p>​                ROS_INFO(“Adding the object into the world at the location of the hand.”); moveit_msgs::PlanningScene planning_scene; &#x2F;&#x2F; 注意：只需使用 attached_object.object planning_scene.world.collision_objects.push_back(attached_object.object); planning_scene.is_diff &#x3D; true; planning_scene_diff_publisher.publish(planning_scene); visual_tools.prompt(“Press ‘next’ in the RvizVisualToolsGui window to continue the demo”);              </p>
<p><strong>6）Interlude: Synchronous vs Asynchronous updates</strong></p>
<p>有两种单独的机制可以使用 diffs 与 move_group 节点交互:</p>
<ul>
<li>通过 rosservice 调用发送一个 diff 并阻塞直到 diff 被应用(同步更新)</li>
<li>通过主题发送一个 diff，不阻塞等待(异步更新)</li>
</ul>
<p>虽然本教程的大部分内容使用后一种机制，但用以下服务客户端替换 planning_scene_diff_publisher 是完全合理的:</p>
<p>​                ros::ServiceClient planning_scene_diff_client &#x3D;    node_handle.serviceClient&lt;moveit_msgs::ApplyPlanningScene&gt;(“apply_planning_scene”); planning_scene_diff_client.waitForExistence(); moveit_msgs::ApplyPlanningScene srv; srv.request.scene &#x3D; planning_scene; planning_scene_diff_client.call(srv);              </p>
<p>注意，直到确定 diff 已经被应用，这个过程才会继续。</p>
<p><strong>7）Attach an object to the robot</strong></p>
<p>当机器人从环境中抓起一个物体时，需要将该物体“附加”到机器人上，以便处理机器人模型的任何组件都知道该附加物体，例如用于碰撞检查。</p>
<p>附加一个物体需要两个操作：</p>
<ul>
<li>从环境中删除原始物体</li>
<li>将该物体附加到机器人</li>
</ul>
<p>​                &#x2F;* First, define the REMOVE object message*&#x2F; moveit_msgs::CollisionObject remove_object; remove_object.id &#x3D; “box”; remove_object.header.frame_id &#x3D; “panda_link0”; remove_object.operation &#x3D; remove_object.REMOVE; &#x2F;* Carry out the REMOVE + ATTACH operation *&#x2F; ROS_INFO(“Attaching the object to the hand and removing it from the world.”); planning_scene.world.collision_objects.clear(); planning_scene.world.collision_objects.push_back(remove_object); planning_scene.robot_state.attached_collision_objects.push_back(attached_object); planning_scene_diff_publisher.publish(planning_scene); visual_tools.prompt(“Press ‘next’ in the RvizVisualToolsGui window to continue the demo”);              </p>
<p><strong>8）Detach an object from the robot</strong></p>
<p>分离物体同样需要两步操作：</p>
<ul>
<li>从机器人上分离物体</li>
<li>将物体重新引入环境中</li>
</ul>
<p>​                &#x2F;* First, define the DETACH object message*&#x2F; moveit_msgs::AttachedCollisionObject detach_object; detach_object.object.id &#x3D; “box”; detach_object.link_name &#x3D; “panda_link8”; detach_object.object.operation &#x3D; attached_object.object.REMOVE; &#x2F;* Carry out the DETACH + ADD operation *&#x2F; ROS_INFO(“Detaching the object from the robot and returning it to the world.”); planning_scene.robot_state.attached_collision_objects.clear(); planning_scene.robot_state.attached_collision_objects.push_back(detach_object); planning_scene.robot_state.is_diff &#x3D; true; planning_scene.world.collision_objects.clear(); planning_scene.world.collision_objects.push_back(attached_object.object); planning_scene.is_diff &#x3D; true; planning_scene_diff_publisher.publish(planning_scene); visual_tools.prompt(“Press ‘next’ in the RvizVisualToolsGui window to continue the demo”);              </p>
<p><strong>9）从 collision world 删除物体</strong></p>
<p>​                ROS_INFO(“Removing the object from the world.”); planning_scene.robot_state.attached_collision_objects.clear(); planning_scene.world.collision_objects.clear(); planning_scene.world.collision_objects.push_back(remove_object); planning_scene_diff_publisher.publish(planning_scene);              </p>
<p><strong>3、使用</strong></p>
<p>调试 Planning Scene Monitor</p>
<p>​                rosrun moveit_ros_planning moveit_print_planning_scene_info              </p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>源码分析</category>
        <category>PlanningScene</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>planning scene monitor</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/PlanningScene/planning%20scene%20monitor/</url>
    <content><![CDATA[<p><strong>1、PlanningSceneMonitor</strong> </p>
<p><a href="http://docs.ros.org/noetic/api/moveit_ros_planning/html/classplanning__scene__monitor_1_1PlanningSceneMonitor.html">PlanningSceneMonitor</a> 是维护最新规划场景的推荐接口。RobotState、CurrentStateMonitor、PlanningScene、PlanningSceneMonitor 和 PlanningSceneInterface 之间的关系一开始可能会令人困惑。</p>
<p><strong>1）RobotState</strong></p>
<p>RobotState 是一个机器人的快照。它包含 RobotModel 和一组关节值。</p>
<p><strong>2）CurrentStateMonitor</strong></p>
<p>可将 CurrentStateMonitor(CSM) 视为 RoboState 的 ROS 封装。它订阅 <strong>joint_states</strong> 主题消息，该主题提供关节状态值，并用这些关节值更新其内部的 RobotState。</p>
<p><strong>3）PlanningScene</strong></p>
<p>PlanningScene 是一个 world 的快照，它包括 RobotState 和任意数量的碰撞对象。规划场景可用于<strong>碰撞检查</strong>以及<strong>获取有关环境的信息</strong>。</p>
<p><strong>4）PlanningSceneMonitor</strong></p>
<p>PlanningSceneMonitor 用 ROS 接口封装了一个 PlanningScene，以保持 PlanningScene 是最新的。要访问 PlanningSceneMonitor 的底层 PlanningScene，请使用提供的 <strong>LockedPlanningSceneRW</strong> 和 <strong>LockedPlanningSceneRO</strong> 类。</p>
<p>PlanningSceneMonitor 有以下对象，它们有自己的 ROS 接口来保持规划场景的子组件是最新的:</p>
<ul>
<li>一个 CurrentStateMonitor，用于通过robot_state_subscriber_ 和 tf_buffer_ 跟踪对 RobotState 的更新，以及一个 planning scene subscriber，用于侦听来自其他发布者的规划场景差异</li>
<li>一个 OccupancyGridMapMonitor，用于通过 ROS topic 和 services 跟踪对 OccuancyMap 的更新</li>
</ul>
<p>PlanningSceneMonitor 有以下 subscribers：</p>
<ul>
<li>**collision_object_subscriber_**：监听 <a href="http://docs.ros.org/noetic/api/moveit_msgs/html/msg/CollisionObject.html">CollisionObject</a> 消息主题(默认为 &#x2F;collision_object 主题)，添加&#x2F;删除&#x2F;修改 planning scene 中的 collision objects</li>
<li>**planning_scene_world_subscriber_**：监听 <a href="http://docs.ros.org/noetic/api/moveit_msgs/html/msg/PlanningSceneWorld.html">PlanningSceneWorld</a> 消息主题(默认为 &#x2F;planning_scene_world 主题)，包含 collision object 信息及 octomap 信息。对于保持规划场景监视器的同步很有用</li>
<li>**attached_collision_object_subscriber_**：监听 <a href="http://docs.ros.org/noetic/api/moveit_msgs/html/msg/AttachedCollisionObject.html">AttachedCollisionObject</a> 消息主题(默认为 &#x2F;attached_collision_object 主题)</li>
</ul>
<p>PlanningSceneMonitor 提供以下 services：</p>
<ul>
<li>get_scene_service_：获取完整的 planning scene state。(默认 services 名为 get_planning_scene)</li>
</ul>
<p>PlanningSceneMonitor 初始化：</p>
<ul>
<li><strong>startSceneMonitor</strong>：启动 planning_scene_subscriber_</li>
<li><strong>startWorldGeometryMonitor</strong>：启动 collision_object_subscriber_、planning_scene_world_subscriber_及OccupancyMapMonitor</li>
<li><strong>startStateMonitor</strong>：启动 CurrentStateMonitor及attached_collision_object_subscriber_</li>
<li><strong>startPublishingPlanningScene</strong>：启动另一个线程，发布整个规划场景</li>
<li><strong>providePlanningSceneService</strong>：启动 get_scene_service_</li>
</ul>
<p><strong>5）PlanningSceneInterface</strong></p>
<p>是一个有用的类，用于通过 c++ API 向 MoveGroup 的 PlanningSceneMonitor 发布更新，而无需创建自己的订户和服务客户端。如果没有 MoveGroup 或 MoveItCpp，它可能无法工作。</p>
<p><strong>2、源码分析</strong></p>
<p>分为：</p>
<ul>
<li>scene monitor</li>
<li>world geometry monitor</li>
<li>state monitor</li>
</ul>
<p>更新类型 SceneUpdateType ：</p>
<ul>
<li><strong>UPDATE_NONE</strong>: 0</li>
<li><strong>UPDATE_STATE</strong>: 1,更新检测的状态</li>
<li><strong>UPDATE_TRANSFORMS</strong>: 2</li>
<li><strong>UPDATE_GEOMETRY</strong>: 4, 更新场景的几何图形。包括接收新的octomaps、碰撞对象、附加对象、场景几何等</li>
<li><strong>UPDATE_SCENE</strong>: 更新整个场景：</li>
</ul>
<p>默认主题：</p>
<ul>
<li><strong>DEFAULT_JOINT_STATES_TOPIC</strong>：默认为 &#x2F;joint_state</li>
<li><strong>DEFAULT_ATTACHED_COLLISION_OBJECT_TOPIC</strong>：默认为 &#x2F;attached_collision_object</li>
<li><strong>DEFAULT_COLLISION_OBJECT_TOPIC</strong>：&#x2F;collision_object</li>
<li><strong>DEFAULT_PLANNING_SCENE_WORLD_TOPIC</strong>： &#x2F;planning_scene_world</li>
<li><strong>DEFAULT_PLANNING_SCENE_TOPIC</strong>：&#x2F;planning_scene</li>
<li><strong>DEFAULT_PLANNING_SCENE_SERVICE</strong>：&#x2F;get_planning_scene</li>
<li><strong>MONITORED_PLANNING_SCENE_TOPIC</strong>： monitored_planning_scene</li>
</ul>
<p>move_group 节点中实例化 planning_scene_monitor::<strong>PlanningSceneMonitor</strong> 类对象 <strong>planning_scene_monitor</strong>。然后启动以下 monitor：</p>
<ul>
<li><strong>scene monitor</strong>：planning_scene_monitor-&gt;<strong>startSceneMonitor</strong>()，订阅 scene_topic(默认为 <em>&#x2F;planning_scene</em>) 主题数据</li>
<li><strong>world geometry monitor</strong>：planning_scene_monitor-&gt;<strong>startWorldGeometryMonitor</strong>()，订阅 collision_objects_topic(默认为 <em>&#x2F;collision_object</em>) 及 planning_scene_world_topic(默认为 <em>&#x2F;planning_scene_world</em>) 主题数据，此外，还负责处理 octomap 数据</li>
<li><strong>state monitor</strong>：planning_scene_monitor-&gt;<strong>startStateMonitor</strong>()，通过 current_state_monitor_ 订阅 joint_states_topic(默认为 <em>&#x2F;joint_states</em>)，同时订阅 attached_objects_topic(默认为 <em>&#x2F;attached_collision_object</em>) 主题数据</li>
</ul>
<p>​    <img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/PlanningScene/planning%20scene%20monitor/image-20240917204653825.png" class="" title="image-20240917204653825"></p>
<p>其中，rviz 在加载 MotionPlanning 后会发布 &#x2F;planning_scene 和 &#x2F;attached_collision_object，可在 MotionPlanning -&gt; Scene Object 中配置 scene objects。</p>
<p>双臂规划中，启动两个 move_group(假设分别为 &#x2F;front_arm&#x2F;move_group 和 &#x2F;rear_arm&#x2F;move_group)，会发现这两个节点默认订阅 &#x2F;front_arm&#x2F;joint_states 和 &#x2F;rear_arm&#x2F;joint_states 主题数据，而这两个主题分别只发布了各自机械臂关节的状态信息，导致 moveit 在规划时，只会考虑另一条机械臂在  URDF 文件中的默认位姿，而不会考虑实时状态。此时需将 move_group 订阅的 joint_states 映射到 &#x2F;joint_states</p>
  <img src="/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/PlanningScene/planning%20scene%20monitor/image-20240917204642203.png" class="" title="image-20240917204642203">
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>源码分析</category>
        <category>PlanningScene</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>planning scene</title>
    <url>/2024/09/17/%E6%9C%BA%E6%A2%B0%E8%87%82/MoveIt/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/PlanningScene/planning%20scene/</url>
    <content><![CDATA[<p><strong>1、Planning scene</strong></p>
<p>Planning scene 用来表示机器人所处的环境，同时存储了机器人本身的状态。</p>
<p>PlanningScene 类提供了用于碰撞(collision)检查和约束(constraint)检查的主接口。</p>
<p>可使用 RobotModel 或 URDF 和 SRDF 来配置 PlanningScene。但这并不是实例化 <a href="http://docs.ros.org/en/melodic/api/moveit_tutorials/html/doc/planning_scene/planning_scene_tutorial.html">PlanningScene</a> 的推荐方式。推荐使用 <strong>PlanningSceneMonitor</strong> 来创建和维护当前 planning scene，它使用机器人关节和其它传感器的数据。</p>
<p>本例中，使用 PlanningScene，但该方法仅用于演示。</p>
<p>​                robot_model_loader::RobotModelLoader robot_model_loader(“robot_description”); robot_model::RobotModelPtr kinematic_model &#x3D; robot_model_loader.getModel(); planning_scene::PlanningScene planning_scene(kinematic_model);              </p>
<p>利用参数服务器上的 robot_description 参数来定义一个 planning_scene。</p>
<p><strong>2、Collision Checking</strong></p>
<p><strong>1）self-collision checking</strong></p>
<p>要做的第一件事是检查机器人在当前状态下是否处于自碰撞状态，即机器人当前的配置是否会导致机器人的各个部件相互碰撞。为此，将构造一个 <strong>CollisionRequest</strong> 对象和一个 <strong>CollisionResult</strong> 对象，并将它们传递给碰撞检查函数。注意，结果中包含了机器人是否处于自碰撞状态的结果。自碰撞检查使用一个 unpadded 的机器人，即直接使用 URDF 中提供的碰撞网格，没有额外的填充。</p>
<p>​                collision_detection::CollisionRequest collision_request; collision_detection::CollisionResult collision_result; planning_scene.checkSelfCollision(collision_request, collision_result); ROS_INFO_STREAM(“Test 1: Current state is “ &lt;&lt; (collision_result.collision ? “in” : “not in”) &lt;&lt; “ self collision”);              </p>
<p><strong>2）改变状态</strong></p>
<p>改变机器人的当前状态。Planning scene 在内部维护当前状态。可以得到它的一个引用，然后改变它，然后重新检查碰撞。需要特别注意的是，在发出新的碰撞检查请求之前，需要清除 collision_result。</p>
<p>​                robot_state::RobotState&amp; current_state &#x3D; planning_scene.getCurrentStateNonConst(); current_state.setToRandomPositions(); collision_result.clear(); planning_scene.checkSelfCollision(collision_request, collision_result); ROS_INFO_STREAM(“Test 2: Current state is “ &lt;&lt; (collision_result.collision ? “in” : “not in”) &lt;&lt; “ self collision”);              </p>
<p>从何获得当前状态？</p>
<p><strong>3）Checking for a group</strong></p>
<p>现在，对 hand 进行碰撞检查，即：将检查 hand 与机器人身体的其他部位是否有碰撞。可以通过将组名 “hand” 添加到碰撞请求中来特别地进行请求。</p>
<p>​                collision_request.group_name &#x3D; “hand”; current_state.setToRandomPositions(); collision_result.clear(); planning_scene.checkSelfCollision(collision_request, collision_result); ROS_INFO_STREAM(“Test 3: Current state is “ &lt;&lt; (collision_result.collision ? “in” : “not in”) &lt;&lt; “ self collision”);              </p>
<p><strong>4）Getting Contact Information</strong></p>
<p>首先，手动设置机械臂到一个位置，假设在该位置确知会发生自碰撞。请注意，以 Panda 为例，这种状态现在实际上超出了 Panda 的 joint 限制，也可以直接检查。</p>
<p>​                std::vector<double> joint_values &#x3D; { 0.0, 0.0, 0.0, -2.9, 0.0, 1.4, 0.0 }; const robot_model::JointModelGroup* joint_model_group &#x3D; current_state.getJointModelGroup(“panda_arm”); current_state.setJointGroupPositions(joint_model_group, joint_values); ROS_INFO_STREAM(“Test 4: Current state is “                &lt;&lt; (current_state.satisfiesBounds(joint_model_group) ? “valid” : “not valid”));              </p>
<p>现在，可以得到可能发生在给定位置的任何碰撞的联系信息。可以通过在碰撞请求中填充适当的字段并指定要返回的最大联系数量来请求联系信息。</p>
<p>​                collision_request.contacts &#x3D; true; collision_request.max_contacts &#x3D; 1000; … collision_result.clear(); planning_scene.checkSelfCollision(collision_request, collision_result); ROS_INFO_STREAM(“Test 5: Current state is “ &lt;&lt; (collision_result.collision ? “in” : “not in”) &lt;&lt; “ self collision”); collision_detection::CollisionResult::ContactMap::const_iterator it; for (it &#x3D; collision_result.contacts.begin(); it !&#x3D; collision_result.contacts.end(); ++it) {  ROS_INFO(“Contact between: %s and %s”, it-&gt;first.first.c_str(), it-&gt;first.second.c_str()); }              </p>
<p><strong>5）Modifying the Allowed Collision Matrix</strong></p>
<p>AllowedCollisionMatrix(ACM) 提供了一种机制来告诉 collision world 忽略某些对象之间的碰撞：包括 robot 的部件和 world 中的对象。可以告诉 collision 检查器忽略上面报告的 links 之间的所有碰撞，也就是说，即使这些 links 实际上是在碰撞中，collision 检查器也会忽略这些碰撞，返回 not in collision。</p>
<p>还请注意，在本例中还介绍了如何复制允许的 collision matrix 和当前状态，并将它们传递给 collision checking 函数。</p>
<p>​                collision_detection::AllowedCollisionMatrix acm &#x3D; planning_scene.getAllowedCollisionMatrix(); robot_state::RobotState copied_state &#x3D; planning_scene.getCurrentState(); collision_detection::CollisionResult::ContactMap::const_iterator it2; for (it2 &#x3D; collision_result.contacts.begin(); it2 !&#x3D; collision_result.contacts.end(); ++it2) {  acm.setEntry(it2-&gt;first.first, it2-&gt;first.second, true); } collision_result.clear(); planning_scene.checkSelfCollision(collision_request, collision_result, copied_state, acm); ROS_INFO_STREAM(“Test 6: Current state is “ &lt;&lt; (collision_result.collision ? “in” : “not in”) &lt;&lt; “ self collision”);              </p>
<p><strong>6）Full Collision Checking</strong></p>
<p>当检查自冲突时，可以使用checkCollision函数，它将检查自冲突和与环境的冲突[当前是空的]。这是一组冲突检查功能，将最常用的planner。注意，与环境的碰撞检查将使用padded版本的robot。填充物有助于使robot远离环境中的障碍物。</p>
<p>虽然已经检查了自碰撞，但可以使用 checkCollision 函数来代替，它将检查自碰撞和与环境的碰撞(目前为空)。这是一组在规划程序中最常使用冲突检查函数。请注意，<strong>与环境的碰撞检查将使用 padded 版的机器人</strong>。填充有助于使机器人远离环境中的障碍物</p>
<p>​                collision_result.clear(); planning_scene.checkCollision(collision_request, collision_result, copied_state, acm); ROS_INFO_STREAM(“Test 7: Current state is “ &lt;&lt; (collision_result.collision ? “in” : “not in”) &lt;&lt; “ self collision”);              </p>
<p><strong>3、Constraint Checking</strong></p>
<p>PlanningScene 类还包括易于使用的检查约束的函数调用。约束可以是两种类型:</p>
<ul>
<li>从 KinematicConstraint 集中选择的约束:即JointConstraint, PositionConstraint, OrientationConstraint和VisibilityConstraint</li>
<li>通过回调指定的用户定义约束</li>
</ul>
<p>先看一个带有简单的 KinematicConstraint 的例子。</p>
<p><strong>1）Checking Kinematic Constraints</strong></p>
<p>首先在 Panda robot 的 panda_arm 组的末端执行器上定义一个简单的位置和方向约束。注意使用方便的函数来填充约束(这些函数可以在 utils.h 文件中找到，该文件来自 moveit_core 中的 kinematic_constraints 目录)。</p>
<p>​                std::string end_effector_name &#x3D; joint_model_group-&gt;getLinkModelNames().back(); geometry_msgs::PoseStamped desired_pose; desired_pose.pose.orientation.w &#x3D; 1.0; desired_pose.pose.position.x &#x3D; 0.3; desired_pose.pose.position.y &#x3D; -0.185; desired_pose.pose.position.z &#x3D; 0.5; desired_pose.header.frame_id &#x3D; “panda_link0”; moveit_msgs::Constraints goal_constraint &#x3D;    kinematic_constraints::constructGoalConstraints(end_effector_name, desired_pose);              </p>
<p>然后可以使用 PlanningScene 类中的 <strong>isStateConstrained</strong> 函数检查这个约束的状态</p>
<p>​                copied_state.setToRandomPositions(); copied_state.update(); bool constrained &#x3D; planning_scene.isStateConstrained(copied_state, goal_constraint); ROS_INFO_STREAM(“Test 8: Random state is “ &lt;&lt; (constrained ? “constrained” : “not constrained”));              </p>
<p>有一种更有效的检查约束的方法(当需要反复检查相同的约束时，例如在 planner 中)。首先构造一个 KinematicConstraintSet 来对 ROS Constraints 消息进行预处理，并对其进行快速处理。</p>
<p>​                kinematic_constraints::KinematicConstraintSet kinematic_constraint_set(kinematic_model); kinematic_constraint_set.add(goal_constraint, planning_scene.getTransforms()); bool constrained_2 &#x3D; planning_scene.isStateConstrained(copied_state, kinematic_constraint_set); ROS_INFO_STREAM(“Test 9: Random state is “ &lt;&lt; (constrained_2 ? “constrained” : “not constrained”));              </p>
<p>使用 KinematicConstraintSet 类有一个直接的方法来做到这一点</p>
<p>​                kinematic_constraints::ConstraintEvaluationResult constraint_eval_result &#x3D;    kinematic_constraint_set.decide(copied_state); ROS_INFO_STREAM(“Test 10: Random state is “ &lt;&lt; (constraint_eval_result.satisfied ? “constrained” : “not constrained”));              </p>
<p><strong>3）User-defined constraints</strong></p>
<p>用户定义的约束也可以指定到 PlanningScene 类。这是通过使用 setStateFeasibilityPredicate 函数指定一个回调来完成的。</p>
<p>下面是一个简单的用户定义回调示例，检查 Panda 机器人的 “panda_joint1” 是正还是负:</p>
<p>​                bool stateFeasibilityTestExample(const robot_state::RobotState&amp; kinematic_state, bool verbose) {  const double* joint_values &#x3D; kinematic_state.getJointPositions(“panda_joint1”);  return (joint_values[0] &gt; 0.0); }              </p>
<p>然后，无论何时调用 <strong>isStateFeasible</strong>，这个用户定义的回调都会被调用</p>
<p>​                planning_scene.setStateFeasibilityPredicate(stateFeasibilityTestExample); bool state_feasible &#x3D; planning_scene.isStateFeasible(copied_state); ROS_INFO_STREAM(“Test 11: Random state is “ &lt;&lt; (state_feasible ? “feasible” : “not feasible”));              </p>
<p>无论何时调用 isStateValid，都会执行三个检查：</p>
<ul>
<li>冲突检查</li>
<li>约束检查</li>
<li>使用用户定义的回调进行可行性检查</li>
</ul>
<p>​                bool state_valid &#x3D; planning_scene.isStateValid(copied_state, kinematic_constraint_set, “panda_arm”); ROS_INFO_STREAM(“Test 12: Random state is “ &lt;&lt; (state_valid ? “valid” : “not valid”));              </p>
<p>请注意，所有的 planners 均可通过 MoveIt 和 OMPL 使用用户定义的回调执行碰撞检查、约束检查和可行性检查。</p>
<p><strong>4、运行</strong></p>
<p>​                roslaunch moveit_tutorials planning_scene_tutorial.launch              </p>
]]></content>
      <categories>
        <category>机械臂</category>
        <category>MoveIt</category>
        <category>源码分析</category>
        <category>PlanningScene</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>MoveIt</tag>
      </tags>
  </entry>
  <entry>
    <title>使用多层LLM增强机器人任务规划和执行</title>
    <url>/2024/10/20/%E5%85%B7%E8%BA%AB%E6%99%BA%E8%83%BD/%E4%BD%BF%E7%94%A8%E5%A4%9A%E5%B1%82LLM%E5%A2%9E%E5%BC%BA%E6%9C%BA%E5%99%A8%E4%BA%BA%E4%BB%BB%E5%8A%A1%E8%A7%84%E5%88%92%E5%92%8C%E6%89%A7%E8%A1%8C/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="35bb2237f05f1f622fb752f4678f2a49a6414997ab389fabe7ac2b6d2fdd5495"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>具身智能</category>
      </categories>
      <tags>
        <tag>具身智能</tag>
      </tags>
  </entry>
  <entry>
    <title>用于多模式人机交互的大型语言模型</title>
    <url>/2024/10/20/%E5%85%B7%E8%BA%AB%E6%99%BA%E8%83%BD/%E7%94%A8%E4%BA%8E%E5%A4%9A%E6%A8%A1%E5%BC%8F%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92%E7%9A%84%E5%A4%A7%E5%9E%8B%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="0048a83aa865309a14b8d890fa1eeb7c5256f8cebb007c0aca7853de0c42db81"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>具身智能</category>
      </categories>
      <tags>
        <tag>具身智能</tag>
      </tags>
  </entry>
  <entry>
    <title>Habitat</title>
    <url>/2024/10/20/%E5%85%B7%E8%BA%AB%E6%99%BA%E8%83%BD/Habitat/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="1574278c323e30bf0c097575a8950fd23098cdd1ab2829df36648ceb0cd1f1c8">61a285bea0bd1a3904d1b9b9e1d94077782b26b8f264bb64c863138854c741895332d54576a4fd8260d1277456a693d2aae0d7fe8d3a0f26c7031080e2ff195fceb905d03ac072bc20268ea94db19f513419cbe72421150da3086ad324ab804bd9a287f78fa8acdcc1cb8e855d908a6253c7babdf6c75d2d1f3516430125684cf47a8bfe439c6a08769741fc1d055928859f19caf57d29e0b07283937f0eacf8459df4a90f650e727f0385cb843de1817b72642e0d37d1bda2bdd78b81ee3299ccc2dce54afc909eb2772c0af5271cf9aa78245e4def4210e70798e323798622e581512bf2f013266d3699749c5c07d60c0494beb71bded5c038731f162b704ea7a2780c01f161ba90128197331f416e2021c27ef5d5f00df6d302f466fcced419cb5dbcf45ecf044efdc0632dcc212269874ab25e843ce15247d887e0105c3ef332096bde3ec616b03091190178e2cd10b8f2b155c5bc4e7f09e7154f118fbfd9d35e8f55713313f3fe9d32088c25a17c2c5bb8804ff0184cbd681d6524a19f4613ffbee66daffa4131be5d67763b4ea7bb2c5b0dc4f3dd3c1156e18b17e03a015bbd0f11f7ec5427d1a6a2cd92d9c499f0fa7ab028b9710a0900c71bdfd1b777f81844647ca2878a2d1325c6c906256ad916743f760f0ae04e73a3fee2f24a878bf2ec22a064ffd32e4f2e238c6d4ee39e29907c7ff6fa11370cc35d93f2344ead29b98b577c0c7805d1629523e90488c1fe378fedb9e0134d09a7ac42ba21c598b1924fca760546f1fa164edc7afe4b7c151b1dc408a53e59d1f888e9798d30249d66b6adb7d36519eaba6852bea89a97d54bdf16b130e2c346d950811b3ea1a0c8c5e418d6f58b830498510d2fa4ab6567c2a8b45a2efde537722ab220299a38b62c6fe48885ac5afe99d6d925a872f3b8b04dc1c5b2b399feebda3150e0ee362b267c298007933061620365ef70c59f3b860452206c6a8a6f5ac0e1ad8fc072d34b52f099de708aa2ff80cea53cb59a92f67c1c27b958eea6b4537fffcc6ae09f12d5924867f9507c9efbbfd9dacf1c1460a5fff88bc00e5484b45626758df3540d2ce1269430010bbc885e8a2f98dac23a68e52f5cded91e54718a596d515a63b2215be9a8f9d7dff3d4f4f83265fca9a8053526abbc11885f95058a1488522a445f23e6a2449c8d43f8b74c1073222b359bf662d45c84039c73e52456332984e179af739c223274f37bfe044459247dd460fdf53ff14f39395d884d220080254ceb8d2874d9e81b9bbacc5e2b5b7524cb3a68ef3823a77069664bc6c132ca55446f24d3cf28069c43d9fe739d6930e0542fb1f76e2590639ceafc05cfd1df299305735f9fe7c0dbf1499fcd92d420d77577cba69105b78bf803a4e83136cc249feb6294ef22196fafade686e2b67c64cc1ecdaa5b31fb7117d799a994578c77f2ec849ab839ae4766db10afd82bcc0c08676f696318be8ed9747ba36d1ad56894a357539d4fb1e80edcb3dbad</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>具身智能</category>
      </categories>
      <tags>
        <tag>具身智能</tag>
      </tags>
  </entry>
  <entry>
    <title>ROS_LLM</title>
    <url>/2024/10/20/%E5%85%B7%E8%BA%AB%E6%99%BA%E8%83%BD/ROS_LLM/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="c0dd888af4cf0bc5dea2147f941e3ec09c5b65bb3165553a81c24df4e64f63c8">61a285bea0bd1a3904d1b9b9e1d94077fd959dda92683b5ed352ba1bce4617e6ad173a21370717ac45a85da92b25f5a9a1147688c4a2f20b85b784a6a7e6bf5fed03e41862a994284835269644d4c9f8a61f6a3a9ac78dd5c61d099da35dd082a823296c5f9c61ad98f24ce016e9f125bc089402900110e602dd7489935ee10d0a1200a5d9c661b87cbf7f36f8c6cdd614b232827ec9f9e21b681395c11c959b701e45cf3859c61234d88db0d126770624e2213daf3d98a2437a8f73518d617ce719ea1c788b7c692b253a653556c90c5a37b833d0d6cc64be0f705f261bc5638d5c6df6c8b4ff1c16e27c9227dfced46bbfc44d9107c1c1574132ed7f65142eba6098b5eeb2323c29b1831bd21e88a51df37d081cf6d80f53cd1ec8dc3331236703c9570eeec7417934a80154758d72a3a1309c5320b32a6cc7320b58222876498c01b2eb64d898c3ec963a87b1d5558f3d2c8149924d72f74fc5fd2418fbbafa5b4cf2d67a651eb383ced9bb1f0ef309104274cc0310d2696d92889ee206a58d1e940c22870c360f0d301516b84341ce750b73a3c65e726ea308d4e8177db7c783b16ba0b0f7862b90547928e453fb9ed47c7e6b23594c723a5c41e22c09040c6c6813c3e0320a3f575748ddf0ed0f125ba2c114fc657e6124871026ad015e49cbae7d1f8f1da2612501ed5ba73101e0890daa5d2d1a0484fa825ac28908a382c18b10f548ecc68911f0cc75e83ea0e1f90439d386344899ec9d672f55e7c81070984902885eb478996a4ca5261baa875d12cf0164c4505580eed91e5d5f80d88007d78549349ce0dd548f7f962256555f183297a6abf5a83ba674fccb0a15e6c43765b31a7f6a8046677905f630b3318e0d80e1e831a6adc6f4e54ad1ea36a68ffb461adc6adf2c45562e4bd30025fede090c20b64012b51f9232bdee39df4a8c62b19c3530bfb73a07f730ca645a6408c41aebd0cd5ac9aaa7b58ec6638782ac7601d787c3aec5d9e17438e8c17507ddb5e9ea5bbc4fa90840c489313a8a266ce9a1d4414b1dd5a016b8a1abf33fb0dc11ba89247496f356526b1de1a740c217ea6f6859cf69cbe5801981f2ecb09152732e986a52e3ce65d9d4d43bfa69379e7080964cc77718aa0f8faaeacd3e0b5ae931948061d535eeb6fc25ba8f7e0e5e0e058b915249ee553f254ec294a0143e0c5101cf4698e46eb44255f527e7cad1621dd76228318f3c86da7405da87118cba9cce4a11daeaa5aa90150509dfa71c34b6260f2314797f8a52bc4d80a70b91f0be18d950bbacb9fc30a076e6c66767fad18c3eb8c5a9201cd79e34d8586a61940e9b3660b60724ebbec7a0e1c1f46c2c5fdfe2066fb42bce24070792d5498af8628e0d77e52cecc8a9d2af227dd20242cf490840d789cbe941cccbd162449fdbf2962a83aa829c9d75a3ef3af22dd09baa76b4678995770469c824e28981cd5e08b7648302037be1ceb147ce36fef4830ff4758055f6d135a56f6b99af74fca4a89406657b55ab357a8d87d29cc570afba19c3249a353447732cf7b4172228780f3645fa343f85cee885fe174ea9f277dc85fb9e41d049cad7536d6f5221c030876d102c92db43f8401ddf71ff0bb293757c57bb46edddfb35890df281643d0b505045937936402182c201844b0f8a6c6eed6cccdcbad4707d64aa36b47ff2236d0467c058befec901478d20bc0c3fc7cf5134eeb84f3f60c11bc997ce38f7b150f540220d7967b8921785d78b7a234e681674eaa1d5e04c3d31215056f952c0509d69325d09e751dfd524aa69e779418ee5be0ae8d5cf9e7268a74df9f36e27b9a8c44dff39ed29f3267d2fdd2c9b727946d0735346b4a19158472b7263cc94d9d605f9b23a72cddf3fd1bc6bca084a8d4596f380672720ccb8d014602bf129078bad825fecbe094887d062ddfec55a75b736a8eddb9a61ee8809c892b61dd53a0fed39bef240fceffda878d14b8b95eeccdf891cf7ff7e114d8bc1b04b5d1a4f0bf3ae5144a3889a9da66a5d798f9fd8c916b5545035858135f76a670ecefecb8b56287e8dbfc75ce6ecd2b254d348394d07a647314d0d25f457121c05ccfd676341639855101278a7f3cf2cb683875a621d027abdbf06aad72bb16ea81b4fdfd3e1002345147e33788e69f06f9a38e652acd154ca982ef93e83ab058625aacf32b60dcfc4b584a13574e3d8d39ab143fd349dcd14be692abe1153621d231d56fcd6bf7b47f48e31750ab3fc461cbb149e7aa51a121d968b8a3d9f44cefa1ba15653e4a1856c80161ca038ada64fa867af37a570039aa3395463d8bc6c077f1ac95552f185fd460f623beae37f320febb9ba7b2bdda564465ef5ab776b6e9bc02564afc041688627f605d179d38040045b7ea0765db43bcd618abe140d62d1e377a42afb1506fba5dacf5914c051c09f0f619cd289dedcdaac312d385cf0bef136ec3018c3e7833429c0c8cddd880b37e152f440c5acfbdd6d8625cb8a2dcbefbb4601db62fc3527235d6aac1e1651a0a21a4782161bf3dc101f330e91b74f000c28697d7225d40e5c807ad6f6683742424249bd1bf3ddaee333029fc83b93ede2d11349ee3e99e9e8e2dabdd7e2dd940c9d20e67760bc9165fe75b8fcb0020a6ea291b10a8edf0765b243a1d9fd42b38443c75f0ad5cfeda53069fb2e5d7c07d00572717fc3747eab8bae935f2d01755989ae48f1728178312c46ba25d9d710dc113de2e981ed27589318fe836c2924a14c14796f26c030828e6667d1028feeee2df2abb0d206a263fc367e1918a60e148e9fc23cb0d97b9c1ea77613ac0b28c18ae4b277d1d4134eb57bf9e81cda41ab84d9df83d05526abe082752dc51ba85d072980717b52945ba3296f1656c83b240a8c928e2ea2ad020b02733d4c965508c61dac37d5bbc0bfc0a104edd42401dc650920af711284cd17c6a87b1dc13bf0705b2ce32c240622aa24f8003800343c761aef0b70a5c9c6e8a0ff61938792e0f1bfc924cd0c7ef79742c52e75c0fbb8b85a2a96579506835070013238d27f40c30d6a5cd441ce7ed8967d26bc531eb4f09a5b9a159de878e018b59ef7ed310f46328a48ecd919824908b096aee7f8a5053d3950f56f2915ad5bc4ff10f6be05ccfaf8dd71a88fc6443881e1ae047e7518bd6a98e4a0d951df87067bfcbbe74e321c7b9d5357d2282564734131d9caa88a435ea74b901747a1b6f8a20b1bb1507bcc7302f467407f66e3641e1c3f48a83cfb9a81ae34c144a8683e004c225919745eaa33e17d83765fa0c5d9ad5dfac0dac9cbb78fab45bb9a6399</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>具身智能</category>
      </categories>
      <tags>
        <tag>具身智能</tag>
      </tags>
  </entry>
  <entry>
    <title>Intel ECI</title>
    <url>/2024/10/20/%E6%9C%BA%E6%A2%B0%E8%87%82/%E6%8E%A7%E5%88%B6%E5%99%A8/Intel%20ECI/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="bb0154d3f518e6efd58eaad62b480e411b3aa01173479669aa2e769ac7548872"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>控制器</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>控制器</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenPLC与PLCopen</title>
    <url>/2024/10/20/%E6%9C%BA%E6%A2%B0%E8%87%82/%E6%8E%A7%E5%88%B6%E5%99%A8/OpenPLC%E4%B8%8EPLCopen/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码不对，请重试" data-whm="抱歉，该文章无法校验">
  <script id="hbeData" type="hbeData" data-hmacdigest="8eb75fea04924c7d24c7240c6c8599952ee306c463ed5000afcf4ea939942964"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>机械臂</category>
        <category>控制器</category>
      </categories>
      <tags>
        <tag>机械臂</tag>
        <tag>控制器</tag>
      </tags>
  </entry>
</search>
